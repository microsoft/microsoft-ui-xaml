<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Microsoft.Experimental.UI.Xaml.Controls"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <StaticResource x:Key="TitleBarForegroundBrush" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="TitleBarDeactivatedForegroundBrush" ResourceKey="TextFillColorTertiaryBrush" />

            <!-- These colors cannot have an alpha channel, so they are hardcoded opaque versions of TextFill colors -->
            <Color x:Key="TitleBarButtonForegroundColor">#FFFFFF</Color>         <!-- TextFillColorPrimary over SolidBackgroundFillColorBase -->
            <Color x:Key="TitleBarButtonHoverForegroundColor">#FFFFFF</Color>    <!-- TextFillColorPrimary over SolidBackgroundFillColorBase -->
            <Color x:Key="TitleBarButtonPressedForegroundColor">#CFCFCF</Color>  <!-- TextFillColorSecondary over SolidBackgroundFillColorBase -->
            <Color x:Key="TitleBarButtonInactiveForegroundColor">#717171</Color> <!-- TextFillColorTertiary over SolidBackgroundFillColorBase -->
            
            <StaticResource x:Key="TitleBarButtonBackgroundColor" ResourceKey="SubtleFillColorTransparent" />
            <StaticResource x:Key="TitleBarButtonHoverBackgroundColor" ResourceKey="SubtleFillColorSecondary" />
            <StaticResource x:Key="TitleBarButtonPressedBackgroundColor" ResourceKey="SubtleFillColorTertiary" />

            <x:Double x:Key="TitleBarCompactHeight">32</x:Double>
            <x:Double x:Key="TitleBarExpandedHeight">48</x:Double>
        </ResourceDictionary>
        
        <ResourceDictionary x:Key="Light">
            <StaticResource x:Key="TitleBarForegroundBrush" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="TitleBarDeactivatedForegroundBrush" ResourceKey="TextFillColorTertiaryBrush" />

            <!-- These colors cannot have an alpha channel, so they are hardcoded opaque versions of TextFill colors -->
            <Color x:Key="TitleBarButtonForegroundColor">#191919</Color>         <!-- TextFillColorPrimary over SolidBackgroundFillColorBase -->
            <Color x:Key="TitleBarButtonHoverForegroundColor">#191919</Color>    <!-- TextFillColorPrimary over SolidBackgroundFillColorBase -->
            <Color x:Key="TitleBarButtonPressedForegroundColor">#606060</Color>  <!-- TextFillColorSecondary over SolidBackgroundFillColorBase -->
            <Color x:Key="TitleBarButtonInactiveForegroundColor">#9b9b9b</Color> <!-- TextFillColorTertiary over SolidBackgroundFillColorBase -->

            <StaticResource x:Key="TitleBarButtonBackgroundColor" ResourceKey="SubtleFillColorTransparent" />
            <StaticResource x:Key="TitleBarButtonHoverBackgroundColor" ResourceKey="SubtleFillColorSecondary" />
            <StaticResource x:Key="TitleBarButtonPressedBackgroundColor" ResourceKey="SubtleFillColorTertiary" />

            <x:Double x:Key="TitleBarCompactHeight">32</x:Double>
            <x:Double x:Key="TitleBarExpandedHeight">48</x:Double>
        </ResourceDictionary>
        
        <ResourceDictionary x:Key="HighContrast">
            <StaticResource x:Key="TitleBarForegroundBrush" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="TitleBarDeactivatedForegroundBrush" ResourceKey="TextFillColorTertiaryBrush" />

            <StaticResource x:Key="TitleBarButtonForegroundColor" ResourceKey="TextFillColorPrimary" />
            <StaticResource x:Key="TitleBarButtonHoverForegroundColor" ResourceKey="TextFillColorPrimary" />
            <StaticResource x:Key="TitleBarButtonPressedForegroundColor" ResourceKey="TextFillColorSecondary" />
            <StaticResource x:Key="TitleBarButtonInactiveForegroundColor" ResourceKey="TextFillColorTertiary" />

            <StaticResource x:Key="TitleBarButtonBackgroundColor" ResourceKey="SubtleFillColorTransparent" />
            <StaticResource x:Key="TitleBarButtonHoverBackgroundColor" ResourceKey="SubtleFillColorSecondary" />
            <StaticResource x:Key="TitleBarButtonPressedBackgroundColor" ResourceKey="SubtleFillColorTertiary" />

            <x:Double x:Key="TitleBarCompactHeight">32</x:Double>
            <x:Double x:Key="TitleBarExpandedHeight">48</x:Double>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <!-- It would be nice to base this on NavigationBackButtonNormalStyle, but unfortunately it picks up the generic.xaml version, not the WinUI version. -->
    <Style x:Key="TitleBarBackButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource NavigationViewBackButtonBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForegroundChecked}" />
        <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Width" Value="44" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="Content" Value="&#xE72B;" />
        <Setter Property="Margin" Value="0" />
        <contract7Present:Setter Property="CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid"
                        Background="{TemplateBinding Background}"
                        contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                        contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="Content.(AnimatedIcon.State)" Value="PointerOver"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="Content.(AnimatedIcon.State)" Value="Pressed"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <controls:AnimatedIcon x:Name="Content"
                            Height="16"
                            Width="16"
                            controls:AnimatedIcon.State="Normal"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw">
                            <animatedvisuals:AnimatedBackVisualSource/>
                            <controls:AnimatedIcon.FallbackIconSource>
                                <controls:FontIconSource
                                    FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}"
                                    FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontFamily}"
                                    Glyph="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                    MirroredWhenRightToLeft="True"/>
                            </controls:AnimatedIcon.FallbackIconSource>
                        </controls:AnimatedIcon>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
