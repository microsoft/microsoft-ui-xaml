// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#pragma once

class InfoBarProperties
{
public:
    InfoBarProperties();

    void ActionButton(winrt::ButtonBase const& value);
    winrt::ButtonBase ActionButton();

    void CloseButtonCommand(winrt::ICommand const& value);
    winrt::ICommand CloseButtonCommand();

    void CloseButtonCommandParameter(winrt::IInspectable const& value);
    winrt::IInspectable CloseButtonCommandParameter();

    void CloseButtonStyle(winrt::Style const& value);
    winrt::Style CloseButtonStyle();

    void Content(winrt::IInspectable const& value);
    winrt::IInspectable Content();

    void ContentTemplate(winrt::DataTemplate const& value);
    winrt::DataTemplate ContentTemplate();

    void IconSource(winrt::IconSource const& value);
    winrt::IconSource IconSource();

    void IsClosable(bool value);
    bool IsClosable();

    void IsIconVisible(bool value);
    bool IsIconVisible();

    void IsOpen(bool value);
    bool IsOpen();

    void Message(winrt::hstring const& value);
    winrt::hstring Message();

    void Severity(winrt::InfoBarSeverity const& value);
    winrt::InfoBarSeverity Severity();

    void TemplateSettings(winrt::InfoBarTemplateSettings const& value);
    winrt::InfoBarTemplateSettings TemplateSettings();

    void Title(winrt::hstring const& value);
    winrt::hstring Title();

    static winrt::DependencyProperty ActionButtonProperty() { return s_ActionButtonProperty; }
    static winrt::DependencyProperty CloseButtonCommandProperty() { return s_CloseButtonCommandProperty; }
    static winrt::DependencyProperty CloseButtonCommandParameterProperty() { return s_CloseButtonCommandParameterProperty; }
    static winrt::DependencyProperty CloseButtonStyleProperty() { return s_CloseButtonStyleProperty; }
    static winrt::DependencyProperty ContentProperty() { return s_ContentProperty; }
    static winrt::DependencyProperty ContentTemplateProperty() { return s_ContentTemplateProperty; }
    static winrt::DependencyProperty IconSourceProperty() { return s_IconSourceProperty; }
    static winrt::DependencyProperty IsClosableProperty() { return s_IsClosableProperty; }
    static winrt::DependencyProperty IsIconVisibleProperty() { return s_IsIconVisibleProperty; }
    static winrt::DependencyProperty IsOpenProperty() { return s_IsOpenProperty; }
    static winrt::DependencyProperty MessageProperty() { return s_MessageProperty; }
    static winrt::DependencyProperty SeverityProperty() { return s_SeverityProperty; }
    static winrt::DependencyProperty TemplateSettingsProperty() { return s_TemplateSettingsProperty; }
    static winrt::DependencyProperty TitleProperty() { return s_TitleProperty; }

    static GlobalDependencyProperty s_ActionButtonProperty;
    static GlobalDependencyProperty s_CloseButtonCommandProperty;
    static GlobalDependencyProperty s_CloseButtonCommandParameterProperty;
    static GlobalDependencyProperty s_CloseButtonStyleProperty;
    static GlobalDependencyProperty s_ContentProperty;
    static GlobalDependencyProperty s_ContentTemplateProperty;
    static GlobalDependencyProperty s_IconSourceProperty;
    static GlobalDependencyProperty s_IsClosableProperty;
    static GlobalDependencyProperty s_IsIconVisibleProperty;
    static GlobalDependencyProperty s_IsOpenProperty;
    static GlobalDependencyProperty s_MessageProperty;
    static GlobalDependencyProperty s_SeverityProperty;
    static GlobalDependencyProperty s_TemplateSettingsProperty;
    static GlobalDependencyProperty s_TitleProperty;

    winrt::event_token CloseButtonClick(winrt::TypedEventHandler<winrt::InfoBar, winrt::IInspectable> const& value);
    void CloseButtonClick(winrt::event_token const& token);
    winrt::event_token Closed(winrt::TypedEventHandler<winrt::InfoBar, winrt::InfoBarClosedEventArgs> const& value);
    void Closed(winrt::event_token const& token);
    winrt::event_token Closing(winrt::TypedEventHandler<winrt::InfoBar, winrt::InfoBarClosingEventArgs> const& value);
    void Closing(winrt::event_token const& token);

    event_source<winrt::TypedEventHandler<winrt::InfoBar, winrt::IInspectable>> m_closeButtonClickEventSource;
    event_source<winrt::TypedEventHandler<winrt::InfoBar, winrt::InfoBarClosedEventArgs>> m_closedEventSource;
    event_source<winrt::TypedEventHandler<winrt::InfoBar, winrt::InfoBarClosingEventArgs>> m_closingEventSource;

    static void EnsureProperties();
    static void ClearProperties();

    static void OnIconSourcePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnIsClosablePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnIsIconVisiblePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnIsOpenPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnSeverityPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);
};
