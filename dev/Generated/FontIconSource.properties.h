// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#pragma once

class FontIconSourceProperties
{
public:
    FontIconSourceProperties();

    void FontFamily(winrt::FontFamily const& value);
    winrt::FontFamily FontFamily();

    void FontSize(double value);
    double FontSize();

    void FontStyle(winrt::FontStyle const& value);
    winrt::FontStyle FontStyle();

    void FontWeight(winrt::FontWeight const& value);
    winrt::FontWeight FontWeight();

    void Glyph(winrt::hstring const& value);
    winrt::hstring Glyph();

    void IsTextScaleFactorEnabled(bool value);
    bool IsTextScaleFactorEnabled();

    void MirroredWhenRightToLeft(bool value);
    bool MirroredWhenRightToLeft();

    static winrt::DependencyProperty FontFamilyProperty() { return s_FontFamilyProperty; }
    static winrt::DependencyProperty FontSizeProperty() { return s_FontSizeProperty; }
    static winrt::DependencyProperty FontStyleProperty() { return s_FontStyleProperty; }
    static winrt::DependencyProperty FontWeightProperty() { return s_FontWeightProperty; }
    static winrt::DependencyProperty GlyphProperty() { return s_GlyphProperty; }
    static winrt::DependencyProperty IsTextScaleFactorEnabledProperty() { return s_IsTextScaleFactorEnabledProperty; }
    static winrt::DependencyProperty MirroredWhenRightToLeftProperty() { return s_MirroredWhenRightToLeftProperty; }

    static GlobalDependencyProperty s_FontFamilyProperty;
    static GlobalDependencyProperty s_FontSizeProperty;
    static GlobalDependencyProperty s_FontStyleProperty;
    static GlobalDependencyProperty s_FontWeightProperty;
    static GlobalDependencyProperty s_GlyphProperty;
    static GlobalDependencyProperty s_IsTextScaleFactorEnabledProperty;
    static GlobalDependencyProperty s_MirroredWhenRightToLeftProperty;

    static void EnsureProperties();
    static void ClearProperties();

    static void OnFontFamilyPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnFontSizePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnFontStylePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnFontWeightPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnGlyphPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnIsTextScaleFactorEnabledPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnMirroredWhenRightToLeftPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);
};
