// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "PathIconSource.h"

namespace winrt::Microsoft::UI::Xaml::Controls
{
    CppWinRTActivatableClassWithDPFactory(PathIconSource)
}

#include "PathIconSource.g.cpp"

GlobalDependencyProperty PathIconSourceProperties::s_DataProperty{ nullptr };

PathIconSourceProperties::PathIconSourceProperties()
{
    EnsureProperties();
}

void PathIconSourceProperties::EnsureProperties()
{
    IconSource::EnsureProperties();
    if (!s_DataProperty)
    {
        s_DataProperty =
            InitializeDependencyProperty(
                L"Data",
                winrt::name_of<winrt::Geometry>(),
                winrt::name_of<winrt::PathIconSource>(),
                false /* isAttached */,
                ValueHelper<winrt::Geometry>::BoxedDefaultValue(),
                winrt::PropertyChangedCallback(&OnDataPropertyChanged));
    }
}

void PathIconSourceProperties::ClearProperties()
{
    s_DataProperty = nullptr;
    IconSource::ClearProperties();
}

void PathIconSourceProperties::OnDataPropertyChanged(
    winrt::DependencyObject const& sender,
    winrt::DependencyPropertyChangedEventArgs const& args)
{
    auto owner = sender.as<winrt::PathIconSource>();
    winrt::get_self<PathIconSource>(owner)->OnPropertyChanged(args);
}

void PathIconSourceProperties::Data(winrt::Geometry const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<PathIconSource*>(this)->SetValue(s_DataProperty, ValueHelper<winrt::Geometry>::BoxValueIfNecessary(value));
    }
}

winrt::Geometry PathIconSourceProperties::Data()
{
    return ValueHelper<winrt::Geometry>::CastOrUnbox(static_cast<PathIconSource*>(this)->GetValue(s_DataProperty));
}
