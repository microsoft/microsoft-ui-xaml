// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "InfoBadgeTemplateSettings.h"

namespace winrt::Microsoft::UI::Xaml::Controls
{
    CppWinRTActivatableClassWithDPFactory(InfoBadgeTemplateSettings)
}

#include "InfoBadgeTemplateSettings.g.cpp"

GlobalDependencyProperty InfoBadgeTemplateSettingsProperties::s_IconElementProperty{ nullptr };
GlobalDependencyProperty InfoBadgeTemplateSettingsProperties::s_InfoBadgeCornerRadiusProperty{ nullptr };

InfoBadgeTemplateSettingsProperties::InfoBadgeTemplateSettingsProperties()
{
    EnsureProperties();
}

void InfoBadgeTemplateSettingsProperties::EnsureProperties()
{
    if (!s_IconElementProperty)
    {
        s_IconElementProperty =
            InitializeDependencyProperty(
                L"IconElement",
                winrt::name_of<winrt::IconElement>(),
                winrt::name_of<winrt::InfoBadgeTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<winrt::IconElement>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_InfoBadgeCornerRadiusProperty)
    {
        s_InfoBadgeCornerRadiusProperty =
            InitializeDependencyProperty(
                L"InfoBadgeCornerRadius",
                winrt::name_of<winrt::CornerRadius>(),
                winrt::name_of<winrt::InfoBadgeTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<winrt::CornerRadius>::BoxedDefaultValue(),
                nullptr);
    }
}

void InfoBadgeTemplateSettingsProperties::ClearProperties()
{
    s_IconElementProperty = nullptr;
    s_InfoBadgeCornerRadiusProperty = nullptr;
}

void InfoBadgeTemplateSettingsProperties::IconElement(winrt::IconElement const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<InfoBadgeTemplateSettings*>(this)->SetValue(s_IconElementProperty, ValueHelper<winrt::IconElement>::BoxValueIfNecessary(value));
    }
}

winrt::IconElement InfoBadgeTemplateSettingsProperties::IconElement()
{
    return ValueHelper<winrt::IconElement>::CastOrUnbox(static_cast<InfoBadgeTemplateSettings*>(this)->GetValue(s_IconElementProperty));
}

void InfoBadgeTemplateSettingsProperties::InfoBadgeCornerRadius(winrt::CornerRadius const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<InfoBadgeTemplateSettings*>(this)->SetValue(s_InfoBadgeCornerRadiusProperty, ValueHelper<winrt::CornerRadius>::BoxValueIfNecessary(value));
    }
}

winrt::CornerRadius InfoBadgeTemplateSettingsProperties::InfoBadgeCornerRadius()
{
    return ValueHelper<winrt::CornerRadius>::CastOrUnbox(static_cast<InfoBadgeTemplateSettings*>(this)->GetValue(s_InfoBadgeCornerRadiusProperty));
}
