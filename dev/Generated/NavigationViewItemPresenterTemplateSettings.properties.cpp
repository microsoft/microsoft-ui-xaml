// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "NavigationViewItemPresenterTemplateSettings.h"

namespace winrt::Microsoft::UI::Xaml::Controls::Primitives
{
    CppWinRTActivatableClassWithDPFactory(NavigationViewItemPresenterTemplateSettings)
}

#include "NavigationViewItemPresenterTemplateSettings.g.cpp"

GlobalDependencyProperty NavigationViewItemPresenterTemplateSettingsProperties::s_IconWidthProperty{ nullptr };
GlobalDependencyProperty NavigationViewItemPresenterTemplateSettingsProperties::s_SmallerIconWidthProperty{ nullptr };

NavigationViewItemPresenterTemplateSettingsProperties::NavigationViewItemPresenterTemplateSettingsProperties()
{
    EnsureProperties();
}

void NavigationViewItemPresenterTemplateSettingsProperties::EnsureProperties()
{
    if (!s_IconWidthProperty)
    {
        s_IconWidthProperty =
            InitializeDependencyProperty(
                L"IconWidth",
                winrt::name_of<double>(),
                winrt::name_of<winrt::NavigationViewItemPresenterTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<double>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_SmallerIconWidthProperty)
    {
        s_SmallerIconWidthProperty =
            InitializeDependencyProperty(
                L"SmallerIconWidth",
                winrt::name_of<double>(),
                winrt::name_of<winrt::NavigationViewItemPresenterTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<double>::BoxedDefaultValue(),
                nullptr);
    }
}

void NavigationViewItemPresenterTemplateSettingsProperties::ClearProperties()
{
    s_IconWidthProperty = nullptr;
    s_SmallerIconWidthProperty = nullptr;
}

void NavigationViewItemPresenterTemplateSettingsProperties::IconWidth(double value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<NavigationViewItemPresenterTemplateSettings*>(this)->SetValue(s_IconWidthProperty, ValueHelper<double>::BoxValueIfNecessary(value));
    }
}

double NavigationViewItemPresenterTemplateSettingsProperties::IconWidth()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<NavigationViewItemPresenterTemplateSettings*>(this)->GetValue(s_IconWidthProperty));
}

void NavigationViewItemPresenterTemplateSettingsProperties::SmallerIconWidth(double value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<NavigationViewItemPresenterTemplateSettings*>(this)->SetValue(s_SmallerIconWidthProperty, ValueHelper<double>::BoxValueIfNecessary(value));
    }
}

double NavigationViewItemPresenterTemplateSettingsProperties::SmallerIconWidth()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<NavigationViewItemPresenterTemplateSettings*>(this)->GetValue(s_SmallerIconWidthProperty));
}
