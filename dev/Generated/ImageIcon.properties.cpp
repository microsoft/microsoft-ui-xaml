// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "ImageIcon.h"

namespace winrt::Microsoft::UI::Xaml::Controls
{
    CppWinRTActivatableClassWithDPFactory(ImageIcon)
}

#include "ImageIcon.g.cpp"

GlobalDependencyProperty ImageIconProperties::s_SourceProperty{ nullptr };

ImageIconProperties::ImageIconProperties()
{
    EnsureProperties();
}

void ImageIconProperties::EnsureProperties()
{
    if (!s_SourceProperty)
    {
        s_SourceProperty =
            InitializeDependencyProperty(
                L"Source",
                winrt::name_of<winrt::ImageSource>(),
                winrt::name_of<winrt::ImageIcon>(),
                false /* isAttached */,
                ValueHelper<winrt::ImageSource>::BoxedDefaultValue(),
                winrt::PropertyChangedCallback(&OnSourcePropertyChanged));
    }
}

void ImageIconProperties::ClearProperties()
{
    s_SourceProperty = nullptr;
}

void ImageIconProperties::OnSourcePropertyChanged(
    winrt::DependencyObject const& sender,
    winrt::DependencyPropertyChangedEventArgs const& args)
{
    auto owner = sender.as<winrt::ImageIcon>();
    winrt::get_self<ImageIcon>(owner)->OnSourcePropertyChanged(args);
}

void ImageIconProperties::Source(winrt::ImageSource const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<ImageIcon*>(this)->SetValue(s_SourceProperty, ValueHelper<winrt::ImageSource>::BoxValueIfNecessary(value));
    }
}

winrt::ImageSource ImageIconProperties::Source()
{
    return ValueHelper<winrt::ImageSource>::CastOrUnbox(static_cast<ImageIcon*>(this)->GetValue(s_SourceProperty));
}
