namespace MU_XCP_NAMESPACE
{

[MUX_PUBLIC]
[webhosthidden]
[MUX_PROPERTY_NEEDS_DP_FIELD]
runtimeclass CommandBarFlyoutCommandBarTemplateSettings
    : Windows.UI.Xaml.DependencyObject
{
    Double OpenAnimationStartPosition { get; };
    Double OpenAnimationEndPosition { get; };
    Double CloseAnimationEndPosition { get; };
    Double CurrentWidth { get; };
    Double ExpandedWidth { get; };
    Double WidthExpansionDelta { get; };
    Double WidthExpansionAnimationStartPosition { get; };
    Double WidthExpansionAnimationEndPosition{ get; };
    Double WidthExpansionMoreButtonAnimationStartPosition { get; };
    Double WidthExpansionMoreButtonAnimationEndPosition{ get; };
    Double ExpandUpOverflowVerticalPosition { get; };
    Double ExpandDownOverflowVerticalPosition { get; };
    Double ExpandUpAnimationStartPosition { get; };
    Double ExpandUpAnimationEndPosition { get; };
    Double ExpandUpAnimationHoldPosition { get; };
    Double ExpandDownAnimationStartPosition { get; };
    Double ExpandDownAnimationEndPosition { get; };
    Double ExpandDownAnimationHoldPosition{ get; };
    Windows.Foundation.Rect ContentClipRect { get; };
    Windows.Foundation.Rect OverflowContentClipRect{ get; };
};

[MUX_PUBLIC]
[webhosthidden]
unsealed runtimeclass CommandBarFlyoutCommandBar : Windows.UI.Xaml.Controls.CommandBar
{
    CommandBarFlyoutCommandBar();

    [MUX_PROPERTY_NEEDS_DP_FIELD]
    CommandBarFlyoutCommandBarTemplateSettings FlyoutTemplateSettings { get; };
};

// Needed so we can access these enum and interfaces until they ship in the official SDK.
[MUX_PUBLIC]
[webhosthidden]
enum PopupPlacementMode
{
    Auto,
    Top,
    Bottom,
    Left,
    Right,
    TopEdgeAlignedLeft,
    TopEdgeAlignedRight,
    BottomEdgeAlignedLeft,
    BottomEdgeAlignedRight,
    LeftEdgeAlignedTop,
    LeftEdgeAlignedBottom,
    RightEdgeAlignedTop,
    RightEdgeAlignedBottom,
};

[MUX_INTERNAL]
[webhosthidden]
[uuid(1870b836-df2f-5fc6-a5f2-748ed6ce7321)]
interface IPopup4
{
    Windows.UI.Xaml.FrameworkElement PlacementTarget;
    Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode DesiredPlacement;
    Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode ActualPlacement{ get; };

    event Windows.Foundation.EventHandler<Object> ActualPlacementChanged;
};

[MUX_INTERNAL]
[webhosthidden]
[uuid(98ffd442-a3f5-534c-906d-88b72a78126b)]
interface IAutomationPropertiesStatics9
{
    Windows.UI.Xaml.DependencyProperty ControlTypeProperty{ get; };
    Windows.UI.Xaml.Automation.Peers.AutomationControlType GetControlType(Windows.UI.Xaml.UIElement element);
    void SetControlType(Windows.UI.Xaml.UIElement element, Windows.UI.Xaml.Automation.Peers.AutomationControlType value);
};

[MUX_PUBLIC]
[webhosthidden]
static runtimeclass CommandBarFlyoutCommandBarAutomationProperties
{
    [MUX_DEFAULT_VALUE("winrt::AutomationControlType::Custom")]
    [MUX_PROPERTY_CHANGED_CALLBACK_METHODNAME("OnControlTypePropertyChanged")]
    static Windows.UI.Xaml.DependencyProperty ControlTypeProperty{ get; };
    static Windows.UI.Xaml.Automation.Peers.AutomationControlType GetControlType(Windows.UI.Xaml.UIElement element);
    static void SetControlType(Windows.UI.Xaml.UIElement element, Windows.UI.Xaml.Automation.Peers.AutomationControlType value);
}
}
