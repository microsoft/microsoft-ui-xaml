namespace MU_XCP_NAMESPACE
{

[MUX_PUBLIC]
[webhosthidden]
[MUX_PROPERTY_NEEDS_DP_FIELD]
runtimeclass CommandBarFlyoutCommandBarTemplateSettings
    : Windows.UI.Xaml.DependencyObject
{
    Double OpenAnimationStartPosition { get; };
    Double OpenAnimationEndPosition { get; };
    Double CloseAnimationEndPosition { get; };
    Double CurrentWidth { get; };
    Double ExpandedWidth { get; };
    Double WidthExpansionDelta { get; };
    Double WidthExpansionAnimationStartPosition { get; };
    Double WidthExpansionAnimationEndPosition{ get; };
    Double WidthExpansionMoreButtonAnimationStartPosition { get; };
    Double WidthExpansionMoreButtonAnimationEndPosition{ get; };
    Double ExpandUpOverflowVerticalPosition { get; };
    Double ExpandDownOverflowVerticalPosition { get; };
    Double ExpandUpAnimationStartPosition { get; };
    Double ExpandUpAnimationEndPosition { get; };
    Double ExpandUpAnimationHoldPosition { get; };
    Double ExpandDownAnimationStartPosition { get; };
    Double ExpandDownAnimationEndPosition { get; };
    Double ExpandDownAnimationHoldPosition{ get; };
    Windows.Foundation.Rect ContentClipRect { get; };
    Windows.Foundation.Rect OverflowContentClipRect{ get; };
};

[MUX_PUBLIC]
[webhosthidden]
unsealed runtimeclass CommandBarFlyoutCommandBar : Windows.UI.Xaml.Controls.CommandBar
{
    CommandBarFlyoutCommandBar();

    [MUX_PROPERTY_NEEDS_DP_FIELD]
    CommandBarFlyoutCommandBarTemplateSettings FlyoutTemplateSettings { get; };
};

[MUX_PUBLIC]
[webhosthidden]
static runtimeclass CommandBarFlyoutCommandBarAutomationProperties
{
    [MUX_DEFAULT_VALUE("winrt::AutomationControlType::Custom")]
    [MUX_PROPERTY_CHANGED_CALLBACK_METHODNAME("OnControlTypePropertyChanged")]
    static Windows.UI.Xaml.DependencyProperty ControlTypeProperty{ get; };
    static Windows.UI.Xaml.Automation.Peers.AutomationControlType GetControlType(Windows.UI.Xaml.UIElement element);
    static void SetControlType(Windows.UI.Xaml.UIElement element, Windows.UI.Xaml.Automation.Peers.AutomationControlType value);
}
}
