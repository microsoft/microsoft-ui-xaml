<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<local:TestPage
    x:Class="MUXControlsTestApp.ColorPickerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MUXControlsTestApp"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    GotFocus="TestPage_GotFocus">

    <Grid x:Name="Root" Margin="12">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <!-- Sample control -->
        <ScrollViewer AutomationProperties.AutomationId="ColorPickerScrollViewer" Height="500"
            HorizontalScrollMode="Enabled" HorizontalScrollBarVisibility="Visible" IsVerticalRailEnabled="True">
            <StackPanel>
                <controls:ColorPicker x:Name="ColorPicker" IsAlphaEnabled="True" ColorChanged="ColorPicker_ColorChanged" />
                <TextBlock Text="Text"/>
            </StackPanel>
        </ScrollViewer>
        
        <!-- Options -->
        <Grid Grid.Column="1" Margin="8,0,8,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Text="Options" Style="{ThemeResource StandardGroupHeader}"/>
            <ScrollViewer Grid.Row="1" BorderThickness="1" BorderBrush="{ThemeResource SystemChromeHighColor}" Padding="4">
                <!-- Place options below -->
                <StackPanel Width="400">
                    <TextBlock Text="Set theme to..." />
                    <StackPanel Orientation="Horizontal">
                        <Button AutomationProperties.AutomationId="ThemeLightButton" Content="Light" Click="ThemeLightButton_Click" />
                        <Button AutomationProperties.AutomationId="ThemeDarkButton" Content="Dark" Click="ThemeDarkButton_Click" Margin="5,0,0,0" />
                    </StackPanel>
                    <TextBlock Text="Set Color to..." />
                    <StackPanel Orientation="Horizontal">
                        <Button AutomationProperties.AutomationId="ColorWhiteButton" Content="White" Click="ColorWhiteButton_Click" />
                        <Button AutomationProperties.AutomationId="ColorRedButton" Content="Red" Click="ColorRedButton_Click" Margin="5,0,0,0" />
                        <Button AutomationProperties.AutomationId="ColorGreenButton" Content="Green" Click="ColorGreenButton_Click" Margin="5,0,0,0" />
                        <Button AutomationProperties.AutomationId="ColorBlueButton" Content="Blue" Click="ColorBlueButton_Click" Margin="5,0,0,0" />
                    </StackPanel>
                    <TextBlock Text="Set PreviousColor to..." />
                    <StackPanel Orientation="Horizontal">
                        <Button AutomationProperties.AutomationId="PreviousColorNullButton" Content="Null" Click="PreviousColorNullButton_Click" />
                        <Button AutomationProperties.AutomationId="PreviousColorRedButton" Content="Red" Click="PreviousColorRedButton_Click" Margin="5,0,0,0" />
                        <Button AutomationProperties.AutomationId="PreviousColorGreenButton" Content="Green" Click="PreviousColorGreenButton_Click" Margin="5,0,0,0" />
                        <Button AutomationProperties.AutomationId="PreviousColorBlueButton" Content="Blue" Click="PreviousColorBlueButton_Click" Margin="5,0,0,0" />
                    </StackPanel>
                    <Button AutomationProperties.AutomationId="PreviousColorCurrentColorButton" Content="Current color" Click="PreviousColorCurrentColorButton_Click" Margin="0,5,0,0" />
                    <ComboBox AutomationProperties.AutomationId="OrientationComboBox" Header="Orientation" SelectionChanged="OrientationComboBox_SelectionChanged">
                        <ComboBoxItem AutomationProperties.AutomationId="OrientationHorizontal">Horizontal</ComboBoxItem>
                        <ComboBoxItem AutomationProperties.AutomationId="OrientationVertical" IsSelected="True">Vertical</ComboBoxItem>
                    </ComboBox>
                    <CheckBox AutomationProperties.AutomationId="AlphaEnabledCheckBox" Content="Is alpha enabled" IsChecked="{Binding IsAlphaEnabled, ElementName=ColorPicker, Mode=TwoWay}" />
                    <CheckBox AutomationProperties.AutomationId="ColorSpectrumVisibleCheckBox" Content="Is color spectrum visible" IsChecked="{Binding IsColorSpectrumVisible, ElementName=ColorPicker, Mode=TwoWay}" />
                    <CheckBox AutomationProperties.AutomationId="ColorPreviewVisibleCheckBox" Content="Is color preview visible" IsChecked="{Binding IsColorPreviewVisible, ElementName=ColorPicker, Mode=TwoWay}" />
                    <CheckBox AutomationProperties.AutomationId="ColorSliderVisibleCheckBox" Content="Is color slider visible" IsChecked="{Binding IsColorSliderVisible, ElementName=ColorPicker, Mode=TwoWay}" TabIndex="0"/>
                    <CheckBox AutomationProperties.AutomationId="AlphaSliderVisibleCheckBox" Content="Is alpha slider visible" IsChecked="{Binding IsAlphaSliderVisible, ElementName=ColorPicker, Mode=TwoWay}" />
                    <CheckBox AutomationProperties.AutomationId="MoreButtonVisibleCheckBox" Content="Is more button visible" IsChecked="{Binding IsMoreButtonVisible, ElementName=ColorPicker, Mode=TwoWay}" />
                    <CheckBox AutomationProperties.AutomationId="ColorChannelTextInputVisibleCheckBox" Content="Is color channel text input visible" IsChecked="{Binding IsColorChannelTextInputVisible, ElementName=ColorPicker, Mode=TwoWay}" />
                    <CheckBox AutomationProperties.AutomationId="AlphaTextInputVisibleCheckBox" Content="Is alpha text input visible" IsChecked="{Binding IsAlphaTextInputVisible, ElementName=ColorPicker, Mode=TwoWay}" />
                    <CheckBox AutomationProperties.AutomationId="HexInputVisibleCheckBox" Content="Is hex input visible" IsChecked="{Binding IsHexInputVisible, ElementName=ColorPicker, Mode=TwoWay}" />
                    <CheckBox AutomationProperties.AutomationId="IsRtlCheckBox" Content="Is RTL" Checked="RTLCheckBox_Checked" Unchecked="RTLCheckBox_Unchecked" />
                    <Slider AutomationProperties.AutomationId="MinimumHueSlider" Header="Minimum hue" Minimum="0" Maximum="359" Value="{Binding MinHue, ElementName=ColorPicker, Mode=TwoWay}" />
                    <Slider AutomationProperties.AutomationId="MaximumHueSlider" Header="Maximum hue" Minimum="0" Maximum="359" Value="{Binding MaxHue, ElementName=ColorPicker, Mode=TwoWay}" />
                    <Slider AutomationProperties.AutomationId="MinimumSaturationSlider" Header="Minimum saturation" Minimum="0" Maximum="100" Value="{Binding MinSaturation, ElementName=ColorPicker, Mode=TwoWay}" />
                    <Slider AutomationProperties.AutomationId="MaximumSaturationSlider" Header="Maximum saturation" Minimum="0" Maximum="100" Value="{Binding MaxSaturation, ElementName=ColorPicker, Mode=TwoWay}" />
                    <Slider AutomationProperties.AutomationId="MinimumValueSlider" Header="Minimum value" Minimum="0" Maximum="100" Value="{Binding MinValue, ElementName=ColorPicker, Mode=TwoWay}" />
                    <Slider AutomationProperties.AutomationId="MaximumValueSlider" Header="Maximum value" Minimum="0" Maximum="100" Value="{Binding MaxValue, ElementName=ColorPicker, Mode=TwoWay}" />
                    <ComboBox AutomationProperties.AutomationId="ColorSpectrumShapeComboBox" Header="Color spectrum shape" SelectionChanged="ColorSpectrumShapeComboBox_SelectionChanged" SelectedIndex="0">
                        <ComboBoxItem>Box</ComboBoxItem>
                        <ComboBoxItem>Ring</ComboBoxItem>
                    </ComboBox>
                    <ComboBox AutomationProperties.AutomationId="ColorSpectrumComponentsComboBox" Header="Color spectrum components" SelectionChanged="ColorSpectrumComponentsComboBox_SelectionChanged" SelectedIndex="0">
                        <ComboBoxItem AutomationProperties.AutomationId="ColorSpectrumComponentsHueSaturation">(Hue, Saturation)</ComboBoxItem>
                        <ComboBoxItem AutomationProperties.AutomationId="ColorSpectrumComponentsHueValue">(Hue, Value)</ComboBoxItem>
                        <ComboBoxItem AutomationProperties.AutomationId="ColorSpectrumComponentsSaturationHue">(Saturation, Hue)</ComboBoxItem>
                        <ComboBoxItem AutomationProperties.AutomationId="ColorSpectrumComponentsSaturationValue">(Saturation, Value)</ComboBoxItem>
                        <ComboBoxItem AutomationProperties.AutomationId="ColorSpectrumComponentsValueHue">(Value, Hue)</ComboBoxItem>
                        <ComboBoxItem AutomationProperties.AutomationId="ColorSpectrumComponentsValueSaturation">(Value, Saturation)</ComboBoxItem>
                    </ComboBox>
                    <Slider AutomationProperties.AutomationId="ControlWidthSlider" Header="Control width" Minimum="312" Maximum="1000" Value="{Binding Width, ElementName=ColorPicker, Mode=TwoWay}" />
                </StackPanel>
            </ScrollViewer>
        </Grid>

        <!-- ColorPicker status -->
        <Grid Grid.Column="2" Margin="8,0,8,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Text="Properties" Style="{ThemeResource StandardGroupHeader}"/>
            <ScrollViewer Grid.Row="1" BorderThickness="1" BorderBrush="{ThemeResource SystemChromeHighColor}" Padding="4">
                <StackPanel Width="400" >
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Currently focused element:" Margin="0,0,5,0" />
                        <TextBlock AutomationProperties.AutomationId="CurrentlyFocusedElementTextBlock" x:Name="CurrentlyFocusedElementTextBlock" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,0,10,0">
                        <TextBlock Text="Color from ColorPicker.Color:" VerticalAlignment="Center" Margin="0,0,10,0" />
                        <Rectangle Height="50" Width="50">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{Binding Color, ElementName=ColorPicker, Mode=OneWay}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Color from ColorPicker.ColorChanged:" VerticalAlignment="Center" Margin="0,0,10,0" />
                        <Rectangle Height="50" Width="50" x:Name="ColorFromEventRectangle" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Selected color name:" VerticalAlignment="Center" Margin="0,0,10,0" />
                        <TextBlock AutomationProperties.AutomationId="SelectedColorNameTextBlock" x:Name="SelectedColorNameTextBlock" VerticalAlignment="Center" />
                    </StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <StackPanel>
                            <TextBlock Text="Color" HorizontalAlignment="Center" />
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Red:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="RedTextBlock" x:Name="RedTextBlock" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Green:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="GreenTextBlock" x:Name="GreenTextBlock" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Blue:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="BlueTextBlock" x:Name="BlueTextBlock" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Alpha:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="AlphaTextBlock" x:Name="AlphaTextBlock" />
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Grid.Column="1">
                            <TextBlock Text="Color (old)" HorizontalAlignment="Center" />
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Red:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="OldRedTextBlock" x:Name="OldRedTextBlock" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Green:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="OldGreenTextBlock" x:Name="OldGreenTextBlock" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Blue:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="OldBlueTextBlock" x:Name="OldBlueTextBlock" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Alpha:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="OldAlphaTextBlock" x:Name="OldAlphaTextBlock" />
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Grid.Column="2">
                            <TextBlock Text="PreviousColor" HorizontalAlignment="Center" />
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Red:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="PreviousRedTextBlock" x:Name="PreviousRedTextBlock" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Green:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="PreviousGreenTextBlock" x:Name="PreviousGreenTextBlock" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Blue:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="PreviousBlueTextBlock" x:Name="PreviousBlueTextBlock" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Alpha:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="PreviousAlphaTextBlock" x:Name="PreviousAlphaTextBlock" />
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Grid.Column="3">
                            <TextBlock Text="SelectionEllipse" HorizontalAlignment="Center" />
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Red:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="EllipseRedTextBlock" x:Name="EllipseRedTextBlock" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Green:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="EllipseGreenTextBlock" x:Name="EllipseGreenTextBlock" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Blue:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="EllipseBlueTextBlock" x:Name="EllipseBlueTextBlock" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Alpha:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <TextBlock AutomationProperties.AutomationId="EllipseAlphaTextBlock" x:Name="EllipseAlphaTextBlock" />
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <TextBlock Text="MoreButton" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Foreground:" VerticalAlignment="Center" Margin="0,0,10,0" />
                        <TextBlock AutomationProperties.AutomationId="MoreButtonForegroundTextBlock" x:Name="MoreButtonForegroundTextBlock" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Background:" VerticalAlignment="Center" Margin="0,0,10,0" />
                        <TextBlock AutomationProperties.AutomationId="MoreButtonBackgroundTextBlock" x:Name="MoreButtonBackgroundTextBlock" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="BorderBrush:" VerticalAlignment="Center" Margin="0,0,10,0" />
                        <TextBlock AutomationProperties.AutomationId="MoreButtonBorderBrushTextBlock" x:Name="MoreButtonBorderBrushTextBlock" />
                    </StackPanel>
                    <CheckBox AutomationProperties.AutomationId="ColorSpectrumLoadedCheckBox" x:Name="ColorSpectrumLoadedCheckBox" IsChecked="False" Content="ColorSpectrum loaded" TabIndex="0"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="ColorSpectrum width:" VerticalAlignment="Center" Margin="0,0,10,0" />
                        <TextBlock AutomationProperties.AutomationId="WidthTextBlock" x:Name="WidthTextBlock" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="ColorSpectrum height:" VerticalAlignment="Center" Margin="0,0,10,0" />
                        <TextBlock AutomationProperties.AutomationId="HeightTextBlock" x:Name="HeightTextBlock" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Ellipse x-position:" VerticalAlignment="Center" Margin="0,0,10,0" />
                        <TextBlock AutomationProperties.AutomationId="EllipseXTextBlock" x:Name="EllipseXTextBlock" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Ellipse y-position:" VerticalAlignment="Center" Margin="0,0,10,0" />
                        <TextBlock AutomationProperties.AutomationId="EllipseYTextBlock" x:Name="EllipseYTextBlock" />
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Grid>
</local:TestPage>
