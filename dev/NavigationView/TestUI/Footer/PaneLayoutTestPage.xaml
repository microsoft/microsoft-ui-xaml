<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<local:TestPage
    x:Class="MUXControlsTestApp.PaneLayoutTestPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MUXControlsTestApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:contract5Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 5)"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <!-- Set max-height to speed up "filling" of menu/footer items to test behavior -->
    <muxc:NavigationView x:Name="RootNavigationView" MaxHeight="500" IsPaneOpen="True" PaneDisplayMode="Left">

        <StackPanel Padding="10,5" contract5Present:Spacing="5">
            <muxc:RadioButtons SelectionChanged="TestCaseSelectionChanged" SelectedIndex="2">
                <RadioButton AutomationProperties.Name="NoItems">No items</RadioButton>
                <RadioButton AutomationProperties.Name="NoFooter">No footer</RadioButton>
                <RadioButton AutomationProperties.Name="Both">Both</RadioButton>
            </muxc:RadioButtons>

            <Button Click="AddMenuItemButton_Click" AutomationProperties.Name="AddMenuItemButton" Margin="0,4,0,0">Add menu item</Button>
            <Button Click="AddFooterItemButton_Click" AutomationProperties.Name="AddFooterItemButton">Add footer item</Button>
            <Button Click="ResetCollectionsButton_Click" AutomationProperties.Name="ResetCollectionsButton">Reset collections</Button>
            <Button Click="ClearCollectionsButton_Click" AutomationProperties.Name="ClearCollectionsButton">Clear collections</Button>
            <CheckBox x:Name="IsSettingsEnabledCheckbox" AutomationProperties.Name="IsSettingsEnabledCheckbox"
                IsChecked="True" Content="Settings visible"
                Checked="IsSettingsEnabledCheckbox_Checked" Unchecked="IsSettingsEnabledCheckbox_UnChecked"/>

            <Button Click="GetLayoutHeightsButton_Click" Margin="0,10,0,0" AutomationProperties.Name="GetLayoutHeightsButton">Get layout heights</Button>
            <TextBlock x:Name="LayoutHeightsReport" AutomationProperties.Name="LayoutHeightsReport"/>
        </StackPanel>
    </muxc:NavigationView>

</local:TestPage>
