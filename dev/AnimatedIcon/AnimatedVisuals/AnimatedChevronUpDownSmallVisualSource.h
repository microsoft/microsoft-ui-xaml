#pragma once
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.0+ge1fa92580f
//       
//       Command:
//           LottieGen -Language Cppwinrt -WinUIVersion 2.4 -InputFile AnimatedChevronUpDownSmallVisualSource.json
//       
//       Input file:
//           AnimatedChevronUpDownSmallVisualSource.json (24992 bytes created 23:37-07:00 Oct 5 2021)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#include "common.h"
#include "AnimatedVisuals\AnimatedChevronUpDownSmallVisualSource.g.h"

// Name:        Controls_07_DownChevron_Expand+NavView
// Frame rate:  60 fps
// Frame count: 260
// Duration:    4333.3 mS
// _______________________________________________________________________________________________________________
// |               Marker                |               Constant                | Frame |   mS   |   Progress   |
// |_____________________________________|_______________________________________|_______|________|______________|
// | NormalOnToNormalOff_Start           | M_NormalOnToNormalOff_Start           |     0 |    0.0 | 0.0F         |
// | NormalOnToNormalOff_End             | M_NormalOnToNormalOff_End             |    29 |  483.3 | 0.111730769F |
// | NormalOnToPointerOverOn_Start       | M_NormalOnToPointerOverOn_Start       |    30 |  500.0 | 0.115576923F |
// | NormalOnToPointerOverOn_End         | M_NormalOnToPointerOverOn_End         |    39 |  650.0 | 0.150192305F |
// | NormalOnToPressedOn_Start           | M_NormalOnToPressedOn_Start           |    40 |  666.7 | 0.154038459F |
// | NormalOnToPressedOn_End             | M_NormalOnToPressedOn_End             |    49 |  816.7 | 0.188653842F |
// | NormalOffToNormalOn_Start           | M_NormalOffToNormalOn_Start           |    50 |  833.3 | 0.192499995F |
// | NormalOffToNormalOn_End             | M_NormalOffToNormalOn_End             |    79 | 1316.7 | 0.304038465F |
// | NormalOffToPointerOverOff_Start     | M_NormalOffToPointerOverOff_Start     |    80 | 1333.3 | 0.307884604F |
// | NormalOffToPointerOverOff_End       | M_NormalOffToPointerOverOff_End       |    89 | 1483.3 | 0.342500001F |
// | NormalOffToPressedOff_Start         | M_NormalOffToPressedOff_Start         |    90 | 1500.0 | 0.34634614F  |
// | NormalOffToPressedOff_End           | M_NormalOffToPressedOff_End           |    99 | 1650.0 | 0.380961537F |
// | PointerOverOnToPointerOverOff_Start | M_PointerOverOnToPointerOverOff_Start |   100 | 1666.7 | 0.384807706F |
// | PointerOverOnToPointerOverOff_End   | M_PointerOverOnToPointerOverOff_End   |   109 | 1816.7 | 0.419423074F |
// | PointerOverOnToNormalOn_Start       | M_PointerOverOnToNormalOn_Start       |   110 | 1833.3 | 0.423269242F |
// | PointerOverOnToNormalOn_End         | M_PointerOverOnToNormalOn_End         |   119 | 1983.3 | 0.45788461F  |
// | PointerOverOnToPressedOn_Start      | M_PointerOverOnToPressedOn_Start      |   120 | 2000.0 | 0.461730778F |
// | PointerOverOnToPressedOn_End        | M_PointerOverOnToPressedOn_End        |   129 | 2150.0 | 0.496346146F |
// | PointerOverOffToPointerOverOn_Start | M_PointerOverOffToPointerOverOn_Start |   130 | 2166.7 | 0.500192285F |
// | PointerOverOffToPointerOverOn_End   | M_PointerOverOffToPointerOverOn_End   |   139 | 2316.7 | 0.534807682F |
// | PointerOverOffToNormalOff_Start     | M_PointerOverOffToNormalOff_Start     |   140 | 2333.3 | 0.538653851F |
// | PointerOverOffToNormalOff_End       | M_PointerOverOffToNormalOff_End       |   149 | 2483.3 | 0.573269248F |
// | PointerOverOffToPressedOff_Start    | M_PointerOverOffToPressedOff_Start    |   150 | 2500.0 | 0.577115357F |
// | PointerOverOffToPressedOff_End      | M_PointerOverOffToPressedOff_End      |   159 | 2650.0 | 0.611730754F |
// | PressedOnToPressedOff_Start         | M_PressedOnToPressedOff_Start         |   160 | 2666.7 | 0.615576923F |
// | PressedOnToPressedOff_End           | M_PressedOnToPressedOff_End           |   169 | 2816.7 | 0.65019232F  |
// | PressedOnToPointerOverOff_Start     | M_PressedOnToPointerOverOff_Start     |   170 | 2833.3 | 0.654038489F |
// | PressedOnToPointerOverOff_End       | M_PressedOnToPointerOverOff_End       |   189 | 3150.0 | 0.727115393F |
// | PressedOnToNormalOff_Start          | M_PressedOnToNormalOff_Start          |   190 | 3166.7 | 0.730961561F |
// | PressedOnToNormalOff_End            | M_PressedOnToNormalOff_End            |   209 | 3483.3 | 0.804038465F |
// | PressedOffToPressedOn_Start         | M_PressedOffToPressedOn_Start         |   210 | 3500.0 | 0.807884634F |
// | PressedOffToPressedOn_End           | M_PressedOffToPressedOn_End           |   219 | 3650.0 | 0.842499971F |
// | PressedOffToPointerOverOn_Start     | M_PressedOffToPointerOverOn_Start     |   220 | 3666.7 | 0.84634614F  |
// | PressedOffToPointerOverOn_End       | M_PressedOffToPointerOverOn_End       |   239 | 3983.3 | 0.919423103F |
// | PressedOffToNormalOn_Start          | M_PressedOffToNormalOn_Start          |   240 | 4000.0 | 0.923269212F |
// | PressedOffToNormalOn_End            | M_PressedOffToNormalOn_End            |   259 | 4316.7 | 0.996346176F |
// ---------------------------------------------------------------------------------------------------------------
// _________________________________________________________
// | Theme property |  Accessor  | Type  |  Default value  |
// |________________|____________|_______|_________________|
// | Foreground     | Foreground | Color | #FF000000 Black |
// ---------------------------------------------------------
class AnimatedChevronUpDownSmallVisualSource
    : public winrt::implementation::AnimatedChevronUpDownSmallVisualSourceT<AnimatedChevronUpDownSmallVisualSource>
{
    winrt::Windows::UI::Composition::CompositionPropertySet _themeProperties{ nullptr };
    winrt::Windows::UI::Color _themeForeground{ 0xFF, 0x00, 0x00, 0x00 };
    winrt::Windows::UI::Composition::CompositionPropertySet EnsureThemeProperties(winrt::Windows::UI::Composition::Compositor compositor);

    static winrt::Windows::Foundation::Numerics::float4 ColorAsVector4(winrt::Windows::UI::Color color);
public:
    // Animation duration: 4.333 seconds.
    static constexpr int64_t c_durationTicks{ 43333333L };

    // Marker: NormalOnToNormalOff_Start.
    static constexpr float M_NormalOnToNormalOff_Start{ 0.0F };

    // Marker: NormalOnToNormalOff_End.
    static constexpr float M_NormalOnToNormalOff_End{ 0.111730769F };

    // Marker: NormalOnToPointerOverOn_Start.
    static constexpr float M_NormalOnToPointerOverOn_Start{ 0.115576923F };

    // Marker: NormalOnToPointerOverOn_End.
    static constexpr float M_NormalOnToPointerOverOn_End{ 0.150192305F };

    // Marker: NormalOnToPressedOn_Start.
    static constexpr float M_NormalOnToPressedOn_Start{ 0.154038459F };

    // Marker: NormalOnToPressedOn_End.
    static constexpr float M_NormalOnToPressedOn_End{ 0.188653842F };

    // Marker: NormalOffToNormalOn_Start.
    static constexpr float M_NormalOffToNormalOn_Start{ 0.192499995F };

    // Marker: NormalOffToNormalOn_End.
    static constexpr float M_NormalOffToNormalOn_End{ 0.304038465F };

    // Marker: NormalOffToPointerOverOff_Start.
    static constexpr float M_NormalOffToPointerOverOff_Start{ 0.307884604F };

    // Marker: NormalOffToPointerOverOff_End.
    static constexpr float M_NormalOffToPointerOverOff_End{ 0.342500001F };

    // Marker: NormalOffToPressedOff_Start.
    static constexpr float M_NormalOffToPressedOff_Start{ 0.34634614F };

    // Marker: NormalOffToPressedOff_End.
    static constexpr float M_NormalOffToPressedOff_End{ 0.380961537F };

    // Marker: PointerOverOnToPointerOverOff_Start.
    static constexpr float M_PointerOverOnToPointerOverOff_Start{ 0.384807706F };

    // Marker: PointerOverOnToPointerOverOff_End.
    static constexpr float M_PointerOverOnToPointerOverOff_End{ 0.419423074F };

    // Marker: PointerOverOnToNormalOn_Start.
    static constexpr float M_PointerOverOnToNormalOn_Start{ 0.423269242F };

    // Marker: PointerOverOnToNormalOn_End.
    static constexpr float M_PointerOverOnToNormalOn_End{ 0.45788461F };

    // Marker: PointerOverOnToPressedOn_Start.
    static constexpr float M_PointerOverOnToPressedOn_Start{ 0.461730778F };

    // Marker: PointerOverOnToPressedOn_End.
    static constexpr float M_PointerOverOnToPressedOn_End{ 0.496346146F };

    // Marker: PointerOverOffToPointerOverOn_Start.
    static constexpr float M_PointerOverOffToPointerOverOn_Start{ 0.500192285F };

    // Marker: PointerOverOffToPointerOverOn_End.
    static constexpr float M_PointerOverOffToPointerOverOn_End{ 0.534807682F };

    // Marker: PointerOverOffToNormalOff_Start.
    static constexpr float M_PointerOverOffToNormalOff_Start{ 0.538653851F };

    // Marker: PointerOverOffToNormalOff_End.
    static constexpr float M_PointerOverOffToNormalOff_End{ 0.573269248F };

    // Marker: PointerOverOffToPressedOff_Start.
    static constexpr float M_PointerOverOffToPressedOff_Start{ 0.577115357F };

    // Marker: PointerOverOffToPressedOff_End.
    static constexpr float M_PointerOverOffToPressedOff_End{ 0.611730754F };

    // Marker: PressedOnToPressedOff_Start.
    static constexpr float M_PressedOnToPressedOff_Start{ 0.615576923F };

    // Marker: PressedOnToPressedOff_End.
    static constexpr float M_PressedOnToPressedOff_End{ 0.65019232F };

    // Marker: PressedOnToPointerOverOff_Start.
    static constexpr float M_PressedOnToPointerOverOff_Start{ 0.654038489F };

    // Marker: PressedOnToPointerOverOff_End.
    static constexpr float M_PressedOnToPointerOverOff_End{ 0.727115393F };

    // Marker: PressedOnToNormalOff_Start.
    static constexpr float M_PressedOnToNormalOff_Start{ 0.730961561F };

    // Marker: PressedOnToNormalOff_End.
    static constexpr float M_PressedOnToNormalOff_End{ 0.804038465F };

    // Marker: PressedOffToPressedOn_Start.
    static constexpr float M_PressedOffToPressedOn_Start{ 0.807884634F };

    // Marker: PressedOffToPressedOn_End.
    static constexpr float M_PressedOffToPressedOn_End{ 0.842499971F };

    // Marker: PressedOffToPointerOverOn_Start.
    static constexpr float M_PressedOffToPointerOverOn_Start{ 0.84634614F };

    // Marker: PressedOffToPointerOverOn_End.
    static constexpr float M_PressedOffToPointerOverOn_End{ 0.919423103F };

    // Marker: PressedOffToNormalOn_Start.
    static constexpr float M_PressedOffToNormalOn_Start{ 0.923269212F };

    // Marker: PressedOffToNormalOn_End.
    static constexpr float M_PressedOffToNormalOn_End{ 0.996346176F };

    // Theme property: Foreground.
    static inline const winrt::Windows::UI::Color c_themeForeground{ 0xFF, 0x00, 0x00, 0x00 };


    winrt::Windows::UI::Color Foreground();
    void Foreground(winrt::Windows::UI::Color value);

    winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual TryCreateAnimatedVisual(
        winrt::Windows::UI::Composition::Compositor const& compositor);

    winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual TryCreateAnimatedVisual(
        winrt::Windows::UI::Composition::Compositor const& compositor,
        winrt::Windows::Foundation::IInspectable& diagnostics);

    // Gets the number of frames in the animation.
    double FrameCount();

    // Gets the framerate of the animation.
    double Framerate();

    // Gets the duration of the animation.
    winrt::Windows::Foundation::TimeSpan Duration();

    // Converts a zero-based frame number to the corresponding progress value denoting the
    // start of the frame.
    double FrameToProgress(double frameNumber);

    // Returns a map from marker names to corresponding progress values.
    winrt::Windows::Foundation::Collections::IMapView<hstring, double> Markers();

    // Sets the color property with the given name, or does nothing if no such property
    // exists.
    void SetColorProperty(hstring const& propertyName, winrt::Windows::UI::Color value);

    // Sets the scalar property with the given name, or does nothing if no such property
    // exists.
    void SetScalarProperty(hstring const& propertyName, double value);
};
