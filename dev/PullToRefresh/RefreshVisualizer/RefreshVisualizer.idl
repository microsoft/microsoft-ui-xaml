namespace MU_XC_NAMESPACE
{

[MUX_PUBLIC]
[webhosthidden]
enum RefreshVisualizerOrientation
{
    Auto = 0,
    Normal = 1,
    Rotate90DegreesCounterclockwise = 2,
    Rotate270DegreesCounterclockwise = 3,
};

[MUX_PUBLIC]
[webhosthidden]
enum RefreshVisualizerState
{
    Idle = 0,
    Peeking = 1,
    Interacting = 2,
    Pending = 3,
    Refreshing = 4,
};

[MUX_PUBLIC]
[webhosthidden]
runtimeclass RefreshInteractionRatioChangedEventArgs
{
    Double InteractionRatio { get; };
}

[MUX_PUBLIC]
[webhosthidden]
runtimeclass RefreshRequestedEventArgs
{
    Windows.Foundation.Deferral GetDeferral();
}

[MUX_PUBLIC]
[webhosthidden]
runtimeclass RefreshStateChangedEventArgs
{
    RefreshVisualizerState OldState { get; };
    RefreshVisualizerState NewState { get; };
}

[MUX_PUBLIC]
[webhosthidden]
[MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
[MUX_PROPERTY_CHANGED_CALLBACK_METHODNAME("OnPropertyChanged")]
unsealed runtimeclass RefreshVisualizer : Windows.UI.Xaml.Controls.Control
{
    RefreshVisualizer();

    void RequestRefresh();
    [MUX_DEFAULT_VALUE("winrt::RefreshVisualizerOrientation::Auto")]
    RefreshVisualizerOrientation Orientation { get; set; };
    Windows.UI.Xaml.UIElement Content { get; set; };
    [MUX_DEFAULT_VALUE("winrt::RefreshVisualizerState::Idle")]
    RefreshVisualizerState State { get; };
    event Windows.Foundation.TypedEventHandler<RefreshVisualizer, RefreshRequestedEventArgs> RefreshRequested;
    event Windows.Foundation.TypedEventHandler<RefreshVisualizer, RefreshStateChangedEventArgs> RefreshStateChanged;

    [MUX_PROPERTY_TYPE("winrt::IInspectable")]
    static Windows.UI.Xaml.DependencyProperty InfoProviderProperty { get; };
    static Windows.UI.Xaml.DependencyProperty OrientationProperty { get; };
    static Windows.UI.Xaml.DependencyProperty ContentProperty { get; };
    static Windows.UI.Xaml.DependencyProperty StateProperty { get; };
}

}