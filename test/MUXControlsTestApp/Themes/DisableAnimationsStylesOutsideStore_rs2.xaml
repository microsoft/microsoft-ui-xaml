<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives"
    xmlns:contract4Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,4)"
    xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:contract8Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,8)"
    xmlns:contract13Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,13)"
    xmlns:contract14NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,14)">

    <!-- This is the same as the template in CommandBarFlyout_themeresources.xaml, except its animations have been removed.
         Any changes to the style in the above file should also be made here. -->
    <Style TargetType="primitives:CommandBarFlyoutCommandBar" BasedOn="{StaticResource DefaultCommandBarFlyoutCommandBarStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CommandBarFlyoutCommandBar">
                    <Grid x:Name="LayoutRoot"
                         contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                         contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}">
                        <Grid.Resources>
                            <Style TargetType="AppBarButton" BasedOn="{StaticResource CommandBarFlyoutAppBarButtonStyle}" />
                            <Style TargetType="AppBarToggleButton" BasedOn="{StaticResource CommandBarFlyoutAppBarToggleButtonStyle}" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="EllipsisIcon.Foreground" Value="{ThemeResource CommandBarEllipsisIconForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisplayModeStates">
                                <VisualState x:Name="CompactClosed" />
                                <VisualState x:Name="CompactOpenUp" />
                                <VisualState x:Name="CompactOpenDown" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Collapsed" />
                                <VisualState x:Name="ExpandedUp">
                                    <VisualState.Setters>
                                        <Setter Target="MoreButtonTransform.X" Value="0" />
                                        <Setter Target="ContentRootClipTransform.X" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                        <contract14NotPresent:Setter Target="OverflowContentRootTransform.Y" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpOverflowVerticalPosition}" />
                                        <Setter Target="OverflowContentRootClipTransform.X" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                        <Setter Target="OverflowContentRootClipTransform.Y" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpAnimationEndPosition}" />
                                        <Setter Target="PrimaryItemsRoot.VerticalAlignment" Value="Bottom" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ExpandedDown">
                                    <VisualState.Setters>
                                        <Setter Target="MoreButtonTransform.X" Value="0" />
                                        <Setter Target="ContentRootClipTransform.X" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                        <Setter Target="OverflowContentRootClipTransform.X" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                        <Setter Target="OverflowContentRootClipTransform.Y" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownAnimationEndPosition}" />
                                        <Setter Target="PrimaryItemsRoot.VerticalAlignment" Value="Top" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableCommandsStates">
                                <VisualState x:Name="BothCommands" />
                                <VisualState x:Name="PrimaryCommandsOnly">
                                    <VisualState.Setters>
                                        <Setter Target="OverflowContentRoot.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="SecondaryCommandsOnly">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryItemsRoot.Opacity" Value="0" />
                                        <Setter Target="PrimaryItemsRoot.IsHitTestVisible" Value="False" />
                                        <Setter Target="PrimaryItemsRoot.Height" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="Default" />
                                <VisualState x:Name="ExpandedUpWithPrimaryCommands">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryItemsControl.BorderThickness" Value="{ThemeResource CommandBarFlyoutBorderUpThemeThickness}" />
                                        <contract7Present:Setter Target="LayoutRoot.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                        <contract7NotPresent:Setter Target="LayoutRoot.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                        <contract7Present:Setter Target="PrimaryItemsRoot.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                        <contract7NotPresent:Setter Target="PrimaryItemsRoot.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                        <contract7Present:Setter Target="OuterOverflowContentRootV2.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                        <contract7NotPresent:Setter Target="OuterOverflowContentRootV2.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                        <contract7Present:Setter Target="SecondaryItemsControl.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ExpandedDownWithPrimaryCommands">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryItemsControl.BorderThickness" Value="{ThemeResource CommandBarFlyoutBorderDownThemeThickness}" />
                                        <contract7Present:Setter Target="LayoutRoot.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                        <contract7NotPresent:Setter Target="LayoutRoot.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                        <contract7Present:Setter Target="PrimaryItemsRoot.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                        <contract7NotPresent:Setter Target="PrimaryItemsRoot.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                        <contract7Present:Setter Target="OuterOverflowContentRootV2.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                        <contract7NotPresent:Setter Target="OuterOverflowContentRootV2.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                        <contract7Present:Setter Target="SecondaryItemsControl.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ExpandedUpWithoutPrimaryCommands">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryItemsControl.BorderThickness" Value="{ThemeResource CommandBarFlyoutBorderThemeThickness}" />
                                        <contract7Present:Setter Target="LayoutRoot.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <contract7NotPresent:Setter Target="LayoutRoot.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}}" />
                                        <contract7Present:Setter Target="PrimaryItemsRoot.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <contract7NotPresent:Setter Target="PrimaryItemsRoot.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}}" />
                                        <contract7Present:Setter Target="OuterOverflowContentRootV2.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <contract7NotPresent:Setter Target="OuterOverflowContentRootV2.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}}" />
                                        <contract7Present:Setter Target="SecondaryItemsControl.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ExpandedDownWithoutPrimaryCommands">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryItemsControl.BorderThickness" Value="{ThemeResource CommandBarFlyoutBorderThemeThickness}" />
                                        <contract7Present:Setter Target="LayoutRoot.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <contract7NotPresent:Setter Target="LayoutRoot.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}}" />
                                        <contract7Present:Setter Target="PrimaryItemsRoot.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <contract7NotPresent:Setter Target="PrimaryItemsRoot.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}}" />
                                        <contract7Present:Setter Target="OuterOverflowContentRootV2.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <contract7NotPresent:Setter Target="OuterOverflowContentRootV2.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}}" />
                                        <contract7Present:Setter Target="SecondaryItemsControl.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="OuterContentRoot"
                           VerticalAlignment="Top"
                           Margin="{TemplateBinding Padding}"
                           MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.CurrentWidth}"
                           Height="{TemplateBinding Height}"
                           contract4Present:XYFocusKeyboardNavigation="Enabled">
                            <Grid x:Name="ContentRoot"
                                    Background="{TemplateBinding Background}">
                                <Grid.Clip>
                                    <RectangleGeometry x:Name="ContentRootClip" Rect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ContentClipRect}">
                                        <RectangleGeometry.Transform>
                                            <!-- If you have a value set by a binding and then animate that value,
                                                 the animation will clear the binding.  Because of that, we need to have
                                                 two translate transforms - one that we bind to a property,
                                                 and another that we can animate. -->
                                            <TransformGroup>
                                                <TranslateTransform X="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionDelta}" />
                                                <TranslateTransform x:Name="ContentRootClipTransform" />
                                            </TransformGroup>
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Grid.Clip>
                                <Grid x:Name="PrimaryItemsRoot"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                                    contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" MinWidth="3"/>
                                    </Grid.ColumnDefinitions>
                                    <ItemsControl x:Name="PrimaryItemsControl"
                                        Height="40"
                                        Margin="3,3,0,3"
                                        Grid.Column="0"
                                        IsTabStop="False"
                                        HorizontalAlignment="Left">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                    <Button x:Name="MoreButton"
                                        Foreground="{TemplateBinding Foreground}"
                                        Style="{StaticResource CommandBarFlyoutEllipsisButtonStyle}"
                                        Grid.Column="1"
                                        contract4Present:Control.IsTemplateKeyTipTarget="True"
                                        IsAccessKeyScope="True"
                                        IsTabStop="False"
                                        contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.EffectiveOverflowButtonVisibility}">
                                        <Button.RenderTransform>
                                            <TranslateTransform x:Name="MoreButtonTransform" />
                                        </Button.RenderTransform>
                                        <FontIcon x:Name="EllipsisIcon"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            FontSize="16"
                                            Glyph="&#xE712;" />
                                    </Button>
                                </Grid>
                                <Popup x:Name="OverflowPopup" contract8Present:ShouldConstrainToRootBounds="False">
                                    <!-- The name OuterOverflowContentRoot is treated specially by the system and causes a shadow placed on this
                                         an element with this name to fade in. We don't want this for this style, so we need a different template part name -->
                                    <Grid
                                        x:Name="OuterOverflowContentRootV2"
                                        Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandedWidth}">
                                        <Grid.RenderTransform>
                                            <TranslateTransform
                                                x:Name="OverflowContentRootTransform"
                                                contract14NotPresent:Y="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownOverflowVerticalPosition}" />
                                        </Grid.RenderTransform>
                                        <Grid x:Name="OverflowContentRoot" HorizontalAlignment="Stretch" Background="{TemplateBinding Background}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Grid.Clip>
                                                <RectangleGeometry x:Name="OverflowContentRootClip" Rect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.OverflowContentClipRect}">
                                                    <RectangleGeometry.Transform>
                                                        <!-- If you have a value set by a binding and then animate that value,
                                                             the animation will clear the binding.  Because of that, we need to have
                                                             two translate transforms - one that we bind to a property,
                                                             and another that we can animate. -->
                                                        <TransformGroup>
                                                            <TranslateTransform X="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionDelta}" />
                                                            <TranslateTransform x:Name="OverflowContentRootClipTransform" />
                                                        </TransformGroup>
                                                    </RectangleGeometry.Transform>
                                                </RectangleGeometry>
                                            </Grid.Clip>
                                            <CommandBarOverflowPresenter
                                                Grid.Row="1"
                                                x:Name="SecondaryItemsControl"
                                                Style="{TemplateBinding CommandBarOverflowPresenterStyle}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{ThemeResource CommandBarFlyoutBorderThemeThickness}"
                                                IsTabStop="False">
                                                <CommandBarOverflowPresenter.ItemContainerStyle>
                                                    <Style TargetType="Control">
                                                        <Setter Property="Background" Value="{ThemeResource CommandBarFlyoutAppBarButtonBackground}" />
                                                        <Setter Property="Foreground" Value="{ThemeResource CommandBarFlyoutAppBarButtonForeground}" />
                                                        <Setter Property="BorderBrush" Value="{ThemeResource CommandBarFlyoutAppBarButtonBorderBrush}" />
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                        <Setter Property="VerticalAlignment" Value="Stretch" />
                                                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                                        <Setter Property="FontWeight" Value="Normal" />
                                                        <Setter Property="Width" Value="NaN" />
                                                        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                                                        <Setter Property="AllowFocusOnInteraction" Value="False" />
                                                    </Style>
                                                </CommandBarOverflowPresenter.ItemContainerStyle>
                                            </CommandBarOverflowPresenter>
                                        </Grid>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
