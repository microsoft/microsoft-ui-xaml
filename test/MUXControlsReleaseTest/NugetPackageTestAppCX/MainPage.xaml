<!--  Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information.  -->
<Page
    x:Class="NugetPackageTestAppCX.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:NugetPackageTestAppCX"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:utils="using:MUXControlsTestApp"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    Loaded="PageLoaded"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal"
            x:Name="AutomationHelpersPanel"
            Height="0"
            VerticalAlignment="Top"
            HorizontalAlignment="Stretch">

            <!--  Automation Helpers  -->
            <!--
                These are not visible, but are used via UIA. They are fundamental to the operation of our test automation, so they should not be collapsed since
                that prevents them from showing up in the UIA tree.
            -->
            <Button x:Name="CloseAppInvokerButton" AutomationProperties.AutomationId="__CloseAppInvoker" Click="CloseAppInvokerButton_Click" />
            <Button x:Name="WaitForIdleInvokerButton" AutomationProperties.AutomationId="__WaitForIdleInvoker" Click="WaitForIdleInvokerButton_Click" />
            <CheckBox x:Name="IdleStateEnteredCheckBox" AutomationProperties.AutomationId="__IdleStateEnteredCheckBox" />
            <TextBox x:Name="ErrorReportingTextBox" AutomationProperties.AutomationId="__ErrorReportingTextBox" />
            <TextBox x:Name="LogReportingTextBox" AutomationProperties.AutomationId="__LogReportingTextBox" />
            <CheckBox x:Name="ViewScalingCheckBox" AutomationProperties.AutomationId="__ViewScalingCheckBox" />
            <Button x:Name="WaitForDebuggerInvokerButton" AutomationProperties.AutomationId="__WaitForDebuggerInvoker" />
            <CheckBox x:Name="DebuggerAttachedCheckBox" AutomationProperties.AutomationId="__DebuggerAttachedCheckBox" />
            <TextBox x:Name="UnhandledExceptionReportingTextBox" AutomationProperties.AutomationId="__UnhandledExceptionReportingTextBox" />
            <CheckBox x:Name="TestContentLoadedCheckBox" AutomationProperties.AutomationId="__TestContentLoadedCheckBox" Content="TestContentLoadedCheckbox" IsChecked="False" />

        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TextBlock x:Name="TestTextBlock" AutomationProperties.Name="TestTextBlock" Text="Loaded"/>
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <CheckBox x:Name="TestCheckBox" AutomationProperties.Name="TestCheckBox" Content="CheckBox" />
                <Button x:Name="GetCheckBoxRectangleCornerRadiusValue" Content="GetCheckBoxRectangleCornerRadiusValue" AutomationProperties.Name="GetCheckBoxRectangleCornerRadiusValue"  Click="GetCheckBoxRectangleCornerRadiusValue_Click"/>
                <TextBlock x:Name="CheckBoxRectangleCornerRadiusValueTextBlock" AutomationProperties.Name="CheckBoxRectangleCornerRadiusValueTextBlock"/>
            </StackPanel>
            <controls:TreeView Grid.Row="2">
                <controls:TreeView.RootNodes>
                    <controls:TreeViewNode Content="TreeViewNode1"/>
                </controls:TreeView.RootNodes>
            </controls:TreeView>
            <Button Grid.Row="3" Click="OnAddItemsButtonClick" Content="Add Items" AutomationProperties.Name="AddItemsButton"  />
            <ScrollViewer Grid.Row="4">
                <controls:ItemsRepeater x:Name="Repeater" />
            </ScrollViewer>
        </Grid>
    </Grid>
</Page>
