<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<local:TestPage
    x:Class="MUXControlsTestApp.AcrylicRenderingPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MUXControlsTestApp"
    xmlns:xamlMedia="using:Microsoft.UI.Xaml.Media"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="12">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Vertical">
            <TextBlock Text="Test results" Style="{ThemeResource StandardGroupHeader}"/>
            <TextBox x:Name="TestResult" AutomationProperties.AutomationId="TestResult" AutomationProperties.Name="TestResult" IsReadOnly="True"/>
            <TextBlock Text="Actions" Style="{ThemeResource StandardGroupHeader}"/>
            <Button x:Name="RunTestButton" AutomationProperties.AutomationId="RunTestButton"
                    Content="Test Acrylic Rendering" Click="RunTestButton_Clicked" Margin="0,0,0,4"/>
            <Button x:Name="SetLuminosityButton" AutomationProperties.AutomationId="SetLuminosityButton"
                    Content="Set Luminosity to 1.0" Click="SetLuminosityButton_Clicked" Margin="0,0,0,4"/>
            <Button x:Name="UnsetLuminosityButton" AutomationProperties.AutomationId="UnsetLuminosityButton"
                    Content="Restore Luminosity to Auto mode" Click="UnsetLuminosityButton_Clicked"/>
            <CheckBox x:Name="cbComplexBackground" AutomationProperties.AutomationId="cbComplexBackground"
                      Content="Use complex background" Checked="cbComplexBackground_Toggled" Unchecked="cbComplexBackground_Toggled"/>
            <CheckBox x:Name="cbToggleFallbackColor" AutomationProperties.AutomationId="cbToggleFallbackColor"
                      Content="Use Blue Fallback (else Green)" Checked="cbToggleFallbackColor_Toggled" Unchecked="cbToggleFallbackColor_Toggled"/>
        </StackPanel>

        <StackPanel Orientation="Vertical" Grid.Column="1" Margin="16,0,0,0">
            <TextBlock Text="Acrylic test area" Style="{ThemeResource StandardGroupHeader}"/>
            <Grid x:Name="ContainerGrid">
                <StackPanel x:Name="blueRedBGSP" Orientation="Horizontal">
                    <Rectangle x:Name="Rectangle1" Height="200" Width="200" Fill="Red"/>
                    <Rectangle x:Name="Rectangle2" Height="200" Width="200" Fill="Blue"/>
                </StackPanel>
                <!-- Note: complexBGGrid intentionally has transparent regions to validate acrylic with transparency in the backdrop. -->
                <Grid x:Name="complexBGGrid" Height="200" Width="400" Visibility="Collapsed">
                    <Rectangle Fill="Red" Width="100" Height="100" />
                    <TextBlock Text="Text under the acrylic" />
                </Grid>
                <Rectangle x:Name="AcrylicRectangle" Height="200" Width="400" HorizontalAlignment="Left">
                    <Rectangle.Fill>
                        <xamlMedia:AcrylicBrush x:Name="myAcrylicBrush" FallbackColor="Green" TintOpacity="0.6" TintColor="Gray"/>
                    </Rectangle.Fill>
                </Rectangle>
            </Grid>
            <TextBlock x:Name="ShowRtb1_Text"/>
            <Image x:Name="ShowRtb1" Stretch="None" Width="400" Height="200" HorizontalAlignment="Left"/>
            <TextBlock x:Name="ShowRtb2_Text"/>
            <Image x:Name="ShowRtb2" Stretch="None" Width="400" Height="200" HorizontalAlignment="Left"/>
        </StackPanel>
    </Grid>
</local:TestPage>
