namespace MU_XC_NAMESPACE
{

[MUX_PUBLIC]
[webhosthidden]
enum NavigationViewDisplayMode
{
    Minimal = 0,
    Compact = 1,
    Expanded = 2,
};

[MUX_PUBLIC]
[webhosthidden]
enum NavigationViewBackButtonVisible
{
    Collapsed = 0,
    Visible = 1,
    Auto = 2,
};

[MUX_PUBLIC]
[webhosthidden]
enum NavigationViewPaneDisplayMode
{
    Auto = 0,
    Left = 1,
    Top = 2,
    LeftCompact = 3,
    LeftMinimal = 4
};

[MUX_PUBLIC]
[webhosthidden]
enum NavigationViewSelectionFollowsFocus
{
    Disabled = 0,
    Enabled = 1
};

[MUX_PUBLIC]
[webhosthidden]
enum NavigationViewShoulderNavigationEnabled
{
    WhenSelectionFollowsFocus = 0,
    Always = 1,
    Never = 2
};

[MUX_PUBLIC]
[webhosthidden]
enum NavigationViewOverflowLabelMode
{
    MoreLabel = 0,
    NoLabel = 1
};

[MUX_PUBLIC]
[webhosthidden]
runtimeclass NavigationViewDisplayModeChangedEventArgs
{
    NavigationViewDisplayMode DisplayMode { get; };
}

[MUX_PUBLIC]
[webhosthidden]
runtimeclass NavigationViewSelectionChangedEventArgs
{
    Object SelectedItem { get; };
    Boolean IsSettingsSelected { get; };

    [MUX_PUBLIC]
    {
        NavigationViewItemBase SelectedItemContainer { get; };
        Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo RecommendedNavigationTransitionInfo { get; };
    }
}

[MUX_PUBLIC]
[webhosthidden]
runtimeclass NavigationViewItemInvokedEventArgs
{
    NavigationViewItemInvokedEventArgs();

    Object InvokedItem { get; };
    Boolean IsSettingsInvoked { get; };

    [MUX_PUBLIC]
    {
        NavigationViewItemBase InvokedItemContainer { get; };
        Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo RecommendedNavigationTransitionInfo { get; };
    }
}

[MUX_PUBLIC]
[webhosthidden]
runtimeclass NavigationViewPaneClosingEventArgs
{
    Boolean Cancel { get; set; };
}

[MUX_PUBLIC]
[webhosthidden]
[default_interface]
runtimeclass NavigationViewBackRequestedEventArgs
{
}

[MUX_PUBLIC]
[webhosthidden]
runtimeclass NavigationViewItemExpandingEventArgs
{
    NavigationViewItemBase ExpandingItemContainer { get; };
    Object ExpandingItem{ get; };
}

[MUX_PUBLIC]
[webhosthidden]
runtimeclass NavigationViewItemCollapsedEventArgs
{
    NavigationViewItemBase CollapsedItemContainer { get; };
    Object CollapsedItem{ get; };
}

[MUX_PUBLIC]
[webhosthidden]
unsealed runtimeclass NavigationViewTemplateSettings : Microsoft.UI.Xaml.DependencyObject
{
    NavigationViewTemplateSettings();

    [MUX_DEFAULT_VALUE("0.0")]
    Double TopPadding { get; };
    [MUX_DEFAULT_VALUE("winrt::Visibility::Collapsed")]
    Microsoft.UI.Xaml.Visibility OverflowButtonVisibility { get; };
    [MUX_DEFAULT_VALUE("winrt::Visibility::Visible")]
    Microsoft.UI.Xaml.Visibility PaneToggleButtonVisibility { get; };
    [MUX_DEFAULT_VALUE("winrt::Visibility::Collapsed")]
    Microsoft.UI.Xaml.Visibility BackButtonVisibility { get; };
    [MUX_DEFAULT_VALUE("winrt::Visibility::Collapsed")]
    Microsoft.UI.Xaml.Visibility TopPaneVisibility { get; };
    [MUX_DEFAULT_VALUE("winrt::Visibility::Visible")]
    Microsoft.UI.Xaml.Visibility LeftPaneVisibility { get; };
    Boolean SingleSelectionFollowsFocus { get; };
    Double PaneToggleButtonWidth{ get; };
    Double SmallerPaneToggleButtonWidth{ get; };    

    static Microsoft.UI.Xaml.DependencyProperty TopPaddingProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty OverflowButtonVisibilityProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty PaneToggleButtonVisibilityProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty BackButtonVisibilityProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty TopPaneVisibilityProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty LeftPaneVisibilityProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty SingleSelectionFollowsFocusProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty PaneToggleButtonWidthProperty{ get; };
    static Microsoft.UI.Xaml.DependencyProperty SmallerPaneToggleButtonWidthProperty{ get; };

    [MUX_PUBLIC_V4]
    {
        [MUX_DEFAULT_VALUE("320.0")]
        Double OpenPaneLength{ get; };

        static Microsoft.UI.Xaml.DependencyProperty OpenPaneLengthProperty{ get; };
    }
}

[MUX_PUBLIC]
[webhosthidden]
[MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
[MUX_PROPERTY_CHANGED_CALLBACK_METHODNAME("OnPropertyChanged")]
unsealed runtimeclass NavigationView : Microsoft.UI.Xaml.Controls.ContentControl
{
    NavigationView();

    [MUX_DEFAULT_VALUE("true")]
    Boolean IsPaneOpen { get; set; };
    [MUX_DEFAULT_VALUE("641.0")]
    [MUX_PROPERTY_VALIDATION_CALLBACK("CoerceToGreaterThanZero")]
    Double CompactModeThresholdWidth { get; set; };
    [MUX_DEFAULT_VALUE("1008.0")]
    [MUX_PROPERTY_VALIDATION_CALLBACK("CoerceToGreaterThanZero")]
    Double ExpandedModeThresholdWidth { get; set; };
    Windows.Foundation.Collections.IVector<Object> FooterMenuItems{ get; };
    Object FooterMenuItemsSource{ get; set; };
    Microsoft.UI.Xaml.UIElement PaneFooter { get; set; };
    Object Header { get; set; };
    Microsoft.UI.Xaml.DataTemplate HeaderTemplate { get; set; };
    [MUX_DEFAULT_VALUE("winrt::NavigationViewDisplayMode::Minimal")]
    NavigationViewDisplayMode DisplayMode { get; };
    [MUX_DEFAULT_VALUE("true")]
    Boolean IsSettingsVisible { get; set; };
    [MUX_DEFAULT_VALUE("true")]
    Boolean IsPaneToggleButtonVisible { get; set; };
    [MUX_DEFAULT_VALUE("true")]
    Boolean AlwaysShowHeader { get; set; };
    [MUX_DEFAULT_VALUE("48.0")]
    [MUX_PROPERTY_VALIDATION_CALLBACK("CoerceToGreaterThanZero")]
    Double CompactPaneLength { get; set; };
    [MUX_DEFAULT_VALUE("320.0")]
    [MUX_PROPERTY_VALIDATION_CALLBACK("CoerceToGreaterThanZero")]
    Double OpenPaneLength { get; set; };
    Microsoft.UI.Xaml.Style PaneToggleButtonStyle { get; set; };
    Object SelectedItem { get; set; };
    Windows.Foundation.Collections.IVector<Object> MenuItems { get; };
    Object MenuItemsSource { get; set; };
    Object SettingsItem { get; };
    Microsoft.UI.Xaml.Controls.AutoSuggestBox AutoSuggestBox { get; set; };
    Microsoft.UI.Xaml.DataTemplate MenuItemTemplate { get; set; };
    Microsoft.UI.Xaml.Controls.DataTemplateSelector MenuItemTemplateSelector { get; set; };
    Microsoft.UI.Xaml.Style MenuItemContainerStyle { get; set; };
    Microsoft.UI.Xaml.Controls.StyleSelector MenuItemContainerStyleSelector { get; set; };
    Object MenuItemFromContainer(Microsoft.UI.Xaml.DependencyObject container);
    Microsoft.UI.Xaml.DependencyObject ContainerFromMenuItem(Object item);
    event Windows.Foundation.TypedEventHandler<NavigationView, NavigationViewSelectionChangedEventArgs> SelectionChanged;
    event Windows.Foundation.TypedEventHandler<NavigationView, NavigationViewItemInvokedEventArgs> ItemInvoked;
    event Windows.Foundation.TypedEventHandler<NavigationView, NavigationViewDisplayModeChangedEventArgs> DisplayModeChanged;

    static Microsoft.UI.Xaml.DependencyProperty IsPaneOpenProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty CompactModeThresholdWidthProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty ExpandedModeThresholdWidthProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty FooterMenuItemsProperty{ get; };
    static Microsoft.UI.Xaml.DependencyProperty FooterMenuItemsSourceProperty{ get; };
    static Microsoft.UI.Xaml.DependencyProperty PaneFooterProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty HeaderProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty HeaderTemplateProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty DisplayModeProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty IsSettingsVisibleProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty IsPaneToggleButtonVisibleProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty AlwaysShowHeaderProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty CompactPaneLengthProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty OpenPaneLengthProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty PaneToggleButtonStyleProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty MenuItemsProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty MenuItemsSourceProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty SelectedItemProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty SettingsItemProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty AutoSuggestBoxProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty MenuItemTemplateProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty MenuItemTemplateSelectorProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty MenuItemContainerStyleProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty MenuItemContainerStyleSelectorProperty { get; };

    [MUX_PUBLIC]
            {
    [MUX_DEFAULT_VALUE("winrt::NavigationViewBackButtonVisible::Auto")]
    NavigationViewBackButtonVisible IsBackButtonVisible { get; set; };
    Boolean IsBackEnabled { get; set; };
    String PaneTitle { get; set; };
    event Windows.Foundation.TypedEventHandler<NavigationView, NavigationViewBackRequestedEventArgs> BackRequested;
    event Windows.Foundation.TypedEventHandler<NavigationView, Object> PaneClosed;
    event Windows.Foundation.TypedEventHandler<NavigationView, NavigationViewPaneClosingEventArgs> PaneClosing;
    event Windows.Foundation.TypedEventHandler<NavigationView, Object> PaneOpened;
    event Windows.Foundation.TypedEventHandler<NavigationView, Object> PaneOpening;

    static Microsoft.UI.Xaml.DependencyProperty IsBackButtonVisibleProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty IsBackEnabledProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty PaneTitleProperty { get; };
    }

    [MUX_PUBLIC]
    {
        [MUX_DEFAULT_VALUE("winrt::NavigationViewPaneDisplayMode::Auto")]
        NavigationViewPaneDisplayMode PaneDisplayMode { get; set; };
        [MUX_PROPERTY_CHANGED_CALLBACK(FALSE)]
        Microsoft.UI.Xaml.UIElement PaneHeader { get; set; };
        [MUX_PROPERTY_CHANGED_CALLBACK(FALSE)]
        Microsoft.UI.Xaml.UIElement PaneCustomContent { get; set; };
        [MUX_PROPERTY_CHANGED_CALLBACK(FALSE)]
        Microsoft.UI.Xaml.UIElement ContentOverlay { get; set; };
        [MUX_DEFAULT_VALUE("true")]
        Boolean IsPaneVisible { get; set; };
        [MUX_DEFAULT_VALUE("winrt::NavigationViewSelectionFollowsFocus::Disabled")]
        NavigationViewSelectionFollowsFocus SelectionFollowsFocus { get; set; };
        [MUX_PROPERTY_CHANGED_CALLBACK(FALSE)]
        NavigationViewTemplateSettings TemplateSettings { get; };
        [MUX_DEFAULT_VALUE("winrt::NavigationViewShoulderNavigationEnabled::Never")]
        NavigationViewShoulderNavigationEnabled ShoulderNavigationEnabled { get; set; };
        [MUX_DEFAULT_VALUE("winrt::NavigationViewOverflowLabelMode::MoreLabel")]
        NavigationViewOverflowLabelMode OverflowLabelMode { get; set; };

        static Microsoft.UI.Xaml.DependencyProperty PaneDisplayModeProperty { get; };
        static Microsoft.UI.Xaml.DependencyProperty PaneHeaderProperty { get; };
        static Microsoft.UI.Xaml.DependencyProperty PaneCustomContentProperty { get; };
        static Microsoft.UI.Xaml.DependencyProperty ContentOverlayProperty { get; };
        static Microsoft.UI.Xaml.DependencyProperty IsPaneVisibleProperty { get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectionFollowsFocusProperty { get; };
        static Microsoft.UI.Xaml.DependencyProperty TemplateSettingsProperty { get; };
        static Microsoft.UI.Xaml.DependencyProperty ShoulderNavigationEnabledProperty { get; };
        static Microsoft.UI.Xaml.DependencyProperty OverflowLabelModeProperty { get; };
    }

    [MUX_DEFAULT_VALUE("true")]
    Boolean IsTitleBarAutoPaddingEnabled { get; set; };

    static Microsoft.UI.Xaml.DependencyProperty IsTitleBarAutoPaddingEnabledProperty { get; };
    
    [MUX_PUBLIC]
    {
        event Windows.Foundation.TypedEventHandler<NavigationView, NavigationViewItemExpandingEventArgs> Expanding;
        event Windows.Foundation.TypedEventHandler<NavigationView, NavigationViewItemCollapsedEventArgs> Collapsed;

        void Expand(NavigationViewItem item);
        void Collapse(NavigationViewItem item);
    }
}

[MUX_PUBLIC]
[webhosthidden]
[MUX_PROPERTY_CHANGED_CALLBACK_METHODNAME("OnPropertyChanged")]
[default_interface]
unsealed runtimeclass NavigationViewItemBase : Microsoft.UI.Xaml.Controls.ContentControl
{
    [MUX_PUBLIC]
    {
        [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
        Boolean IsSelected{ get; set; };

        static Microsoft.UI.Xaml.DependencyProperty IsSelectedProperty { get; };
    }
}

[MUX_PUBLIC]
[webhosthidden]
unsealed runtimeclass NavigationViewItem : NavigationViewItemBase
{
    NavigationViewItem();

    [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
    Microsoft.UI.Xaml.Controls.IconElement Icon { get; set; };
    [MUX_DEFAULT_VALUE("48.0")]
    Double CompactPaneLength { get; };

    static Microsoft.UI.Xaml.DependencyProperty IconProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty CompactPaneLengthProperty { get; };

    [MUX_PUBLIC]
    {
        [MUX_DEFAULT_VALUE("true")]
        Boolean SelectsOnInvoked { get; set; };

        static Microsoft.UI.Xaml.DependencyProperty SelectsOnInvokedProperty { get; };
    }

    [MUX_PUBLIC]
    {
        [MUX_DEFAULT_VALUE("false")]
        [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
        Boolean IsExpanded{ get; set; };
        [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
        [MUX_DEFAULT_VALUE("false")]
        Boolean HasUnrealizedChildren{ get; set; };
        [MUX_DEFAULT_VALUE("false")]
        Boolean IsChildSelected{ get; set; };

        [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
        Windows.Foundation.Collections.IVector<Object> MenuItems{ get; };
        [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
        Object MenuItemsSource{ get; set; };

        static Microsoft.UI.Xaml.DependencyProperty IsExpandedProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HasUnrealizedChildrenProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsChildSelectedProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MenuItemsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MenuItemsSourceProperty{ get; };
    }

    [MUX_PUBLIC_V3]
    {
        [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
        InfoBadge InfoBadge{ get; set; };

        static Microsoft.UI.Xaml.DependencyProperty InfoBadgeProperty{ get; };
    }
}

[MUX_PUBLIC]
[webhosthidden]
unsealed runtimeclass NavigationViewItemSeparator : NavigationViewItemBase
{
    NavigationViewItemSeparator();
}

[MUX_PUBLIC]
[webhosthidden]
unsealed runtimeclass NavigationViewItemHeader : NavigationViewItemBase
{
    NavigationViewItemHeader();
}

}
