// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "PersonPictureTemplateSettings.h"

GlobalDependencyProperty PersonPictureTemplateSettingsProperties::s_ActualImageBrushProperty{ nullptr };
GlobalDependencyProperty PersonPictureTemplateSettingsProperties::s_ActualInitialsProperty{ nullptr };

PersonPictureTemplateSettingsProperties::PersonPictureTemplateSettingsProperties()
{
    EnsureProperties();
}

void PersonPictureTemplateSettingsProperties::EnsureProperties()
{
    if (!s_ActualImageBrushProperty)
    {
        s_ActualImageBrushProperty =
            InitializeDependencyProperty(
                L"ActualImageBrush",
                winrt::name_of<winrt::ImageBrush>(),
                winrt::name_of<winrt::PersonPictureTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<winrt::ImageBrush>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_ActualInitialsProperty)
    {
        s_ActualInitialsProperty =
            InitializeDependencyProperty(
                L"ActualInitials",
                winrt::name_of<winrt::hstring>(),
                winrt::name_of<winrt::PersonPictureTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<winrt::hstring>::BoxedDefaultValue(),
                nullptr);
    }
}

void PersonPictureTemplateSettingsProperties::ClearProperties()
{
    s_ActualImageBrushProperty = nullptr;
    s_ActualInitialsProperty = nullptr;
}

void PersonPictureTemplateSettingsProperties::ActualImageBrush(winrt::ImageBrush const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<PersonPictureTemplateSettings*>(this)->SetValue(s_ActualImageBrushProperty, ValueHelper<winrt::ImageBrush>::BoxValueIfNecessary(value));
    }
}

winrt::ImageBrush PersonPictureTemplateSettingsProperties::ActualImageBrush()
{
    return ValueHelper<winrt::ImageBrush>::CastOrUnbox(static_cast<PersonPictureTemplateSettings*>(this)->GetValue(s_ActualImageBrushProperty));
}

void PersonPictureTemplateSettingsProperties::ActualInitials(winrt::hstring const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<PersonPictureTemplateSettings*>(this)->SetValue(s_ActualInitialsProperty, ValueHelper<winrt::hstring>::BoxValueIfNecessary(value));
    }
}

winrt::hstring PersonPictureTemplateSettingsProperties::ActualInitials()
{
    return ValueHelper<winrt::hstring>::CastOrUnbox(static_cast<PersonPictureTemplateSettings*>(this)->GetValue(s_ActualInitialsProperty));
}
