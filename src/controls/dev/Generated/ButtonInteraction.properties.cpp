// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "ButtonInteraction.h"

namespace winrt::Microsoft::UI::Private::Controls
{
    CppWinRTActivatableClassWithBasicFactory(ButtonInteraction)
}

#include "ButtonInteraction.g.cpp"


ButtonInteractionProperties::ButtonInteractionProperties()
    : m_invokedEventSource{static_cast<ButtonInteraction*>(this)}
    , m_propertyChangedEventSource{static_cast<ButtonInteraction*>(this)}
{
}

void ButtonInteractionProperties::EnsureProperties()
{
}

void ButtonInteractionProperties::ClearProperties()
{
}

winrt::event_token ButtonInteractionProperties::Invoked(winrt::TypedEventHandler<winrt::ButtonInteraction, winrt::ButtonInteractionInvokedEventArgs> const& value)
{
    return m_invokedEventSource.add(value);
}

void ButtonInteractionProperties::Invoked(winrt::event_token const& token)
{
    m_invokedEventSource.remove(token);
}

winrt::event_token ButtonInteractionProperties::PropertyChanged(winrt::PropertyChangedEventHandler const& value)
{
    return m_propertyChangedEventSource.add(value);
}

void ButtonInteractionProperties::PropertyChanged(winrt::event_token const& token)
{
    m_propertyChangedEventSource.remove(token);
}
