// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "XamlControlsResources.h"

namespace winrt::Microsoft::UI::Xaml::Controls
{
    CppWinRTActivatableClassWithDPFactory(XamlControlsResources)
}

#include "XamlControlsResources.g.cpp"

GlobalDependencyProperty XamlControlsResourcesProperties::s_UseCompactResourcesProperty{ nullptr };

XamlControlsResourcesProperties::XamlControlsResourcesProperties()
{
    EnsureProperties();
}

void XamlControlsResourcesProperties::EnsureProperties()
{
    if (!s_UseCompactResourcesProperty)
    {
        s_UseCompactResourcesProperty =
            InitializeDependencyProperty(
                L"UseCompactResources",
                winrt::name_of<bool>(),
                winrt::name_of<winrt::XamlControlsResources>(),
                false /* isAttached */,
                ValueHelper<bool>::BoxValueIfNecessary(false),
                winrt::PropertyChangedCallback(&OnUseCompactResourcesPropertyChanged));
    }
}

void XamlControlsResourcesProperties::ClearProperties()
{
    s_UseCompactResourcesProperty = nullptr;
}

void XamlControlsResourcesProperties::OnUseCompactResourcesPropertyChanged(
    winrt::DependencyObject const& sender,
    winrt::DependencyPropertyChangedEventArgs const& args)
{
    auto owner = sender.as<winrt::XamlControlsResources>();
    winrt::get_self<XamlControlsResources>(owner)->OnPropertyChanged(args);
}

void XamlControlsResourcesProperties::UseCompactResources(bool value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<XamlControlsResources*>(this)->SetValue(s_UseCompactResourcesProperty, ValueHelper<bool>::BoxValueIfNecessary(value));
    }
}

bool XamlControlsResourcesProperties::UseCompactResources()
{
    return ValueHelper<bool>::CastOrUnbox(static_cast<XamlControlsResources*>(this)->GetValue(s_UseCompactResourcesProperty));
}
