// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#pragma once

class NumberBoxProperties
{
public:
    NumberBoxProperties();

    void AcceptsExpression(bool value);
    bool AcceptsExpression();

    void Description(winrt::IInspectable const& value);
    winrt::IInspectable Description();

    void Header(winrt::IInspectable const& value);
    winrt::IInspectable Header();

    void HeaderTemplate(winrt::DataTemplate const& value);
    winrt::DataTemplate HeaderTemplate();

    void InputScope(winrt::InputScope const& value);
    winrt::InputScope InputScope();

    void IsWrapEnabled(bool value);
    bool IsWrapEnabled();

    void LargeChange(double value);
    double LargeChange();

    void Maximum(double value);
    double Maximum();

    void Minimum(double value);
    double Minimum();

    void NumberFormatter(winrt::INumberFormatter2 const& value);
    winrt::INumberFormatter2 NumberFormatter();

    void PlaceholderText(winrt::hstring const& value);
    winrt::hstring PlaceholderText();

    void PreventKeyboardDisplayOnProgrammaticFocus(bool value);
    bool PreventKeyboardDisplayOnProgrammaticFocus();

    void SelectionFlyout(winrt::FlyoutBase const& value);
    winrt::FlyoutBase SelectionFlyout();

    void SelectionHighlightColor(winrt::SolidColorBrush const& value);
    winrt::SolidColorBrush SelectionHighlightColor();

    void SmallChange(double value);
    double SmallChange();

    void SpinButtonPlacementMode(winrt::NumberBoxSpinButtonPlacementMode const& value);
    winrt::NumberBoxSpinButtonPlacementMode SpinButtonPlacementMode();

    void Text(winrt::hstring const& value);
    winrt::hstring Text();

    void TextAlignment(winrt::TextAlignment const& value);
    winrt::TextAlignment TextAlignment();

    void TextReadingOrder(winrt::TextReadingOrder const& value);
    winrt::TextReadingOrder TextReadingOrder();

    void ValidationMode(winrt::NumberBoxValidationMode const& value);
    winrt::NumberBoxValidationMode ValidationMode();

    void Value(double value);
    double Value();

    static winrt::DependencyProperty AcceptsExpressionProperty() { return s_AcceptsExpressionProperty; }
    static winrt::DependencyProperty DescriptionProperty() { return s_DescriptionProperty; }
    static winrt::DependencyProperty HeaderProperty() { return s_HeaderProperty; }
    static winrt::DependencyProperty HeaderTemplateProperty() { return s_HeaderTemplateProperty; }
    static winrt::DependencyProperty InputScopeProperty() { return s_InputScopeProperty; }
    static winrt::DependencyProperty IsWrapEnabledProperty() { return s_IsWrapEnabledProperty; }
    static winrt::DependencyProperty LargeChangeProperty() { return s_LargeChangeProperty; }
    static winrt::DependencyProperty MaximumProperty() { return s_MaximumProperty; }
    static winrt::DependencyProperty MinimumProperty() { return s_MinimumProperty; }
    static winrt::DependencyProperty NumberFormatterProperty() { return s_NumberFormatterProperty; }
    static winrt::DependencyProperty PlaceholderTextProperty() { return s_PlaceholderTextProperty; }
    static winrt::DependencyProperty PreventKeyboardDisplayOnProgrammaticFocusProperty() { return s_PreventKeyboardDisplayOnProgrammaticFocusProperty; }
    static winrt::DependencyProperty SelectionFlyoutProperty() { return s_SelectionFlyoutProperty; }
    static winrt::DependencyProperty SelectionHighlightColorProperty() { return s_SelectionHighlightColorProperty; }
    static winrt::DependencyProperty SmallChangeProperty() { return s_SmallChangeProperty; }
    static winrt::DependencyProperty SpinButtonPlacementModeProperty() { return s_SpinButtonPlacementModeProperty; }
    static winrt::DependencyProperty TextProperty() { return s_TextProperty; }
    static winrt::DependencyProperty TextAlignmentProperty() { return s_TextAlignmentProperty; }
    static winrt::DependencyProperty TextReadingOrderProperty() { return s_TextReadingOrderProperty; }
    static winrt::DependencyProperty ValidationModeProperty() { return s_ValidationModeProperty; }
    static winrt::DependencyProperty ValueProperty() { return s_ValueProperty; }

    static GlobalDependencyProperty s_AcceptsExpressionProperty;
    static GlobalDependencyProperty s_DescriptionProperty;
    static GlobalDependencyProperty s_HeaderProperty;
    static GlobalDependencyProperty s_HeaderTemplateProperty;
    static GlobalDependencyProperty s_InputScopeProperty;
    static GlobalDependencyProperty s_IsWrapEnabledProperty;
    static GlobalDependencyProperty s_LargeChangeProperty;
    static GlobalDependencyProperty s_MaximumProperty;
    static GlobalDependencyProperty s_MinimumProperty;
    static GlobalDependencyProperty s_NumberFormatterProperty;
    static GlobalDependencyProperty s_PlaceholderTextProperty;
    static GlobalDependencyProperty s_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    static GlobalDependencyProperty s_SelectionFlyoutProperty;
    static GlobalDependencyProperty s_SelectionHighlightColorProperty;
    static GlobalDependencyProperty s_SmallChangeProperty;
    static GlobalDependencyProperty s_SpinButtonPlacementModeProperty;
    static GlobalDependencyProperty s_TextProperty;
    static GlobalDependencyProperty s_TextAlignmentProperty;
    static GlobalDependencyProperty s_TextReadingOrderProperty;
    static GlobalDependencyProperty s_ValidationModeProperty;
    static GlobalDependencyProperty s_ValueProperty;

    winrt::event_token ValueChanged(winrt::TypedEventHandler<winrt::NumberBox, winrt::NumberBoxValueChangedEventArgs> const& value);
    void ValueChanged(winrt::event_token const& token);

    event_source<winrt::TypedEventHandler<winrt::NumberBox, winrt::NumberBoxValueChangedEventArgs>> m_valueChangedEventSource;

    static void EnsureProperties();
    static void ClearProperties();

    static void OnHeaderPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnHeaderTemplatePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnIsWrapEnabledPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnMaximumPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnMinimumPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnNumberFormatterPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnSmallChangePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnSpinButtonPlacementModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnTextPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnValidationModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnValuePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);
};
