// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#pragma once

class TabViewItemProperties
{
public:
    TabViewItemProperties();

    void Header(winrt::IInspectable const& value);
    winrt::IInspectable Header();

    void HeaderTemplate(winrt::DataTemplate const& value);
    winrt::DataTemplate HeaderTemplate();

    void IconSource(winrt::IconSource const& value);
    winrt::IconSource IconSource();

    void IsClosable(bool value);
    bool IsClosable();

    void TabViewTemplateSettings(winrt::TabViewItemTemplateSettings const& value);
    winrt::TabViewItemTemplateSettings TabViewTemplateSettings();

    static winrt::DependencyProperty HeaderProperty() { return s_HeaderProperty; }
    static winrt::DependencyProperty HeaderTemplateProperty() { return s_HeaderTemplateProperty; }
    static winrt::DependencyProperty IconSourceProperty() { return s_IconSourceProperty; }
    static winrt::DependencyProperty IsClosableProperty() { return s_IsClosableProperty; }
    static winrt::DependencyProperty TabViewTemplateSettingsProperty() { return s_TabViewTemplateSettingsProperty; }

    static GlobalDependencyProperty s_HeaderProperty;
    static GlobalDependencyProperty s_HeaderTemplateProperty;
    static GlobalDependencyProperty s_IconSourceProperty;
    static GlobalDependencyProperty s_IsClosableProperty;
    static GlobalDependencyProperty s_TabViewTemplateSettingsProperty;

    winrt::event_token CloseRequested(winrt::TypedEventHandler<winrt::TabViewItem, winrt::TabViewTabCloseRequestedEventArgs> const& value);
    void CloseRequested(winrt::event_token const& token);

    event_source<winrt::TypedEventHandler<winrt::TabViewItem, winrt::TabViewTabCloseRequestedEventArgs>> m_closeRequestedEventSource;

    static void EnsureProperties();
    static void ClearProperties();

    static void OnHeaderPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnIconSourcePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnIsClosablePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);
};
