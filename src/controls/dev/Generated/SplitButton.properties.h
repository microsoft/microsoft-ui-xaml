// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#pragma once

class SplitButtonProperties
{
public:
    SplitButtonProperties();

    void Command(winrt::ICommand const& value);
    winrt::ICommand Command();

    void CommandParameter(winrt::IInspectable const& value);
    winrt::IInspectable CommandParameter();

    void Flyout(winrt::FlyoutBase const& value);
    winrt::FlyoutBase Flyout();

    static winrt::DependencyProperty CommandProperty() { return s_CommandProperty; }
    static winrt::DependencyProperty CommandParameterProperty() { return s_CommandParameterProperty; }
    static winrt::DependencyProperty FlyoutProperty() { return s_FlyoutProperty; }

    static GlobalDependencyProperty s_CommandProperty;
    static GlobalDependencyProperty s_CommandParameterProperty;
    static GlobalDependencyProperty s_FlyoutProperty;

    winrt::event_token Click(winrt::TypedEventHandler<winrt::SplitButton, winrt::SplitButtonClickEventArgs> const& value);
    void Click(winrt::event_token const& token);

    event_source<winrt::TypedEventHandler<winrt::SplitButton, winrt::SplitButtonClickEventArgs>> m_clickEventSource;

    static void EnsureProperties();
    static void ClearProperties();

    static void OnCommandPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnCommandParameterPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnFlyoutPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);
};
