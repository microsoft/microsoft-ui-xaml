// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#pragma once

class TabViewProperties
{
public:
    TabViewProperties();

    void AddTabButtonCommand(winrt::ICommand const& value);
    winrt::ICommand AddTabButtonCommand();

    void AddTabButtonCommandParameter(winrt::IInspectable const& value);
    winrt::IInspectable AddTabButtonCommandParameter();

    void AllowDropTabs(bool value);
    bool AllowDropTabs();

    void CanDragTabs(bool value);
    bool CanDragTabs();

    void CanReorderTabs(bool value);
    bool CanReorderTabs();

    void CloseButtonOverlayMode(winrt::TabViewCloseButtonOverlayMode const& value);
    winrt::TabViewCloseButtonOverlayMode CloseButtonOverlayMode();

    void IsAddTabButtonVisible(bool value);
    bool IsAddTabButtonVisible();

    void SelectedIndex(int value);
    int SelectedIndex();

    void SelectedItem(winrt::IInspectable const& value);
    winrt::IInspectable SelectedItem();

    void TabItems(winrt::IVector<winrt::IInspectable> const& value);
    winrt::IVector<winrt::IInspectable> TabItems();

    void TabItemsSource(winrt::IInspectable const& value);
    winrt::IInspectable TabItemsSource();

    void TabItemTemplate(winrt::DataTemplate const& value);
    winrt::DataTemplate TabItemTemplate();

    void TabItemTemplateSelector(winrt::DataTemplateSelector const& value);
    winrt::DataTemplateSelector TabItemTemplateSelector();

    void TabStripFooter(winrt::IInspectable const& value);
    winrt::IInspectable TabStripFooter();

    void TabStripFooterTemplate(winrt::DataTemplate const& value);
    winrt::DataTemplate TabStripFooterTemplate();

    void TabStripHeader(winrt::IInspectable const& value);
    winrt::IInspectable TabStripHeader();

    void TabStripHeaderTemplate(winrt::DataTemplate const& value);
    winrt::DataTemplate TabStripHeaderTemplate();

    void TabWidthMode(winrt::TabViewWidthMode const& value);
    winrt::TabViewWidthMode TabWidthMode();

    static winrt::DependencyProperty AddTabButtonCommandProperty() { return s_AddTabButtonCommandProperty; }
    static winrt::DependencyProperty AddTabButtonCommandParameterProperty() { return s_AddTabButtonCommandParameterProperty; }
    static winrt::DependencyProperty AllowDropTabsProperty() { return s_AllowDropTabsProperty; }
    static winrt::DependencyProperty CanDragTabsProperty() { return s_CanDragTabsProperty; }
    static winrt::DependencyProperty CanReorderTabsProperty() { return s_CanReorderTabsProperty; }
    static winrt::DependencyProperty CloseButtonOverlayModeProperty() { return s_CloseButtonOverlayModeProperty; }
    static winrt::DependencyProperty IsAddTabButtonVisibleProperty() { return s_IsAddTabButtonVisibleProperty; }
    static winrt::DependencyProperty SelectedIndexProperty() { return s_SelectedIndexProperty; }
    static winrt::DependencyProperty SelectedItemProperty() { return s_SelectedItemProperty; }
    static winrt::DependencyProperty TabItemsProperty() { return s_TabItemsProperty; }
    static winrt::DependencyProperty TabItemsSourceProperty() { return s_TabItemsSourceProperty; }
    static winrt::DependencyProperty TabItemTemplateProperty() { return s_TabItemTemplateProperty; }
    static winrt::DependencyProperty TabItemTemplateSelectorProperty() { return s_TabItemTemplateSelectorProperty; }
    static winrt::DependencyProperty TabStripFooterProperty() { return s_TabStripFooterProperty; }
    static winrt::DependencyProperty TabStripFooterTemplateProperty() { return s_TabStripFooterTemplateProperty; }
    static winrt::DependencyProperty TabStripHeaderProperty() { return s_TabStripHeaderProperty; }
    static winrt::DependencyProperty TabStripHeaderTemplateProperty() { return s_TabStripHeaderTemplateProperty; }
    static winrt::DependencyProperty TabWidthModeProperty() { return s_TabWidthModeProperty; }

    static GlobalDependencyProperty s_AddTabButtonCommandProperty;
    static GlobalDependencyProperty s_AddTabButtonCommandParameterProperty;
    static GlobalDependencyProperty s_AllowDropTabsProperty;
    static GlobalDependencyProperty s_CanDragTabsProperty;
    static GlobalDependencyProperty s_CanReorderTabsProperty;
    static GlobalDependencyProperty s_CloseButtonOverlayModeProperty;
    static GlobalDependencyProperty s_IsAddTabButtonVisibleProperty;
    static GlobalDependencyProperty s_SelectedIndexProperty;
    static GlobalDependencyProperty s_SelectedItemProperty;
    static GlobalDependencyProperty s_TabItemsProperty;
    static GlobalDependencyProperty s_TabItemsSourceProperty;
    static GlobalDependencyProperty s_TabItemTemplateProperty;
    static GlobalDependencyProperty s_TabItemTemplateSelectorProperty;
    static GlobalDependencyProperty s_TabStripFooterProperty;
    static GlobalDependencyProperty s_TabStripFooterTemplateProperty;
    static GlobalDependencyProperty s_TabStripHeaderProperty;
    static GlobalDependencyProperty s_TabStripHeaderTemplateProperty;
    static GlobalDependencyProperty s_TabWidthModeProperty;

    winrt::event_token AddTabButtonClick(winrt::TypedEventHandler<winrt::TabView, winrt::IInspectable> const& value);
    void AddTabButtonClick(winrt::event_token const& token);
    winrt::event_token SelectionChanged(winrt::SelectionChangedEventHandler const& value);
    void SelectionChanged(winrt::event_token const& token);
    winrt::event_token TabCloseRequested(winrt::TypedEventHandler<winrt::TabView, winrt::TabViewTabCloseRequestedEventArgs> const& value);
    void TabCloseRequested(winrt::event_token const& token);
    winrt::event_token TabDragCompleted(winrt::TypedEventHandler<winrt::TabView, winrt::TabViewTabDragCompletedEventArgs> const& value);
    void TabDragCompleted(winrt::event_token const& token);
    winrt::event_token TabDragStarting(winrt::TypedEventHandler<winrt::TabView, winrt::TabViewTabDragStartingEventArgs> const& value);
    void TabDragStarting(winrt::event_token const& token);
    winrt::event_token TabDroppedOutside(winrt::TypedEventHandler<winrt::TabView, winrt::TabViewTabDroppedOutsideEventArgs> const& value);
    void TabDroppedOutside(winrt::event_token const& token);
    winrt::event_token TabItemsChanged(winrt::TypedEventHandler<winrt::TabView, winrt::IVectorChangedEventArgs> const& value);
    void TabItemsChanged(winrt::event_token const& token);
    winrt::event_token TabStripDragOver(winrt::DragEventHandler const& value);
    void TabStripDragOver(winrt::event_token const& token);
    winrt::event_token TabStripDrop(winrt::DragEventHandler const& value);
    void TabStripDrop(winrt::event_token const& token);

    event_source<winrt::TypedEventHandler<winrt::TabView, winrt::IInspectable>> m_addTabButtonClickEventSource;
    event_source<winrt::SelectionChangedEventHandler> m_selectionChangedEventSource;
    event_source<winrt::TypedEventHandler<winrt::TabView, winrt::TabViewTabCloseRequestedEventArgs>> m_tabCloseRequestedEventSource;
    event_source<winrt::TypedEventHandler<winrt::TabView, winrt::TabViewTabDragCompletedEventArgs>> m_tabDragCompletedEventSource;
    event_source<winrt::TypedEventHandler<winrt::TabView, winrt::TabViewTabDragStartingEventArgs>> m_tabDragStartingEventSource;
    event_source<winrt::TypedEventHandler<winrt::TabView, winrt::TabViewTabDroppedOutsideEventArgs>> m_tabDroppedOutsideEventSource;
    event_source<winrt::TypedEventHandler<winrt::TabView, winrt::IVectorChangedEventArgs>> m_tabItemsChangedEventSource;
    event_source<winrt::DragEventHandler> m_tabStripDragOverEventSource;
    event_source<winrt::DragEventHandler> m_tabStripDropEventSource;

    static void EnsureProperties();
    static void ClearProperties();

    static void OnCloseButtonOverlayModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnSelectedIndexPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnSelectedItemPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnTabItemsSourcePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnTabWidthModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);
};
