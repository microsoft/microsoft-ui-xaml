// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#pragma once

class AnimatedVisualPlayerProperties
{
public:
    AnimatedVisualPlayerProperties();

    void AnimationOptimization(winrt::PlayerAnimationOptimization const& value);
    winrt::PlayerAnimationOptimization AnimationOptimization();

    void AutoPlay(bool value);
    bool AutoPlay();

    void Diagnostics(winrt::IInspectable const& value);
    winrt::IInspectable Diagnostics();

    void Duration(winrt::TimeSpan const& value);
    winrt::TimeSpan Duration();

    void FallbackContent(winrt::DataTemplate const& value);
    winrt::DataTemplate FallbackContent();

    void IsAnimatedVisualLoaded(bool value);
    bool IsAnimatedVisualLoaded();

    void IsPlaying(bool value);
    bool IsPlaying();

    void PlaybackRate(double value);
    double PlaybackRate();

    void Source(winrt::IAnimatedVisualSource const& value);
    winrt::IAnimatedVisualSource Source();

    void Stretch(winrt::Stretch const& value);
    winrt::Stretch Stretch();

    static winrt::DependencyProperty AnimationOptimizationProperty() { return s_AnimationOptimizationProperty; }
    static winrt::DependencyProperty AutoPlayProperty() { return s_AutoPlayProperty; }
    static winrt::DependencyProperty DiagnosticsProperty() { return s_DiagnosticsProperty; }
    static winrt::DependencyProperty DurationProperty() { return s_DurationProperty; }
    static winrt::DependencyProperty FallbackContentProperty() { return s_FallbackContentProperty; }
    static winrt::DependencyProperty IsAnimatedVisualLoadedProperty() { return s_IsAnimatedVisualLoadedProperty; }
    static winrt::DependencyProperty IsPlayingProperty() { return s_IsPlayingProperty; }
    static winrt::DependencyProperty PlaybackRateProperty() { return s_PlaybackRateProperty; }
    static winrt::DependencyProperty SourceProperty() { return s_SourceProperty; }
    static winrt::DependencyProperty StretchProperty() { return s_StretchProperty; }

    static GlobalDependencyProperty s_AnimationOptimizationProperty;
    static GlobalDependencyProperty s_AutoPlayProperty;
    static GlobalDependencyProperty s_DiagnosticsProperty;
    static GlobalDependencyProperty s_DurationProperty;
    static GlobalDependencyProperty s_FallbackContentProperty;
    static GlobalDependencyProperty s_IsAnimatedVisualLoadedProperty;
    static GlobalDependencyProperty s_IsPlayingProperty;
    static GlobalDependencyProperty s_PlaybackRateProperty;
    static GlobalDependencyProperty s_SourceProperty;
    static GlobalDependencyProperty s_StretchProperty;

    static void EnsureProperties();
    static void ClearProperties();

    static void OnAnimationOptimizationPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnAutoPlayPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnFallbackContentPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnPlaybackRatePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnSourcePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnStretchPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);
};
