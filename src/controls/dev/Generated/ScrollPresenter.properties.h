// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#pragma once

class ScrollPresenterProperties
{
public:
    ScrollPresenterProperties();

    void Background(winrt::Brush const& value);
    winrt::Brush Background();

    void ComputedHorizontalScrollMode(winrt::ScrollingScrollMode const& value);
    winrt::ScrollingScrollMode ComputedHorizontalScrollMode();

    void ComputedVerticalScrollMode(winrt::ScrollingScrollMode const& value);
    winrt::ScrollingScrollMode ComputedVerticalScrollMode();

    void Content(winrt::UIElement const& value);
    winrt::UIElement Content();

    void ContentOrientation(winrt::ScrollingContentOrientation const& value);
    winrt::ScrollingContentOrientation ContentOrientation();

    void HorizontalAnchorRatio(double value);
    double HorizontalAnchorRatio();

    void HorizontalScrollChainMode(winrt::ScrollingChainMode const& value);
    winrt::ScrollingChainMode HorizontalScrollChainMode();

    void HorizontalScrollMode(winrt::ScrollingScrollMode const& value);
    winrt::ScrollingScrollMode HorizontalScrollMode();

    void HorizontalScrollRailMode(winrt::ScrollingRailMode const& value);
    winrt::ScrollingRailMode HorizontalScrollRailMode();

    void IgnoredInputKinds(winrt::ScrollingInputKinds const& value);
    winrt::ScrollingInputKinds IgnoredInputKinds();

    void MaxZoomFactor(double value);
    double MaxZoomFactor();

    void MinZoomFactor(double value);
    double MinZoomFactor();

    void VerticalAnchorRatio(double value);
    double VerticalAnchorRatio();

    void VerticalScrollChainMode(winrt::ScrollingChainMode const& value);
    winrt::ScrollingChainMode VerticalScrollChainMode();

    void VerticalScrollMode(winrt::ScrollingScrollMode const& value);
    winrt::ScrollingScrollMode VerticalScrollMode();

    void VerticalScrollRailMode(winrt::ScrollingRailMode const& value);
    winrt::ScrollingRailMode VerticalScrollRailMode();

    void ZoomChainMode(winrt::ScrollingChainMode const& value);
    winrt::ScrollingChainMode ZoomChainMode();

    void ZoomMode(winrt::ScrollingZoomMode const& value);
    winrt::ScrollingZoomMode ZoomMode();

    static winrt::DependencyProperty BackgroundProperty() { return s_BackgroundProperty; }
    static winrt::DependencyProperty ComputedHorizontalScrollModeProperty() { return s_ComputedHorizontalScrollModeProperty; }
    static winrt::DependencyProperty ComputedVerticalScrollModeProperty() { return s_ComputedVerticalScrollModeProperty; }
    static winrt::DependencyProperty ContentProperty() { return s_ContentProperty; }
    static winrt::DependencyProperty ContentOrientationProperty() { return s_ContentOrientationProperty; }
    static winrt::DependencyProperty HorizontalAnchorRatioProperty() { return s_HorizontalAnchorRatioProperty; }
    static winrt::DependencyProperty HorizontalScrollChainModeProperty() { return s_HorizontalScrollChainModeProperty; }
    static winrt::DependencyProperty HorizontalScrollModeProperty() { return s_HorizontalScrollModeProperty; }
    static winrt::DependencyProperty HorizontalScrollRailModeProperty() { return s_HorizontalScrollRailModeProperty; }
    static winrt::DependencyProperty IgnoredInputKindsProperty() { return s_IgnoredInputKindsProperty; }
    static winrt::DependencyProperty MaxZoomFactorProperty() { return s_MaxZoomFactorProperty; }
    static winrt::DependencyProperty MinZoomFactorProperty() { return s_MinZoomFactorProperty; }
    static winrt::DependencyProperty VerticalAnchorRatioProperty() { return s_VerticalAnchorRatioProperty; }
    static winrt::DependencyProperty VerticalScrollChainModeProperty() { return s_VerticalScrollChainModeProperty; }
    static winrt::DependencyProperty VerticalScrollModeProperty() { return s_VerticalScrollModeProperty; }
    static winrt::DependencyProperty VerticalScrollRailModeProperty() { return s_VerticalScrollRailModeProperty; }
    static winrt::DependencyProperty ZoomChainModeProperty() { return s_ZoomChainModeProperty; }
    static winrt::DependencyProperty ZoomModeProperty() { return s_ZoomModeProperty; }

    static GlobalDependencyProperty s_BackgroundProperty;
    static GlobalDependencyProperty s_ComputedHorizontalScrollModeProperty;
    static GlobalDependencyProperty s_ComputedVerticalScrollModeProperty;
    static GlobalDependencyProperty s_ContentProperty;
    static GlobalDependencyProperty s_ContentOrientationProperty;
    static GlobalDependencyProperty s_HorizontalAnchorRatioProperty;
    static GlobalDependencyProperty s_HorizontalScrollChainModeProperty;
    static GlobalDependencyProperty s_HorizontalScrollModeProperty;
    static GlobalDependencyProperty s_HorizontalScrollRailModeProperty;
    static GlobalDependencyProperty s_IgnoredInputKindsProperty;
    static GlobalDependencyProperty s_MaxZoomFactorProperty;
    static GlobalDependencyProperty s_MinZoomFactorProperty;
    static GlobalDependencyProperty s_VerticalAnchorRatioProperty;
    static GlobalDependencyProperty s_VerticalScrollChainModeProperty;
    static GlobalDependencyProperty s_VerticalScrollModeProperty;
    static GlobalDependencyProperty s_VerticalScrollRailModeProperty;
    static GlobalDependencyProperty s_ZoomChainModeProperty;
    static GlobalDependencyProperty s_ZoomModeProperty;

    winrt::event_token AnchorRequested(winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::ScrollingAnchorRequestedEventArgs> const& value);
    void AnchorRequested(winrt::event_token const& token);
    winrt::event_token BringingIntoView(winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::ScrollingBringingIntoViewEventArgs> const& value);
    void BringingIntoView(winrt::event_token const& token);
    winrt::event_token ExtentChanged(winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::IInspectable> const& value);
    void ExtentChanged(winrt::event_token const& token);
    winrt::event_token ScrollAnimationStarting(winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::ScrollingScrollAnimationStartingEventArgs> const& value);
    void ScrollAnimationStarting(winrt::event_token const& token);
    winrt::event_token ScrollCompleted(winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::ScrollingScrollCompletedEventArgs> const& value);
    void ScrollCompleted(winrt::event_token const& token);
    winrt::event_token StateChanged(winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::IInspectable> const& value);
    void StateChanged(winrt::event_token const& token);
    winrt::event_token ViewChanged(winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::IInspectable> const& value);
    void ViewChanged(winrt::event_token const& token);
    winrt::event_token ZoomAnimationStarting(winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::ScrollingZoomAnimationStartingEventArgs> const& value);
    void ZoomAnimationStarting(winrt::event_token const& token);
    winrt::event_token ZoomCompleted(winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::ScrollingZoomCompletedEventArgs> const& value);
    void ZoomCompleted(winrt::event_token const& token);

    event_source<winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::ScrollingAnchorRequestedEventArgs>> m_anchorRequestedEventSource;
    event_source<winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::ScrollingBringingIntoViewEventArgs>> m_bringingIntoViewEventSource;
    event_source<winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::IInspectable>> m_extentChangedEventSource;
    event_source<winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::ScrollingScrollAnimationStartingEventArgs>> m_scrollAnimationStartingEventSource;
    event_source<winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::ScrollingScrollCompletedEventArgs>> m_scrollCompletedEventSource;
    event_source<winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::IInspectable>> m_stateChangedEventSource;
    event_source<winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::IInspectable>> m_viewChangedEventSource;
    event_source<winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::ScrollingZoomAnimationStartingEventArgs>> m_zoomAnimationStartingEventSource;
    event_source<winrt::TypedEventHandler<winrt::ScrollPresenter, winrt::ScrollingZoomCompletedEventArgs>> m_zoomCompletedEventSource;

    static void EnsureProperties();
    static void ClearProperties();

    static void OnBackgroundPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnComputedHorizontalScrollModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnComputedVerticalScrollModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnContentPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnContentOrientationPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnHorizontalAnchorRatioPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnHorizontalScrollChainModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnHorizontalScrollModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnHorizontalScrollRailModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnIgnoredInputKindsPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnMaxZoomFactorPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnMinZoomFactorPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnVerticalAnchorRatioPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnVerticalScrollChainModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnVerticalScrollModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnVerticalScrollRailModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnZoomChainModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnZoomModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);
};
