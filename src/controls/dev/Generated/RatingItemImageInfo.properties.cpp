// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "RatingItemImageInfo.h"

namespace winrt::Microsoft::UI::Xaml::Controls
{
    CppWinRTActivatableClassWithDPFactory(RatingItemImageInfo)
}

#include "RatingItemImageInfo.g.cpp"

GlobalDependencyProperty RatingItemImageInfoProperties::s_DisabledImageProperty{ nullptr };
GlobalDependencyProperty RatingItemImageInfoProperties::s_ImageProperty{ nullptr };
GlobalDependencyProperty RatingItemImageInfoProperties::s_PlaceholderImageProperty{ nullptr };
GlobalDependencyProperty RatingItemImageInfoProperties::s_PointerOverImageProperty{ nullptr };
GlobalDependencyProperty RatingItemImageInfoProperties::s_PointerOverPlaceholderImageProperty{ nullptr };
GlobalDependencyProperty RatingItemImageInfoProperties::s_UnsetImageProperty{ nullptr };

RatingItemImageInfoProperties::RatingItemImageInfoProperties()
{
    EnsureProperties();
}

void RatingItemImageInfoProperties::EnsureProperties()
{
    if (!s_DisabledImageProperty)
    {
        s_DisabledImageProperty =
            InitializeDependencyProperty(
                L"DisabledImage",
                winrt::name_of<winrt::ImageSource>(),
                winrt::name_of<winrt::RatingItemImageInfo>(),
                false /* isAttached */,
                ValueHelper<winrt::ImageSource>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_ImageProperty)
    {
        s_ImageProperty =
            InitializeDependencyProperty(
                L"Image",
                winrt::name_of<winrt::ImageSource>(),
                winrt::name_of<winrt::RatingItemImageInfo>(),
                false /* isAttached */,
                ValueHelper<winrt::ImageSource>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_PlaceholderImageProperty)
    {
        s_PlaceholderImageProperty =
            InitializeDependencyProperty(
                L"PlaceholderImage",
                winrt::name_of<winrt::ImageSource>(),
                winrt::name_of<winrt::RatingItemImageInfo>(),
                false /* isAttached */,
                ValueHelper<winrt::ImageSource>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_PointerOverImageProperty)
    {
        s_PointerOverImageProperty =
            InitializeDependencyProperty(
                L"PointerOverImage",
                winrt::name_of<winrt::ImageSource>(),
                winrt::name_of<winrt::RatingItemImageInfo>(),
                false /* isAttached */,
                ValueHelper<winrt::ImageSource>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_PointerOverPlaceholderImageProperty)
    {
        s_PointerOverPlaceholderImageProperty =
            InitializeDependencyProperty(
                L"PointerOverPlaceholderImage",
                winrt::name_of<winrt::ImageSource>(),
                winrt::name_of<winrt::RatingItemImageInfo>(),
                false /* isAttached */,
                ValueHelper<winrt::ImageSource>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_UnsetImageProperty)
    {
        s_UnsetImageProperty =
            InitializeDependencyProperty(
                L"UnsetImage",
                winrt::name_of<winrt::ImageSource>(),
                winrt::name_of<winrt::RatingItemImageInfo>(),
                false /* isAttached */,
                ValueHelper<winrt::ImageSource>::BoxedDefaultValue(),
                nullptr);
    }
}

void RatingItemImageInfoProperties::ClearProperties()
{
    s_DisabledImageProperty = nullptr;
    s_ImageProperty = nullptr;
    s_PlaceholderImageProperty = nullptr;
    s_PointerOverImageProperty = nullptr;
    s_PointerOverPlaceholderImageProperty = nullptr;
    s_UnsetImageProperty = nullptr;
}

void RatingItemImageInfoProperties::DisabledImage(winrt::ImageSource const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<RatingItemImageInfo*>(this)->SetValue(s_DisabledImageProperty, ValueHelper<winrt::ImageSource>::BoxValueIfNecessary(value));
    }
}

winrt::ImageSource RatingItemImageInfoProperties::DisabledImage()
{
    return ValueHelper<winrt::ImageSource>::CastOrUnbox(static_cast<RatingItemImageInfo*>(this)->GetValue(s_DisabledImageProperty));
}

void RatingItemImageInfoProperties::Image(winrt::ImageSource const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<RatingItemImageInfo*>(this)->SetValue(s_ImageProperty, ValueHelper<winrt::ImageSource>::BoxValueIfNecessary(value));
    }
}

winrt::ImageSource RatingItemImageInfoProperties::Image()
{
    return ValueHelper<winrt::ImageSource>::CastOrUnbox(static_cast<RatingItemImageInfo*>(this)->GetValue(s_ImageProperty));
}

void RatingItemImageInfoProperties::PlaceholderImage(winrt::ImageSource const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<RatingItemImageInfo*>(this)->SetValue(s_PlaceholderImageProperty, ValueHelper<winrt::ImageSource>::BoxValueIfNecessary(value));
    }
}

winrt::ImageSource RatingItemImageInfoProperties::PlaceholderImage()
{
    return ValueHelper<winrt::ImageSource>::CastOrUnbox(static_cast<RatingItemImageInfo*>(this)->GetValue(s_PlaceholderImageProperty));
}

void RatingItemImageInfoProperties::PointerOverImage(winrt::ImageSource const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<RatingItemImageInfo*>(this)->SetValue(s_PointerOverImageProperty, ValueHelper<winrt::ImageSource>::BoxValueIfNecessary(value));
    }
}

winrt::ImageSource RatingItemImageInfoProperties::PointerOverImage()
{
    return ValueHelper<winrt::ImageSource>::CastOrUnbox(static_cast<RatingItemImageInfo*>(this)->GetValue(s_PointerOverImageProperty));
}

void RatingItemImageInfoProperties::PointerOverPlaceholderImage(winrt::ImageSource const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<RatingItemImageInfo*>(this)->SetValue(s_PointerOverPlaceholderImageProperty, ValueHelper<winrt::ImageSource>::BoxValueIfNecessary(value));
    }
}

winrt::ImageSource RatingItemImageInfoProperties::PointerOverPlaceholderImage()
{
    return ValueHelper<winrt::ImageSource>::CastOrUnbox(static_cast<RatingItemImageInfo*>(this)->GetValue(s_PointerOverPlaceholderImageProperty));
}

void RatingItemImageInfoProperties::UnsetImage(winrt::ImageSource const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<RatingItemImageInfo*>(this)->SetValue(s_UnsetImageProperty, ValueHelper<winrt::ImageSource>::BoxValueIfNecessary(value));
    }
}

winrt::ImageSource RatingItemImageInfoProperties::UnsetImage()
{
    return ValueHelper<winrt::ImageSource>::CastOrUnbox(static_cast<RatingItemImageInfo*>(this)->GetValue(s_UnsetImageProperty));
}
