// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "ColorPickerSlider.h"

namespace winrt::Microsoft::UI::Xaml::Controls::Primitives
{
    CppWinRTActivatableClassWithDPFactory(ColorPickerSlider)
}

#include "ColorPickerSlider.g.cpp"

GlobalDependencyProperty ColorPickerSliderProperties::s_ColorChannelProperty{ nullptr };

ColorPickerSliderProperties::ColorPickerSliderProperties()
{
    EnsureProperties();
}

void ColorPickerSliderProperties::EnsureProperties()
{
    if (!s_ColorChannelProperty)
    {
        s_ColorChannelProperty =
            InitializeDependencyProperty(
                L"ColorChannel",
                winrt::name_of<winrt::ColorPickerHsvChannel>(),
                winrt::name_of<winrt::ColorPickerSlider>(),
                false /* isAttached */,
                ValueHelper<winrt::ColorPickerHsvChannel>::BoxValueIfNecessary(winrt::ColorPickerHsvChannel::Value),
                nullptr);
    }
}

void ColorPickerSliderProperties::ClearProperties()
{
    s_ColorChannelProperty = nullptr;
}

void ColorPickerSliderProperties::ColorChannel(winrt::ColorPickerHsvChannel const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<ColorPickerSlider*>(this)->SetValue(s_ColorChannelProperty, ValueHelper<winrt::ColorPickerHsvChannel>::BoxValueIfNecessary(value));
    }
}

winrt::ColorPickerHsvChannel ColorPickerSliderProperties::ColorChannel()
{
    return ValueHelper<winrt::ColorPickerHsvChannel>::CastOrUnbox(static_cast<ColorPickerSlider*>(this)->GetValue(s_ColorChannelProperty));
}
