// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#pragma once

class RefreshVisualizerProperties
{
public:
    RefreshVisualizerProperties();

    void Content(winrt::UIElement const& value);
    winrt::UIElement Content();

    void Orientation(winrt::RefreshVisualizerOrientation const& value);
    winrt::RefreshVisualizerOrientation Orientation();

    void State(winrt::RefreshVisualizerState const& value);
    winrt::RefreshVisualizerState State();

    static winrt::DependencyProperty ContentProperty() { return s_ContentProperty; }
    static winrt::DependencyProperty InfoProviderProperty() { return s_InfoProviderProperty; }
    static winrt::DependencyProperty OrientationProperty() { return s_OrientationProperty; }
    static winrt::DependencyProperty StateProperty() { return s_StateProperty; }

    static GlobalDependencyProperty s_ContentProperty;
    static GlobalDependencyProperty s_InfoProviderProperty;
    static GlobalDependencyProperty s_OrientationProperty;
    static GlobalDependencyProperty s_StateProperty;

    winrt::event_token RefreshRequested(winrt::TypedEventHandler<winrt::RefreshVisualizer, winrt::RefreshRequestedEventArgs> const& value);
    void RefreshRequested(winrt::event_token const& token);
    winrt::event_token RefreshStateChanged(winrt::TypedEventHandler<winrt::RefreshVisualizer, winrt::RefreshStateChangedEventArgs> const& value);
    void RefreshStateChanged(winrt::event_token const& token);

    event_source<winrt::TypedEventHandler<winrt::RefreshVisualizer, winrt::RefreshRequestedEventArgs>> m_refreshRequestedEventSource;
    event_source<winrt::TypedEventHandler<winrt::RefreshVisualizer, winrt::RefreshStateChangedEventArgs>> m_refreshStateChangedEventSource;

    static void EnsureProperties();
    static void ClearProperties();

    static void OnContentPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnInfoProviderPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnOrientationPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnStatePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);
};
