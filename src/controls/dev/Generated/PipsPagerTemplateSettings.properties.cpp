// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "PipsPagerTemplateSettings.h"

GlobalDependencyProperty PipsPagerTemplateSettingsProperties::s_PipsPagerItemsProperty{ nullptr };

PipsPagerTemplateSettingsProperties::PipsPagerTemplateSettingsProperties()
{
    EnsureProperties();
}

void PipsPagerTemplateSettingsProperties::EnsureProperties()
{
    if (!s_PipsPagerItemsProperty)
    {
        s_PipsPagerItemsProperty =
            InitializeDependencyProperty(
                L"PipsPagerItems",
                winrt::name_of<winrt::IVector<int>>(),
                winrt::name_of<winrt::PipsPagerTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<winrt::IVector<int>>::BoxedDefaultValue(),
                nullptr);
    }
}

void PipsPagerTemplateSettingsProperties::ClearProperties()
{
    s_PipsPagerItemsProperty = nullptr;
}

void PipsPagerTemplateSettingsProperties::PipsPagerItems(winrt::IVector<int> const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<PipsPagerTemplateSettings*>(this)->SetValue(s_PipsPagerItemsProperty, ValueHelper<winrt::IVector<int>>::BoxValueIfNecessary(value));
    }
}

winrt::IVector<int> PipsPagerTemplateSettingsProperties::PipsPagerItems()
{
    return ValueHelper<winrt::IVector<int>>::CastOrUnbox(static_cast<PipsPagerTemplateSettings*>(this)->GetValue(s_PipsPagerItemsProperty));
}
