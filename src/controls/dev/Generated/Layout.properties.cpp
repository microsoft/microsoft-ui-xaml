// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "Layout.h"

namespace winrt::Microsoft::UI::Xaml::Controls
{
    CppWinRTActivatableClassWithBasicFactory(Layout)
}

#include "Layout.g.cpp"


LayoutProperties::LayoutProperties()
    : m_arrangeInvalidatedEventSource{static_cast<Layout*>(this)}
    , m_measureInvalidatedEventSource{static_cast<Layout*>(this)}
{
}

void LayoutProperties::EnsureProperties()
{
}

void LayoutProperties::ClearProperties()
{
}

winrt::event_token LayoutProperties::ArrangeInvalidated(winrt::TypedEventHandler<winrt::Layout, winrt::IInspectable> const& value)
{
    return m_arrangeInvalidatedEventSource.add(value);
}

void LayoutProperties::ArrangeInvalidated(winrt::event_token const& token)
{
    m_arrangeInvalidatedEventSource.remove(token);
}

winrt::event_token LayoutProperties::MeasureInvalidated(winrt::TypedEventHandler<winrt::Layout, winrt::IInspectable> const& value)
{
    return m_measureInvalidatedEventSource.add(value);
}

void LayoutProperties::MeasureInvalidated(winrt::event_token const& token)
{
    m_measureInvalidatedEventSource.remove(token);
}
