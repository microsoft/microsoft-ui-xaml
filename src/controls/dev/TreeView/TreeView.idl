namespace MU_XC_NAMESPACE
{

[MUX_PUBLIC]
[webhosthidden]
enum TreeViewSelectionMode
{
    None = 0,
    Single = 1,
    Multiple = 2,
};

[MUX_PUBLIC]
[webhosthidden]
runtimeclass TreeViewItemInvokedEventArgs
{
    Object InvokedItem { get; };
    Boolean Handled { set; get; };
}

[MUX_PUBLIC]
/*The bindable tag is needed for bindings in C++ apps if a class isn't being referenced in markup*/
[bindable]
[webhosthidden]
[MUX_PROPERTY_CHANGED_CALLBACK_METHODNAME("OnPropertyChanged")]
unsealed runtimeclass TreeViewNode : Microsoft.UI.Xaml.DependencyObject
{
    TreeViewNode();

    Object Content { get; set; };
    TreeViewNode Parent { get; };
    [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
    Boolean IsExpanded { get; set; };
    [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
    Boolean HasChildren { get; };
    [MUX_DEFAULT_VALUE("-1")]
    Int32 Depth { get; };
    Boolean HasUnrealizedChildren { get; set; };
    Windows.Foundation.Collections.IVector<TreeViewNode> Children { get; };

    static Microsoft.UI.Xaml.DependencyProperty ContentProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty DepthProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty IsExpandedProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty HasChildrenProperty { get; };
}

[MUX_PUBLIC]
[webhosthidden]
runtimeclass TreeViewExpandingEventArgs
{
    TreeViewNode Node { get; };
    [MUX_PUBLIC]
    {
        Object Item{ get; };
    }
}

[MUX_PUBLIC]
[webhosthidden]
runtimeclass TreeViewCollapsedEventArgs
{
    TreeViewNode Node { get; };
    [MUX_PUBLIC]
    {
        Object Item{ get; };
    }
}

[MUX_PUBLIC]
[webhosthidden]
runtimeclass TreeViewDragItemsStartingEventArgs
{
    Boolean Cancel{ get; set; };
    Windows.ApplicationModel.DataTransfer.DataPackage Data{ get; };
    Windows.Foundation.Collections.IVector<Object> Items{ get; };
}

[MUX_PUBLIC]
[webhosthidden]
runtimeclass TreeViewDragItemsCompletedEventArgs
{
    Windows.ApplicationModel.DataTransfer.DataPackageOperation DropResult{ get; };
    Windows.Foundation.Collections.IVectorView<Object> Items{ get; };

    [MUX_PUBLIC]
    {
        Object NewParentItem{ get; };
    }
}

[MUX_PUBLIC_V5]
[webhosthidden]
runtimeclass TreeViewSelectionChangedEventArgs
{
    Windows.Foundation.Collections.IVector<Object> AddedItems{ get; };
    Windows.Foundation.Collections.IVector<Object> RemovedItems{ get; };
}

[MUX_PUBLIC]
[webhosthidden]
unsealed runtimeclass TreeViewList : Microsoft.UI.Xaml.Controls.ListView
{
    TreeViewList();
}

[MUX_PUBLIC]
[webhosthidden]
[MUX_PROPERTY_CHANGED_CALLBACK_METHODNAME("OnPropertyChanged")]
unsealed runtimeclass TreeView : Microsoft.UI.Xaml.Controls.Control
{
    TreeView();

    Windows.Foundation.Collections.IVector<TreeViewNode> RootNodes { get; };
    [MUX_DEFAULT_VALUE("winrt::TreeViewSelectionMode::Single")]
    [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
    TreeViewSelectionMode SelectionMode { get; set; };
    Windows.Foundation.Collections.IVector<TreeViewNode> SelectedNodes { get; };
    void Expand(TreeViewNode value);
    void Collapse(TreeViewNode value);
    void SelectAll();
    event Windows.Foundation.TypedEventHandler<TreeView, TreeViewItemInvokedEventArgs> ItemInvoked;
    event Windows.Foundation.TypedEventHandler<TreeView, TreeViewExpandingEventArgs> Expanding;
    event Windows.Foundation.TypedEventHandler<TreeView, TreeViewCollapsedEventArgs> Collapsed;
    [MUX_PUBLIC_V5]
    {
        event Windows.Foundation.TypedEventHandler<TreeView, TreeViewSelectionChangedEventArgs> SelectionChanged;
    }
    static Microsoft.UI.Xaml.DependencyProperty SelectedItemProperty{ get; };

    static Microsoft.UI.Xaml.DependencyProperty SelectionModeProperty{ get; };

    [MUX_PUBLIC]
    {
        TreeViewNode NodeFromContainer(Microsoft.UI.Xaml.DependencyObject container);
        Microsoft.UI.Xaml.DependencyObject ContainerFromNode(TreeViewNode node);
        Object ItemFromContainer(Microsoft.UI.Xaml.DependencyObject container);
        Microsoft.UI.Xaml.DependencyObject ContainerFromItem(Object item);

        [MUX_DEFAULT_VALUE("true")]
        Boolean CanDragItems{ get; set; };
        [MUX_DEFAULT_VALUE("true")]
        Boolean CanReorderItems{ get; set; };
        Microsoft.UI.Xaml.DataTemplate ItemTemplate{ get; set; };
        Microsoft.UI.Xaml.Controls.DataTemplateSelector ItemTemplateSelector{ get; set; };
        Microsoft.UI.Xaml.Style ItemContainerStyle{ get; set; };
        Microsoft.UI.Xaml.Controls.StyleSelector ItemContainerStyleSelector{ get; set; };
        Microsoft.UI.Xaml.Media.Animation.TransitionCollection ItemContainerTransitions{ get; set; };
        [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
        Object ItemsSource{ get; set; };
        event Windows.Foundation.TypedEventHandler<TreeView, TreeViewDragItemsStartingEventArgs> DragItemsStarting;
        event Windows.Foundation.TypedEventHandler<TreeView, TreeViewDragItemsCompletedEventArgs> DragItemsCompleted;

        static Microsoft.UI.Xaml.DependencyProperty CanDragItemsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CanReorderItemsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemTemplateSelectorProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemContainerStyleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemContainerStyleSelectorProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemContainerTransitionsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemsSourceProperty{ get; };
    }

    [MUX_PUBLIC]
    {
        TreeViewNode SelectedNode{ get; set; };
        [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
        Object SelectedItem{ get; set; };
        Windows.Foundation.Collections.IVector<Object> SelectedItems{ get; };
    }
}

[MUX_PUBLIC]
[webhosthidden]
unsealed runtimeclass TreeViewItemTemplateSettings : Microsoft.UI.Xaml.DependencyObject
{
    TreeViewItemTemplateSettings();

    [MUX_DEFAULT_VALUE("winrt::Visibility::Collapsed")]
    Microsoft.UI.Xaml.Visibility ExpandedGlyphVisibility { get; };
    [MUX_DEFAULT_VALUE("winrt::Visibility::Collapsed")]
    Microsoft.UI.Xaml.Visibility CollapsedGlyphVisibility { get; };
    Microsoft.UI.Xaml.Thickness Indentation { get; };
    Int32 DragItemsCount { get; };

    static Microsoft.UI.Xaml.DependencyProperty ExpandedGlyphVisibilityProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty CollapsedGlyphVisibilityProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty IndentationProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty DragItemsCountProperty { get; };
}

[MUX_PUBLIC]
[webhosthidden]
[MUX_PROPERTY_CHANGED_CALLBACK_METHODNAME("OnPropertyChanged")]
unsealed runtimeclass TreeViewItem : Microsoft.UI.Xaml.Controls.ListViewItem
{
    TreeViewItem();

    [MUX_DEFAULT_VALUE("1.0")]
    Double GlyphOpacity { get; set; };
    Microsoft.UI.Xaml.Media.Brush GlyphBrush { get; set; };
    [MUX_DEFAULT_VALUE("\uE70D")]
    String ExpandedGlyph { get; set; };
    [MUX_DEFAULT_VALUE("\uE76C")]
    String CollapsedGlyph { get; set; };
    [MUX_DEFAULT_VALUE("8.0")]
    Double GlyphSize { get; set; };
    [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
    Boolean IsExpanded { get; set; };
    TreeViewItemTemplateSettings TreeViewItemTemplateSettings { get; };

    static Microsoft.UI.Xaml.DependencyProperty GlyphOpacityProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty GlyphBrushProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty ExpandedGlyphProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty CollapsedGlyphProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty GlyphSizeProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty IsExpandedProperty { get; };
    static Microsoft.UI.Xaml.DependencyProperty TreeViewItemTemplateSettingsProperty { get; };

    [MUX_PUBLIC]
    {
        [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
        Boolean HasUnrealizedChildren{ get; set; };
        [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
        Object ItemsSource{ get; set; };

        static Microsoft.UI.Xaml.DependencyProperty HasUnrealizedChildrenProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemsSourceProperty{ get; };
    }
}

}
