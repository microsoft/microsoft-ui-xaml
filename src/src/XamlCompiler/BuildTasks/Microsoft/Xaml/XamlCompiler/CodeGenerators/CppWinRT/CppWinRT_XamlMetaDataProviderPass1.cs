// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Microsoft.UI.Xaml.Markup.Compiler.CodeGen
{
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    internal partial class CppWinRT_XamlMetaDataProviderPass1 : CppWinRT_CodeGenerator<TypeInfoDefinition>
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(@"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma once

#include <functional>
#include <map>
#include <vector>
#include <unknwn.h>

// Undefine GetCurrentTime macro to prevent
// conflict with Storyboard::GetCurrentTime
#undef GetCurrentTime

#include ""XamlTypeInfo.xaml.g.h""
#include ""XamlMetaDataProvider.g.h""

/*
    If the file above was not generated, you may be missing a declaration
    for the XamlMetaDataProvider runtimeclass in your IDL.

    namespace ");
            this.Write(this.ToStringHelper.ToStringWithCulture(ProjectInfo.RootNamespace));
            this.Write("\r\n    {\r\n        runtimeclass XamlMetaDataProvider : ");
            this.Write(this.ToStringHelper.ToStringWithCulture(KnownNamespaces.XamlMarkup));
            this.Write(".IXamlMetadataProvider\r\n        {\r\n            XamlMetaDataProvider();\r\n        }" +
                    ";\r\n    }\r\n*/\r\n\r\nnamespace winrt::");
            this.Write(this.ToStringHelper.ToStringWithCulture(Colonize(ProjectInfo.RootNamespace)));
            this.Write("::implementation\r\n{\r\n    using IXamlMember = ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Projection(KnownNamespaces.XamlMarkup)));
            this.Write("::IXamlMember;\r\n    using IXamlType = ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Projection(KnownNamespaces.XamlMarkup)));
            this.Write("::IXamlType;\r\n\r\n    struct XamlMetaDataProvider : public ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Projection(ProjectInfo.RootNamespace)));
            this.Write("::implementation::XamlMetaDataProvider_base<XamlMetaDataProvider>\r\n    {\r\n       " +
                    " IXamlType GetXamlType(");
            this.Write(this.ToStringHelper.ToStringWithCulture(Projection(KnownNamespaces.WindowsXamlInterop)));
            this.Write("::TypeName const& type);\r\n        IXamlType GetXamlType(::winrt::hstring const& f" +
                    "ullName);\r\n        ::winrt::com_array<");
            this.Write(this.ToStringHelper.ToStringWithCulture(Projection(KnownNamespaces.XamlMarkup)));
            this.Write("::XmlnsDefinition> GetXmlnsDefinitions();\r\n");
  if(!ProjectInfo.GenerateProviderCode) { 
            this.Write("        void AddOtherProvider(");
            this.Write(this.ToStringHelper.ToStringWithCulture(Projection(KnownNamespaces.XamlMarkup)));
            this.Write("::IXamlMetadataProvider otherProvider);\r\n");
  }
            this.Write("\r\n    private:\r\n        std::shared_ptr<XamlTypeInfoProvider> _provider;\r\n       " +
                    " std::shared_ptr<XamlTypeInfoProvider> Provider();\r\n    };\r\n}\r\n\r\nnamespace winrt" +
                    "::");
            this.Write(this.ToStringHelper.ToStringWithCulture(Colonize(ProjectInfo.RootNamespace)));
            this.Write("::factory_implementation\r\n{\r\n    struct XamlMetaDataProvider : XamlMetaDataProvid" +
                    "erT<XamlMetaDataProvider, implementation::XamlMetaDataProvider>\r\n    {\r\n    };\r\n" +
                    "}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
}
