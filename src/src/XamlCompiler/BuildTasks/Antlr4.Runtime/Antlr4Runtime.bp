// ------------------------------------------------------------------------------------
// Copyright(c) Microsoft Corporation.  All rights reserved.
// ------------------------------------------------------------------------------------

namespace XAMLCompiler.BuildTasks.Antlr4.Runtime {
    // DEF: Microsoft.External.Tools.XAMLCompiler.antlr4Runtime
    export const antlr4Runtime: SourceFile[] = [
        f`AntlrFileStream.cs`,
        f`AntlrInputStream.cs`,
        f`Atn/AbstractPredicateTransition.cs`,
        f`Atn/ActionTransition.cs`,
        f`Atn/AmbiguityInfo.cs`,
        f`Atn/ArrayPredictionContext.cs`,
        f`Atn/ATN.cs`,
        f`Atn/ATNConfig.cs`,
        f`Atn/ATNConfigSet.cs`,
        f`Atn/ATNDeserializationOptions.cs`,
        f`Atn/ATNDeserializer.cs`,
        f`Atn/ATNSimulator.cs`,
        f`Atn/ATNState.cs`,
        f`Atn/ATNType.cs`,
        f`Atn/AtomTransition.cs`,
        f`Atn/BasicBlockStartState.cs`,
        f`Atn/BasicState.cs`,
        f`Atn/BlockEndState.cs`,
        f`Atn/BlockStartState.cs`,
        f`Atn/ConflictInfo.cs`,
        f`Atn/ContextSensitivityInfo.cs`,
        f`Atn/DecisionEventInfo.cs`,
        f`Atn/DecisionInfo.cs`,
        f`Atn/DecisionState.cs`,
        f`Atn/EmptyPredictionContext.cs`,
        f`Atn/EpsilonTransition.cs`,
        f`Atn/ErrorInfo.cs`,
        f`Atn/ILexerAction.cs`,
        f`Atn/LexerActionExecutor.cs`,
        f`Atn/LexerActionType.cs`,
        f`Atn/LexerATNSimulator.cs`,
        f`Atn/LexerChannelAction.cs`,
        f`Atn/LexerCustomAction.cs`,
        f`Atn/LexerIndexedCustomAction.cs`,
        f`Atn/LexerModeAction.cs`,
        f`Atn/LexerMoreAction.cs`,
        f`Atn/LexerPopModeAction.cs`,
        f`Atn/LexerPushModeAction.cs`,
        f`Atn/LexerSkipAction.cs`,
        f`Atn/LexerTypeAction.cs`,
        f`Atn/LL1Analyzer.cs`,
        f`Atn/LookaheadEventInfo.cs`,
        f`Atn/LoopEndState.cs`,
        f`Atn/NotSetTransition.cs`,
        f`Atn/OrderedATNConfigSet.cs`,
        f`Atn/ParseInfo.cs`,
        f`Atn/ParserATNSimulator.cs`,
        f`Atn/PlusBlockStartState.cs`,
        f`Atn/PlusLoopbackState.cs`,
        f`Atn/PrecedencePredicateTransition.cs`,
        f`Atn/PredicateEvalInfo.cs`,
        f`Atn/PredicateTransition.cs`,
        f`Atn/PredictionContext.cs`,
        f`Atn/PredictionContextCache.cs`,
        f`Atn/PredictionMode.cs`,
        f`Atn/ProfilingATNSimulator.cs`,
        f`Atn/RangeTransition.cs`,
        f`Atn/RuleStartState.cs`,
        f`Atn/RuleStopState.cs`,
        f`Atn/RuleTransition.cs`,
        f`Atn/SemanticContext.cs`,
        f`Atn/SetTransition.cs`,
        f`Atn/SimulatorState.cs`,
        f`Atn/SingletonPredictionContext.cs`,
        f`Atn/StarBlockStartState.cs`,
        f`Atn/StarLoopbackState.cs`,
        f`Atn/StarLoopEntryState.cs`,
        f`Atn/StateType.cs`,
        f`Atn/TokensStartState.cs`,
        f`Atn/Transition.cs`,
        f`Atn/TransitionType.cs`,
        f`Atn/WildcardTransition.cs`,
        f`BailErrorStrategy.cs`,
        f`BaseErrorListener.cs`,
        f`BufferedTokenStream.cs`,
        f`CommonToken.cs`,
        f`CommonTokenFactory.cs`,
        f`CommonTokenStream.cs`,
        f`ConsoleErrorListener.cs`,
        f`DefaultErrorStrategy.cs`,
        f`Dependents.cs`,
        f`Dfa/AbstractEdgeMap.cs`,
        f`Dfa/AcceptStateInfo.cs`,
        f`Dfa/ArrayEdgeMap.cs`,
        f`Dfa/DFA.cs`,
        f`Dfa/DFASerializer.cs`,
        f`Dfa/DFAState.cs`,
        f`Dfa/EmptyEdgeMap.cs`,
        f`Dfa/IEdgeMap.cs`,
        f`Dfa/LexerDFASerializer.cs`,
        f`Dfa/SingletonEdgeMap.cs`,
        f`Dfa/SparseEdgeMap.cs`,
        f`DiagnosticErrorListener.cs`,
        f`FailedPredicateException.cs`,
        f`IAntlrErrorListener.cs`,
        f`IAntlrErrorStrategy.cs`,
        f`ICharStream.cs`,
        f`IIntStream.cs`,
        f`InputMismatchException.cs`,
        f`InterpreterRuleContext.cs`,
        f`IParserErrorListener.cs`,
        f`IRecognizer.cs`,
        f`IToken.cs`,
        f`ITokenFactory.cs`,
        f`ITokenSource.cs`,
        f`ITokenStream.cs`,
        f`IVocabulary.cs`,
        f`IWritableToken.cs`,
        f`Lexer.cs`,
        f`LexerInterpreter.cs`,
        f`LexerNoViableAltException.cs`,
        f`ListTokenSource.cs`,
        f`Misc/Args.cs`,
        f`Misc/IIntSet.cs`,
        f`Misc/Interval.cs`,
        f`Misc/IntervalSet.cs`,
        f`Misc/MultiMap.cs`,
        f`Misc/MurmurHash.cs`,
        f`Misc/NotNullAttribute.cs`,
        f`Misc/NullableAttribute.cs`,
        f`Misc/ParseCanceledException.cs`,
        f`Misc/RuleDependencyChecker.cs`,
        f`Misc/Utils.cs`,
        f`NoViableAltException.cs`,
        f`Parser.cs`,
        f`ParserInterpreter.cs`,
        f`ParserRuleContext.cs`,
        f`ProxyErrorListener.cs`,
        f`ProxyParserErrorListener.cs`,
        f`RecognitionException.cs`,
        f`Recognizer.cs`,
        f`RuleContext.cs`,
        f`RuleDependencyAttribute.cs`,
        f`RuleVersionAttribute.cs`,
        f`Sharpen/Arrays.cs`,
        f`Sharpen/AtomicReference.cs`,
        f`Sharpen/BitSet.cs`,
        f`Sharpen/Collections.cs`,
        f`Sharpen/Compat/CollectionDebuggerView.cs`,
        f`Sharpen/Compat/ConcurrentDictionary.cs`,
        f`Sharpen/Compat/Funcs.cs`,
        f`Sharpen/Compat/IStructuralComparable.cs`,
        f`Sharpen/Compat/IStructuralEquatable.cs`,
        f`Sharpen/Compat/SerializableAttribute.cs`,
        f`Sharpen/Compat/SplitOrderedList.cs`,
        f`Sharpen/Compat/Tuple.cs`,
        f`Sharpen/Compat/Tuples.cs`,
        f`Sharpen/DictionaryExtensions.cs`,
        f`Sharpen/ListExtensions.cs`,
        f`Sharpen/Runtime.cs`,
        f`Sharpen/SequenceEqualityComparer.cs`,
        f`TokenStreamRewriter.cs`,
        f`TokenTypes.cs`,
        f`Tree/AbstractParseTreeVisitor.cs`,
        f`Tree/ErrorNodeImpl.cs`,
        f`Tree/IErrorNode.cs`,
        f`Tree/IParseTree.cs`,
        f`Tree/IParseTreeListener.cs`,
        f`Tree/IParseTreeVisitor.cs`,
        f`Tree/IRuleNode.cs`,
        f`Tree/ISyntaxTree.cs`,
        f`Tree/ITerminalNode.cs`,
        f`Tree/ITree.cs`,
        f`Tree/ParseTreeProperty.cs`,
        f`Tree/ParseTreeWalker.cs`,
        f`Tree/Pattern/Chunk.cs`,
        f`Tree/Pattern/ParseTreeMatch.cs`,
        f`Tree/Pattern/ParseTreePattern.cs`,
        f`Tree/Pattern/ParseTreePatternMatcher.cs`,
        f`Tree/Pattern/RuleTagToken.cs`,
        f`Tree/Pattern/TagChunk.cs`,
        f`Tree/Pattern/TextChunk.cs`,
        f`Tree/Pattern/TokenTagToken.cs`,
        f`Tree/TerminalNodeImpl.cs`,
        f`Tree/Trees.cs`,
        f`Tree/Xpath/XPath.cs`,
        f`Tree/Xpath/XPathElement.cs`,
        f`Tree/Xpath/XPathLexer.cs`,
        f`Tree/Xpath/XPathLexerErrorListener.cs`,
        f`Tree/Xpath/XPathRuleAnywhereElement.cs`,
        f`Tree/Xpath/XPathRuleElement.cs`,
        f`Tree/Xpath/XPathTokenAnywhereElement.cs`,
        f`Tree/Xpath/XPathTokenElement.cs`,
        f`Tree/Xpath/XPathWildcardAnywhereElement.cs`,
        f`Tree/Xpath/XPathWildcardElement.cs`,
        f`UnbufferedCharStream.cs`,
        f`UnbufferedTokenStream.cs`,
        f`Vocabulary.cs`,
    ];
}