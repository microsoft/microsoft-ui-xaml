<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Corporation. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <IsWinmdProject>true</IsWinmdProject>
    <DisableTransitiveProjectReferences>true</DisableTransitiveProjectReferences>
  </PropertyGroup>

  <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" />

  <PropertyGroup Label="Globals">
    <XamlMSBuildAutoGenerate>false</XamlMSBuildAutoGenerate>
    <ConfigurationType>Utility</ConfigurationType>
    <ProjectGuid>{52b2ed64-1cfc-401b-8c5b-6d1e1deadf98}</ProjectGuid>
  </PropertyGroup>

  <PropertyGroup>
    <IgnorePrivateMUXMetadataDir>true</IgnorePrivateMUXMetadataDir>

    <!--
      TEMPORARY: explicitly hardcoded merge depths per namespace, to ensure that external refererences
      are correctly generated for Microsoft.UI.Xaml.winmd, with the merge of Microsoft.UI.winmd.
      Long term fix is switch IXP (Microsoft.UI) from mdmerge input to reference.
     -->
    <WinMdNamespaceOptions>-n:2 -n:Microsoft.UI.Xaml:3 -n:Microsoft.UI.Private:3</WinMdNamespaceOptions>

  <!--
    This project still needs to define the $(OutputWinmds) because it doesn't actually produce it's own .winmd, instead it's just a project
    that merges other already generated .winmd files. Defining these allows for proper incremental builds of the _ComposedMetadata target.
    Note that the WinMdNamespaceOptions corresponds to the OutputWinmds specified, since we pass "3", this means that the produced winmds
    will have a depth of 3 namespaces.
  -->
    <OutputWinmds>
      $(MergedWinmdOutputLocation)Microsoft.UI.winmd;
      $(MergedWinmdOutputLocation)Microsoft.UI.Xaml.winmd;
      $(MergedWinmdOutputLocation)Microsoft.Graphics.winmd;
      $(MergedWinmdOutputLocation)Microsoft.Foundation.winmd;
    </OutputWinmds>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="@(ExternalWinMDs)"/>

    <!--
      The Microsoft.UI.Xaml.Controls build is quite different from the rest of the build.
      So we won't try to reference the assemblies via ProjectReference, but we'll keep the project
      reference around to ensure proper build order
    -->
    <Reference Include="@(MuxControlsWinMD)" />
    <ProjectReference Include="$(MuxControlsPath)\idl\Microsoft.UI.Xaml.Controls.idl.vcxproj" ReferenceOutputAssembly="false" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="@(UnMergedMuxProject)"/>
  </ItemGroup>
</Project>
