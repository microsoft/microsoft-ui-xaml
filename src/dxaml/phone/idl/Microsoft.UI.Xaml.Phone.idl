// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//
//  WindowsRuntimeAPISet

//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML WinRT APIs.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "sdkddkver.h"

import "oaidl.idl";
import "eventtoken.idl";
import "inspectable.idl";
import "microsoft.ui.composition.idl";
import "microsoft.ui.composition.SystemBackdrops.idl";
import "microsoft.ui.content.idl";
import "microsoft.UI.Dispatching.idl";
import "microsoft.ui.input.idl";
import "microsoft.ui.xaml.idl";
import "windows.foundation.idl";
import "windows.foundation.numerics.idl";

import "windows.applicationModel.datatransfer.dragdrop.idl";
import "windows.applicationModel.datatransfer.dragdrop.core.idl";
import "windows.foundation.customattributes.idl";
import "windows.ui.xaml.interop.idl";



namespace Microsoft.UI.Xaml.Media.Animation
{

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum SlideNavigationTransitionEffect
    {
        FromBottom,
        FromLeft,
        FromRight,
    };
}
namespace Microsoft.UI.Xaml.Controls
{

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum ListPickerFlyoutSelectionMode
    {
        Single,
        Multiple,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum PivotHeaderFocusVisualPlacement
    {
        ItemHeaders,
        SelectedItemHeader,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum PivotSlideInAnimationGroup
    {
        Default,
        GroupOne,
        GroupTwo,
        GroupThree,
    };
}


namespace Microsoft.UI.Xaml
{
    declare
    {
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.ListPickerFlyoutSelectionMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.PivotHeaderFocusVisualPlacement>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.PivotSlideInAnimationGroup>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionEffect>;
    }
}


namespace Microsoft.UI.Xaml.Media.Animation
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass CommonNavigationTransitionInfo
        : Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
    {
        CommonNavigationTransitionInfo();
        Boolean IsStaggeringEnabled;
        static Microsoft.UI.Xaml.DependencyProperty IsStaggeringEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsStaggerElementProperty{ get; };
        static Boolean GetIsStaggerElement(Microsoft.UI.Xaml.UIElement element);
        static void SetIsStaggerElement(Microsoft.UI.Xaml.UIElement element, Boolean value);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ContinuumNavigationTransitionInfo
        : Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
    {
        ContinuumNavigationTransitionInfo();
        Microsoft.UI.Xaml.UIElement ExitElement;
        static Microsoft.UI.Xaml.DependencyProperty ExitElementProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsEntranceElementProperty{ get; };
        static Boolean GetIsEntranceElement(Microsoft.UI.Xaml.UIElement element);
        static void SetIsEntranceElement(Microsoft.UI.Xaml.UIElement element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty IsExitElementProperty{ get; };
        static Boolean GetIsExitElement(Microsoft.UI.Xaml.UIElement element);
        static void SetIsExitElement(Microsoft.UI.Xaml.UIElement element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty ExitElementContainerProperty{ get; };
        static Boolean GetExitElementContainer(Microsoft.UI.Xaml.Controls.ListViewBase element);
        static void SetExitElementContainer(Microsoft.UI.Xaml.Controls.ListViewBase element, Boolean value);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass DrillInNavigationTransitionInfo
        : Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
    {
        DrillInNavigationTransitionInfo();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass EntranceNavigationTransitionInfo
        : Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
    {
        EntranceNavigationTransitionInfo();
        static Microsoft.UI.Xaml.DependencyProperty IsTargetElementProperty{ get; };
        static Boolean GetIsTargetElement(Microsoft.UI.Xaml.UIElement element);
        static void SetIsTargetElement(Microsoft.UI.Xaml.UIElement element, Boolean value);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("DefaultNavigationTransitionInfo")]
    runtimeclass NavigationThemeTransition
        : Microsoft.UI.Xaml.Media.Animation.Transition
    {
        NavigationThemeTransition();
        Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo DefaultNavigationTransitionInfo;
        static Microsoft.UI.Xaml.DependencyProperty DefaultNavigationTransitionInfoProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass SlideNavigationTransitionInfo
        : Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
    {
        SlideNavigationTransitionInfo();
        Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionEffect Effect;
        static Microsoft.UI.Xaml.DependencyProperty EffectProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass SuppressNavigationTransitionInfo
        : Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
    {
        SuppressNavigationTransitionInfo();
    };

}
namespace Microsoft.UI.Xaml.Controls
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass PivotItemEventArgs
    {
        PivotItemEventArgs();
        Microsoft.UI.Xaml.Controls.PivotItem Item;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass DatePickedEventArgs
        : Microsoft.UI.Xaml.DependencyObject
    {
        DatePickedEventArgs();
        Windows.Foundation.DateTime OldDate{ get; };
        Windows.Foundation.DateTime NewDate{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass DatePickerFlyoutItem
        : Microsoft.UI.Xaml.DependencyObject
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Data.ICustomPropertyProvider
    {
        String PrimaryText;
        String SecondaryText;
        static Microsoft.UI.Xaml.DependencyProperty PrimaryTextProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SecondaryTextProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ItemsPickedEventArgs
        : Microsoft.UI.Xaml.DependencyObject
    {
        ItemsPickedEventArgs();
        Windows.Foundation.Collections.IVector<Object> AddedItems{ get; };
        Windows.Foundation.Collections.IVector<Object> RemovedItems{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass PickerConfirmedEventArgs
        : Microsoft.UI.Xaml.DependencyObject
    {
        PickerConfirmedEventArgs();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TimePickedEventArgs
        : Microsoft.UI.Xaml.DependencyObject
    {
        TimePickedEventArgs();
        Windows.Foundation.TimeSpan OldTime{ get; };
        Windows.Foundation.TimeSpan NewTime{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass DatePickerFlyout
        : Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase
    {
        DatePickerFlyout();
        String CalendarIdentifier;
        Windows.Foundation.DateTime Date;
        Boolean DayVisible;
        Boolean MonthVisible;
        Boolean YearVisible;
        Windows.Foundation.DateTime MinYear;
        Windows.Foundation.DateTime MaxYear;
        String DayFormat;
        String MonthFormat;
        String YearFormat;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.DatePickerFlyout,Microsoft.UI.Xaml.Controls.DatePickedEventArgs> DatePicked;
        Windows.Foundation.IAsyncOperation<Windows.Foundation.IReference<Windows.Foundation.DateTime> > ShowAtAsync(Microsoft.UI.Xaml.FrameworkElement target);
        static Microsoft.UI.Xaml.DependencyProperty CalendarIdentifierProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty DateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty DayVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MonthVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty YearVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MinYearProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MaxYearProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty DayFormatProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MonthFormatProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty YearFormatProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ListPickerFlyout
        : Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase
    {
        ListPickerFlyout();
        Object ItemsSource;
        Microsoft.UI.Xaml.DataTemplate ItemTemplate;
        String DisplayMemberPath;
        Microsoft.UI.Xaml.Controls.ListPickerFlyoutSelectionMode SelectionMode;
        Int32 SelectedIndex;
        Object SelectedItem;
        Object SelectedValue;
        String SelectedValuePath;
        Windows.Foundation.Collections.IVector<Object> SelectedItems{ get; };
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ListPickerFlyout,Microsoft.UI.Xaml.Controls.ItemsPickedEventArgs> ItemsPicked;
        Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Object> > ShowAtAsync(Microsoft.UI.Xaml.FrameworkElement target);
        static Microsoft.UI.Xaml.DependencyProperty ItemsSourceProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty DisplayMemberPathProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectionModeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectedIndexProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectedItemProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectedValueProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectedValuePathProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Content")]
    runtimeclass PickerFlyout
        : Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase
    {
        PickerFlyout();
        Microsoft.UI.Xaml.UIElement Content;
        Boolean ConfirmationButtonsVisible;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.PickerFlyout,Microsoft.UI.Xaml.Controls.PickerConfirmedEventArgs> Confirmed;
        Windows.Foundation.IAsyncOperation<Boolean> ShowAtAsync(Microsoft.UI.Xaml.FrameworkElement target);
        static Microsoft.UI.Xaml.DependencyProperty ContentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ConfirmationButtonsVisibleProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TimePickerFlyout
        : Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase
    {
        TimePickerFlyout();
        String ClockIdentifier;
        Windows.Foundation.TimeSpan Time;
        Int32 MinuteIncrement;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TimePickerFlyout,Microsoft.UI.Xaml.Controls.TimePickedEventArgs> TimePicked;
        Windows.Foundation.IAsyncOperation<Windows.Foundation.IReference<Windows.Foundation.TimeSpan> > ShowAtAsync(Microsoft.UI.Xaml.FrameworkElement target);
        static Microsoft.UI.Xaml.DependencyProperty ClockIdentifierProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TimeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MinuteIncrementProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass DatePickerFlyoutPresenter
        : Microsoft.UI.Xaml.Controls.Control
    {
        Boolean IsDefaultShadowEnabled;
        static Microsoft.UI.Xaml.DependencyProperty IsDefaultShadowEnabledProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass ListPickerFlyoutPresenter
        : Microsoft.UI.Xaml.Controls.Control
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TimePickerFlyoutPresenter
        : Microsoft.UI.Xaml.Controls.Control
    {
        Boolean IsDefaultShadowEnabled;
        static Microsoft.UI.Xaml.DependencyProperty IsDefaultShadowEnabledProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass PickerFlyoutPresenter
        : Microsoft.UI.Xaml.Controls.ContentControl
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass Pivot
        : Microsoft.UI.Xaml.Controls.ItemsControl
    {
        [method_name("CreateInstance")] Pivot();
        Object Title;
        Microsoft.UI.Xaml.DataTemplate TitleTemplate;
        Object LeftHeader;
        Microsoft.UI.Xaml.DataTemplate LeftHeaderTemplate;
        Object RightHeader;
        Microsoft.UI.Xaml.DataTemplate RightHeaderTemplate;
        Microsoft.UI.Xaml.DataTemplate HeaderTemplate;
        Int32 SelectedIndex;
        Object SelectedItem;
        Boolean IsLocked;
        Microsoft.UI.Xaml.Controls.PivotHeaderFocusVisualPlacement HeaderFocusVisualPlacement;
        Boolean IsHeaderItemsCarouselEnabled;
        event Microsoft.UI.Xaml.Controls.SelectionChangedEventHandler SelectionChanged;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Pivot,Microsoft.UI.Xaml.Controls.PivotItemEventArgs> PivotItemLoading;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Pivot,Microsoft.UI.Xaml.Controls.PivotItemEventArgs> PivotItemLoaded;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Pivot,Microsoft.UI.Xaml.Controls.PivotItemEventArgs> PivotItemUnloading;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Pivot,Microsoft.UI.Xaml.Controls.PivotItemEventArgs> PivotItemUnloaded;
        static Microsoft.UI.Xaml.DependencyProperty TitleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TitleTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LeftHeaderProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LeftHeaderTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty RightHeaderProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty RightHeaderTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectedIndexProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectedItemProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsLockedProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderFocusVisualPlacementProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsHeaderItemsCarouselEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SlideInAnimationGroupProperty{ get; };
        static Microsoft.UI.Xaml.Controls.PivotSlideInAnimationGroup GetSlideInAnimationGroup(Microsoft.UI.Xaml.FrameworkElement element);
        static void SetSlideInAnimationGroup(Microsoft.UI.Xaml.FrameworkElement element, Microsoft.UI.Xaml.Controls.PivotSlideInAnimationGroup value);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass PivotItem
        : Microsoft.UI.Xaml.Controls.ContentControl
    {
        [method_name("CreateInstance")] PivotItem();
        Object Header;
        static Microsoft.UI.Xaml.DependencyProperty HeaderProperty{ get; };
    };

}
namespace Microsoft.UI.Xaml.Controls.Primitives
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass JumpListItemBackgroundConverter
        : Microsoft.UI.Xaml.DependencyObject
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Data.IValueConverter
    {
        JumpListItemBackgroundConverter();
        Microsoft.UI.Xaml.Media.Brush Enabled;
        Microsoft.UI.Xaml.Media.Brush Disabled;
        static Microsoft.UI.Xaml.DependencyProperty EnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty DisabledProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass JumpListItemForegroundConverter
        : Microsoft.UI.Xaml.DependencyObject
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Data.IValueConverter
    {
        JumpListItemForegroundConverter();
        Microsoft.UI.Xaml.Media.Brush Enabled;
        Microsoft.UI.Xaml.Media.Brush Disabled;
        static Microsoft.UI.Xaml.DependencyProperty EnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty DisabledProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [constructor_name("Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseFactory")]
    [default_interface]
    unsealed runtimeclass PickerFlyoutBase
        : Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase
    {
        [method_name("CreateInstance")] protected PickerFlyoutBase();
        static Microsoft.UI.Xaml.DependencyProperty TitleProperty{ get; };
        static String GetTitle(Microsoft.UI.Xaml.DependencyObject element);
        static void SetTitle(Microsoft.UI.Xaml.DependencyObject element, String value);
        overridable void OnConfirmed();
        overridable Boolean ShouldShowConfirmationButtons();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass LoopingSelector
        : Microsoft.UI.Xaml.Controls.Control
    {
        Boolean ShouldLoop;
        Windows.Foundation.Collections.IVector<Object> Items;
        Int32 SelectedIndex;
        Object SelectedItem;
        Int32 ItemWidth;
        Int32 ItemHeight;
        Microsoft.UI.Xaml.DataTemplate ItemTemplate;
        event Microsoft.UI.Xaml.Controls.SelectionChangedEventHandler SelectionChanged;
        static Microsoft.UI.Xaml.DependencyProperty ShouldLoopProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectedIndexProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectedItemProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemWidthProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemHeightProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemTemplateProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass PivotPanel
        : Microsoft.UI.Xaml.Controls.Panel
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
    {
        PivotPanel();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass LoopingSelectorItem
        : Microsoft.UI.Xaml.Controls.ContentControl
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass LoopingSelectorPanel
        : Microsoft.UI.Xaml.Controls.Canvas
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass PivotHeaderItem
        : Microsoft.UI.Xaml.Controls.ContentControl
    {
        [method_name("CreateInstance")] PivotHeaderItem();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass PivotHeaderPanel
        : Microsoft.UI.Xaml.Controls.Canvas
    {
        PivotHeaderPanel();
    };

}
namespace Microsoft.UI.Xaml.Automation.Peers
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass LoopingSelectorItemDataAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass DatePickerFlyoutPresenterAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass ListPickerFlyoutPresenterAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass LoopingSelectorAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IScrollProvider
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass LoopingSelectorItemAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass PickerFlyoutPresenterAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass PivotItemAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] PivotItemAutomationPeer(Microsoft.UI.Xaml.Controls.PivotItem owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass PivotItemDataAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider
    {
        [method_name("CreateInstanceWithParentAndItem")] PivotItemDataAutomationPeer(Object item, Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer parent);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass TimePickerFlyoutPresenterAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass PivotAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IScrollProvider
    {
        [method_name("CreateInstanceWithOwner")] PivotAutomationPeer(Microsoft.UI.Xaml.Controls.Pivot owner);
    };

}

