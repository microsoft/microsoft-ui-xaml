<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Corporation. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- The only thing this does is to set the two unicode macros and use the wide character entrypoing Symbol (wWinMainCRTStartup) -->
  <!-- We currently add these macros manually in a small number of directories. -->
  <!--
    <PropertyGroup>
        <CharacterSet>Unicode</CharacterSet>
    </PropertyGroup>
    -->

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'" Label="Configuration">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'" Label="Configuration">
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <ClCompile>
      <!-- So we use old style debug format, BUT... it automatically addes a _DEBUG preprocessor definition which we don't -->
      <!-- want.  It also seems that this is what causes our pch problem.  But we need to figure out how to get the right  -->
      <!-- debug information.   Part of this is specifying the Z7 flag                                                     -->
      <!-- <DebugInformationFormat>OldStyle</DebugInformationFormat> -->
      <DebugInformationFormat>OldStyle</DebugInformationFormat>
      <LinkTimeCodeGeneration Condition="'$(Configuration)' == 'Release'">UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
      <SupportJustMyCode>false</SupportJustMyCode>

      <FavorSizeOrSpeed Condition="'$(Configuration)'=='Release'">Size</FavorSizeOrSpeed>
      <Optimization Condition="'$(Platform)'=='Win32'">Full</Optimization>
      <Optimization Condition="'$(Platform)'=='x64'">Full</Optimization>
      <Optimization Condition="'$(Configuration)'=='Debug' or '$(NoOptimization)'=='true'">Disabled</Optimization>
      <IntrinsicFunctions Condition="'$(Configuration)'!='Release'">true</IntrinsicFunctions>

      <LanguageStandard>stdcpp17</LanguageStandard>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <StringPooling>true</StringPooling>
      <ErrorReporting>Queue</ErrorReporting>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <StructMemberAlignment>8Bytes</StructMemberAlignment>
      <OmitDefaultLibName>true</OmitDefaultLibName>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <CompileAs>Default</CompileAs>
      <UseFullPaths>true</UseFullPaths>
      <ExceptionHandling>false</ExceptionHandling>

      <AdditionalOptions Condition="'%(Optimization)'=='Disabled'">%(AdditionalOptions) -DMSC_NOOPT /wd4748</AdditionalOptions>
      <AdditionalOptions Condition="'$(Configuration)'!='Debug'">%(AdditionalOptions) -DNDEBUG</AdditionalOptions>
      <AdditionalOptions Condition="'$(Configuration)'=='Debug'">%(AdditionalOptions) -DDBG=1</AdditionalOptions>
      <AdditionalOptions Condition="'$(Configuration)'!='Debug'">%(AdditionalOptions) -d1nodatetime</AdditionalOptions>
      <AdditionalOptions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalOptions) -homeparams</AdditionalOptions>
      <AdditionalOptions Condition="'$(Platform)'=='Win32'">%(AdditionalOptions) -arch:IA32 -d2VolatileMetadata -DBUILD_UMS_ENABLED=0 -DBUILD_WOW64_ENABLED=0 -DFPO=0</AdditionalOptions>
      <AdditionalOptions Condition="'$(Platform)'=='x64'">%(AdditionalOptions) -D@@@=1 -I@@@ -DAMD64 -D_AMD64_ -D_WIN64 -d2guardcfgdispatch</AdditionalOptions>

      <ShowIncludes Condition="'$(USE_SHOWINCLUDES)' != ''">true</ShowIncludes>
      <!-- $TODO: We only seem to specify -Gz for x32 (not amd64).  Figure out if this is correct -->
      <!-- We should be able to remove this all together.  Gd is the default.  NT Builds specifies it explicitly for x86, but not for x64 -->
      <CallingConvention Condition="'$(Platform)'=='Win32'">StdCall</CallingConvention>
      <PreprocessorDefinitions Condition="'$(Platform)'=='Win32'">STD_CALL;%(PreprocessorDefinitions)</PreprocessorDefinitions>

      <ConformanceMode>false</ConformanceMode>
      <SDLCheck>true</SDLCheck>
      <MultiProcessorCompilation Condition="'$(USE_SHOWINCLUDES)' == ''">true</MultiProcessorCompilation>

      <PreprocessorDefinitions>
        %(PreprocessorDefinitions);
        $(XamlCommonPreprocessorDefinitions);
        CONDITION_HANDLING=1;
        WINNT=1;
        WIN32=100;
        _NT1X_=100;
        _WIN32_WINNT=0x0A00;
        WINVER=0x0A00;
        _WIN32_IE=0x0A00;
        DEVL=1;
        _USE_DECLSPECS_FOR_SAL=1;
        _FULL_IOBUF;
        WIN32_LEAN_AND_MEAN=1;
        WINRT_LEAN_AND_MEAN;
      </PreprocessorDefinitions>
      <!-- Not sure of the condition for these items.  They only appear in 32 directories, but am not yet seeing -->
      <!-- a pattern as to which ones.                                                                          -->
      <!-- test\mockdomp\pch                                                                                    -->
      <PreprocessorDefinitions>
        %(PreprocessorDefinitions)
        NT_INST=0;
        NT_UP=1;
      </PreprocessorDefinitions>

      <!-- Common options for MSVC and Clang-CL -->
      <ExtraOptions>%(ExtraOptions)
        /Brepro
        /d2Zi+
        /Gw
        /ZH:SHA_256
        /w15043
        /DDONT_DISABLE_PCH_WARNINGS_IN_WARNING_H
        /D_HAS_MAGIC_STATICS=1</ExtraOptions>

      <!-- Need some more information on this.  The issue is that while what I think this is supposed to do is to   -->
      <!-- replace the path with keywords, what it actually does is replace it with the value of the environment   -->
      <!-- variable's value, and then tries to read that.  So, if we are going to use this, then we need to make   -->
      <!-- sure our environment variables match.  In which case, I don't know what use this is.                    -->
      <!-- /d1trimfile:$(XamlEXECPath)\=_NTTREE  This will be the equivlenent of or BIN dir if we end up having one-->
      <!--
              /d1trimfile:$(XamlBinaryPath)\=OBJECT_ROOT
              /d1trimfile:$(XamlSourcePath)\=BASEDIR -->

      <!-- MSVC options. -->
      <ExtraOptions Condition="'$(ExperimentalClang)' != 'true'">%(ExtraOptions)
        /d1import_no_registry
        /d1vc7dname
        /d2NoSmallFunctionOpt
        /d2CoroOptsWorkaround
        /d2AllowCompatibleILVersions
        /d2Qvec-mathlib-
        /d2Qvec-sse2only
        /Qspectre
        /Zc:noexceptTypes-
      </ExtraOptions>

      <AdditionalOptions>%(AdditionalOptions) %(ExtraOptions)</AdditionalOptions>
    </ClCompile>
    <ProjectReference>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>

  </ItemDefinitionGroup>

    <!-- These items can't be determined until after the project has fully defined itself.  We will need to figure out a long -->
    <!-- term plan for props vs. targets vs. new custom props/targets                                                         -->
    <PropertyGroup>
        <!-- 
             Only use /Zc:lambda for non-C++/CX projects due to a bug in Visual Studio 17.3:
             https://developercommunity.visualstudio.com/t/Zc:lambda-causes-unexpected-conversion-/10088738
        -->
        <XamlCppOptionsForNonWinRt>
            /Zc:lambda
        </XamlCppOptionsForNonWinRt>
        <XamlCppOptionsForWinRt>
            /AI"$(ProjectSDKMetadataPath)"
            /AI"$(VCToolsInstallDir)lib\x86\store\references"
            /await
            /Brepro
            /d1import_no_registry
            /d1ReturnUdtEHInline
            -d1vc7dname
            /d1ZWodr
            /d2AllowCompatibleILVersions
            /d2CoroOptsWorkaround
            /d2NoSmallFunctionOpt
            /d2Qvec-mathlib-
            /d2Qvec-sse2only
            /d2ReturnUdtEHInline
            /d2VolatileMetadata
            /d2Zi+
            /GR-
            /Gw
            /Qspectre
            /w15043
            /Zc:strictStrings
            /Zc:noexceptTypes-
            /ZH:SHA_256
            /ZW
            /ZW:nostdlib
        </XamlCppOptionsForWinRt>
        <XamlForcedUsingFilesForNonWinRt>
        </XamlForcedUsingFilesForNonWinRt>
        <XamlForcedUsingFilesForWinRt>
            $(SDKReferencesPath)\Windows.Foundation.FoundationContract.winmd;
            $(SDKReferencesPath)\Windows.Foundation.UniversalApiContract.winmd;
            $(WinUIWinMDReferencesForForcedUsings);
        </XamlForcedUsingFilesForWinRt>
        <XamlForcedUsingFilesForWinRtIncludesMUXWinMd>true</XamlForcedUsingFilesForWinRtIncludesMUXWinMd>
        <XamlPreprocessorDefinitionsForWinRt>
            BUILD_UMS_ENABLED=0;
            BUILD_WOW64_ENABLED=0;
            DONT_DISABLE_PCH_WARNINGS_IN_WARNING_H;
            FPO=0;
            MSC_NOOPT;
            WINAPI_FAMILY=WINAPI_FAMILY_DESKTOP_APP;
            _HAS_MAGIC_STATICS=1;
        </XamlPreprocessorDefinitionsForWinRt>
        <XamlPreprocessorDefinitionsForNonWinRt>
            _USE_DEV11_CRT;
        </XamlPreprocessorDefinitionsForNonWinRt>
    </PropertyGroup>
    <Target Name="SuppressStaticLibrary" Condition="'$(SuppressStaticLibrary)'=='true'" AfterTargets="ComputeCLGeneratedLibInputs" DependsOnTargets="ComputeCLOutputs">
        <ItemGroup>
            <Obj Remove="@(Obj)"/>
        </ItemGroup>
    </Target>
</Project>
