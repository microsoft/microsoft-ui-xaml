// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

namespace SimpleProperty
{
    // Specializations for host types.

    template <>
    struct sparse_host<CBrushTransition>
    {
        using declaring_type = CBrushTransition;
        static constexpr sparse_host_query_t<declaring_type> query = &declaring_type::IsSimpleSparseSet;
        static constexpr sparse_host_setter_t<declaring_type> setter = &declaring_type::SetSimpleSparseFlag;
    };

    template <>
    struct sparse_host<CScalarTransition>
    {
        using declaring_type = CScalarTransition;
        static constexpr sparse_host_query_t<declaring_type> query = &declaring_type::IsSimpleSparseSet;
        static constexpr sparse_host_setter_t<declaring_type> setter = &declaring_type::SetSimpleSparseFlag;
    };

    template <>
    struct sparse_host<CUIElement>
    {
        using declaring_type = CUIElement;
        static constexpr sparse_host_query_t<declaring_type> query = &declaring_type::IsSimpleSparseSet;
        static constexpr sparse_host_setter_t<declaring_type> setter = &declaring_type::SetSimpleSparseFlag;
    };

    template <>
    struct sparse_host<CVector3Transition>
    {
        using declaring_type = CVector3Transition;
        static constexpr sparse_host_query_t<declaring_type> query = &declaring_type::IsSimpleSparseSet;
        static constexpr sparse_host_setter_t<declaring_type> setter = &declaring_type::SetSimpleSparseFlag;
    };

    template <>
    struct sparse_host<CLinearGradientBrush>
    {
        using declaring_type = CLinearGradientBrush;
        static constexpr sparse_host_query_t<declaring_type> query = &declaring_type::IsSimpleSparseSet;
        static constexpr sparse_host_setter_t<declaring_type> setter = &declaring_type::SetSimpleSparseFlag;
    };

    namespace details
    {
        // Sparse table picker specializations.

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::BrushTransition_Duration>(sparsetables& tables)
        {
            return tables.m_BrushTransition_Duration;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::ScalarTransition_Duration>(sparsetables& tables)
        {
            return tables.m_ScalarTransition_Duration;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_AnimatedCenterPoint>(sparsetables& tables)
        {
            return tables.m_UIElement_AnimatedCenterPoint;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_AnimatedRotation>(sparsetables& tables)
        {
            return tables.m_UIElement_AnimatedRotation;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_AnimatedRotationAxis>(sparsetables& tables)
        {
            return tables.m_UIElement_AnimatedRotationAxis;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_AnimatedScale>(sparsetables& tables)
        {
            return tables.m_UIElement_AnimatedScale;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_AnimatedTransformMatrix>(sparsetables& tables)
        {
            return tables.m_UIElement_AnimatedTransformMatrix;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_AnimatedTranslation>(sparsetables& tables)
        {
            return tables.m_UIElement_AnimatedTranslation;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_CenterPoint>(sparsetables& tables)
        {
            return tables.m_UIElement_CenterPoint;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_KeepAliveCount>(sparsetables& tables)
        {
            return tables.m_UIElement_KeepAliveCount;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_RasterizationScale>(sparsetables& tables)
        {
            return tables.m_UIElement_RasterizationScale;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_Rotation>(sparsetables& tables)
        {
            return tables.m_UIElement_Rotation;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_RotationAxis>(sparsetables& tables)
        {
            return tables.m_UIElement_RotationAxis;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_Scale>(sparsetables& tables)
        {
            return tables.m_UIElement_Scale;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_ThemeShadowReceiverCount>(sparsetables& tables)
        {
            return tables.m_UIElement_ThemeShadowReceiverCount;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_TransformMatrix>(sparsetables& tables)
        {
            return tables.m_UIElement_TransformMatrix;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::UIElement_Translation>(sparsetables& tables)
        {
            return tables.m_UIElement_Translation;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::Vector3Transition_Components>(sparsetables& tables)
        {
            return tables.m_Vector3Transition_Components;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::Vector3Transition_Duration>(sparsetables& tables)
        {
            return tables.m_Vector3Transition_Duration;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::LinearGradientBrush_AnimatedCenterPoint>(sparsetables& tables)
        {
            return tables.m_LinearGradientBrush_AnimatedCenterPoint;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::LinearGradientBrush_AnimatedRotation>(sparsetables& tables)
        {
            return tables.m_LinearGradientBrush_AnimatedRotation;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::LinearGradientBrush_AnimatedScale>(sparsetables& tables)
        {
            return tables.m_LinearGradientBrush_AnimatedScale;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::LinearGradientBrush_AnimatedTransformMatrix>(sparsetables& tables)
        {
            return tables.m_LinearGradientBrush_AnimatedTransformMatrix;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::LinearGradientBrush_AnimatedTranslation>(sparsetables& tables)
        {
            return tables.m_LinearGradientBrush_AnimatedTranslation;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::LinearGradientBrush_CenterPoint>(sparsetables& tables)
        {
            return tables.m_LinearGradientBrush_CenterPoint;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::LinearGradientBrush_Rotation>(sparsetables& tables)
        {
            return tables.m_LinearGradientBrush_Rotation;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::LinearGradientBrush_Scale>(sparsetables& tables)
        {
            return tables.m_LinearGradientBrush_Scale;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::LinearGradientBrush_TransformMatrix>(sparsetables& tables)
        {
            return tables.m_LinearGradientBrush_TransformMatrix;
        }

        template <>
        static auto& PickSparseTable<KnownPropertyIndex::LinearGradientBrush_Translation>(sparsetables& tables)
        {
            return tables.m_LinearGradientBrush_Translation;
        }

        // Change handlers picker specializations.

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::BrushTransition_Duration>(changehandlerstables& handlers)
        {
            return handlers.m_BrushTransition_Duration;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::ScalarTransition_Duration>(changehandlerstables& handlers)
        {
            return handlers.m_ScalarTransition_Duration;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_AnimatedCenterPoint>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_AnimatedCenterPoint;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_AnimatedRotation>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_AnimatedRotation;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_AnimatedRotationAxis>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_AnimatedRotationAxis;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_AnimatedScale>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_AnimatedScale;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_AnimatedTransformMatrix>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_AnimatedTransformMatrix;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_AnimatedTranslation>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_AnimatedTranslation;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_CenterPoint>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_CenterPoint;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_KeepAliveCount>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_KeepAliveCount;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_RasterizationScale>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_RasterizationScale;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_Rotation>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_Rotation;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_RotationAxis>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_RotationAxis;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_Scale>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_Scale;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_ThemeShadowReceiverCount>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_ThemeShadowReceiverCount;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_TransformMatrix>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_TransformMatrix;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::UIElement_Translation>(changehandlerstables& handlers)
        {
            return handlers.m_UIElement_Translation;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::Vector3Transition_Components>(changehandlerstables& handlers)
        {
            return handlers.m_Vector3Transition_Components;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::Vector3Transition_Duration>(changehandlerstables& handlers)
        {
            return handlers.m_Vector3Transition_Duration;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::LinearGradientBrush_AnimatedCenterPoint>(changehandlerstables& handlers)
        {
            return handlers.m_LinearGradientBrush_AnimatedCenterPoint;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::LinearGradientBrush_AnimatedRotation>(changehandlerstables& handlers)
        {
            return handlers.m_LinearGradientBrush_AnimatedRotation;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::LinearGradientBrush_AnimatedScale>(changehandlerstables& handlers)
        {
            return handlers.m_LinearGradientBrush_AnimatedScale;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::LinearGradientBrush_AnimatedTransformMatrix>(changehandlerstables& handlers)
        {
            return handlers.m_LinearGradientBrush_AnimatedTransformMatrix;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::LinearGradientBrush_AnimatedTranslation>(changehandlerstables& handlers)
        {
            return handlers.m_LinearGradientBrush_AnimatedTranslation;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::LinearGradientBrush_CenterPoint>(changehandlerstables& handlers)
        {
            return handlers.m_LinearGradientBrush_CenterPoint;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::LinearGradientBrush_Rotation>(changehandlerstables& handlers)
        {
            return handlers.m_LinearGradientBrush_Rotation;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::LinearGradientBrush_Scale>(changehandlerstables& handlers)
        {
            return handlers.m_LinearGradientBrush_Scale;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::LinearGradientBrush_TransformMatrix>(changehandlerstables& handlers)
        {
            return handlers.m_LinearGradientBrush_TransformMatrix;
        }

        template <>
        static auto& PickHandlersTable<KnownPropertyIndex::LinearGradientBrush_Translation>(changehandlerstables& handlers)
        {
            return handlers.m_LinearGradientBrush_Translation;
        }

        // Positions in s_runtimePropertyInfos array need to be in the same relative order as KnownPropertyIndices of properties.
        static_assert(0 == static_cast<size_t>(KnownPropertyIndex::BrushTransition_Duration) - KnownDependencyPropertyCount, "Index mismatch for BrushTransition_Duration");
        static_assert(1 == static_cast<size_t>(KnownPropertyIndex::ScalarTransition_Duration) - KnownDependencyPropertyCount, "Index mismatch for ScalarTransition_Duration");
        static_assert(2 == static_cast<size_t>(KnownPropertyIndex::UIElement_AnimatedCenterPoint) - KnownDependencyPropertyCount, "Index mismatch for UIElement_AnimatedCenterPoint");
        static_assert(3 == static_cast<size_t>(KnownPropertyIndex::UIElement_AnimatedRotation) - KnownDependencyPropertyCount, "Index mismatch for UIElement_AnimatedRotation");
        static_assert(4 == static_cast<size_t>(KnownPropertyIndex::UIElement_AnimatedRotationAxis) - KnownDependencyPropertyCount, "Index mismatch for UIElement_AnimatedRotationAxis");
        static_assert(5 == static_cast<size_t>(KnownPropertyIndex::UIElement_AnimatedScale) - KnownDependencyPropertyCount, "Index mismatch for UIElement_AnimatedScale");
        static_assert(6 == static_cast<size_t>(KnownPropertyIndex::UIElement_AnimatedTransformMatrix) - KnownDependencyPropertyCount, "Index mismatch for UIElement_AnimatedTransformMatrix");
        static_assert(7 == static_cast<size_t>(KnownPropertyIndex::UIElement_AnimatedTranslation) - KnownDependencyPropertyCount, "Index mismatch for UIElement_AnimatedTranslation");
        static_assert(8 == static_cast<size_t>(KnownPropertyIndex::UIElement_CenterPoint) - KnownDependencyPropertyCount, "Index mismatch for UIElement_CenterPoint");
        static_assert(9 == static_cast<size_t>(KnownPropertyIndex::UIElement_KeepAliveCount) - KnownDependencyPropertyCount, "Index mismatch for UIElement_KeepAliveCount");
        static_assert(10 == static_cast<size_t>(KnownPropertyIndex::UIElement_RasterizationScale) - KnownDependencyPropertyCount, "Index mismatch for UIElement_RasterizationScale");
        static_assert(11 == static_cast<size_t>(KnownPropertyIndex::UIElement_Rotation) - KnownDependencyPropertyCount, "Index mismatch for UIElement_Rotation");
        static_assert(12 == static_cast<size_t>(KnownPropertyIndex::UIElement_RotationAxis) - KnownDependencyPropertyCount, "Index mismatch for UIElement_RotationAxis");
        static_assert(13 == static_cast<size_t>(KnownPropertyIndex::UIElement_Scale) - KnownDependencyPropertyCount, "Index mismatch for UIElement_Scale");
        static_assert(14 == static_cast<size_t>(KnownPropertyIndex::UIElement_ThemeShadowReceiverCount) - KnownDependencyPropertyCount, "Index mismatch for UIElement_ThemeShadowReceiverCount");
        static_assert(15 == static_cast<size_t>(KnownPropertyIndex::UIElement_TransformMatrix) - KnownDependencyPropertyCount, "Index mismatch for UIElement_TransformMatrix");
        static_assert(16 == static_cast<size_t>(KnownPropertyIndex::UIElement_Translation) - KnownDependencyPropertyCount, "Index mismatch for UIElement_Translation");
        static_assert(17 == static_cast<size_t>(KnownPropertyIndex::Vector3Transition_Components) - KnownDependencyPropertyCount, "Index mismatch for Vector3Transition_Components");
        static_assert(18 == static_cast<size_t>(KnownPropertyIndex::Vector3Transition_Duration) - KnownDependencyPropertyCount, "Index mismatch for Vector3Transition_Duration");
        static_assert(19 == static_cast<size_t>(KnownPropertyIndex::LinearGradientBrush_AnimatedCenterPoint) - KnownDependencyPropertyCount, "Index mismatch for LinearGradientBrush_AnimatedCenterPoint");
        static_assert(20 == static_cast<size_t>(KnownPropertyIndex::LinearGradientBrush_AnimatedRotation) - KnownDependencyPropertyCount, "Index mismatch for LinearGradientBrush_AnimatedRotation");
        static_assert(21 == static_cast<size_t>(KnownPropertyIndex::LinearGradientBrush_AnimatedScale) - KnownDependencyPropertyCount, "Index mismatch for LinearGradientBrush_AnimatedScale");
        static_assert(22 == static_cast<size_t>(KnownPropertyIndex::LinearGradientBrush_AnimatedTransformMatrix) - KnownDependencyPropertyCount, "Index mismatch for LinearGradientBrush_AnimatedTransformMatrix");
        static_assert(23 == static_cast<size_t>(KnownPropertyIndex::LinearGradientBrush_AnimatedTranslation) - KnownDependencyPropertyCount, "Index mismatch for LinearGradientBrush_AnimatedTranslation");
        static_assert(24 == static_cast<size_t>(KnownPropertyIndex::LinearGradientBrush_CenterPoint) - KnownDependencyPropertyCount, "Index mismatch for LinearGradientBrush_CenterPoint");
        static_assert(25 == static_cast<size_t>(KnownPropertyIndex::LinearGradientBrush_Rotation) - KnownDependencyPropertyCount, "Index mismatch for LinearGradientBrush_Rotation");
        static_assert(26 == static_cast<size_t>(KnownPropertyIndex::LinearGradientBrush_Scale) - KnownDependencyPropertyCount, "Index mismatch for LinearGradientBrush_Scale");
        static_assert(27 == static_cast<size_t>(KnownPropertyIndex::LinearGradientBrush_TransformMatrix) - KnownDependencyPropertyCount, "Index mismatch for LinearGradientBrush_TransformMatrix");
        static_assert(28 == static_cast<size_t>(KnownPropertyIndex::LinearGradientBrush_Translation) - KnownDependencyPropertyCount, "Index mismatch for LinearGradientBrush_Translation");

        const RuntimePropertyInfo s_runtimePropertyInfos[] =
        {
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::BrushTransition_Duration),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::ScalarTransition_Duration),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_AnimatedCenterPoint),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_AnimatedRotation),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_AnimatedRotationAxis),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_AnimatedScale),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_AnimatedTransformMatrix),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_AnimatedTranslation),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_CenterPoint),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_KeepAliveCount),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_RasterizationScale),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_Rotation),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_RotationAxis),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_Scale),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_ThemeShadowReceiverCount),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_TransformMatrix),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::UIElement_Translation),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::Vector3Transition_Components),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::Vector3Transition_Duration),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::LinearGradientBrush_AnimatedCenterPoint),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::LinearGradientBrush_AnimatedRotation),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::LinearGradientBrush_AnimatedScale),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::LinearGradientBrush_AnimatedTransformMatrix),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::LinearGradientBrush_AnimatedTranslation),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::LinearGradientBrush_CenterPoint),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::LinearGradientBrush_Rotation),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::LinearGradientBrush_Scale),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::LinearGradientBrush_TransformMatrix),
            GENERATE_RUNTIMEINFO(KnownPropertyIndex::LinearGradientBrush_Translation),
        };
    }

    template <>
    void Property::NotifyDestroyed<CBrushTransition>(objid_t obj)
    {
        id<KnownPropertyIndex::BrushTransition_Duration>::DestroyInstance(obj);
    }

    template <>
    void Property::NotifyDestroyed<CScalarTransition>(objid_t obj)
    {
        id<KnownPropertyIndex::ScalarTransition_Duration>::DestroyInstance(obj);
    }

    template <>
    void Property::NotifyDestroyed<CUIElement>(objid_t obj)
    {
        id<KnownPropertyIndex::UIElement_AnimatedCenterPoint>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_AnimatedRotation>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_AnimatedRotationAxis>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_AnimatedScale>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_AnimatedTransformMatrix>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_AnimatedTranslation>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_CenterPoint>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_KeepAliveCount>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_RasterizationScale>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_Rotation>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_RotationAxis>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_Scale>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_ThemeShadowReceiverCount>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_TransformMatrix>::DestroyInstance(obj);
        id<KnownPropertyIndex::UIElement_Translation>::DestroyInstance(obj);
    }

    template <>
    void Property::NotifyDestroyed<CVector3Transition>(objid_t obj)
    {
        id<KnownPropertyIndex::Vector3Transition_Components>::DestroyInstance(obj);
        id<KnownPropertyIndex::Vector3Transition_Duration>::DestroyInstance(obj);
    }

    template <>
    void Property::NotifyDestroyed<CLinearGradientBrush>(objid_t obj)
    {
        id<KnownPropertyIndex::LinearGradientBrush_AnimatedCenterPoint>::DestroyInstance(obj);
        id<KnownPropertyIndex::LinearGradientBrush_AnimatedRotation>::DestroyInstance(obj);
        id<KnownPropertyIndex::LinearGradientBrush_AnimatedScale>::DestroyInstance(obj);
        id<KnownPropertyIndex::LinearGradientBrush_AnimatedTransformMatrix>::DestroyInstance(obj);
        id<KnownPropertyIndex::LinearGradientBrush_AnimatedTranslation>::DestroyInstance(obj);
        id<KnownPropertyIndex::LinearGradientBrush_CenterPoint>::DestroyInstance(obj);
        id<KnownPropertyIndex::LinearGradientBrush_Rotation>::DestroyInstance(obj);
        id<KnownPropertyIndex::LinearGradientBrush_Scale>::DestroyInstance(obj);
        id<KnownPropertyIndex::LinearGradientBrush_TransformMatrix>::DestroyInstance(obj);
        id<KnownPropertyIndex::LinearGradientBrush_Translation>::DestroyInstance(obj);
    }

    template void Property::NotifyDestroyed<CBrushTransition>(objid_t);
    template void Property::NotifyDestroyed<CScalarTransition>(objid_t);
    template void Property::NotifyDestroyed<CUIElement>(objid_t);
    template void Property::NotifyDestroyed<CVector3Transition>(objid_t);
    template void Property::NotifyDestroyed<CLinearGradientBrush>(objid_t);

    void Property::DestroyAllProperties()
    {
        id<KnownPropertyIndex::BrushTransition_Duration>::DestroyProperty();
        id<KnownPropertyIndex::ScalarTransition_Duration>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_AnimatedCenterPoint>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_AnimatedRotation>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_AnimatedRotationAxis>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_AnimatedScale>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_AnimatedTransformMatrix>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_AnimatedTranslation>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_CenterPoint>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_KeepAliveCount>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_RasterizationScale>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_Rotation>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_RotationAxis>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_Scale>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_ThemeShadowReceiverCount>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_TransformMatrix>::DestroyProperty();
        id<KnownPropertyIndex::UIElement_Translation>::DestroyProperty();
        id<KnownPropertyIndex::Vector3Transition_Components>::DestroyProperty();
        id<KnownPropertyIndex::Vector3Transition_Duration>::DestroyProperty();
        id<KnownPropertyIndex::LinearGradientBrush_AnimatedCenterPoint>::DestroyProperty();
        id<KnownPropertyIndex::LinearGradientBrush_AnimatedRotation>::DestroyProperty();
        id<KnownPropertyIndex::LinearGradientBrush_AnimatedScale>::DestroyProperty();
        id<KnownPropertyIndex::LinearGradientBrush_AnimatedTransformMatrix>::DestroyProperty();
        id<KnownPropertyIndex::LinearGradientBrush_AnimatedTranslation>::DestroyProperty();
        id<KnownPropertyIndex::LinearGradientBrush_CenterPoint>::DestroyProperty();
        id<KnownPropertyIndex::LinearGradientBrush_Rotation>::DestroyProperty();
        id<KnownPropertyIndex::LinearGradientBrush_Scale>::DestroyProperty();
        id<KnownPropertyIndex::LinearGradientBrush_TransformMatrix>::DestroyProperty();
        id<KnownPropertyIndex::LinearGradientBrush_Translation>::DestroyProperty();
    }

    template class Property::id<KnownPropertyIndex::BrushTransition_Duration>;
    template class Property::id<KnownPropertyIndex::ScalarTransition_Duration>;
    template class Property::id<KnownPropertyIndex::UIElement_AnimatedCenterPoint>;
    template class Property::id<KnownPropertyIndex::UIElement_AnimatedRotation>;
    template class Property::id<KnownPropertyIndex::UIElement_AnimatedRotationAxis>;
    template class Property::id<KnownPropertyIndex::UIElement_AnimatedScale>;
    template class Property::id<KnownPropertyIndex::UIElement_AnimatedTransformMatrix>;
    template class Property::id<KnownPropertyIndex::UIElement_AnimatedTranslation>;
    template class Property::id<KnownPropertyIndex::UIElement_CenterPoint>;
    template class Property::id<KnownPropertyIndex::UIElement_KeepAliveCount>;
    template class Property::id<KnownPropertyIndex::UIElement_RasterizationScale>;
    template class Property::id<KnownPropertyIndex::UIElement_Rotation>;
    template class Property::id<KnownPropertyIndex::UIElement_RotationAxis>;
    template class Property::id<KnownPropertyIndex::UIElement_Scale>;
    template class Property::id<KnownPropertyIndex::UIElement_ThemeShadowReceiverCount>;
    template class Property::id<KnownPropertyIndex::UIElement_TransformMatrix>;
    template class Property::id<KnownPropertyIndex::UIElement_Translation>;
    template class Property::id<KnownPropertyIndex::Vector3Transition_Components>;
    template class Property::id<KnownPropertyIndex::Vector3Transition_Duration>;
    template class Property::id<KnownPropertyIndex::LinearGradientBrush_AnimatedCenterPoint>;
    template class Property::id<KnownPropertyIndex::LinearGradientBrush_AnimatedRotation>;
    template class Property::id<KnownPropertyIndex::LinearGradientBrush_AnimatedScale>;
    template class Property::id<KnownPropertyIndex::LinearGradientBrush_AnimatedTransformMatrix>;
    template class Property::id<KnownPropertyIndex::LinearGradientBrush_AnimatedTranslation>;
    template class Property::id<KnownPropertyIndex::LinearGradientBrush_CenterPoint>;
    template class Property::id<KnownPropertyIndex::LinearGradientBrush_Rotation>;
    template class Property::id<KnownPropertyIndex::LinearGradientBrush_Scale>;
    template class Property::id<KnownPropertyIndex::LinearGradientBrush_TransformMatrix>;
    template class Property::id<KnownPropertyIndex::LinearGradientBrush_Translation>;

#if DBG
    bool Property::AreAllCleanedUp(const_objid_t obj)
    {
        bool result = true;

        result &= id<KnownPropertyIndex::BrushTransition_Duration>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::ScalarTransition_Duration>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_AnimatedCenterPoint>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_AnimatedRotation>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_AnimatedRotationAxis>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_AnimatedScale>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_AnimatedTransformMatrix>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_AnimatedTranslation>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_CenterPoint>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_KeepAliveCount>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_RasterizationScale>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_Rotation>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_RotationAxis>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_Scale>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_ThemeShadowReceiverCount>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_TransformMatrix>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::UIElement_Translation>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::Vector3Transition_Components>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::Vector3Transition_Duration>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::LinearGradientBrush_AnimatedCenterPoint>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::LinearGradientBrush_AnimatedRotation>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::LinearGradientBrush_AnimatedScale>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::LinearGradientBrush_AnimatedTransformMatrix>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::LinearGradientBrush_AnimatedTranslation>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::LinearGradientBrush_CenterPoint>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::LinearGradientBrush_Rotation>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::LinearGradientBrush_Scale>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::LinearGradientBrush_TransformMatrix>::IsCleanedUp(obj);
        result &= id<KnownPropertyIndex::LinearGradientBrush_Translation>::IsCleanedUp(obj);

        return result;
    }
#endif
}
