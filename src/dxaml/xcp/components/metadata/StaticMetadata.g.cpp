// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML metadata.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

// Contains machine-independent metadata.

#include "precomp.h"
#include "Indexes.g.h"
#include "TypeTableStructs.h"
#include "Activators.g.h"
#include "TypeTable.g.h"
#include "EnumValueTable.h"

// Namespaces.
extern const MetaDataNamespace c_aNamespaces[KnownNamespaceCount] =
{
    // UnknownNamespace
    { KnownNamespaceIndex::UnknownNamespace, { /* empty string */ } },
    // Windows.UI
    { KnownNamespaceIndex::Windows_UI, XSTRING_PTR_STORAGE(L"Windows.UI") },
    // Microsoft.UI
    { KnownNamespaceIndex::Microsoft_UI, XSTRING_PTR_STORAGE(L"Microsoft.UI") },
    // Windows.System
    { KnownNamespaceIndex::Windows_System, XSTRING_PTR_STORAGE(L"Windows.System") },
    // Windows.UI.Core
    { KnownNamespaceIndex::Windows_UI_Core, XSTRING_PTR_STORAGE(L"Windows.UI.Core") },
    // Windows.UI.Text
    { KnownNamespaceIndex::Windows_UI_Text, XSTRING_PTR_STORAGE(L"Windows.UI.Text") },
    // Windows.UI.Input
    { KnownNamespaceIndex::Windows_UI_Input, XSTRING_PTR_STORAGE(L"Windows.UI.Input") },
    // Microsoft.UI.Xaml
    { KnownNamespaceIndex::Microsoft_UI_Xaml, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml") },
    // Microsoft.UI.Text
    { KnownNamespaceIndex::Microsoft_UI_Text, XSTRING_PTR_STORAGE(L"Microsoft.UI.Text") },
    // Microsoft.UI.Input
    { KnownNamespaceIndex::Microsoft_UI_Input, XSTRING_PTR_STORAGE(L"Microsoft.UI.Input") },
    // Windows.Foundation
    { KnownNamespaceIndex::Windows_Foundation, XSTRING_PTR_STORAGE(L"Windows.Foundation") },
    // Windows.Media.Core
    { KnownNamespaceIndex::Windows_Media_Core, XSTRING_PTR_STORAGE(L"Windows.Media.Core") },
    // Windows.Media.Capture
    { KnownNamespaceIndex::Windows_Media_Capture, XSTRING_PTR_STORAGE(L"Windows.Media.Capture") },
    // Windows.Globalization
    { KnownNamespaceIndex::Windows_Globalization, XSTRING_PTR_STORAGE(L"Windows.Globalization") },
    // Microsoft.UI.Xaml.Data
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Data, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data") },
    // MS.Internal.Automation
    { KnownNamespaceIndex::MS_Internal_Automation, XSTRING_PTR_STORAGE(L"MS.Internal.Automation") },
    // Windows.Media.Playback
    { KnownNamespaceIndex::Windows_Media_Playback, XSTRING_PTR_STORAGE(L"Windows.Media.Playback") },
    // Microsoft.UI.Xaml.Core
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Core, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Core") },
    // Microsoft.UI.Windowing
    { KnownNamespaceIndex::Microsoft_UI_Windowing, XSTRING_PTR_STORAGE(L"Microsoft.UI.Windowing") },
    // Windows.Storage.Streams
    { KnownNamespaceIndex::Windows_Storage_Streams, XSTRING_PTR_STORAGE(L"Windows.Storage.Streams") },
    // Microsoft.UI.Xaml.Media
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Media, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media") },
    // Microsoft.UI.Xaml.Input
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Input, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input") },
    // Windows.Devices.Casting
    { KnownNamespaceIndex::Windows_Devices_Casting, XSTRING_PTR_STORAGE(L"Windows.Devices.Casting") },
    // Windows.UI.Xaml.Interop
    { KnownNamespaceIndex::Windows_UI_Xaml_Interop, XSTRING_PTR_STORAGE(L"Windows.UI.Xaml.Interop") },
    // Windows.Media.Protection
    { KnownNamespaceIndex::Windows_Media_Protection, XSTRING_PTR_STORAGE(L"Windows.Media.Protection") },
    // Microsoft.UI.Xaml.Shapes
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Shapes, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Shapes") },
    // Microsoft.UI.Xaml.Markup
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup") },
    // Microsoft.UI.Composition
    { KnownNamespaceIndex::Microsoft_UI_Composition, XSTRING_PTR_STORAGE(L"Microsoft.UI.Composition") },
    // Microsoft.UI.Dispatching
    { KnownNamespaceIndex::Microsoft_UI_Dispatching, XSTRING_PTR_STORAGE(L"Microsoft.UI.Dispatching") },
    // Windows.Graphics.Printing
    { KnownNamespaceIndex::Windows_Graphics_Printing, XSTRING_PTR_STORAGE(L"Windows.Graphics.Printing") },
    // Microsoft.UI.Xaml.Interop
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Interop, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Interop") },
    // Microsoft.UI.Xaml.Hosting
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Hosting, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Hosting") },
    // Microsoft.UI.Xaml.Controls
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls") },
    // Microsoft.UI.Xaml.Internal
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal") },
    // Microsoft.UI.Xaml.Printing
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Printing, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Printing") },
    // Microsoft.UI.Xaml.Resources
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Resources, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Resources") },
    // Microsoft.UI.Xaml.Documents
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents") },
    // Windows.Foundation.Numerics
    { KnownNamespaceIndex::Windows_Foundation_Numerics, XSTRING_PTR_STORAGE(L"Windows.Foundation.Numerics") },
    // Microsoft.UI.Xaml.Automation
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation") },
    // Microsoft.UI.Xaml.Navigation
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Navigation, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Navigation") },
    // Microsoft.UI.Xaml.Collections
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Collections") },
    // Microsoft.UI.Xaml.Core.Direct
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Core_Direct, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Core.Direct") },
    // Windows.Foundation.Collections
    { KnownNamespaceIndex::Windows_Foundation_Collections, XSTRING_PTR_STORAGE(L"Windows.Foundation.Collections") },
    // Microsoft.UI.Xaml.Media.Imaging
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging") },
    // Microsoft.UI.Xaml.Media.Media3D
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Media3D, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Media3D") },
    // Windows.ApplicationModel.Search
    { KnownNamespaceIndex::Windows_ApplicationModel_Search, XSTRING_PTR_STORAGE(L"Windows.ApplicationModel.Search") },
    // Microsoft.UI.Input.Experimental
    { KnownNamespaceIndex::Microsoft_UI_Input_Experimental, XSTRING_PTR_STORAGE(L"Microsoft.UI.Input.Experimental") },
    // Microsoft.UI.Xaml.Media.Animation
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation") },
    // Microsoft.UI.Xaml.Automation.Peers
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers") },
    // Windows.ApplicationModel.DataTransfer
    { KnownNamespaceIndex::Windows_ApplicationModel_DataTransfer, XSTRING_PTR_STORAGE(L"Windows.ApplicationModel.DataTransfer") },
    // Microsoft.UI.Xaml.Controls.Primitives
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives") },
    // Microsoft.UI.Xaml.Automation.Provider
    { KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Provider, XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Provider") },
};

// Basic type info.
extern const MetaDataType c_aTypes[KnownTypeCount] =
{
    // UnknownType
    {
        KnownTypeIndex::UnknownType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Windows.Foundation.Collections.IObservableVector`1[Microsoft.UI.Xaml.Controls.GroupStyle]
    {
        KnownTypeIndex::IObservableVectorOfGroupStyle, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Windows.Foundation.Collections.IVector`1[Windows.Foundation.Float]
    {
        KnownTypeIndex::IVectorOfFloat, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Windows.Foundation.Collections.IVector`1[Microsoft.UI.Xaml.Navigation.PageStackEntry]
    {
        KnownTypeIndex::IVectorOfPageStackEntry, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Windows.Foundation.Collections.IVector`1[Windows.Foundation.DateTime]
    {
        KnownTypeIndex::IVectorOfDateTime, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Windows.Foundation.Collections.IVectorView`1[Microsoft.UI.Xaml.Data.ItemIndexRange]
    {
        KnownTypeIndex::IVectorViewOfItemIndexRange, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Windows.Foundation.Byte
    {
        KnownTypeIndex::Byte, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::IsPrimitive)), // Type flags
    },
    // Windows.Foundation.Char16
    {
        KnownTypeIndex::Char16, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::IsPrimitive)), // Type flags
    },
    // Windows.Foundation.DateTime
    {
        KnownTypeIndex::DateTime, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition
    {
        KnownTypeIndex::GeneratorPosition, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Windows.Foundation.Guid
    {
        KnownTypeIndex::Guid, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::IsPrimitive)), // Type flags
    },
    // Microsoft.UI.Xaml.Interop.IBindableIterable
    {
        KnownTypeIndex::IBindableIterable, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Interop.IBindableIterator
    {
        KnownTypeIndex::IBindableIterator, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Interop.IBindableObservableVector
    {
        KnownTypeIndex::IBindableObservableVector, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Interop.IBindableVector
    {
        KnownTypeIndex::IBindableVector, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Interop.IBindableVectorView
    {
        KnownTypeIndex::IBindableVectorView, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.ICollectionView
    {
        KnownTypeIndex::ICollectionView, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.ICommand
    {
        KnownTypeIndex::ICommand, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.IDataTemplateComponent
    {
        KnownTypeIndex::IDataTemplateComponent, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.IDataTemplateExtension
    {
        KnownTypeIndex::IDataTemplateExtension, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.IElementFactory
    {
        KnownTypeIndex::IElementFactory, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Windows.Media.Playback.IMediaPlaybackSource
    {
        KnownTypeIndex::IMediaPlaybackSource, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Windows.Foundation.Int16
    {
        KnownTypeIndex::Int16, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::IsPrimitive)), // Type flags
    },
    // Windows.Foundation.Int64
    {
        KnownTypeIndex::Int64, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::IsPrimitive)), // Type flags
    },
    // Windows.Graphics.Printing.IPrintDocumentSource
    {
        KnownTypeIndex::IPrintDocumentSource, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.IProvideValueTarget
    {
        KnownTypeIndex::IProvideValueTarget, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.IRootObjectProvider
    {
        KnownTypeIndex::IRootObjectProvider, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.IScrollAnchorProvider
    {
        KnownTypeIndex::IScrollAnchorProvider, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ISemanticZoomInformation
    {
        KnownTypeIndex::ISemanticZoomInformation, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Text.ITextDocument
    {
        KnownTypeIndex::ITextDocument, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.IUriContext
    {
        KnownTypeIndex::IUriContext, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.IValueConverter
    {
        KnownTypeIndex::IValueConverter, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.IXamlServiceProvider
    {
        KnownTypeIndex::IXamlServiceProvider, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.IXamlTypeResolver
    {
        KnownTypeIndex::IXamlTypeResolver, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsInterface)), // Type flags
    },
    // Windows.Foundation.Numerics.Matrix3x2
    {
        KnownTypeIndex::Matrix3x2, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Windows.Foundation.Numerics.Matrix4x4
    {
        KnownTypeIndex::Matrix4x4, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Windows.Foundation.Object
    {
        KnownTypeIndex::Object, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Windows.Foundation.Numerics.Quaternion
    {
        KnownTypeIndex::Quaternion, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Windows.Foundation.Float
    {
        KnownTypeIndex::Float, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::IsPrimitive)), // Type flags
    },
    // Windows.UI.Xaml.Interop.TypeName
    {
        KnownTypeIndex::TypeName, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Windows.Foundation.UInt16
    {
        KnownTypeIndex::UInt16, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::IsPrimitive)), // Type flags
    },
    // Windows.Foundation.UInt32
    {
        KnownTypeIndex::UInt32, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::IsPrimitive)), // Type flags
    },
    // Windows.Foundation.UInt64
    {
        KnownTypeIndex::UInt64, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::IsPrimitive)), // Type flags
    },
    // Windows.Foundation.Numerics.Vector2
    {
        KnownTypeIndex::Vector2, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Windows.Foundation.Numerics.Vector3
    {
        KnownTypeIndex::Vector3, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties
    {
        KnownTypeIndex::AutomationProperties, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Colors
    {
        KnownTypeIndex::Colors, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.DataTemplateSelector
    {
        KnownTypeIndex::DataTemplateSelector, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.DependencyObject
    {
        KnownTypeIndex::DependencyObject, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Hosting.ElementCompositionPreview
    {
        KnownTypeIndex::ElementCompositionPreview, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.EventArgs
    {
        KnownTypeIndex::EventArgs, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Windows.Foundation.EventHandlerStub
    {
        KnownTypeIndex::EventHandlerStub, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.GroupStyleCollection
    {
        KnownTypeIndex::GroupStyleCollection, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.GroupStyleSelector
    {
        KnownTypeIndex::GroupStyleSelector, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Input.InputCursor
    {
        KnownTypeIndex::InputCursor, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.InputValidationContext
    {
        KnownTypeIndex::InputValidationContext, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.InteractionBase
    {
        KnownTypeIndex::InteractionBase, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsStrict)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ItemContainerGenerator
    {
        KnownTypeIndex::ItemContainerGenerator, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewPersistenceHelper
    {
        KnownTypeIndex::ListViewPersistenceHelper, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.MarkupExtension
    {
        KnownTypeIndex::MarkupExtension, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsMarkupExtension)), // Type flags
    },
    // Windows.Media.Playback.MediaPlayer
    {
        KnownTypeIndex::MediaPlayer, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControlsHelper
    {
        KnownTypeIndex::MediaTransportControlsHelper, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.ParserServiceProvider
    {
        KnownTypeIndex::ParserServiceProvider, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.StyleSelector
    {
        KnownTypeIndex::StyleSelector, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.TextOptions
    {
        KnownTypeIndex::TextOptions, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService
    {
        KnownTypeIndex::ToolTipService, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.Typography
    {
        KnownTypeIndex::Typography, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Windows.Foundation.Uri
    {
        KnownTypeIndex::Uri, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.XamlBindingHelper
    {
        KnownTypeIndex::XamlBindingHelper, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.XamlMarkupHelper
    {
        KnownTypeIndex::XamlMarkupHelper, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.XamlRenderingBackgroundTask
    {
        KnownTypeIndex::XamlRenderingBackgroundTask, // Index name
        KnownTypeIndex::Object, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs
    {
        KnownTypeIndex::AccessKeyDisplayDismissedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs
    {
        KnownTypeIndex::AccessKeyDisplayRequestedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs
    {
        KnownTypeIndex::AccessKeyInvokedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Printing.AddPagesEventArgs
    {
        KnownTypeIndex::AddPagesEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs
    {
        KnownTypeIndex::AnchorRequestedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarButtonTemplateSettings
    {
        KnownTypeIndex::AppBarButtonTemplateSettings, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings
    {
        KnownTypeIndex::AppBarTemplateSettings, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarToggleButtonTemplateSettings
    {
        KnownTypeIndex::AppBarToggleButtonTemplateSettings, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Application
    {
        KnownTypeIndex::Application, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ApplicationBarService
    {
        KnownTypeIndex::ApplicationBarService, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotation
    {
        KnownTypeIndex::AutomationAnnotation, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
    {
        KnownTypeIndex::AutomationPeer, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation
    {
        KnownTypeIndex::AutomationPeerAnnotation, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.AutomationPeerEventArgs
    {
        KnownTypeIndex::AutomationPeerEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs
    {
        KnownTypeIndex::AutoSuggestBoxQuerySubmittedEventArgs, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs
    {
        KnownTypeIndex::AutoSuggestBoxSuggestionChosenEventArgs, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs
    {
        KnownTypeIndex::AutoSuggestBoxTextChangedEventArgs, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Printing.BeginPrintEventArgs
    {
        KnownTypeIndex::BeginPrintEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.BindingFailedEventArgs
    {
        KnownTypeIndex::BindingFailedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Windows.Foundation.Boolean
    {
        KnownTypeIndex::Boolean, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::IsPrimitive)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Brush
    {
        KnownTypeIndex::Brush, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.BrushTransition
    {
        KnownTypeIndex::BrushTransition, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.CacheMode
    {
        KnownTypeIndex::CacheMode, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs
    {
        KnownTypeIndex::CalendarDatePickerDateChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs
    {
        KnownTypeIndex::CalendarViewDayItemChangingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs
    {
        KnownTypeIndex::CalendarViewSelectedDatesChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings
    {
        KnownTypeIndex::CalendarViewTemplateSettings, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs
    {
        KnownTypeIndex::CandidateWindowBoundsChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs
    {
        KnownTypeIndex::CanExecuteRequestedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.CollectionView
    {
        KnownTypeIndex::CollectionView, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.CollectionViewGroup
    {
        KnownTypeIndex::CollectionViewGroup, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.CollectionViewSource
    {
        KnownTypeIndex::CollectionViewSource, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Windows.UI.Color
    {
        KnownTypeIndex::Color, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame
    {
        KnownTypeIndex::ColorKeyFrame, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinition
    {
        KnownTypeIndex::ColumnDefinition, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings
    {
        KnownTypeIndex::ComboBoxTemplateSettings, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs
    {
        KnownTypeIndex::ComboBoxTextSubmittedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings
    {
        KnownTypeIndex::CommandBarTemplateSettings, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CommandingContextChangedEventArgs
    {
        KnownTypeIndex::CommandingContextChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation
    {
        KnownTypeIndex::ConnectedAnimation, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService
    {
        KnownTypeIndex::ConnectedAnimationService, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs
    {
        KnownTypeIndex::ContentDialogButtonClickEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs
    {
        KnownTypeIndex::ContentDialogClosedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs
    {
        KnownTypeIndex::ContentDialogClosingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogOpenedEventArgs
    {
        KnownTypeIndex::ContentDialogOpenedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.CornerRadius
    {
        KnownTypeIndex::CornerRadius, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.CurrentChangingEventArgs
    {
        KnownTypeIndex::CurrentChangingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs
    {
        KnownTypeIndex::DatePickerSelectedValueChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.DatePickerValueChangedEventArgs
    {
        KnownTypeIndex::DatePickerValueChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.DebugSettings
    {
        KnownTypeIndex::DebugSettings, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.DeferredElement
    {
        KnownTypeIndex::DeferredElement, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.DependencyObjectWrapper
    {
        KnownTypeIndex::DependencyObjectWrapper, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.DependencyPropertyProxy
    {
        KnownTypeIndex::DependencyPropertyProxy, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Deployment
    {
        KnownTypeIndex::Deployment, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs
    {
        KnownTypeIndex::DesktopWindowXamlSourceGotFocusEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs
    {
        KnownTypeIndex::DesktopWindowXamlSourceTakeFocusRequestedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Windows.Foundation.Double
    {
        KnownTypeIndex::Double, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::IsPrimitive)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame
    {
        KnownTypeIndex::DoubleKeyFrame, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventArgs
    {
        KnownTypeIndex::DownloadProgressEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs
    {
        KnownTypeIndex::DragItemsCompletedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.DragItemsStartingEventArgs
    {
        KnownTypeIndex::DragItemsStartingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs
    {
        KnownTypeIndex::DynamicOverflowItemsChangingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        KnownTypeIndex::EasingFunctionBase, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs
    {
        KnownTypeIndex::EffectiveViewportChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Printing.EndPrintEventArgs
    {
        KnownTypeIndex::EndPrintEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Windows.Foundation.Enumerated
    {
        KnownTypeIndex::Enumerated, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.ErrorEventArgs
    {
        KnownTypeIndex::ErrorEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs
    {
        KnownTypeIndex::ExecuteRequestedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.ExternalObjectReference
    {
        KnownTypeIndex::ExternalObjectReference, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase
    {
        KnownTypeIndex::FlyoutBase, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs
    {
        KnownTypeIndex::FlyoutBaseClosingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.FocusedElementRemovedEventArgs
    {
        KnownTypeIndex::FocusedElementRemovedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.FocusManagerGotFocusEventArgs
    {
        KnownTypeIndex::FocusManagerGotFocusEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.FocusManagerLostFocusEventArgs
    {
        KnownTypeIndex::FocusManagerLostFocusEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.FontFamily
    {
        KnownTypeIndex::FontFamily, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Windows.UI.Text.FontWeight
    {
        KnownTypeIndex::FontWeight, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.FrameworkTemplate
    {
        KnownTypeIndex::FrameworkTemplate, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.GeneralTransform
    {
        KnownTypeIndex::GeneralTransform, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Geometry
    {
        KnownTypeIndex::Geometry, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Printing.GetPreviewPageEventArgs
    {
        KnownTypeIndex::GetPreviewPageEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.GradientStop
    {
        KnownTypeIndex::GradientStop, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.GridLength
    {
        KnownTypeIndex::GridLength, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle
    {
        KnownTypeIndex::GroupStyle, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.HasValidationErrorsChangedEventArgs
    {
        KnownTypeIndex::HasValidationErrorsChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventArgs
    {
        KnownTypeIndex::HubSectionHeaderClickEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.HWCompNode
    {
        KnownTypeIndex::HWCompNode, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.IconSource
    {
        KnownTypeIndex::IconSource, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.ImageSource
    {
        KnownTypeIndex::ImageSource, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.InertiaExpansionBehavior
    {
        KnownTypeIndex::InertiaExpansionBehavior, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.InertiaRotationBehavior
    {
        KnownTypeIndex::InertiaRotationBehavior, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.InertiaTranslationBehavior
    {
        KnownTypeIndex::InertiaTranslationBehavior, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.InputScope
    {
        KnownTypeIndex::InputScope, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.InputScopeName
    {
        KnownTypeIndex::InputScopeName, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.InputValidationCommand
    {
        KnownTypeIndex::InputValidationCommand, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.InputValidationErrorEventArgs
    {
        KnownTypeIndex::InputValidationErrorEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Windows.Foundation.Int32
    {
        KnownTypeIndex::Int32, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::IsPrimitive)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple
    {
        KnownTypeIndex::IRawElementProviderSimple, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.IsApiContractNotPresent
    {
        KnownTypeIndex::IsApiContractNotPresent, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.IsApiContractPresent
    {
        KnownTypeIndex::IsApiContractPresent, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.IsEnabledChangedEventArgs
    {
        KnownTypeIndex::IsEnabledChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.IsPropertyNotPresent
    {
        KnownTypeIndex::IsPropertyNotPresent, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.IsPropertyPresent
    {
        KnownTypeIndex::IsPropertyPresent, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs
    {
        KnownTypeIndex::IsTextTrimmedChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.IsTypeNotPresent
    {
        KnownTypeIndex::IsTypeNotPresent, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Markup.IsTypePresent
    {
        KnownTypeIndex::IsTypePresent, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.KeyboardAccelerator
    {
        KnownTypeIndex::KeyboardAccelerator, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs
    {
        KnownTypeIndex::KeyboardAcceleratorInvokedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.KeySpline
    {
        KnownTypeIndex::KeySpline, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.LayoutTransitionStaggerItem
    {
        KnownTypeIndex::LayoutTransitionStaggerItem, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.LengthConverter
    {
        KnownTypeIndex::LengthConverter, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemTemplateSettings
    {
        KnownTypeIndex::ListViewBaseItemTemplateSettings, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs
    {
        KnownTypeIndex::LoadedImageSourceLoadCompletedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSurface
    {
        KnownTypeIndex::LoadedImageSurface, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.ManipulationDelta
    {
        KnownTypeIndex::ManipulationDelta, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.ManipulationPivot
    {
        KnownTypeIndex::ManipulationPivot, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.ManipulationVelocities
    {
        KnownTypeIndex::ManipulationVelocities, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.MarkupExtensionBase
    {
        KnownTypeIndex::MarkupExtensionBase, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsMarkupExtension)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Matrix
    {
        KnownTypeIndex::Matrix, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D
    {
        KnownTypeIndex::Matrix3D, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.MediaPlaybackItemConverter
    {
        KnownTypeIndex::MediaPlaybackItemConverter, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs
    {
        KnownTypeIndex::MediaTransportControlsThumbnailRequestedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutItemTemplateSettings
    {
        KnownTypeIndex::MenuFlyoutItemTemplateSettings, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutPresenterTemplateSettings
    {
        KnownTypeIndex::MenuFlyoutPresenterTemplateSettings, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs
    {
        KnownTypeIndex::NavigatingCancelEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Navigation.NavigationEventArgs
    {
        KnownTypeIndex::NavigationEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs
    {
        KnownTypeIndex::NavigationFailedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
    {
        KnownTypeIndex::NavigationTransitionInfo, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.NullKeyedResource
    {
        KnownTypeIndex::NullKeyedResource, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame
    {
        KnownTypeIndex::ObjectKeyFrame, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Navigation.PageStackEntry
    {
        KnownTypeIndex::PageStackEntry, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Printing.PaginateEventArgs
    {
        KnownTypeIndex::PaginateEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurve
    {
        KnownTypeIndex::ParametricCurve, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment
    {
        KnownTypeIndex::ParametricCurveSegment, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs
    {
        KnownTypeIndex::PasswordBoxPasswordChangingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.PathFigure
    {
        KnownTypeIndex::PathFigure, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.PathSegment
    {
        KnownTypeIndex::PathSegment, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Windows.Foundation.Point
    {
        KnownTypeIndex::Point, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.Pointer
    {
        KnownTypeIndex::Pointer, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrame
    {
        KnownTypeIndex::PointerKeyFrame, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrame
    {
        KnownTypeIndex::PointKeyFrame, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection
    {
        KnownTypeIndex::PresentationFrameworkCollection, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Printing.PrintDocument
    {
        KnownTypeIndex::PrintDocument, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Printing.PrintPageEventArgs
    {
        KnownTypeIndex::PrintPageEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Projection
    {
        KnownTypeIndex::Projection, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.PropertyPath
    {
        KnownTypeIndex::PropertyPath, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Windows.Foundation.Rect
    {
        KnownTypeIndex::Rect, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.RenderedEventArgs
    {
        KnownTypeIndex::RenderedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.RenderingEventArgs
    {
        KnownTypeIndex::RenderingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.ResourceManagerRequestedEventArgs
    {
        KnownTypeIndex::ResourceManagerRequestedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs
    {
        KnownTypeIndex::RichEditBoxSelectionChangingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs
    {
        KnownTypeIndex::RichEditBoxTextChangingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.RoutedEventArgs
    {
        KnownTypeIndex::RoutedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.RowDefinition
    {
        KnownTypeIndex::RowDefinition, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.ScalarTransition
    {
        KnownTypeIndex::ScalarTransition, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs
    {
        KnownTypeIndex::ScrollViewerViewChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs
    {
        KnownTypeIndex::ScrollViewerViewChangingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.SecondaryContentRelationship
    {
        KnownTypeIndex::SecondaryContentRelationship, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventArgs
    {
        KnownTypeIndex::SectionsInViewChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs
    {
        KnownTypeIndex::SemanticZoomViewChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.SetterBase
    {
        KnownTypeIndex::SetterBase, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Shadow
    {
        KnownTypeIndex::Shadow, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Windows.Foundation.Size
    {
        KnownTypeIndex::Size, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs
    {
        KnownTypeIndex::SplitViewPaneClosingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings
    {
        KnownTypeIndex::SplitViewTemplateSettings, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.StaggerFunctionBase
    {
        KnownTypeIndex::StaggerFunctionBase, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.StartupEventArgs
    {
        KnownTypeIndex::StartupEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.StateTriggerBase
    {
        KnownTypeIndex::StateTriggerBase, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Windows.Foundation.String
    {
        KnownTypeIndex::String, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsPrimitive)), // Type flags
    },
    // Microsoft.UI.Xaml.Style
    {
        KnownTypeIndex::Style, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs
    {
        KnownTypeIndex::SvgImageSourceFailedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs
    {
        KnownTypeIndex::SvgImageSourceOpenedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.SystemBackdrop
    {
        KnownTypeIndex::SystemBackdrop, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.TargetPropertyPath
    {
        KnownTypeIndex::TargetPropertyPath, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.TemplateContent
    {
        KnownTypeIndex::TemplateContent, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextAdapter
    {
        KnownTypeIndex::TextAdapter, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs
    {
        KnownTypeIndex::TextBoxBeforeTextChangingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs
    {
        KnownTypeIndex::TextBoxSelectionChangingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs
    {
        KnownTypeIndex::TextBoxTextChangingEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs
    {
        KnownTypeIndex::TextCompositionChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs
    {
        KnownTypeIndex::TextCompositionEndedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs
    {
        KnownTypeIndex::TextCompositionStartedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs
    {
        KnownTypeIndex::TextControlCopyingToClipboardEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs
    {
        KnownTypeIndex::TextControlCuttingToClipboardEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TextControlPasteEventArgs
    {
        KnownTypeIndex::TextControlPasteEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement
    {
        KnownTypeIndex::TextElement, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighterBase
    {
        KnownTypeIndex::TextHighlighterBase, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.TextPointerWrapper
    {
        KnownTypeIndex::TextPointerWrapper, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // MS.Internal.Automation.TextProvider
    {
        KnownTypeIndex::TextProvider, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.TextRange
    {
        KnownTypeIndex::TextRange, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextRangeAdapter
    {
        KnownTypeIndex::TextRangeAdapter, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // MS.Internal.Automation.TextRangeProvider
    {
        KnownTypeIndex::TextRangeProvider, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Thickness
    {
        KnownTypeIndex::Thickness, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline
    {
        KnownTypeIndex::Timeline, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs
    {
        KnownTypeIndex::TimePickerSelectedValueChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TimePickerValueChangedEventArgs
    {
        KnownTypeIndex::TimePickerValueChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Windows.Foundation.TimeSpan
    {
        KnownTypeIndex::TimeSpan, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings
    {
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings
    {
        KnownTypeIndex::ToolTipTemplateSettings, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Transform3D
    {
        KnownTypeIndex::Transform3D, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Transition
    {
        KnownTypeIndex::Transition, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget
    {
        KnownTypeIndex::TransitionTarget, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.TriggerAction
    {
        KnownTypeIndex::TriggerAction, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.TriggerBase
    {
        KnownTypeIndex::TriggerBase, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.UIElement
    {
        KnownTypeIndex::UIElement, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.UnhandledExceptionEventArgs
    {
        KnownTypeIndex::UnhandledExceptionEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Vector3Transition
    {
        KnownTypeIndex::Vector3Transition, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.VisualState
    {
        KnownTypeIndex::VisualState, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.VisualStateChangedEventArgs
    {
        KnownTypeIndex::VisualStateChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.VisualStateGroup
    {
        KnownTypeIndex::VisualStateGroup, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.VisualStateManager
    {
        KnownTypeIndex::VisualStateManager, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.VisualTransition
    {
        KnownTypeIndex::VisualTransition, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Window
    {
        KnownTypeIndex::Window, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.WindowCreatedEventArgs
    {
        KnownTypeIndex::WindowCreatedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.XamlLight
    {
        KnownTypeIndex::XamlLight, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.XamlResourceReferenceFailedEventArgs
    {
        KnownTypeIndex::XamlResourceReferenceFailedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.XamlRootChangedEventArgs
    {
        KnownTypeIndex::XamlRootChangedEventArgs, // Index name
        KnownTypeIndex::EventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand
    {
        KnownTypeIndex::XamlUICommand, // Index name
        KnownTypeIndex::DependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.UIElement]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfUIElement, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.Transition]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfTransition, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.Timeline]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfTimeline, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Input.Pointer]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfPointer, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.TriggerBase]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfTriggerBase, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.DependencyObject]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfDependencyObject, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.ResourceDictionary]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfResourceDictionary, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.SetterBase]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfSetterBase, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.XamlLight]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfXamlLight, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Input.KeyboardAccelerator]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfKeyboardAccelerator, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Automation.Peers.AutomationPeer]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfAutomationPeer, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfAutomationPeerAnnotation, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.TriggerAction]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfTriggerAction, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.StateTriggerBase]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfStateTriggerBase, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.VisualTransition]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfVisualTransition, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.VisualState]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfVisualState, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.VisualStateGroup]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfVisualStateGroup, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.Storyboard]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfStoryboard, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Windows.Foundation.Double]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfDouble, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Windows.Foundation.Float]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfFloat, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Windows.Foundation.Point]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfPoint, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Brush]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfBrush, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Transform]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfTransform, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.PathSegment]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfPathSegment, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.PathFigure]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfPathFigure, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Geometry]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfGeometry, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.GradientStop]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfGradientStop, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfColorKeyFrame, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfDoubleKeyFrame, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.PointKeyFrame]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfPointKeyFrame, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfObjectKeyFrame, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Input.InputScopeName]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfInputScopeName, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Documents.TextElement]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfTextElement, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Documents.TextRange]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfTextRange, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Documents.TextHighlighter]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfTextHighlighter, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.RowDefinition]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfRowDefinition, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.ColumnDefinition]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfColumnDefinition, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.HubSection]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfHubSection, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfMenuFlyoutItemBase, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Internal.PointerKeyFrame]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfPointerKeyFrame, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Internal.ParametricCurveSegment]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfParametricCurveSegment, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Internal.ParametricCurve]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfParametricCurve, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Automation.AutomationAnnotation]
    {
        KnownTypeIndex::PresentationFrameworkCollectionOfAutomationAnnotation, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.AdaptiveTrigger
    {
        KnownTypeIndex::AdaptiveTrigger, // Index name
        KnownTypeIndex::StateTriggerBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.AddDeleteThemeTransition
    {
        KnownTypeIndex::AddDeleteThemeTransition, // Index name
        KnownTypeIndex::Transition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.ArcSegment
    {
        KnownTypeIndex::ArcSegment, // Index name
        KnownTypeIndex::PathSegment, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.BackEase
    {
        KnownTypeIndex::BackEase, // Index name
        KnownTypeIndex::EasingFunctionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.BeginStoryboard
    {
        KnownTypeIndex::BeginStoryboard, // Index name
        KnownTypeIndex::TriggerAction, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.BezierSegment
    {
        KnownTypeIndex::BezierSegment, // Index name
        KnownTypeIndex::PathSegment, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.BindingBase
    {
        KnownTypeIndex::BindingBase, // Index name
        KnownTypeIndex::MarkupExtensionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.BitmapCache
    {
        KnownTypeIndex::BitmapCache, // Index name
        KnownTypeIndex::CacheMode, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.BitmapIconSource
    {
        KnownTypeIndex::BitmapIconSource, // Index name
        KnownTypeIndex::IconSource, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapSource
    {
        KnownTypeIndex::BitmapSource, // Index name
        KnownTypeIndex::ImageSource, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.Block
    {
        KnownTypeIndex::Block, // Index name
        KnownTypeIndex::TextElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.BounceEase
    {
        KnownTypeIndex::BounceEase, // Index name
        KnownTypeIndex::EasingFunctionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs
    {
        KnownTypeIndex::BringIntoViewRequestedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewHeaderAutomationPeer
    {
        KnownTypeIndex::CalendarViewHeaderAutomationPeer, // Index name
        KnownTypeIndex::AutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs
    {
        KnownTypeIndex::CharacterReceivedRoutedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.CircleEase
    {
        KnownTypeIndex::CircleEase, // Index name
        KnownTypeIndex::EasingFunctionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs
    {
        KnownTypeIndex::CleanUpVirtualizedItemEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation
    {
        KnownTypeIndex::ColorAnimation, // Index name
        KnownTypeIndex::Timeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames
    {
        KnownTypeIndex::ColorAnimationUsingKeyFrames, // Index name
        KnownTypeIndex::Timeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D
    {
        KnownTypeIndex::CompositeTransform3D, // Index name
        KnownTypeIndex::Transform3D, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ContentDialogOpenCloseThemeTransition
    {
        KnownTypeIndex::ContentDialogOpenCloseThemeTransition, // Index name
        KnownTypeIndex::Transition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition
    {
        KnownTypeIndex::ContentThemeTransition, // Index name
        KnownTypeIndex::Transition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ContextMenuEventArgs
    {
        KnownTypeIndex::ContextMenuEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.ContextRequestedEventArgs
    {
        KnownTypeIndex::ContextRequestedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ControlTemplate
    {
        KnownTypeIndex::ControlTemplate, // Index name
        KnownTypeIndex::FrameworkTemplate, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.CubicEase
    {
        KnownTypeIndex::CubicEase, // Index name
        KnownTypeIndex::EasingFunctionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.CustomResource
    {
        KnownTypeIndex::CustomResource, // Index name
        KnownTypeIndex::MarkupExtensionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsMarkupExtension)), // Type flags
    },
    // Microsoft.UI.Xaml.DataTemplate
    {
        KnownTypeIndex::DataTemplate, // Index name
        KnownTypeIndex::FrameworkTemplate, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscreteColorKeyFrame
    {
        KnownTypeIndex::DiscreteColorKeyFrame, // Index name
        KnownTypeIndex::ColorKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscreteDoubleKeyFrame
    {
        KnownTypeIndex::DiscreteDoubleKeyFrame, // Index name
        KnownTypeIndex::DoubleKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscreteObjectKeyFrame
    {
        KnownTypeIndex::DiscreteObjectKeyFrame, // Index name
        KnownTypeIndex::ObjectKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscretePointKeyFrame
    {
        KnownTypeIndex::DiscretePointKeyFrame, // Index name
        KnownTypeIndex::PointKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.DispatcherTimer
    {
        KnownTypeIndex::DispatcherTimer, // Index name
        KnownTypeIndex::Timeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation
    {
        KnownTypeIndex::DoubleAnimation, // Index name
        KnownTypeIndex::Timeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames
    {
        KnownTypeIndex::DoubleAnimationUsingKeyFrames, // Index name
        KnownTypeIndex::Timeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.DoubleTappedRoutedEventArgs
    {
        KnownTypeIndex::DoubleTappedRoutedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs
    {
        KnownTypeIndex::DragCompletedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs
    {
        KnownTypeIndex::DragDeltaEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.DragEventArgs
    {
        KnownTypeIndex::DragEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs
    {
        KnownTypeIndex::DragStartedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.DragStartingEventArgs
    {
        KnownTypeIndex::DragStartingEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.DropCompletedEventArgs
    {
        KnownTypeIndex::DropCompletedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Duration
    {
        KnownTypeIndex::Duration, // Index name
        KnownTypeIndex::TimeSpan, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DynamicTimeline
    {
        KnownTypeIndex::DynamicTimeline, // Index name
        KnownTypeIndex::Timeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame
    {
        KnownTypeIndex::EasingColorKeyFrame, // Index name
        KnownTypeIndex::ColorKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame
    {
        KnownTypeIndex::EasingDoubleKeyFrame, // Index name
        KnownTypeIndex::DoubleKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame
    {
        KnownTypeIndex::EasingPointKeyFrame, // Index name
        KnownTypeIndex::PointKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EdgeUIThemeTransition
    {
        KnownTypeIndex::EdgeUIThemeTransition, // Index name
        KnownTypeIndex::Transition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ElasticEase
    {
        KnownTypeIndex::ElasticEase, // Index name
        KnownTypeIndex::EasingFunctionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.EllipseGeometry
    {
        KnownTypeIndex::EllipseGeometry, // Index name
        KnownTypeIndex::Geometry, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition
    {
        KnownTypeIndex::EntranceThemeTransition, // Index name
        KnownTypeIndex::Transition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.EventTrigger
    {
        KnownTypeIndex::EventTrigger, // Index name
        KnownTypeIndex::TriggerBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.ExceptionRoutedEventArgs
    {
        KnownTypeIndex::ExceptionRoutedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ExponentialEase
    {
        KnownTypeIndex::ExponentialEase, // Index name
        KnownTypeIndex::EasingFunctionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Flyout
    {
        KnownTypeIndex::Flyout, // Index name
        KnownTypeIndex::FlyoutBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.FocusDisengagedEventArgs
    {
        KnownTypeIndex::FocusDisengagedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs
    {
        KnownTypeIndex::FocusEngagedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource
    {
        KnownTypeIndex::FontIconSource, // Index name
        KnownTypeIndex::IconSource, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.FrameworkElement
    {
        KnownTypeIndex::FrameworkElement, // Index name
        KnownTypeIndex::UIElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        KnownTypeIndex::FrameworkElementAutomationPeer, // Index name
        KnownTypeIndex::AutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.FrameworkElementEx
    {
        KnownTypeIndex::FrameworkElementEx, // Index name
        KnownTypeIndex::UIElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsStrict)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.GeometryGroup
    {
        KnownTypeIndex::GeometryGroup, // Index name
        KnownTypeIndex::Geometry, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.GettingFocusEventArgs
    {
        KnownTypeIndex::GettingFocusEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.GradientBrush
    {
        KnownTypeIndex::GradientBrush, // Index name
        KnownTypeIndex::Brush, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings
    {
        KnownTypeIndex::GridViewItemTemplateSettings, // Index name
        KnownTypeIndex::ListViewBaseItemTemplateSettings, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.GroupedDataCollectionView
    {
        KnownTypeIndex::GroupedDataCollectionView, // Index name
        KnownTypeIndex::CollectionView, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs
    {
        KnownTypeIndex::HoldingRoutedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.HWCompLeafNode
    {
        KnownTypeIndex::HWCompLeafNode, // Index name
        KnownTypeIndex::HWCompNode, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.HWCompTreeNode
    {
        KnownTypeIndex::HWCompTreeNode, // Index name
        KnownTypeIndex::HWCompNode, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.HyperlinkAutomationPeer
    {
        KnownTypeIndex::HyperlinkAutomationPeer, // Index name
        KnownTypeIndex::AutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs
    {
        KnownTypeIndex::HyperlinkClickEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.Inline
    {
        KnownTypeIndex::Inline, // Index name
        KnownTypeIndex::TextElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.InputPaneThemeTransition
    {
        KnownTypeIndex::InputPaneThemeTransition, // Index name
        KnownTypeIndex::Transition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.InternalTransform
    {
        KnownTypeIndex::InternalTransform, // Index name
        KnownTypeIndex::GeneralTransform, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer
    {
        KnownTypeIndex::ItemAutomationPeer, // Index name
        KnownTypeIndex::AutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ItemClickEventArgs
    {
        KnownTypeIndex::ItemClickEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsPanelTemplate
    {
        KnownTypeIndex::ItemsPanelTemplate, // Index name
        KnownTypeIndex::FrameworkTemplate, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.KeyRoutedEventArgs
    {
        KnownTypeIndex::KeyRoutedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.KeyTime
    {
        KnownTypeIndex::KeyTime, // Index name
        KnownTypeIndex::TimeSpan, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.LayoutTransitionElement
    {
        KnownTypeIndex::LayoutTransitionElement, // Index name
        KnownTypeIndex::UIElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.LinearColorKeyFrame
    {
        KnownTypeIndex::LinearColorKeyFrame, // Index name
        KnownTypeIndex::ColorKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.LinearDoubleKeyFrame
    {
        KnownTypeIndex::LinearDoubleKeyFrame, // Index name
        KnownTypeIndex::DoubleKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.LinearPointKeyFrame
    {
        KnownTypeIndex::LinearPointKeyFrame, // Index name
        KnownTypeIndex::PointKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.LineGeometry
    {
        KnownTypeIndex::LineGeometry, // Index name
        KnownTypeIndex::Geometry, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.LineSegment
    {
        KnownTypeIndex::LineSegment, // Index name
        KnownTypeIndex::PathSegment, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings
    {
        KnownTypeIndex::ListViewItemTemplateSettings, // Index name
        KnownTypeIndex::ListViewBaseItemTemplateSettings, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.LosingFocusEventArgs
    {
        KnownTypeIndex::LosingFocusEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs
    {
        KnownTypeIndex::ManipulationCompletedRoutedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs
    {
        KnownTypeIndex::ManipulationDeltaRoutedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs
    {
        KnownTypeIndex::ManipulationInertiaStartingRoutedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs
    {
        KnownTypeIndex::ManipulationStartedRoutedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.ManipulationStartingRoutedEventArgs
    {
        KnownTypeIndex::ManipulationStartingRoutedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Matrix3DProjection
    {
        KnownTypeIndex::Matrix3DProjection, // Index name
        KnownTypeIndex::Projection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.MediaSwapChainElement
    {
        KnownTypeIndex::MediaSwapChainElement, // Index name
        KnownTypeIndex::UIElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyout
    {
        KnownTypeIndex::MenuFlyout, // Index name
        KnownTypeIndex::FlyoutBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.MenuPopupThemeTransition
    {
        KnownTypeIndex::MenuPopupThemeTransition, // Index name
        KnownTypeIndex::Transition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs
    {
        KnownTypeIndex::NoFocusCandidateFoundEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.NullExtension
    {
        KnownTypeIndex::NullExtension, // Index name
        KnownTypeIndex::MarkupExtensionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsMarkupExtension)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames
    {
        KnownTypeIndex::ObjectAnimationUsingKeyFrames, // Index name
        KnownTypeIndex::Timeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.PanelEx
    {
        KnownTypeIndex::PanelEx, // Index name
        KnownTypeIndex::UIElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsStrict)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PaneThemeTransition
    {
        KnownTypeIndex::PaneThemeTransition, // Index name
        KnownTypeIndex::Transition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ParallelTimeline
    {
        KnownTypeIndex::ParallelTimeline, // Index name
        KnownTypeIndex::Timeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.PathGeometry
    {
        KnownTypeIndex::PathGeometry, // Index name
        KnownTypeIndex::Geometry, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.PathIconSource
    {
        KnownTypeIndex::PathIconSource, // Index name
        KnownTypeIndex::IconSource, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D
    {
        KnownTypeIndex::PerspectiveTransform3D, // Index name
        KnownTypeIndex::Transform3D, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PickerFlyoutThemeTransition
    {
        KnownTypeIndex::PickerFlyoutThemeTransition, // Index name
        KnownTypeIndex::Transition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection
    {
        KnownTypeIndex::PlaneProjection, // Index name
        KnownTypeIndex::Projection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation
    {
        KnownTypeIndex::PointAnimation, // Index name
        KnownTypeIndex::Timeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames
    {
        KnownTypeIndex::PointAnimationUsingKeyFrames, // Index name
        KnownTypeIndex::Timeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames
    {
        KnownTypeIndex::PointerAnimationUsingKeyFrames, // Index name
        KnownTypeIndex::Timeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.PointerRoutedEventArgs
    {
        KnownTypeIndex::PointerRoutedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.PolyBezierSegment
    {
        KnownTypeIndex::PolyBezierSegment, // Index name
        KnownTypeIndex::PathSegment, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.PolyLineSegment
    {
        KnownTypeIndex::PolyLineSegment, // Index name
        KnownTypeIndex::PathSegment, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment
    {
        KnownTypeIndex::PolyQuadraticBezierSegment, // Index name
        KnownTypeIndex::PathSegment, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition
    {
        KnownTypeIndex::PopupThemeTransition, // Index name
        KnownTypeIndex::Transition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PowerEase
    {
        KnownTypeIndex::PowerEase, // Index name
        KnownTypeIndex::EasingFunctionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.PVLStaggerFunction
    {
        KnownTypeIndex::PVLStaggerFunction, // Index name
        KnownTypeIndex::StaggerFunctionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.QuadraticBezierSegment
    {
        KnownTypeIndex::QuadraticBezierSegment, // Index name
        KnownTypeIndex::PathSegment, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.QuadraticEase
    {
        KnownTypeIndex::QuadraticEase, // Index name
        KnownTypeIndex::EasingFunctionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.QuarticEase
    {
        KnownTypeIndex::QuarticEase, // Index name
        KnownTypeIndex::EasingFunctionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.QuinticEase
    {
        KnownTypeIndex::QuinticEase, // Index name
        KnownTypeIndex::EasingFunctionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs
    {
        KnownTypeIndex::RangeBaseValueChangedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.RectangleGeometry
    {
        KnownTypeIndex::RectangleGeometry, // Index name
        KnownTypeIndex::Geometry, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.RelativeSource
    {
        KnownTypeIndex::RelativeSource, // Index name
        KnownTypeIndex::MarkupExtensionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsMarkupExtension)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap
    {
        KnownTypeIndex::RenderTargetBitmap, // Index name
        KnownTypeIndex::ImageSource, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ReorderThemeTransition
    {
        KnownTypeIndex::ReorderThemeTransition, // Index name
        KnownTypeIndex::Transition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeTransition
    {
        KnownTypeIndex::RepositionThemeTransition, // Index name
        KnownTypeIndex::Transition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.RightTappedRoutedEventArgs
    {
        KnownTypeIndex::RightTappedRoutedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs
    {
        KnownTypeIndex::ScrollEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SelectionChangedEventArgs
    {
        KnownTypeIndex::SelectionChangedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Setter
    {
        KnownTypeIndex::Setter, // Index name
        KnownTypeIndex::SetterBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SineEase
    {
        KnownTypeIndex::SineEase, // Index name
        KnownTypeIndex::EasingFunctionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.SizeChangedEventArgs
    {
        KnownTypeIndex::SizeChangedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource
    {
        KnownTypeIndex::SoftwareBitmapSource, // Index name
        KnownTypeIndex::ImageSource, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush
    {
        KnownTypeIndex::SolidColorBrush, // Index name
        KnownTypeIndex::Brush, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame
    {
        KnownTypeIndex::SplineColorKeyFrame, // Index name
        KnownTypeIndex::ColorKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame
    {
        KnownTypeIndex::SplineDoubleKeyFrame, // Index name
        KnownTypeIndex::DoubleKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame
    {
        KnownTypeIndex::SplinePointKeyFrame, // Index name
        KnownTypeIndex::PointKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.StandardUICommand
    {
        KnownTypeIndex::StandardUICommand, // Index name
        KnownTypeIndex::XamlUICommand, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.StateTrigger
    {
        KnownTypeIndex::StateTrigger, // Index name
        KnownTypeIndex::StateTriggerBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.StaticResource
    {
        KnownTypeIndex::StaticResource, // Index name
        KnownTypeIndex::MarkupExtensionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsMarkupExtension)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.SurfaceImageSource
    {
        KnownTypeIndex::SurfaceImageSource, // Index name
        KnownTypeIndex::ImageSource, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSource
    {
        KnownTypeIndex::SvgImageSource, // Index name
        KnownTypeIndex::ImageSource, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.SwapChainElement
    {
        KnownTypeIndex::SwapChainElement, // Index name
        KnownTypeIndex::UIElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SymbolIconSource
    {
        KnownTypeIndex::SymbolIconSource, // Index name
        KnownTypeIndex::IconSource, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.TappedRoutedEventArgs
    {
        KnownTypeIndex::TappedRoutedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.TemplateBinding
    {
        KnownTypeIndex::TemplateBinding, // Index name
        KnownTypeIndex::MarkupExtensionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsMarkupExtension)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TextChangedEventArgs
    {
        KnownTypeIndex::TextChangedEventArgs, // Index name
        KnownTypeIndex::RoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter
    {
        KnownTypeIndex::TextHighlighter, // Index name
        KnownTypeIndex::TextHighlighterBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.ThemeResource
    {
        KnownTypeIndex::ThemeResource, // Index name
        KnownTypeIndex::MarkupExtensionBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsMarkupExtension)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.ThemeShadow
    {
        KnownTypeIndex::ThemeShadow, // Index name
        KnownTypeIndex::Shadow, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.TileBrush
    {
        KnownTypeIndex::TileBrush, // Index name
        KnownTypeIndex::Brush, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Transform
    {
        KnownTypeIndex::Transform, // Index name
        KnownTypeIndex::GeneralTransform, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.VectorCollectionView
    {
        KnownTypeIndex::VectorCollectionView, // Index name
        KnownTypeIndex::CollectionView, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.VectorViewCollectionView
    {
        KnownTypeIndex::VectorViewCollectionView, // Index name
        KnownTypeIndex::CollectionView, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
    {
        KnownTypeIndex::XamlCompositionBrushBase, // Index name
        KnownTypeIndex::Brush, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Windows.Foundation.Object]
    {
        KnownTypeIndex::ObservablePresentationFrameworkCollectionOfObject, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Microsoft.UI.Xaml.DependencyObject]
    {
        KnownTypeIndex::ObservablePresentationFrameworkCollectionOfDependencyObject, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfDependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.InputValidationError]
    {
        KnownTypeIndex::ObservablePresentationFrameworkCollectionOfInputValidationError, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.ICommandBarElement]
    {
        KnownTypeIndex::ObservablePresentationFrameworkCollectionOfICommandBarElement, // Index name
        KnownTypeIndex::PresentationFrameworkCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer
    {
        KnownTypeIndex::AppBarAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarLightDismissAutomationPeer
    {
        KnownTypeIndex::AppBarLightDismissAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotationCollection
    {
        KnownTypeIndex::AutomationAnnotationCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfAutomationAnnotation, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotationCollection
    {
        KnownTypeIndex::AutomationPeerAnnotationCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfAutomationPeerAnnotation, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerCollection
    {
        KnownTypeIndex::AutomationPeerCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer
    {
        KnownTypeIndex::AutoSuggestBoxAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.Binding
    {
        KnownTypeIndex::Binding, // Index name
        KnownTypeIndex::BindingBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsISupportInitialize) | static_cast<UINT>(MetaDataTypeInfoFlags::IsMarkupExtension)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage
    {
        KnownTypeIndex::BitmapImage, // Index name
        KnownTypeIndex::BitmapSource, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Border
    {
        KnownTypeIndex::Border, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.BrushCollection
    {
        KnownTypeIndex::BrushCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfBrush, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
    {
        KnownTypeIndex::ButtonBaseAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer
    {
        KnownTypeIndex::CalendarDatePickerAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewAutomationPeer
    {
        KnownTypeIndex::CalendarViewAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewBaseItemAutomationPeer
    {
        KnownTypeIndex::CalendarViewBaseItemAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection
    {
        KnownTypeIndex::ColorKeyFrameCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfColorKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection
    {
        KnownTypeIndex::ColumnDefinitionCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfColumnDefinition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer
    {
        KnownTypeIndex::ComboBoxItemAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxLightDismissAutomationPeer
    {
        KnownTypeIndex::ComboBoxLightDismissAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform
    {
        KnownTypeIndex::CompositeTransform, // Index name
        KnownTypeIndex::Transform, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.ConnectedAnimationRoot
    {
        KnownTypeIndex::ConnectedAnimationRoot, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter
    {
        KnownTypeIndex::ContentPresenter, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Control
    {
        KnownTypeIndex::Control, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer
    {
        KnownTypeIndex::DatePickerAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.DisplayMemberTemplate
    {
        KnownTypeIndex::DisplayMemberTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.DoubleCollection
    {
        KnownTypeIndex::DoubleCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfDouble, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection
    {
        KnownTypeIndex::DoubleKeyFrameCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfDoubleKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DragItemThemeAnimation
    {
        KnownTypeIndex::DragItemThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation
    {
        KnownTypeIndex::DragOverThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation
    {
        KnownTypeIndex::DrillInThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation
    {
        KnownTypeIndex::DrillOutThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation
    {
        KnownTypeIndex::DropTargetItemThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.FaceplateContentPresenterAutomationPeer
    {
        KnownTypeIndex::FaceplateContentPresenterAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.FadeInThemeAnimation
    {
        KnownTypeIndex::FadeInThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.FadeOutThemeAnimation
    {
        KnownTypeIndex::FadeOutThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer
    {
        KnownTypeIndex::FlipViewItemAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.FloatCollection
    {
        KnownTypeIndex::FloatCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfFloat, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer
    {
        KnownTypeIndex::FlyoutPresenterAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.FullWindowMediaRootAutomationPeer
    {
        KnownTypeIndex::FullWindowMediaRootAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.GeometryCollection
    {
        KnownTypeIndex::GeometryCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfGeometry, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.Glyphs
    {
        KnownTypeIndex::Glyphs, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.GradientStopCollection
    {
        KnownTypeIndex::GradientStopCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfGradientStop, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer
    {
        KnownTypeIndex::GroupItemAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer
    {
        KnownTypeIndex::HubAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer
    {
        KnownTypeIndex::HubSectionAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.HubSectionCollection
    {
        KnownTypeIndex::HubSectionCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfHubSection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.HWCompMediaNode
    {
        KnownTypeIndex::HWCompMediaNode, // Index name
        KnownTypeIndex::HWCompLeafNode, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.HWCompRenderDataNode
    {
        KnownTypeIndex::HWCompRenderDataNode, // Index name
        KnownTypeIndex::HWCompLeafNode, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.HWCompSwapChainNode
    {
        KnownTypeIndex::HWCompSwapChainNode, // Index name
        KnownTypeIndex::HWCompLeafNode, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.HWRedirectedCompTreeNodeWinRT
    {
        KnownTypeIndex::HWRedirectedCompTreeNodeWinRT, // Index name
        KnownTypeIndex::HWCompTreeNode, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.IconElement
    {
        KnownTypeIndex::IconElement, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Image
    {
        KnownTypeIndex::Image, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer
    {
        KnownTypeIndex::ImageAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.ImageBrush
    {
        KnownTypeIndex::ImageBrush, // Index name
        KnownTypeIndex::TileBrush, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.InlineUIContainer
    {
        KnownTypeIndex::InlineUIContainer, // Index name
        KnownTypeIndex::Inline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.InputScopeNameCollection
    {
        KnownTypeIndex::InputScopeNameCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfInputScopeName, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
    {
        KnownTypeIndex::ItemsControlAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter
    {
        KnownTypeIndex::ItemsPresenter, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.IterableCollectionView
    {
        KnownTypeIndex::IterableCollectionView, // Index name
        KnownTypeIndex::VectorCollectionView, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorCollection
    {
        KnownTypeIndex::KeyboardAcceleratorCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfKeyboardAccelerator, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.LandmarkTargetAutomationPeer
    {
        KnownTypeIndex::LandmarkTargetAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush
    {
        KnownTypeIndex::LinearGradientBrush, // Index name
        KnownTypeIndex::GradientBrush, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.LineBreak
    {
        KnownTypeIndex::LineBreak, // Index name
        KnownTypeIndex::Inline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::TrimSurroundingWhitespace)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer
    {
        KnownTypeIndex::ListBoxItemAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer
    {
        KnownTypeIndex::ListViewBaseHeaderItemAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseItemAutomationPeer
    {
        KnownTypeIndex::ListViewBaseItemAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemSecondaryChrome
    {
        KnownTypeIndex::ListViewBaseItemSecondaryChrome, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.MatrixTransform
    {
        KnownTypeIndex::MatrixTransform, // Index name
        KnownTypeIndex::Transform, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.MediaBase
    {
        KnownTypeIndex::MediaBase, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.MediaFailedRoutedEventArgs
    {
        KnownTypeIndex::MediaFailedRoutedEventArgs, // Index name
        KnownTypeIndex::ExceptionRoutedEventArgs, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer
    {
        KnownTypeIndex::MediaPlayerElementAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerPresenter
    {
        KnownTypeIndex::MediaPlayerPresenter, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer
    {
        KnownTypeIndex::MediaTransportControlsAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer
    {
        KnownTypeIndex::MenuFlyoutItemAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItemBaseCollection
    {
        KnownTypeIndex::MenuFlyoutItemBaseCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfMenuFlyoutItemBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutSubItemAutomationPeer
    {
        KnownTypeIndex::MenuFlyoutSubItemAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.NamedContainerAutomationPeer
    {
        KnownTypeIndex::NamedContainerAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection
    {
        KnownTypeIndex::ObjectKeyFrameCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfObjectKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Panel
    {
        KnownTypeIndex::Panel, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.Paragraph
    {
        KnownTypeIndex::Paragraph, // Index name
        KnownTypeIndex::Block, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveCollection
    {
        KnownTypeIndex::ParametricCurveCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfParametricCurve, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegmentCollection
    {
        KnownTypeIndex::ParametricCurveSegmentCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfParametricCurveSegment, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer
    {
        KnownTypeIndex::PasswordBoxAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.PathFigureCollection
    {
        KnownTypeIndex::PathFigureCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfPathFigure, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.PathSegmentCollection
    {
        KnownTypeIndex::PathSegmentCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfPathSegment, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.PointCollection
    {
        KnownTypeIndex::PointCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfPoint, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.PointerCollection
    {
        KnownTypeIndex::PointerCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfPointer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointerDownThemeAnimation
    {
        KnownTypeIndex::PointerDownThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrameCollection
    {
        KnownTypeIndex::PointerKeyFrameCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfPointerKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointerUpThemeAnimation
    {
        KnownTypeIndex::PointerUpThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection
    {
        KnownTypeIndex::PointKeyFrameCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfPointKeyFrame, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation
    {
        KnownTypeIndex::PopInThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PopOutThemeAnimation
    {
        KnownTypeIndex::PopOutThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup
    {
        KnownTypeIndex::Popup, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.PopupAutomationPeer
    {
        KnownTypeIndex::PopupAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.PopupRootAutomationPeer
    {
        KnownTypeIndex::PopupRootAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer
    {
        KnownTypeIndex::RangeBaseAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.RepeatBehavior
    {
        KnownTypeIndex::RepeatBehavior, // Index name
        KnownTypeIndex::Duration, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation
    {
        KnownTypeIndex::RepositionThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.ResourceDictionary
    {
        KnownTypeIndex::ResourceDictionary, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfDependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsDictionary)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.ResourceDictionaryCollection
    {
        KnownTypeIndex::ResourceDictionaryCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfResourceDictionary, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer
    {
        KnownTypeIndex::RichEditBoxAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock
    {
        KnownTypeIndex::RichTextBlock, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer
    {
        KnownTypeIndex::RichTextBlockAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow
    {
        KnownTypeIndex::RichTextBlockOverflow, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer
    {
        KnownTypeIndex::RichTextBlockOverflowAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.RotateTransform
    {
        KnownTypeIndex::RotateTransform, // Index name
        KnownTypeIndex::Transform, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.RowDefinitionCollection
    {
        KnownTypeIndex::RowDefinitionCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfRowDefinition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.Run
    {
        KnownTypeIndex::Run, // Index name
        KnownTypeIndex::Inline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform
    {
        KnownTypeIndex::ScaleTransform, // Index name
        KnownTypeIndex::Transform, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer
    {
        KnownTypeIndex::ScrollViewerAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer
    {
        KnownTypeIndex::SelectorItemAutomationPeer, // Index name
        KnownTypeIndex::ItemAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer
    {
        KnownTypeIndex::SemanticZoomAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.SetterBaseCollection
    {
        KnownTypeIndex::SetterBaseCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfSetterBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Shapes.Shape
    {
        KnownTypeIndex::Shape, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.SkewTransform
    {
        KnownTypeIndex::SkewTransform, // Index name
        KnownTypeIndex::Transform, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.Span
    {
        KnownTypeIndex::Span, // Index name
        KnownTypeIndex::Inline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation
    {
        KnownTypeIndex::SplitCloseThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation
    {
        KnownTypeIndex::SplitOpenThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.SplitViewLightDismissAutomationPeer
    {
        KnownTypeIndex::SplitViewLightDismissAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.SplitViewPaneAutomationPeer
    {
        KnownTypeIndex::SplitViewPaneAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.StateTriggerCollection
    {
        KnownTypeIndex::StateTriggerCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfStateTriggerBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard
    {
        KnownTypeIndex::Storyboard, // Index name
        KnownTypeIndex::ParallelTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.StoryboardCollection
    {
        KnownTypeIndex::StoryboardCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfStoryboard, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation
    {
        KnownTypeIndex::SwipeBackThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation
    {
        KnownTypeIndex::SwipeHintThemeAnimation, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock
    {
        KnownTypeIndex::TextBlock, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer
    {
        KnownTypeIndex::TextBlockAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer
    {
        KnownTypeIndex::TextBoxAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextBoxBaseAutomationPeer
    {
        KnownTypeIndex::TextBoxBaseAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.TextBoxView
    {
        KnownTypeIndex::TextBoxView, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection
    {
        KnownTypeIndex::TextElementCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfTextElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighterCollection
    {
        KnownTypeIndex::TextHighlighterCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfTextHighlighter, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.TextRangeCollection
    {
        KnownTypeIndex::TextRangeCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfTextRange, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ThemeAnimationBase
    {
        KnownTypeIndex::ThemeAnimationBase, // Index name
        KnownTypeIndex::DynamicTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer
    {
        KnownTypeIndex::ThumbAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.TimelineCollection
    {
        KnownTypeIndex::TimelineCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfTimeline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer
    {
        KnownTypeIndex::TimePickerAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer
    {
        KnownTypeIndex::ToggleMenuFlyoutItemAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer
    {
        KnownTypeIndex::ToggleSwitchAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToolTipAutomationPeer
    {
        KnownTypeIndex::ToolTipAutomationPeer, // Index name
        KnownTypeIndex::FrameworkElementAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.TransformCollection
    {
        KnownTypeIndex::TransformCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfTransform, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.TransformGroup
    {
        KnownTypeIndex::TransformGroup, // Index name
        KnownTypeIndex::Transform, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionCollection
    {
        KnownTypeIndex::TransitionCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfTransition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.TranslateTransform
    {
        KnownTypeIndex::TranslateTransform, // Index name
        KnownTypeIndex::Transform, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.TriggerActionCollection
    {
        KnownTypeIndex::TriggerActionCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfTriggerAction, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.TriggerCollection
    {
        KnownTypeIndex::TriggerCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfTriggerBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.UIElementCollection
    {
        KnownTypeIndex::UIElementCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfUIElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.UIElementWeakCollection
    {
        KnownTypeIndex::UIElementWeakCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfUIElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Viewbox
    {
        KnownTypeIndex::Viewbox, // Index name
        KnownTypeIndex::FrameworkElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource
    {
        KnownTypeIndex::VirtualSurfaceImageSource, // Index name
        KnownTypeIndex::SurfaceImageSource, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.VisualStateCollection
    {
        KnownTypeIndex::VisualStateCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfVisualState, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection
    {
        KnownTypeIndex::VisualStateGroupCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfVisualStateGroup, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.VisualTransitionCollection
    {
        KnownTypeIndex::VisualTransitionCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfVisualTransition, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap
    {
        KnownTypeIndex::WriteableBitmap, // Index name
        KnownTypeIndex::BitmapSource, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.XamlLightCollection
    {
        KnownTypeIndex::XamlLightCollection, // Index name
        KnownTypeIndex::PresentationFrameworkCollectionOfXamlLight, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection`1[Microsoft.UI.Xaml.Documents.Inline]
    {
        KnownTypeIndex::TextElementCollectionOfInline, // Index name
        KnownTypeIndex::TextElementCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection`1[Microsoft.UI.Xaml.Documents.Block]
    {
        KnownTypeIndex::TextElementCollectionOfBlock, // Index name
        KnownTypeIndex::TextElementCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarSeparator
    {
        KnownTypeIndex::AppBarSeparator, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.BasedOnSetterCollection
    {
        KnownTypeIndex::BasedOnSetterCollection, // Index name
        KnownTypeIndex::SetterBaseCollection, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.BitmapIcon
    {
        KnownTypeIndex::BitmapIcon, // Index name
        KnownTypeIndex::IconElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.Bold
    {
        KnownTypeIndex::Bold, // Index name
        KnownTypeIndex::Span, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer
    {
        KnownTypeIndex::ButtonAutomationPeer, // Index name
        KnownTypeIndex::ButtonBaseAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker
    {
        KnownTypeIndex::CalendarDatePicker, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarScrollViewerAutomationPeer
    {
        KnownTypeIndex::CalendarScrollViewerAutomationPeer, // Index name
        KnownTypeIndex::ScrollViewerAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView
    {
        KnownTypeIndex::CalendarView, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewBaseItem
    {
        KnownTypeIndex::CalendarViewBaseItem, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewDayItemAutomationPeer
    {
        KnownTypeIndex::CalendarViewDayItemAutomationPeer, // Index name
        KnownTypeIndex::CalendarViewBaseItemAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewItemAutomationPeer
    {
        KnownTypeIndex::CalendarViewItemAutomationPeer, // Index name
        KnownTypeIndex::CalendarViewBaseItemAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Canvas
    {
        KnownTypeIndex::Canvas, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.CaretBrowsingCaret
    {
        KnownTypeIndex::CaretBrowsingCaret, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources
    {
        KnownTypeIndex::ColorPaletteResources, // Index name
        KnownTypeIndex::ResourceDictionary, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsDictionary)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer
    {
        KnownTypeIndex::ComboBoxItemDataAutomationPeer, // Index name
        KnownTypeIndex::SelectorItemAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBarElementCollection
    {
        KnownTypeIndex::CommandBarElementCollection, // Index name
        KnownTypeIndex::ObservablePresentationFrameworkCollectionOfICommandBarElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CommandingContainer
    {
        KnownTypeIndex::CommandingContainer, // Index name
        KnownTypeIndex::ContentPresenter, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ContentControl
    {
        KnownTypeIndex::ContentControl, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker
    {
        KnownTypeIndex::DatePicker, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.DependencyObjectCollection
    {
        KnownTypeIndex::DependencyObjectCollection, // Index name
        KnownTypeIndex::ObservablePresentationFrameworkCollectionOfDependencyObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Shapes.Ellipse
    {
        KnownTypeIndex::Ellipse, // Index name
        KnownTypeIndex::Shape, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer
    {
        KnownTypeIndex::FlipViewItemDataAutomationPeer, // Index name
        KnownTypeIndex::SelectorItemAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.FontIcon
    {
        KnownTypeIndex::FontIcon, // Index name
        KnownTypeIndex::IconElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.FullWindowMediaRoot
    {
        KnownTypeIndex::FullWindowMediaRoot, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Grid
    {
        KnownTypeIndex::Grid, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer
    {
        KnownTypeIndex::GridViewHeaderItemAutomationPeer, // Index name
        KnownTypeIndex::ListViewBaseHeaderItemAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer
    {
        KnownTypeIndex::GridViewItemAutomationPeer, // Index name
        KnownTypeIndex::ListViewBaseItemAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Hub
    {
        KnownTypeIndex::Hub, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.HubSection
    {
        KnownTypeIndex::HubSection, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.HWWindowedPopupCompTreeNodeWinRT
    {
        KnownTypeIndex::HWWindowedPopupCompTreeNodeWinRT, // Index name
        KnownTypeIndex::HWRedirectedCompTreeNodeWinRT, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink
    {
        KnownTypeIndex::Hyperlink, // Index name
        KnownTypeIndex::Span, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer
    {
        KnownTypeIndex::HyperlinkButtonAutomationPeer, // Index name
        KnownTypeIndex::ButtonBaseAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.IconSourceElement
    {
        KnownTypeIndex::IconSourceElement, // Index name
        KnownTypeIndex::IconElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.Italic
    {
        KnownTypeIndex::Italic, // Index name
        KnownTypeIndex::Span, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ItemCollection
    {
        KnownTypeIndex::ItemCollection, // Index name
        KnownTypeIndex::ObservablePresentationFrameworkCollectionOfObject, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl
    {
        KnownTypeIndex::ItemsControl, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Shapes.Line
    {
        KnownTypeIndex::Line, // Index name
        KnownTypeIndex::Shape, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer
    {
        KnownTypeIndex::ListBoxItemDataAutomationPeer, // Index name
        KnownTypeIndex::SelectorItemAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseItemDataAutomationPeer
    {
        KnownTypeIndex::ListViewBaseItemDataAutomationPeer, // Index name
        KnownTypeIndex::SelectorItemAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemPresenter
    {
        KnownTypeIndex::ListViewBaseItemPresenter, // Index name
        KnownTypeIndex::ContentPresenter, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer
    {
        KnownTypeIndex::ListViewHeaderItemAutomationPeer, // Index name
        KnownTypeIndex::ListViewBaseHeaderItemAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer
    {
        KnownTypeIndex::ListViewItemAutomationPeer, // Index name
        KnownTypeIndex::ListViewBaseItemAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement
    {
        KnownTypeIndex::MediaPlayerElement, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsISupportInitialize) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls
    {
        KnownTypeIndex::MediaTransportControls, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase
    {
        KnownTypeIndex::MenuFlyoutItemBase, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer
    {
        KnownTypeIndex::MenuFlyoutPresenterAutomationPeer, // Index name
        KnownTypeIndex::ItemsControlAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ModernCollectionBasePanel
    {
        KnownTypeIndex::ModernCollectionBasePanel, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox
    {
        KnownTypeIndex::PasswordBox, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Shapes.Path
    {
        KnownTypeIndex::Path, // Index name
        KnownTypeIndex::Shape, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.PathIcon
    {
        KnownTypeIndex::PathIcon, // Index name
        KnownTypeIndex::IconElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Shapes.Polygon
    {
        KnownTypeIndex::Polygon, // Index name
        KnownTypeIndex::Shape, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Shapes.Polyline
    {
        KnownTypeIndex::Polyline, // Index name
        KnownTypeIndex::Shape, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase
    {
        KnownTypeIndex::RangeBase, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Shapes.Rectangle
    {
        KnownTypeIndex::Rectangle, // Index name
        KnownTypeIndex::Shape, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel
    {
        KnownTypeIndex::RelativePanel, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.RenderTargetBitmapRoot
    {
        KnownTypeIndex::RenderTargetBitmapRoot, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer
    {
        KnownTypeIndex::RepeatButtonAutomationPeer, // Index name
        KnownTypeIndex::ButtonBaseAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox
    {
        KnownTypeIndex::RichEditBox, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.RootVisual
    {
        KnownTypeIndex::RootVisual, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer
    {
        KnownTypeIndex::ScrollBarAutomationPeer, // Index name
        KnownTypeIndex::RangeBaseAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollContentPresenter
    {
        KnownTypeIndex::ScrollContentPresenter, // Index name
        KnownTypeIndex::ContentPresenter, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer
    {
        KnownTypeIndex::SelectorAutomationPeer, // Index name
        KnownTypeIndex::ItemsControlAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom
    {
        KnownTypeIndex::SemanticZoom, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer
    {
        KnownTypeIndex::SliderAutomationPeer, // Index name
        KnownTypeIndex::RangeBaseAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SplitView
    {
        KnownTypeIndex::SplitView, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.StackPanel
    {
        KnownTypeIndex::StackPanel, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SymbolIcon
    {
        KnownTypeIndex::SymbolIcon, // Index name
        KnownTypeIndex::IconElement, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox
    {
        KnownTypeIndex::TextBox, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.TextBoxBase
    {
        KnownTypeIndex::TextBoxBase, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Thumb
    {
        KnownTypeIndex::Thumb, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.TickBar
    {
        KnownTypeIndex::TickBar, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.TimePicker
    {
        KnownTypeIndex::TimePicker, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer
    {
        KnownTypeIndex::ToggleButtonAutomationPeer, // Index name
        KnownTypeIndex::ButtonBaseAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch
    {
        KnownTypeIndex::ToggleSwitch, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.Underline
    {
        KnownTypeIndex::Underline, // Index name
        KnownTypeIndex::Span, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.UserControl
    {
        KnownTypeIndex::UserControl, // Index name
        KnownTypeIndex::Control, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.ValidationErrorsCollection
    {
        KnownTypeIndex::ValidationErrorsCollection, // Index name
        KnownTypeIndex::ObservablePresentationFrameworkCollectionOfInputValidationError, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid
    {
        KnownTypeIndex::VariableSizedWrapGrid, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingPanel
    {
        KnownTypeIndex::VirtualizingPanel, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Hosting.XamlIslandRoot
    {
        KnownTypeIndex::XamlIslandRoot, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.XamlIslandRootCollection
    {
        KnownTypeIndex::XamlIslandRootCollection, // Index name
        KnownTypeIndex::Panel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.AppBar
    {
        KnownTypeIndex::AppBar, // Index name
        KnownTypeIndex::ContentControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer
    {
        KnownTypeIndex::AppBarButtonAutomationPeer, // Index name
        KnownTypeIndex::ButtonAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarElementContainer
    {
        KnownTypeIndex::AppBarElementContainer, // Index name
        KnownTypeIndex::ContentControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarLightDismiss
    {
        KnownTypeIndex::AppBarLightDismiss, // Index name
        KnownTypeIndex::Grid, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer
    {
        KnownTypeIndex::AppBarToggleButtonAutomationPeer, // Index name
        KnownTypeIndex::ToggleButtonAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox
    {
        KnownTypeIndex::AutoSuggestBox, // Index name
        KnownTypeIndex::ItemsControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.BlockCollection
    {
        KnownTypeIndex::BlockCollection, // Index name
        KnownTypeIndex::TextElementCollectionOfBlock, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
    {
        KnownTypeIndex::ButtonBase, // Index name
        KnownTypeIndex::ContentControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel
    {
        KnownTypeIndex::CalendarPanel, // Index name
        KnownTypeIndex::ModernCollectionBasePanel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDayItem
    {
        KnownTypeIndex::CalendarViewDayItem, // Index name
        KnownTypeIndex::CalendarViewBaseItem, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewItem
    {
        KnownTypeIndex::CalendarViewItem, // Index name
        KnownTypeIndex::CalendarViewBaseItem, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel
    {
        KnownTypeIndex::CarouselPanel, // Index name
        KnownTypeIndex::VirtualizingPanel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer
    {
        KnownTypeIndex::CheckBoxAutomationPeer, // Index name
        KnownTypeIndex::ToggleButtonAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer
    {
        KnownTypeIndex::ComboBoxAutomationPeer, // Index name
        KnownTypeIndex::SelectorAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxLightDismiss
    {
        KnownTypeIndex::ComboBoxLightDismiss, // Index name
        KnownTypeIndex::Canvas, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBarOverflowPresenter
    {
        KnownTypeIndex::CommandBarOverflowPresenter, // Index name
        KnownTypeIndex::ItemsControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog
    {
        KnownTypeIndex::ContentDialog, // Index name
        KnownTypeIndex::ContentControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer
    {
        KnownTypeIndex::FlipViewAutomationPeer, // Index name
        KnownTypeIndex::SelectorAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.FlyoutPresenter
    {
        KnownTypeIndex::FlyoutPresenter, // Index name
        KnownTypeIndex::ContentControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Frame
    {
        KnownTypeIndex::Frame, // Index name
        KnownTypeIndex::ContentControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer
    {
        KnownTypeIndex::GridViewItemDataAutomationPeer, // Index name
        KnownTypeIndex::ListViewBaseItemDataAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter
    {
        KnownTypeIndex::GridViewItemPresenter, // Index name
        KnownTypeIndex::ListViewBaseItemPresenter, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.GroupItem
    {
        KnownTypeIndex::GroupItem, // Index name
        KnownTypeIndex::ContentControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.InlineCollection
    {
        KnownTypeIndex::InlineCollection, // Index name
        KnownTypeIndex::TextElementCollectionOfInline, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCollection) | static_cast<UINT>(MetaDataTypeInfoFlags::IsWhitespaceSignificant)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel
    {
        KnownTypeIndex::ItemsStackPanel, // Index name
        KnownTypeIndex::ModernCollectionBasePanel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid
    {
        KnownTypeIndex::ItemsWrapGrid, // Index name
        KnownTypeIndex::ModernCollectionBasePanel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer
    {
        KnownTypeIndex::ListBoxAutomationPeer, // Index name
        KnownTypeIndex::SelectorAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer
    {
        KnownTypeIndex::ListViewBaseAutomationPeer, // Index name
        KnownTypeIndex::SelectorAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem
    {
        KnownTypeIndex::ListViewBaseHeaderItem, // Index name
        KnownTypeIndex::ContentControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer
    {
        KnownTypeIndex::ListViewItemDataAutomationPeer, // Index name
        KnownTypeIndex::ListViewBaseItemDataAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter
    {
        KnownTypeIndex::ListViewItemPresenter, // Index name
        KnownTypeIndex::ListViewBaseItemPresenter, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem
    {
        KnownTypeIndex::MenuFlyoutItem, // Index name
        KnownTypeIndex::MenuFlyoutItemBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter
    {
        KnownTypeIndex::MenuFlyoutPresenter, // Index name
        KnownTypeIndex::ItemsControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSeparator
    {
        KnownTypeIndex::MenuFlyoutSeparator, // Index name
        KnownTypeIndex::MenuFlyoutItemBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem
    {
        KnownTypeIndex::MenuFlyoutSubItem, // Index name
        KnownTypeIndex::MenuFlyoutItemBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel
    {
        KnownTypeIndex::OrientedVirtualizingPanel, // Index name
        KnownTypeIndex::VirtualizingPanel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Page
    {
        KnownTypeIndex::Page, // Index name
        KnownTypeIndex::UserControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.PopupRoot
    {
        KnownTypeIndex::PopupRoot, // Index name
        KnownTypeIndex::Canvas, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.PrintRoot
    {
        KnownTypeIndex::PrintRoot, // Index name
        KnownTypeIndex::Canvas, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer
    {
        KnownTypeIndex::RadioButtonAutomationPeer, // Index name
        KnownTypeIndex::ToggleButtonAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollBar
    {
        KnownTypeIndex::ScrollBar, // Index name
        KnownTypeIndex::RangeBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollContentControl
    {
        KnownTypeIndex::ScrollContentControl, // Index name
        KnownTypeIndex::ContentControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.SeekSliderAutomationPeer
    {
        KnownTypeIndex::SeekSliderAutomationPeer, // Index name
        KnownTypeIndex::SliderAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector
    {
        KnownTypeIndex::Selector, // Index name
        KnownTypeIndex::ItemsControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsISupportInitialize)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SelectorItem
    {
        KnownTypeIndex::SelectorItem, // Index name
        KnownTypeIndex::ContentControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Slider
    {
        KnownTypeIndex::Slider, // Index name
        KnownTypeIndex::RangeBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SwapChainBackgroundPanel
    {
        KnownTypeIndex::SwapChainBackgroundPanel, // Index name
        KnownTypeIndex::Grid, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SwapChainPanel
    {
        KnownTypeIndex::SwapChainPanel, // Index name
        KnownTypeIndex::Grid, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.TextSelectionGripper
    {
        KnownTypeIndex::TextSelectionGripper, // Index name
        KnownTypeIndex::Canvas, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTip
    {
        KnownTypeIndex::ToolTip, // Index name
        KnownTypeIndex::ContentControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.TransitionRoot
    {
        KnownTypeIndex::TransitionRoot, // Index name
        KnownTypeIndex::Canvas, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.WindowChrome
    {
        KnownTypeIndex::WindowChrome, // Index name
        KnownTypeIndex::ContentControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Button
    {
        KnownTypeIndex::Button, // Index name
        KnownTypeIndex::ButtonBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox
    {
        KnownTypeIndex::ComboBox, // Index name
        KnownTypeIndex::Selector, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsISupportInitialize) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxItem
    {
        KnownTypeIndex::ComboBoxItem, // Index name
        KnownTypeIndex::SelectorItem, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBar
    {
        KnownTypeIndex::CommandBar, // Index name
        KnownTypeIndex::AppBar, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.FlipView
    {
        KnownTypeIndex::FlipView, // Index name
        KnownTypeIndex::Selector, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsISupportInitialize) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.FlipViewItem
    {
        KnownTypeIndex::FlipViewItem, // Index name
        KnownTypeIndex::SelectorItem, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer
    {
        KnownTypeIndex::GridViewAutomationPeer, // Index name
        KnownTypeIndex::ListViewBaseAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.GridViewHeaderItem
    {
        KnownTypeIndex::GridViewHeaderItem, // Index name
        KnownTypeIndex::ListViewBaseHeaderItem, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.HyperlinkButton
    {
        KnownTypeIndex::HyperlinkButton, // Index name
        KnownTypeIndex::ButtonBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ListBox
    {
        KnownTypeIndex::ListBox, // Index name
        KnownTypeIndex::Selector, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsISupportInitialize) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ListBoxItem
    {
        KnownTypeIndex::ListBoxItem, // Index name
        KnownTypeIndex::SelectorItem, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer
    {
        KnownTypeIndex::ListViewAutomationPeer, // Index name
        KnownTypeIndex::ListViewBaseAutomationPeer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase
    {
        KnownTypeIndex::ListViewBase, // Index name
        KnownTypeIndex::Selector, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsISupportInitialize) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBaseItem
    {
        KnownTypeIndex::ListViewBaseItem, // Index name
        KnownTypeIndex::SelectorItem, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewHeaderItem
    {
        KnownTypeIndex::ListViewHeaderItem, // Index name
        KnownTypeIndex::ListViewBaseHeaderItem, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RepeatButton
    {
        KnownTypeIndex::RepeatButton, // Index name
        KnownTypeIndex::ButtonBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer
    {
        KnownTypeIndex::ScrollViewer, // Index name
        KnownTypeIndex::ScrollContentControl, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleButton
    {
        KnownTypeIndex::ToggleButton, // Index name
        KnownTypeIndex::ButtonBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem
    {
        KnownTypeIndex::ToggleMenuFlyoutItem, // Index name
        KnownTypeIndex::MenuFlyoutItem, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel
    {
        KnownTypeIndex::VirtualizingStackPanel, // Index name
        KnownTypeIndex::OrientedVirtualizingPanel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid
    {
        KnownTypeIndex::WrapGrid, // Index name
        KnownTypeIndex::OrientedVirtualizingPanel, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton
    {
        KnownTypeIndex::AppBarButton, // Index name
        KnownTypeIndex::Button, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton
    {
        KnownTypeIndex::AppBarToggleButton, // Index name
        KnownTypeIndex::ToggleButton, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CheckBox
    {
        KnownTypeIndex::CheckBox, // Index name
        KnownTypeIndex::ToggleButton, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.GridView
    {
        KnownTypeIndex::GridView, // Index name
        KnownTypeIndex::ListViewBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsISupportInitialize) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.GridViewItem
    {
        KnownTypeIndex::GridViewItem, // Index name
        KnownTypeIndex::ListViewBaseItem, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ListView
    {
        KnownTypeIndex::ListView, // Index name
        KnownTypeIndex::ListViewBase, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::IsISupportInitialize) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewItem
    {
        KnownTypeIndex::ListViewItem, // Index name
        KnownTypeIndex::ListViewBaseItem, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.RadioButton
    {
        KnownTypeIndex::RadioButton, // Index name
        KnownTypeIndex::ToggleButton, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.RootScrollViewer
    {
        KnownTypeIndex::RootScrollViewer, // Index name
        KnownTypeIndex::ScrollViewer, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::ExecutedClassConstructor) | static_cast<UINT>(MetaDataTypeInfoFlags::IsConstructible) | static_cast<UINT>(MetaDataTypeInfoFlags::RequiresPeerActivation)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AccessibilityView
    {
        KnownTypeIndex::AccessibilityView, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.AlignmentX
    {
        KnownTypeIndex::AlignmentX, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.AlignmentY
    {
        KnownTypeIndex::AlignmentY, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection
    {
        KnownTypeIndex::AnimationDirection, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AnnotationType
    {
        KnownTypeIndex::AnnotationType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarClosedDisplayMode
    {
        KnownTypeIndex::AppBarClosedDisplayMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.ApplicationHighContrastAdjustment
    {
        KnownTypeIndex::ApplicationHighContrastAdjustment, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.ApplicationRequiresPointerMode
    {
        KnownTypeIndex::ApplicationRequiresPointerMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.ApplicationTheme
    {
        KnownTypeIndex::ApplicationTheme, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationActiveEnd
    {
        KnownTypeIndex::AutomationActiveEnd, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnimationStyle
    {
        KnownTypeIndex::AutomationAnimationStyle, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationBulletStyle
    {
        KnownTypeIndex::AutomationBulletStyle, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationCaretBidiMode
    {
        KnownTypeIndex::AutomationCaretBidiMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationCaretPosition
    {
        KnownTypeIndex::AutomationCaretPosition, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationControlType
    {
        KnownTypeIndex::AutomationControlType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationEvents
    {
        KnownTypeIndex::AutomationEvents, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationFlowDirections
    {
        KnownTypeIndex::AutomationFlowDirections, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel
    {
        KnownTypeIndex::AutomationHeadingLevel, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType
    {
        KnownTypeIndex::AutomationLandmarkType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting
    {
        KnownTypeIndex::AutomationLiveSetting, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection
    {
        KnownTypeIndex::AutomationNavigationDirection, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind
    {
        KnownTypeIndex::AutomationNotificationKind, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing
    {
        KnownTypeIndex::AutomationNotificationProcessing, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation
    {
        KnownTypeIndex::AutomationOrientation, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationOutlineStyles
    {
        KnownTypeIndex::AutomationOutlineStyles, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType
    {
        KnownTypeIndex::AutomationStructureChangeType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationStyleId
    {
        KnownTypeIndex::AutomationStyleId, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle
    {
        KnownTypeIndex::AutomationTextDecorationLineStyle, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType
    {
        KnownTypeIndex::AutomationTextEditChangeType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason
    {
        KnownTypeIndex::AutoSuggestionBoxTextChangeReason, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.BackgroundSizing
    {
        KnownTypeIndex::BackgroundSizing, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.BindingMode
    {
        KnownTypeIndex::BindingMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapCreateOptions
    {
        KnownTypeIndex::BitmapCreateOptions, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.BrushMappingMode
    {
        KnownTypeIndex::BrushMappingMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDisplayMode
    {
        KnownTypeIndex::CalendarViewDisplayMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewSelectionMode
    {
        KnownTypeIndex::CalendarViewSelectionMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CandidateWindowAlignment
    {
        KnownTypeIndex::CandidateWindowAlignment, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CharacterCasing
    {
        KnownTypeIndex::CharacterCasing, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ClickMode
    {
        KnownTypeIndex::ClickMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ClockState
    {
        KnownTypeIndex::ClockState, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Windows.Foundation.Collections.CollectionChange
    {
        KnownTypeIndex::CollectionChange, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.ColorInterpolationMode
    {
        KnownTypeIndex::ColorInterpolationMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger
    {
        KnownTypeIndex::ComboBoxSelectionChangedTrigger, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBarDefaultLabelPosition
    {
        KnownTypeIndex::CommandBarDefaultLabelPosition, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBarDynamicOverflowAction
    {
        KnownTypeIndex::CommandBarDynamicOverflowAction, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBarLabelPosition
    {
        KnownTypeIndex::CommandBarLabelPosition, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBarOverflowButtonVisibility
    {
        KnownTypeIndex::CommandBarOverflowButtonVisibility, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComponentResourceLocation
    {
        KnownTypeIndex::ComponentResourceLocation, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent
    {
        KnownTypeIndex::ConnectedAnimationComponent, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogButton
    {
        KnownTypeIndex::ContentDialogButton, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogPlacement
    {
        KnownTypeIndex::ContentDialogPlacement, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogResult
    {
        KnownTypeIndex::ContentDialogResult, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ControlHeaderPlacement
    {
        KnownTypeIndex::ControlHeaderPlacement, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Windows.UI.Core.CoreCursorType
    {
        KnownTypeIndex::CoreCursorType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Windows.ApplicationModel.DataTransfer.DataPackageOperation
    {
        KnownTypeIndex::DataPackageOperation, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Windows.Globalization.DayOfWeek
    {
        KnownTypeIndex::DayOfWeek, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.DecodePixelType
    {
        KnownTypeIndex::DecodePixelType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators
    {
        KnownTypeIndex::DisabledFormattingAccelerators, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.DockPosition
    {
        KnownTypeIndex::DockPosition, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingMode
    {
        KnownTypeIndex::EasingMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation
    {
        KnownTypeIndex::EdgeTransitionLocation, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.ElementCompositeMode
    {
        KnownTypeIndex::ElementCompositeMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.ElementHighContrastAdjustment
    {
        KnownTypeIndex::ElementHighContrastAdjustment, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.ElementSoundKind
    {
        KnownTypeIndex::ElementSoundKind, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.ElementSoundMode
    {
        KnownTypeIndex::ElementSoundMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.ElementSoundPlayerState
    {
        KnownTypeIndex::ElementSoundPlayerState, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.ElementSpatialAudioMode
    {
        KnownTypeIndex::ElementSpatialAudioMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.ElementTheme
    {
        KnownTypeIndex::ElementTheme, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.ExpandCollapseState
    {
        KnownTypeIndex::ExpandCollapseState, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Windows.Media.Playback.FailedMediaStreamKind
    {
        KnownTypeIndex::FailedMediaStreamKind, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.FastPlayFallbackBehaviour
    {
        KnownTypeIndex::FastPlayFallbackBehaviour, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Animation.FillBehavior
    {
        KnownTypeIndex::FillBehavior, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.FillRule
    {
        KnownTypeIndex::FillRule, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.FlowDirection
    {
        KnownTypeIndex::FlowDirection, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode
    {
        KnownTypeIndex::FlyoutPlacementMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode
    {
        KnownTypeIndex::FlyoutShowMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.FocusInputDeviceKind
    {
        KnownTypeIndex::FocusInputDeviceKind, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.FocusNavigationDirection
    {
        KnownTypeIndex::FocusNavigationDirection, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.FocusState
    {
        KnownTypeIndex::FocusState, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.FocusVisualKind
    {
        KnownTypeIndex::FocusVisualKind, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.FontCapitals
    {
        KnownTypeIndex::FontCapitals, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.FontEastAsianLanguage
    {
        KnownTypeIndex::FontEastAsianLanguage, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.FontEastAsianWidths
    {
        KnownTypeIndex::FontEastAsianWidths, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.FontFraction
    {
        KnownTypeIndex::FontFraction, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.FontNumeralAlignment
    {
        KnownTypeIndex::FontNumeralAlignment, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.FontNumeralStyle
    {
        KnownTypeIndex::FontNumeralStyle, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Windows.UI.Text.FontStretch
    {
        KnownTypeIndex::FontStretch, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Windows.UI.Text.FontStyle
    {
        KnownTypeIndex::FontStyle, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.FontVariants
    {
        KnownTypeIndex::FontVariants, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GeneratorDirection
    {
        KnownTypeIndex::GeneratorDirection, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.GestureModes
    {
        KnownTypeIndex::GestureModes, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.GradientSpreadMethod
    {
        KnownTypeIndex::GradientSpreadMethod, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.GridUnitType
    {
        KnownTypeIndex::GridUnitType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GroupHeaderPlacement
    {
        KnownTypeIndex::GroupHeaderPlacement, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Input.HoldingState
    {
        KnownTypeIndex::HoldingState, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.HorizontalAlignment
    {
        KnownTypeIndex::HorizontalAlignment, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger
    {
        KnownTypeIndex::IncrementalLoadingTrigger, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.InputScopeNameValue
    {
        KnownTypeIndex::InputScopeNameValue, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.InputValidationErrorEventAction
    {
        KnownTypeIndex::InputValidationErrorEventAction, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.InputValidationKind
    {
        KnownTypeIndex::InputValidationKind, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.InputValidationMode
    {
        KnownTypeIndex::InputValidationMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsUpdatingScrollMode
    {
        KnownTypeIndex::ItemsUpdatingScrollMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode
    {
        KnownTypeIndex::KeyboardAcceleratorPlacementMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.KeyboardNavigationMode
    {
        KnownTypeIndex::KeyboardNavigationMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.KeyTipPlacementMode
    {
        KnownTypeIndex::KeyTipPlacementMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.LightDismissOverlayMode
    {
        KnownTypeIndex::LightDismissOverlayMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.LineStackingStrategy
    {
        KnownTypeIndex::LineStackingStrategy, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode
    {
        KnownTypeIndex::ListViewItemPresenterCheckMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterSelectionIndicatorMode
    {
        KnownTypeIndex::ListViewItemPresenterSelectionIndicatorMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewReorderMode
    {
        KnownTypeIndex::ListViewReorderMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewSelectionMode
    {
        KnownTypeIndex::ListViewSelectionMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus
    {
        KnownTypeIndex::LoadedImageSourceLoadStatus, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.LogicalDirection
    {
        KnownTypeIndex::LogicalDirection, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.ManipulationModes
    {
        KnownTypeIndex::ManipulationModes, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.MarkupExtensionType
    {
        KnownTypeIndex::MarkupExtensionType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Navigation.NavigationCacheMode
    {
        KnownTypeIndex::NavigationCacheMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Navigation.NavigationMode
    {
        KnownTypeIndex::NavigationMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction
    {
        KnownTypeIndex::NotifyCollectionChangedAction, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.OpticalMarginAlignment
    {
        KnownTypeIndex::OpticalMarginAlignment, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Orientation
    {
        KnownTypeIndex::Orientation, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.PanelScrollingDirection
    {
        KnownTypeIndex::PanelScrollingDirection, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordRevealMode
    {
        KnownTypeIndex::PasswordRevealMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.PatternInterface
    {
        KnownTypeIndex::PatternInterface, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.PenLineCap
    {
        KnownTypeIndex::PenLineCap, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.PenLineJoin
    {
        KnownTypeIndex::PenLineJoin, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.PlacementMode
    {
        KnownTypeIndex::PlacementMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Input.PointerDeviceType
    {
        KnownTypeIndex::PointerDeviceType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Internal.PointerDirection
    {
        KnownTypeIndex::PointerDirection, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode
    {
        KnownTypeIndex::PopupPlacementMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Printing.PreviewPageCountType
    {
        KnownTypeIndex::PreviewPageCountType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Printing.PrintDocumentFormat
    {
        KnownTypeIndex::PrintDocumentFormat, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.RelativeSourceMode
    {
        KnownTypeIndex::RelativeSourceMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.RequiresPointer
    {
        KnownTypeIndex::RequiresPointer, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditClipboardFormat
    {
        KnownTypeIndex::RichEditClipboardFormat, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.RowOrColumnMajor
    {
        KnownTypeIndex::RowOrColumnMajor, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.ScrollAmount
    {
        KnownTypeIndex::ScrollAmount, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollBarVisibility
    {
        KnownTypeIndex::ScrollBarVisibility, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType
    {
        KnownTypeIndex::ScrollEventType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode
    {
        KnownTypeIndex::ScrollingIndicatorMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollIntoViewAlignment
    {
        KnownTypeIndex::ScrollIntoViewAlignment, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollMode
    {
        KnownTypeIndex::ScrollMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SelectionMode
    {
        KnownTypeIndex::SelectionMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SliderSnapsTo
    {
        KnownTypeIndex::SliderSnapsTo, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment
    {
        KnownTypeIndex::SnapPointsAlignment, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SnapPointsType
    {
        KnownTypeIndex::SnapPointsType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SplitViewDisplayMode
    {
        KnownTypeIndex::SplitViewDisplayMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.SplitViewPanePlacement
    {
        KnownTypeIndex::SplitViewPanePlacement, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.StandardUICommandKind
    {
        KnownTypeIndex::StandardUICommandKind, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Stretch
    {
        KnownTypeIndex::Stretch, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.StretchDirection
    {
        KnownTypeIndex::StretchDirection, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.StyleSimulations
    {
        KnownTypeIndex::StyleSimulations, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.SupportedTextSelection
    {
        KnownTypeIndex::SupportedTextSelection, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceLoadStatus
    {
        KnownTypeIndex::SvgImageSourceLoadStatus, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.SweepDirection
    {
        KnownTypeIndex::SweepDirection, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Symbol
    {
        KnownTypeIndex::Symbol, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.SynchronizedInputType
    {
        KnownTypeIndex::SynchronizedInputType, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.TextAlignment
    {
        KnownTypeIndex::TextAlignment, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Windows.UI.Text.TextDecorations
    {
        KnownTypeIndex::TextDecorations, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.TextFormattingMode
    {
        KnownTypeIndex::TextFormattingMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.TextHintingMode
    {
        KnownTypeIndex::TextHintingMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.TextLineBounds
    {
        KnownTypeIndex::TextLineBounds, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.TextReadingOrder
    {
        KnownTypeIndex::TextReadingOrder, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Media.TextRenderingMode
    {
        KnownTypeIndex::TextRenderingMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.TextTrimming
    {
        KnownTypeIndex::TextTrimming, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.TextWrapping
    {
        KnownTypeIndex::TextWrapping, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.TickPlacement
    {
        KnownTypeIndex::TickPlacement, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.ToggleState
    {
        KnownTypeIndex::ToggleState, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Windows.UI.Xaml.Interop.TypeKind
    {
        KnownTypeIndex::TypeKind, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Documents.UnderlineStyle
    {
        KnownTypeIndex::UnderlineStyle, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Data.UpdateSourceTrigger
    {
        KnownTypeIndex::UpdateSourceTrigger, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Vector3TransitionComponents
    {
        KnownTypeIndex::Vector3TransitionComponents, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.VerticalAlignment
    {
        KnownTypeIndex::VerticalAlignment, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.VirtualizationMode
    {
        KnownTypeIndex::VirtualizationMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Windows.System.VirtualKey
    {
        KnownTypeIndex::VirtualKey, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Windows.System.VirtualKeyModifiers
    {
        KnownTypeIndex::VirtualKeyModifiers, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Visibility
    {
        KnownTypeIndex::Visibility, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.WindowInteractionState
    {
        KnownTypeIndex::WindowInteractionState, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.WindowVisualState
    {
        KnownTypeIndex::WindowVisualState, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode
    {
        KnownTypeIndex::XYFocusKeyboardNavigationMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy
    {
        KnownTypeIndex::XYFocusNavigationStrategy, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Input.XYFocusNavigationStrategyOverride
    {
        KnownTypeIndex::XYFocusNavigationStrategyOverride, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Controls.ZoomMode
    {
        KnownTypeIndex::ZoomMode, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
    // Microsoft.UI.Xaml.Automation.ZoomUnit
    {
        KnownTypeIndex::ZoomUnit, // Index name
        KnownTypeIndex::UnknownType, // Base index name
        static_cast<MetaDataTypeInfoFlags>(static_cast<UINT>(MetaDataTypeInfoFlags::IsPublic) | static_cast<UINT>(MetaDataTypeInfoFlags::IsValueType) | static_cast<UINT>(MetaDataTypeInfoFlags::HasTypeConverter) | static_cast<UINT>(MetaDataTypeInfoFlags::IsEnum) | static_cast<UINT>(MetaDataTypeInfoFlags::IsCompactEnum)), // Type flags
    },
};

// Type name information.
extern const MetaDataTypeNameInfo c_aTypeNameInfos[KnownTypeCount] =
{
    // UnknownType
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::UnknownNamespace, // Declaring namespace index
    },
    // Windows.Foundation.Collections.IObservableVector`1[Microsoft.UI.Xaml.Controls.GroupStyle]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Windows_Foundation_Collections, // Declaring namespace index
    },
    // Windows.Foundation.Collections.IVector`1[Windows.Foundation.Float]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Windows_Foundation_Collections, // Declaring namespace index
    },
    // Windows.Foundation.Collections.IVector`1[Microsoft.UI.Xaml.Navigation.PageStackEntry]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Windows_Foundation_Collections, // Declaring namespace index
    },
    // Windows.Foundation.Collections.IVector`1[Windows.Foundation.DateTime]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Windows_Foundation_Collections, // Declaring namespace index
    },
    // Windows.Foundation.Collections.IVectorView`1[Microsoft.UI.Xaml.Data.ItemIndexRange]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Windows_Foundation_Collections, // Declaring namespace index
    },
    // Windows.Foundation.Byte
    {
        XSTRING_PTR_STORAGE(L"Byte"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Byte"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Windows.Foundation.Char16
    {
        XSTRING_PTR_STORAGE(L"Char16"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Char16"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Windows.Foundation.DateTime
    {
        XSTRING_PTR_STORAGE(L"DateTime"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.DateTime"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition
    {
        XSTRING_PTR_STORAGE(L"GeneratorPosition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Windows.Foundation.Guid
    {
        XSTRING_PTR_STORAGE(L"Guid"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Guid"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Interop.IBindableIterable
    {
        XSTRING_PTR_STORAGE(L"IBindableIterable"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Interop.IBindableIterable"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Interop, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Interop.IBindableIterator
    {
        XSTRING_PTR_STORAGE(L"IBindableIterator"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Interop.IBindableIterator"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Interop, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Interop.IBindableObservableVector
    {
        XSTRING_PTR_STORAGE(L"IBindableObservableVector"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Interop.IBindableObservableVector"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Interop, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Interop.IBindableVector
    {
        XSTRING_PTR_STORAGE(L"IBindableVector"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Interop.IBindableVector"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Interop, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Interop.IBindableVectorView
    {
        XSTRING_PTR_STORAGE(L"IBindableVectorView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Interop.IBindableVectorView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Interop, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.ICollectionView
    {
        XSTRING_PTR_STORAGE(L"ICollectionView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.ICollectionView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.ICommand
    {
        XSTRING_PTR_STORAGE(L"ICommand"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.ICommand"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.IDataTemplateComponent
    {
        XSTRING_PTR_STORAGE(L"IDataTemplateComponent"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.IDataTemplateComponent"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.IDataTemplateExtension
    {
        XSTRING_PTR_STORAGE(L"IDataTemplateExtension"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.IDataTemplateExtension"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.IElementFactory
    {
        XSTRING_PTR_STORAGE(L"IElementFactory"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.IElementFactory"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Windows.Media.Playback.IMediaPlaybackSource
    {
        XSTRING_PTR_STORAGE(L"IMediaPlaybackSource"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Media.Playback.IMediaPlaybackSource"), // Full name
        KnownNamespaceIndex::Windows_Media_Playback, // Declaring namespace index
    },
    // Windows.Foundation.Int16
    {
        XSTRING_PTR_STORAGE(L"Int16"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Int16"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Windows.Foundation.Int64
    {
        XSTRING_PTR_STORAGE(L"Int64"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Int64"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Windows.Graphics.Printing.IPrintDocumentSource
    {
        XSTRING_PTR_STORAGE(L"IPrintDocumentSource"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Graphics.Printing.IPrintDocumentSource"), // Full name
        KnownNamespaceIndex::Windows_Graphics_Printing, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.IProvideValueTarget
    {
        XSTRING_PTR_STORAGE(L"IProvideValueTarget"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.IProvideValueTarget"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.IRootObjectProvider
    {
        XSTRING_PTR_STORAGE(L"IRootObjectProvider"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.IRootObjectProvider"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.IScrollAnchorProvider
    {
        XSTRING_PTR_STORAGE(L"IScrollAnchorProvider"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.IScrollAnchorProvider"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ISemanticZoomInformation
    {
        XSTRING_PTR_STORAGE(L"ISemanticZoomInformation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ISemanticZoomInformation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Text.ITextDocument
    {
        XSTRING_PTR_STORAGE(L"ITextDocument"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Text.ITextDocument"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Text, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.IUriContext
    {
        XSTRING_PTR_STORAGE(L"IUriContext"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.IUriContext"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.IValueConverter
    {
        XSTRING_PTR_STORAGE(L"IValueConverter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.IValueConverter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.IXamlServiceProvider
    {
        XSTRING_PTR_STORAGE(L"IXamlServiceProvider"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.IXamlServiceProvider"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.IXamlTypeResolver
    {
        XSTRING_PTR_STORAGE(L"IXamlTypeResolver"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.IXamlTypeResolver"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Windows.Foundation.Numerics.Matrix3x2
    {
        XSTRING_PTR_STORAGE(L"Matrix3x2"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Numerics.Matrix3x2"), // Full name
        KnownNamespaceIndex::Windows_Foundation_Numerics, // Declaring namespace index
    },
    // Windows.Foundation.Numerics.Matrix4x4
    {
        XSTRING_PTR_STORAGE(L"Matrix4x4"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Numerics.Matrix4x4"), // Full name
        KnownNamespaceIndex::Windows_Foundation_Numerics, // Declaring namespace index
    },
    // Windows.Foundation.Object
    {
        XSTRING_PTR_STORAGE(L"Object"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Object"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Windows.Foundation.Numerics.Quaternion
    {
        XSTRING_PTR_STORAGE(L"Quaternion"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Numerics.Quaternion"), // Full name
        KnownNamespaceIndex::Windows_Foundation_Numerics, // Declaring namespace index
    },
    // Windows.Foundation.Float
    {
        XSTRING_PTR_STORAGE(L"Single"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Single"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Windows.UI.Xaml.Interop.TypeName
    {
        XSTRING_PTR_STORAGE(L"TypeName"), // Name
        XSTRING_PTR_STORAGE(L"Windows.UI.Xaml.Interop.TypeName"), // Full name
        KnownNamespaceIndex::Windows_UI_Xaml_Interop, // Declaring namespace index
    },
    // Windows.Foundation.UInt16
    {
        XSTRING_PTR_STORAGE(L"UInt16"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.UInt16"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Windows.Foundation.UInt32
    {
        XSTRING_PTR_STORAGE(L"UInt32"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.UInt32"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Windows.Foundation.UInt64
    {
        XSTRING_PTR_STORAGE(L"UInt64"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.UInt64"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Windows.Foundation.Numerics.Vector2
    {
        XSTRING_PTR_STORAGE(L"Vector2"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Numerics.Vector2"), // Full name
        KnownNamespaceIndex::Windows_Foundation_Numerics, // Declaring namespace index
    },
    // Windows.Foundation.Numerics.Vector3
    {
        XSTRING_PTR_STORAGE(L"Vector3"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Numerics.Vector3"), // Full name
        KnownNamespaceIndex::Windows_Foundation_Numerics, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties
    {
        XSTRING_PTR_STORAGE(L"AutomationProperties"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AutomationProperties"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Colors
    {
        XSTRING_PTR_STORAGE(L"Colors"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Colors"), // Full name
        KnownNamespaceIndex::Microsoft_UI, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.DataTemplateSelector
    {
        XSTRING_PTR_STORAGE(L"DataTemplateSelector"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.DataTemplateSelector"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.DependencyObject
    {
        XSTRING_PTR_STORAGE(L"DependencyObject"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.DependencyObject"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Hosting.ElementCompositionPreview
    {
        XSTRING_PTR_STORAGE(L"ElementCompositionPreview"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Hosting.ElementCompositionPreview"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Hosting, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.EventArgs
    {
        XSTRING_PTR_STORAGE(L"EventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Object"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Windows.Foundation.EventHandlerStub
    {
        XSTRING_PTR_STORAGE(L"EventHandler"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.EventHandler"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.GroupStyleCollection
    {
        XSTRING_PTR_STORAGE(L"GroupStyleCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.GroupStyleCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.GroupStyleSelector
    {
        XSTRING_PTR_STORAGE(L"GroupStyleSelector"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.GroupStyleSelector"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Input.InputCursor
    {
        XSTRING_PTR_STORAGE(L"InputCursor"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Input.InputCursor"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.InputValidationContext
    {
        XSTRING_PTR_STORAGE(L"InputValidationContext"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.InputValidationContext"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.InteractionBase
    {
        XSTRING_PTR_STORAGE(L"InteractionBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.InteractionBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ItemContainerGenerator
    {
        XSTRING_PTR_STORAGE(L"ItemContainerGenerator"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ItemContainerGenerator"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ListViewPersistenceHelper
    {
        XSTRING_PTR_STORAGE(L"ListViewPersistenceHelper"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ListViewPersistenceHelper"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.MarkupExtension
    {
        XSTRING_PTR_STORAGE(L"MarkupExtension"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.MarkupExtension"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Windows.Media.Playback.MediaPlayer
    {
        XSTRING_PTR_STORAGE(L"MediaPlayer"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Media.Playback.MediaPlayer"), // Full name
        KnownNamespaceIndex::Windows_Media_Playback, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControlsHelper
    {
        XSTRING_PTR_STORAGE(L"MediaTransportControlsHelper"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.MediaTransportControlsHelper"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.ParserServiceProvider
    {
        XSTRING_PTR_STORAGE(L"ParserServiceProvider"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.ParserServiceProvider"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.StyleSelector
    {
        XSTRING_PTR_STORAGE(L"StyleSelector"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.StyleSelector"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.TextOptions
    {
        XSTRING_PTR_STORAGE(L"TextOptions"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.TextOptions"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService
    {
        XSTRING_PTR_STORAGE(L"ToolTipService"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ToolTipService"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.Typography
    {
        XSTRING_PTR_STORAGE(L"Typography"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.Typography"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Windows.Foundation.Uri
    {
        XSTRING_PTR_STORAGE(L"Uri"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Uri"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.XamlBindingHelper
    {
        XSTRING_PTR_STORAGE(L"XamlBindingHelper"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.XamlBindingHelper"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.XamlMarkupHelper
    {
        XSTRING_PTR_STORAGE(L"XamlMarkupHelper"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.XamlMarkupHelper"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.XamlRenderingBackgroundTask
    {
        XSTRING_PTR_STORAGE(L"XamlRenderingBackgroundTask"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.XamlRenderingBackgroundTask"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs
    {
        XSTRING_PTR_STORAGE(L"AccessKeyDisplayDismissedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs
    {
        XSTRING_PTR_STORAGE(L"AccessKeyDisplayRequestedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs
    {
        XSTRING_PTR_STORAGE(L"AccessKeyInvokedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Printing.AddPagesEventArgs
    {
        XSTRING_PTR_STORAGE(L"AddPagesEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Printing.AddPagesEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Printing, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs
    {
        XSTRING_PTR_STORAGE(L"AnchorRequestedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarButtonTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"AppBarButtonTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.AppBarButtonTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"AppBarTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarToggleButtonTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"AppBarToggleButtonTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.AppBarToggleButtonTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Application
    {
        XSTRING_PTR_STORAGE(L"Application"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Application"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ApplicationBarService
    {
        XSTRING_PTR_STORAGE(L"ApplicationBarService"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ApplicationBarService"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotation
    {
        XSTRING_PTR_STORAGE(L"AutomationAnnotation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AutomationAnnotation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
    {
        XSTRING_PTR_STORAGE(L"AutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation
    {
        XSTRING_PTR_STORAGE(L"AutomationPeerAnnotation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.AutomationPeerEventArgs
    {
        XSTRING_PTR_STORAGE(L"AutomationPeerEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.AutomationPeerEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs
    {
        XSTRING_PTR_STORAGE(L"AutoSuggestBoxQuerySubmittedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs
    {
        XSTRING_PTR_STORAGE(L"AutoSuggestBoxSuggestionChosenEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"AutoSuggestBoxTextChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Printing.BeginPrintEventArgs
    {
        XSTRING_PTR_STORAGE(L"BeginPrintEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Printing.BeginPrintEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Printing, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.BindingFailedEventArgs
    {
        XSTRING_PTR_STORAGE(L"BindingFailedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.BindingFailedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Windows.Foundation.Boolean
    {
        XSTRING_PTR_STORAGE(L"Boolean"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Boolean"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Brush
    {
        XSTRING_PTR_STORAGE(L"Brush"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Brush"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.BrushTransition
    {
        XSTRING_PTR_STORAGE(L"BrushTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.BrushTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.CacheMode
    {
        XSTRING_PTR_STORAGE(L"CacheMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.CacheMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"CalendarDatePickerDateChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs
    {
        XSTRING_PTR_STORAGE(L"CalendarViewDayItemChangingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"CalendarViewSelectedDatesChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"CalendarViewTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"CandidateWindowBoundsChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs
    {
        XSTRING_PTR_STORAGE(L"CanExecuteRequestedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.CollectionView
    {
        XSTRING_PTR_STORAGE(L"CollectionView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.CollectionView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.CollectionViewGroup
    {
        XSTRING_PTR_STORAGE(L"CollectionViewGroup"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.CollectionViewGroup"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.CollectionViewSource
    {
        XSTRING_PTR_STORAGE(L"CollectionViewSource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.CollectionViewSource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Windows.UI.Color
    {
        XSTRING_PTR_STORAGE(L"Color"), // Name
        XSTRING_PTR_STORAGE(L"Windows.UI.Color"), // Full name
        KnownNamespaceIndex::Windows_UI, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame
    {
        XSTRING_PTR_STORAGE(L"ColorKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinition
    {
        XSTRING_PTR_STORAGE(L"ColumnDefinition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ColumnDefinition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"ComboBoxTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs
    {
        XSTRING_PTR_STORAGE(L"ComboBoxTextSubmittedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"CommandBarTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CommandingContextChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"CommandingContextChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CommandingContextChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation
    {
        XSTRING_PTR_STORAGE(L"ConnectedAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService
    {
        XSTRING_PTR_STORAGE(L"ConnectedAnimationService"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs
    {
        XSTRING_PTR_STORAGE(L"ContentDialogButtonClickEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs
    {
        XSTRING_PTR_STORAGE(L"ContentDialogClosedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs
    {
        XSTRING_PTR_STORAGE(L"ContentDialogClosingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogOpenedEventArgs
    {
        XSTRING_PTR_STORAGE(L"ContentDialogOpenedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ContentDialogOpenedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.CornerRadius
    {
        XSTRING_PTR_STORAGE(L"CornerRadius"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.CornerRadius"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.CurrentChangingEventArgs
    {
        XSTRING_PTR_STORAGE(L"CurrentChangingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.CurrentChangingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"DatePickerSelectedValueChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.DatePickerValueChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"DatePickerValueChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.DatePickerValueChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.DebugSettings
    {
        XSTRING_PTR_STORAGE(L"DebugSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.DebugSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.DeferredElement
    {
        XSTRING_PTR_STORAGE(L"DeferredElement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.DeferredElement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.DependencyObjectWrapper
    {
        XSTRING_PTR_STORAGE(L"DependencyObjectWrapper"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.DependencyObjectWrapper"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.DependencyPropertyProxy
    {
        XSTRING_PTR_STORAGE(L"DependencyPropertyProxy"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.DependencyProperty"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Deployment
    {
        XSTRING_PTR_STORAGE(L"Deployment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Deployment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs
    {
        XSTRING_PTR_STORAGE(L"DesktopWindowXamlSourceGotFocusEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Hosting, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs
    {
        XSTRING_PTR_STORAGE(L"DesktopWindowXamlSourceTakeFocusRequestedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Hosting, // Declaring namespace index
    },
    // Windows.Foundation.Double
    {
        XSTRING_PTR_STORAGE(L"Double"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Double"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame
    {
        XSTRING_PTR_STORAGE(L"DoubleKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventArgs
    {
        XSTRING_PTR_STORAGE(L"DownloadProgressEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs
    {
        XSTRING_PTR_STORAGE(L"DragItemsCompletedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.DragItemsStartingEventArgs
    {
        XSTRING_PTR_STORAGE(L"DragItemsStartingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.DragItemsStartingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs
    {
        XSTRING_PTR_STORAGE(L"DynamicOverflowItemsChangingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        XSTRING_PTR_STORAGE(L"EasingFunctionBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"EffectiveViewportChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Printing.EndPrintEventArgs
    {
        XSTRING_PTR_STORAGE(L"EndPrintEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Printing.EndPrintEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Printing, // Declaring namespace index
    },
    // Windows.Foundation.Enumerated
    {
        XSTRING_PTR_STORAGE(L"Enumerated"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Enumerated"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.ErrorEventArgs
    {
        XSTRING_PTR_STORAGE(L"ErrorEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.ErrorEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs
    {
        XSTRING_PTR_STORAGE(L"ExecuteRequestedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.ExternalObjectReference
    {
        XSTRING_PTR_STORAGE(L"ExternalObjectReference"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.ExternalObjectReference"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase
    {
        XSTRING_PTR_STORAGE(L"FlyoutBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs
    {
        XSTRING_PTR_STORAGE(L"FlyoutBaseClosingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.FocusedElementRemovedEventArgs
    {
        XSTRING_PTR_STORAGE(L"FocusedElementRemovedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.FocusedElementRemovedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.FocusManagerGotFocusEventArgs
    {
        XSTRING_PTR_STORAGE(L"FocusManagerGotFocusEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.FocusManagerGotFocusEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.FocusManagerLostFocusEventArgs
    {
        XSTRING_PTR_STORAGE(L"FocusManagerLostFocusEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.FocusManagerLostFocusEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.FontFamily
    {
        XSTRING_PTR_STORAGE(L"FontFamily"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.FontFamily"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Windows.UI.Text.FontWeight
    {
        XSTRING_PTR_STORAGE(L"FontWeight"), // Name
        XSTRING_PTR_STORAGE(L"Windows.UI.Text.FontWeight"), // Full name
        KnownNamespaceIndex::Windows_UI_Text, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FrameworkTemplate
    {
        XSTRING_PTR_STORAGE(L"FrameworkTemplate"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FrameworkTemplate"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.GeneralTransform
    {
        XSTRING_PTR_STORAGE(L"GeneralTransform"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.GeneralTransform"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Geometry
    {
        XSTRING_PTR_STORAGE(L"Geometry"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Geometry"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Printing.GetPreviewPageEventArgs
    {
        XSTRING_PTR_STORAGE(L"GetPreviewPageEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Printing.GetPreviewPageEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Printing, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.GradientStop
    {
        XSTRING_PTR_STORAGE(L"GradientStop"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.GradientStop"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.GridLength
    {
        XSTRING_PTR_STORAGE(L"GridLength"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.GridLength"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle
    {
        XSTRING_PTR_STORAGE(L"GroupStyle"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.GroupStyle"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.HasValidationErrorsChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"HasValidationErrorsChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.HasValidationErrorsChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventArgs
    {
        XSTRING_PTR_STORAGE(L"HubSectionHeaderClickEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.HWCompNode
    {
        XSTRING_PTR_STORAGE(L"HWCompNode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.HWCompNode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.IconSource
    {
        XSTRING_PTR_STORAGE(L"IconSource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.IconSource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.ImageSource
    {
        XSTRING_PTR_STORAGE(L"ImageSource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.ImageSource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.InertiaExpansionBehavior
    {
        XSTRING_PTR_STORAGE(L"InertiaExpansionBehavior"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.InertiaExpansionBehavior"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.InertiaRotationBehavior
    {
        XSTRING_PTR_STORAGE(L"InertiaRotationBehavior"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.InertiaRotationBehavior"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.InertiaTranslationBehavior
    {
        XSTRING_PTR_STORAGE(L"InertiaTranslationBehavior"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.InertiaTranslationBehavior"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.InputScope
    {
        XSTRING_PTR_STORAGE(L"InputScope"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.InputScope"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.InputScopeName
    {
        XSTRING_PTR_STORAGE(L"InputScopeName"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.InputScopeName"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.InputValidationCommand
    {
        XSTRING_PTR_STORAGE(L"InputValidationCommand"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.InputValidationCommand"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.InputValidationErrorEventArgs
    {
        XSTRING_PTR_STORAGE(L"InputValidationErrorEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.InputValidationErrorEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Windows.Foundation.Int32
    {
        XSTRING_PTR_STORAGE(L"Int32"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Int32"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple
    {
        XSTRING_PTR_STORAGE(L"IRawElementProviderSimple"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Provider, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.IsApiContractNotPresent
    {
        XSTRING_PTR_STORAGE(L"IsApiContractNotPresent"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.IsApiContractNotPresent"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.IsApiContractPresent
    {
        XSTRING_PTR_STORAGE(L"IsApiContractPresent"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.IsApiContractPresent"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.IsEnabledChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"IsEnabledChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.IsEnabledChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.IsPropertyNotPresent
    {
        XSTRING_PTR_STORAGE(L"IsPropertyNotPresent"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.IsPropertyNotPresent"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.IsPropertyPresent
    {
        XSTRING_PTR_STORAGE(L"IsPropertyPresent"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.IsPropertyPresent"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"IsTextTrimmedChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.IsTypeNotPresent
    {
        XSTRING_PTR_STORAGE(L"IsTypeNotPresent"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.IsTypeNotPresent"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Markup.IsTypePresent
    {
        XSTRING_PTR_STORAGE(L"IsTypePresent"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Markup.IsTypePresent"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Markup, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.KeyboardAccelerator
    {
        XSTRING_PTR_STORAGE(L"KeyboardAccelerator"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.KeyboardAccelerator"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs
    {
        XSTRING_PTR_STORAGE(L"KeyboardAcceleratorInvokedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.KeySpline
    {
        XSTRING_PTR_STORAGE(L"KeySpline"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.KeySpline"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.LayoutTransitionStaggerItem
    {
        XSTRING_PTR_STORAGE(L"LayoutTransitionStaggerItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.LayoutTransitionStaggerItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.LengthConverter
    {
        XSTRING_PTR_STORAGE(L"LengthConverter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.LengthConverter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"ListViewBaseItemTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs
    {
        XSTRING_PTR_STORAGE(L"LoadedImageSourceLoadCompletedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSurface
    {
        XSTRING_PTR_STORAGE(L"LoadedImageSurface"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.LoadedImageSurface"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.ManipulationDelta
    {
        XSTRING_PTR_STORAGE(L"ManipulationDelta"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.ManipulationDelta"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.ManipulationPivot
    {
        XSTRING_PTR_STORAGE(L"ManipulationPivot"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.ManipulationPivot"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.ManipulationVelocities
    {
        XSTRING_PTR_STORAGE(L"ManipulationVelocities"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.ManipulationVelocities"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.MarkupExtensionBase
    {
        XSTRING_PTR_STORAGE(L"MarkupExtensionBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.MarkupExtensionBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Matrix
    {
        XSTRING_PTR_STORAGE(L"Matrix"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Matrix"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D
    {
        XSTRING_PTR_STORAGE(L"Matrix3D"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Media3D.Matrix3D"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Media3D, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.MediaPlaybackItemConverter
    {
        XSTRING_PTR_STORAGE(L"MediaPlaybackItemConverter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.MediaPlaybackItemConverter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs
    {
        XSTRING_PTR_STORAGE(L"MediaTransportControlsThumbnailRequestedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutItemTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"MenuFlyoutItemTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutItemTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutPresenterTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"MenuFlyoutPresenterTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutPresenterTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs
    {
        XSTRING_PTR_STORAGE(L"NavigatingCancelEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Navigation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Navigation.NavigationEventArgs
    {
        XSTRING_PTR_STORAGE(L"NavigationEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Navigation.NavigationEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Navigation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs
    {
        XSTRING_PTR_STORAGE(L"NavigationFailedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Navigation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
    {
        XSTRING_PTR_STORAGE(L"NavigationTransitionInfo"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.NullKeyedResource
    {
        XSTRING_PTR_STORAGE(L"NullKeyedResource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.NullKeyedResource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame
    {
        XSTRING_PTR_STORAGE(L"ObjectKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Navigation.PageStackEntry
    {
        XSTRING_PTR_STORAGE(L"PageStackEntry"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Navigation.PageStackEntry"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Navigation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Printing.PaginateEventArgs
    {
        XSTRING_PTR_STORAGE(L"PaginateEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Printing.PaginateEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Printing, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurve
    {
        XSTRING_PTR_STORAGE(L"ParametricCurve"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.ParametricCurve"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment
    {
        XSTRING_PTR_STORAGE(L"ParametricCurveSegment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.ParametricCurveSegment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs
    {
        XSTRING_PTR_STORAGE(L"PasswordBoxPasswordChangingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.PathFigure
    {
        XSTRING_PTR_STORAGE(L"PathFigure"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.PathFigure"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.PathSegment
    {
        XSTRING_PTR_STORAGE(L"PathSegment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.PathSegment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Windows.Foundation.Point
    {
        XSTRING_PTR_STORAGE(L"Point"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Point"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.Pointer
    {
        XSTRING_PTR_STORAGE(L"Pointer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.Pointer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrame
    {
        XSTRING_PTR_STORAGE(L"PointerKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.PointerKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrame
    {
        XSTRING_PTR_STORAGE(L"PointKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.PointKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection
    {
        XSTRING_PTR_STORAGE(L"PresentationFrameworkCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Printing.PrintDocument
    {
        XSTRING_PTR_STORAGE(L"PrintDocument"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Printing.PrintDocument"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Printing, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Printing.PrintPageEventArgs
    {
        XSTRING_PTR_STORAGE(L"PrintPageEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Printing.PrintPageEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Printing, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Projection
    {
        XSTRING_PTR_STORAGE(L"Projection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Projection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.PropertyPath
    {
        XSTRING_PTR_STORAGE(L"PropertyPath"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.PropertyPath"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Windows.Foundation.Rect
    {
        XSTRING_PTR_STORAGE(L"Rect"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Rect"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.RenderedEventArgs
    {
        XSTRING_PTR_STORAGE(L"RenderedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.RenderedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.RenderingEventArgs
    {
        XSTRING_PTR_STORAGE(L"RenderingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.RenderingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ResourceManagerRequestedEventArgs
    {
        XSTRING_PTR_STORAGE(L"ResourceManagerRequestedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ResourceManagerRequestedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs
    {
        XSTRING_PTR_STORAGE(L"RichEditBoxSelectionChangingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs
    {
        XSTRING_PTR_STORAGE(L"RichEditBoxTextChangingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.RoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"RoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.RoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.RowDefinition
    {
        XSTRING_PTR_STORAGE(L"RowDefinition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.RowDefinition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ScalarTransition
    {
        XSTRING_PTR_STORAGE(L"ScalarTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ScalarTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"ScrollViewerViewChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs
    {
        XSTRING_PTR_STORAGE(L"ScrollViewerViewChangingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.SecondaryContentRelationship
    {
        XSTRING_PTR_STORAGE(L"SecondaryContentRelationship"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.SecondaryContentRelationship"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"SectionsInViewChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"SemanticZoomViewChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.SetterBase
    {
        XSTRING_PTR_STORAGE(L"SetterBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.SetterBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Shadow
    {
        XSTRING_PTR_STORAGE(L"Shadow"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Shadow"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Windows.Foundation.Size
    {
        XSTRING_PTR_STORAGE(L"Size"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Size"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs
    {
        XSTRING_PTR_STORAGE(L"SplitViewPaneClosingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"SplitViewTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.StaggerFunctionBase
    {
        XSTRING_PTR_STORAGE(L"StaggerFunctionBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.StaggerFunctionBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.StartupEventArgs
    {
        XSTRING_PTR_STORAGE(L"StartupEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.StartupEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.StateTriggerBase
    {
        XSTRING_PTR_STORAGE(L"StateTriggerBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.StateTriggerBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Windows.Foundation.String
    {
        XSTRING_PTR_STORAGE(L"String"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.String"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Style
    {
        XSTRING_PTR_STORAGE(L"Style"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Style"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs
    {
        XSTRING_PTR_STORAGE(L"SvgImageSourceFailedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs
    {
        XSTRING_PTR_STORAGE(L"SvgImageSourceOpenedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.SystemBackdrop
    {
        XSTRING_PTR_STORAGE(L"SystemBackdrop"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.SystemBackdrop"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.TargetPropertyPath
    {
        XSTRING_PTR_STORAGE(L"TargetPropertyPath"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.TargetPropertyPath"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.TemplateContent
    {
        XSTRING_PTR_STORAGE(L"TemplateContent"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.TemplateContent"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextAdapter
    {
        XSTRING_PTR_STORAGE(L"TextAdapter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.TextAdapter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs
    {
        XSTRING_PTR_STORAGE(L"TextBoxBeforeTextChangingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs
    {
        XSTRING_PTR_STORAGE(L"TextBoxSelectionChangingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs
    {
        XSTRING_PTR_STORAGE(L"TextBoxTextChangingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"TextCompositionChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs
    {
        XSTRING_PTR_STORAGE(L"TextCompositionEndedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs
    {
        XSTRING_PTR_STORAGE(L"TextCompositionStartedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs
    {
        XSTRING_PTR_STORAGE(L"TextControlCopyingToClipboardEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs
    {
        XSTRING_PTR_STORAGE(L"TextControlCuttingToClipboardEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TextControlPasteEventArgs
    {
        XSTRING_PTR_STORAGE(L"TextControlPasteEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TextControlPasteEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.TextElement
    {
        XSTRING_PTR_STORAGE(L"TextElement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.TextElement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighterBase
    {
        XSTRING_PTR_STORAGE(L"TextHighlighterBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.TextHighlighterBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.TextPointerWrapper
    {
        XSTRING_PTR_STORAGE(L"TextPointerWrapper"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.TextPointerWrapper"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // MS.Internal.Automation.TextProvider
    {
        XSTRING_PTR_STORAGE(L"TextProvider"), // Name
        XSTRING_PTR_STORAGE(L"MS.Internal.Automation.TextProvider"), // Full name
        KnownNamespaceIndex::MS_Internal_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.TextRange
    {
        XSTRING_PTR_STORAGE(L"TextRange"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.TextRange"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextRangeAdapter
    {
        XSTRING_PTR_STORAGE(L"TextRangeAdapter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.TextRangeAdapter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // MS.Internal.Automation.TextRangeProvider
    {
        XSTRING_PTR_STORAGE(L"TextRangeProvider"), // Name
        XSTRING_PTR_STORAGE(L"MS.Internal.Automation.TextRangeProvider"), // Full name
        KnownNamespaceIndex::MS_Internal_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Thickness
    {
        XSTRING_PTR_STORAGE(L"Thickness"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Thickness"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline
    {
        XSTRING_PTR_STORAGE(L"Timeline"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.Timeline"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"TimePickerSelectedValueChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TimePickerValueChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"TimePickerValueChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TimePickerValueChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Windows.Foundation.TimeSpan
    {
        XSTRING_PTR_STORAGE(L"TimeSpan"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.TimeSpan"), // Full name
        KnownNamespaceIndex::Windows_Foundation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"ToggleSwitchTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"ToolTipTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Media3D.Transform3D
    {
        XSTRING_PTR_STORAGE(L"Transform3D"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Media3D.Transform3D"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Media3D, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.Transition
    {
        XSTRING_PTR_STORAGE(L"Transition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.Transition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget
    {
        XSTRING_PTR_STORAGE(L"TransitionTarget"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.TransitionTarget"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.TriggerAction
    {
        XSTRING_PTR_STORAGE(L"TriggerAction"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.TriggerAction"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.TriggerBase
    {
        XSTRING_PTR_STORAGE(L"TriggerBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.TriggerBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.UIElement
    {
        XSTRING_PTR_STORAGE(L"UIElement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.UIElement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.UnhandledExceptionEventArgs
    {
        XSTRING_PTR_STORAGE(L"UnhandledExceptionEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.UnhandledExceptionEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Vector3Transition
    {
        XSTRING_PTR_STORAGE(L"Vector3Transition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Vector3Transition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.VisualState
    {
        XSTRING_PTR_STORAGE(L"VisualState"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.VisualState"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.VisualStateChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"VisualStateChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.VisualStateChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.VisualStateGroup
    {
        XSTRING_PTR_STORAGE(L"VisualStateGroup"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.VisualStateGroup"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.VisualStateManager
    {
        XSTRING_PTR_STORAGE(L"VisualStateManager"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.VisualStateManager"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.VisualTransition
    {
        XSTRING_PTR_STORAGE(L"VisualTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.VisualTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Window
    {
        XSTRING_PTR_STORAGE(L"Window"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Window"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.WindowCreatedEventArgs
    {
        XSTRING_PTR_STORAGE(L"WindowCreatedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.WindowCreatedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.XamlLight
    {
        XSTRING_PTR_STORAGE(L"XamlLight"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.XamlLight"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.XamlResourceReferenceFailedEventArgs
    {
        XSTRING_PTR_STORAGE(L"XamlResourceReferenceFailedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.XamlResourceReferenceFailedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.XamlRootChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"XamlRootChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.XamlRootChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand
    {
        XSTRING_PTR_STORAGE(L"XamlUICommand"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.XamlUICommand"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.UIElement]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.Transition]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.Timeline]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Input.Pointer]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.TriggerBase]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.DependencyObject]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.ResourceDictionary]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.SetterBase]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.XamlLight]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Input.KeyboardAccelerator]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Automation.Peers.AutomationPeer]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.TriggerAction]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.StateTriggerBase]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.VisualTransition]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.VisualState]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.VisualStateGroup]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.Storyboard]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Windows.Foundation.Double]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Windows.Foundation.Float]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Windows.Foundation.Point]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Brush]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Transform]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.PathSegment]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.PathFigure]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Geometry]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.GradientStop]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.PointKeyFrame]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Input.InputScopeName]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Documents.TextElement]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Documents.TextRange]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Documents.TextHighlighter]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.RowDefinition]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.ColumnDefinition]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.HubSection]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Internal.PointerKeyFrame]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Internal.ParametricCurveSegment]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Internal.ParametricCurve]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Automation.AutomationAnnotation]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.AdaptiveTrigger
    {
        XSTRING_PTR_STORAGE(L"AdaptiveTrigger"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.AdaptiveTrigger"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.AddDeleteThemeTransition
    {
        XSTRING_PTR_STORAGE(L"AddDeleteThemeTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.AddDeleteThemeTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.ArcSegment
    {
        XSTRING_PTR_STORAGE(L"ArcSegment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.ArcSegment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.BackEase
    {
        XSTRING_PTR_STORAGE(L"BackEase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.BackEase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.BeginStoryboard
    {
        XSTRING_PTR_STORAGE(L"BeginStoryboard"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.BeginStoryboard"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.BezierSegment
    {
        XSTRING_PTR_STORAGE(L"BezierSegment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.BezierSegment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.BindingBase
    {
        XSTRING_PTR_STORAGE(L"BindingBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.BindingBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.BitmapCache
    {
        XSTRING_PTR_STORAGE(L"BitmapCache"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.BitmapCache"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.BitmapIconSource
    {
        XSTRING_PTR_STORAGE(L"BitmapIconSource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.BitmapIconSource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapSource
    {
        XSTRING_PTR_STORAGE(L"BitmapSource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.BitmapSource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.Block
    {
        XSTRING_PTR_STORAGE(L"Block"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.Block"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.BounceEase
    {
        XSTRING_PTR_STORAGE(L"BounceEase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.BounceEase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs
    {
        XSTRING_PTR_STORAGE(L"BringIntoViewRequestedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewHeaderAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"CalendarViewHeaderAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.CalendarViewHeaderAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"CharacterReceivedRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.CircleEase
    {
        XSTRING_PTR_STORAGE(L"CircleEase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.CircleEase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs
    {
        XSTRING_PTR_STORAGE(L"CleanUpVirtualizedItemEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation
    {
        XSTRING_PTR_STORAGE(L"ColorAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ColorAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames
    {
        XSTRING_PTR_STORAGE(L"ColorAnimationUsingKeyFrames"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D
    {
        XSTRING_PTR_STORAGE(L"CompositeTransform3D"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Media3D, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ContentDialogOpenCloseThemeTransition
    {
        XSTRING_PTR_STORAGE(L"ContentDialogOpenCloseThemeTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ContentDialogOpenCloseThemeTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition
    {
        XSTRING_PTR_STORAGE(L"ContentThemeTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ContextMenuEventArgs
    {
        XSTRING_PTR_STORAGE(L"ContextMenuEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ContextMenuEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.ContextRequestedEventArgs
    {
        XSTRING_PTR_STORAGE(L"ContextRequestedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.ContextRequestedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ControlTemplate
    {
        XSTRING_PTR_STORAGE(L"ControlTemplate"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ControlTemplate"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.CubicEase
    {
        XSTRING_PTR_STORAGE(L"CubicEase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.CubicEase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.CustomResource
    {
        XSTRING_PTR_STORAGE(L"CustomResource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.CustomResource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.DataTemplate
    {
        XSTRING_PTR_STORAGE(L"DataTemplate"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.DataTemplate"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscreteColorKeyFrame
    {
        XSTRING_PTR_STORAGE(L"DiscreteColorKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DiscreteColorKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscreteDoubleKeyFrame
    {
        XSTRING_PTR_STORAGE(L"DiscreteDoubleKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DiscreteDoubleKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscreteObjectKeyFrame
    {
        XSTRING_PTR_STORAGE(L"DiscreteObjectKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DiscreteObjectKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscretePointKeyFrame
    {
        XSTRING_PTR_STORAGE(L"DiscretePointKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DiscretePointKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.DispatcherTimer
    {
        XSTRING_PTR_STORAGE(L"DispatcherTimer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.DispatcherTimer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation
    {
        XSTRING_PTR_STORAGE(L"DoubleAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DoubleAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames
    {
        XSTRING_PTR_STORAGE(L"DoubleAnimationUsingKeyFrames"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.DoubleTappedRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"DoubleTappedRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.DoubleTappedRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs
    {
        XSTRING_PTR_STORAGE(L"DragCompletedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs
    {
        XSTRING_PTR_STORAGE(L"DragDeltaEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.DragEventArgs
    {
        XSTRING_PTR_STORAGE(L"DragEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.DragEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs
    {
        XSTRING_PTR_STORAGE(L"DragStartedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.DragStartingEventArgs
    {
        XSTRING_PTR_STORAGE(L"DragStartingEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.DragStartingEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.DropCompletedEventArgs
    {
        XSTRING_PTR_STORAGE(L"DropCompletedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.DropCompletedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Duration
    {
        XSTRING_PTR_STORAGE(L"Duration"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Duration"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DynamicTimeline
    {
        XSTRING_PTR_STORAGE(L"DynamicTimeline"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DynamicTimeline"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame
    {
        XSTRING_PTR_STORAGE(L"EasingColorKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame
    {
        XSTRING_PTR_STORAGE(L"EasingDoubleKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame
    {
        XSTRING_PTR_STORAGE(L"EasingPointKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.EdgeUIThemeTransition
    {
        XSTRING_PTR_STORAGE(L"EdgeUIThemeTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.EdgeUIThemeTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ElasticEase
    {
        XSTRING_PTR_STORAGE(L"ElasticEase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ElasticEase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.EllipseGeometry
    {
        XSTRING_PTR_STORAGE(L"EllipseGeometry"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.EllipseGeometry"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition
    {
        XSTRING_PTR_STORAGE(L"EntranceThemeTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.EventTrigger
    {
        XSTRING_PTR_STORAGE(L"EventTrigger"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.EventTrigger"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ExceptionRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"ExceptionRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ExceptionRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ExponentialEase
    {
        XSTRING_PTR_STORAGE(L"ExponentialEase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ExponentialEase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Flyout
    {
        XSTRING_PTR_STORAGE(L"Flyout"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Flyout"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.FocusDisengagedEventArgs
    {
        XSTRING_PTR_STORAGE(L"FocusDisengagedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.FocusDisengagedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs
    {
        XSTRING_PTR_STORAGE(L"FocusEngagedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource
    {
        XSTRING_PTR_STORAGE(L"FontIconSource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.FontIconSource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FrameworkElement
    {
        XSTRING_PTR_STORAGE(L"FrameworkElement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FrameworkElement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"FrameworkElementAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FrameworkElementEx
    {
        XSTRING_PTR_STORAGE(L"FrameworkElementEx"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FrameworkElementEx"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.GeometryGroup
    {
        XSTRING_PTR_STORAGE(L"GeometryGroup"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.GeometryGroup"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.GettingFocusEventArgs
    {
        XSTRING_PTR_STORAGE(L"GettingFocusEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.GettingFocusEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.GradientBrush
    {
        XSTRING_PTR_STORAGE(L"GradientBrush"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.GradientBrush"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"GridViewItemTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.GroupedDataCollectionView
    {
        XSTRING_PTR_STORAGE(L"GroupedDataCollectionView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.GroupedDataCollectionView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"HoldingRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.HWCompLeafNode
    {
        XSTRING_PTR_STORAGE(L"HWCompLeafNode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.HWCompLeafNode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.HWCompTreeNode
    {
        XSTRING_PTR_STORAGE(L"HWCompTreeNode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.HWCompTreeNode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.HyperlinkAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"HyperlinkAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.HyperlinkAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs
    {
        XSTRING_PTR_STORAGE(L"HyperlinkClickEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.Inline
    {
        XSTRING_PTR_STORAGE(L"Inline"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.Inline"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.InputPaneThemeTransition
    {
        XSTRING_PTR_STORAGE(L"InputPaneThemeTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.InputPaneThemeTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.InternalTransform
    {
        XSTRING_PTR_STORAGE(L"InternalTransform"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.InternalTransform"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ItemClickEventArgs
    {
        XSTRING_PTR_STORAGE(L"ItemClickEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ItemClickEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ItemsPanelTemplate
    {
        XSTRING_PTR_STORAGE(L"ItemsPanelTemplate"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ItemsPanelTemplate"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.KeyRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"KeyRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.KeyRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.KeyTime
    {
        XSTRING_PTR_STORAGE(L"KeyTime"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.KeyTime"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.LayoutTransitionElement
    {
        XSTRING_PTR_STORAGE(L"LayoutTransitionElement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.LayoutTransitionElement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.LinearColorKeyFrame
    {
        XSTRING_PTR_STORAGE(L"LinearColorKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.LinearColorKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.LinearDoubleKeyFrame
    {
        XSTRING_PTR_STORAGE(L"LinearDoubleKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.LinearDoubleKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.LinearPointKeyFrame
    {
        XSTRING_PTR_STORAGE(L"LinearPointKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.LinearPointKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.LineGeometry
    {
        XSTRING_PTR_STORAGE(L"LineGeometry"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.LineGeometry"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.LineSegment
    {
        XSTRING_PTR_STORAGE(L"LineSegment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.LineSegment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings
    {
        XSTRING_PTR_STORAGE(L"ListViewItemTemplateSettings"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.LosingFocusEventArgs
    {
        XSTRING_PTR_STORAGE(L"LosingFocusEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.LosingFocusEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"ManipulationCompletedRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"ManipulationDeltaRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"ManipulationInertiaStartingRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"ManipulationStartedRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.ManipulationStartingRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"ManipulationStartingRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.ManipulationStartingRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Matrix3DProjection
    {
        XSTRING_PTR_STORAGE(L"Matrix3DProjection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Matrix3DProjection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.MediaSwapChainElement
    {
        XSTRING_PTR_STORAGE(L"MediaSwapChainElement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.MediaSwapChainElement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyout
    {
        XSTRING_PTR_STORAGE(L"MenuFlyout"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.MenuFlyout"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.MenuPopupThemeTransition
    {
        XSTRING_PTR_STORAGE(L"MenuPopupThemeTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.MenuPopupThemeTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs
    {
        XSTRING_PTR_STORAGE(L"NoFocusCandidateFoundEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.NullExtension
    {
        XSTRING_PTR_STORAGE(L"NullExtension"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.NullExtension"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames
    {
        XSTRING_PTR_STORAGE(L"ObjectAnimationUsingKeyFrames"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.PanelEx
    {
        XSTRING_PTR_STORAGE(L"PanelEx"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.PanelEx"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.PaneThemeTransition
    {
        XSTRING_PTR_STORAGE(L"PaneThemeTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.PaneThemeTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ParallelTimeline
    {
        XSTRING_PTR_STORAGE(L"ParallelTimeline"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ParallelTimeline"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.PathGeometry
    {
        XSTRING_PTR_STORAGE(L"PathGeometry"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.PathGeometry"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.PathIconSource
    {
        XSTRING_PTR_STORAGE(L"PathIconSource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.PathIconSource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D
    {
        XSTRING_PTR_STORAGE(L"PerspectiveTransform3D"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Media3D, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.PickerFlyoutThemeTransition
    {
        XSTRING_PTR_STORAGE(L"PickerFlyoutThemeTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.PickerFlyoutThemeTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection
    {
        XSTRING_PTR_STORAGE(L"PlaneProjection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.PlaneProjection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation
    {
        XSTRING_PTR_STORAGE(L"PointAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.PointAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames
    {
        XSTRING_PTR_STORAGE(L"PointAnimationUsingKeyFrames"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames
    {
        XSTRING_PTR_STORAGE(L"PointerAnimationUsingKeyFrames"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.PointerRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"PointerRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.PointerRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.PolyBezierSegment
    {
        XSTRING_PTR_STORAGE(L"PolyBezierSegment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.PolyBezierSegment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.PolyLineSegment
    {
        XSTRING_PTR_STORAGE(L"PolyLineSegment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.PolyLineSegment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment
    {
        XSTRING_PTR_STORAGE(L"PolyQuadraticBezierSegment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition
    {
        XSTRING_PTR_STORAGE(L"PopupThemeTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.PowerEase
    {
        XSTRING_PTR_STORAGE(L"PowerEase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.PowerEase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.PVLStaggerFunction
    {
        XSTRING_PTR_STORAGE(L"PVLStaggerFunction"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.PVLStaggerFunction"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.QuadraticBezierSegment
    {
        XSTRING_PTR_STORAGE(L"QuadraticBezierSegment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.QuadraticBezierSegment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.QuadraticEase
    {
        XSTRING_PTR_STORAGE(L"QuadraticEase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.QuadraticEase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.QuarticEase
    {
        XSTRING_PTR_STORAGE(L"QuarticEase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.QuarticEase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.QuinticEase
    {
        XSTRING_PTR_STORAGE(L"QuinticEase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.QuinticEase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"RangeBaseValueChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.RectangleGeometry
    {
        XSTRING_PTR_STORAGE(L"RectangleGeometry"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.RectangleGeometry"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.RelativeSource
    {
        XSTRING_PTR_STORAGE(L"RelativeSource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.RelativeSource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap
    {
        XSTRING_PTR_STORAGE(L"RenderTargetBitmap"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ReorderThemeTransition
    {
        XSTRING_PTR_STORAGE(L"ReorderThemeTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ReorderThemeTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeTransition
    {
        XSTRING_PTR_STORAGE(L"RepositionThemeTransition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.RepositionThemeTransition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.RightTappedRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"RightTappedRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.RightTappedRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs
    {
        XSTRING_PTR_STORAGE(L"ScrollEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SelectionChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"SelectionChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SelectionChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Setter
    {
        XSTRING_PTR_STORAGE(L"Setter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Setter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.SineEase
    {
        XSTRING_PTR_STORAGE(L"SineEase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.SineEase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.SizeChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"SizeChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.SizeChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource
    {
        XSTRING_PTR_STORAGE(L"SoftwareBitmapSource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush
    {
        XSTRING_PTR_STORAGE(L"SolidColorBrush"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.SolidColorBrush"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame
    {
        XSTRING_PTR_STORAGE(L"SplineColorKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame
    {
        XSTRING_PTR_STORAGE(L"SplineDoubleKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame
    {
        XSTRING_PTR_STORAGE(L"SplinePointKeyFrame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.StandardUICommand
    {
        XSTRING_PTR_STORAGE(L"StandardUICommand"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.StandardUICommand"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.StateTrigger
    {
        XSTRING_PTR_STORAGE(L"StateTrigger"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.StateTrigger"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.StaticResource
    {
        XSTRING_PTR_STORAGE(L"StaticResource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.StaticResource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.SurfaceImageSource
    {
        XSTRING_PTR_STORAGE(L"SurfaceImageSource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.SurfaceImageSource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSource
    {
        XSTRING_PTR_STORAGE(L"SvgImageSource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.SvgImageSource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.SwapChainElement
    {
        XSTRING_PTR_STORAGE(L"SwapChainElement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.SwapChainElement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SymbolIconSource
    {
        XSTRING_PTR_STORAGE(L"SymbolIconSource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SymbolIconSource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.TappedRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"TappedRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.TappedRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.TemplateBinding
    {
        XSTRING_PTR_STORAGE(L"TemplateBinding"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.TemplateBinding"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TextChangedEventArgs
    {
        XSTRING_PTR_STORAGE(L"TextChangedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TextChangedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter
    {
        XSTRING_PTR_STORAGE(L"TextHighlighter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.TextHighlighter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ThemeResource
    {
        XSTRING_PTR_STORAGE(L"ThemeResource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ThemeResource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.ThemeShadow
    {
        XSTRING_PTR_STORAGE(L"ThemeShadow"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.ThemeShadow"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.TileBrush
    {
        XSTRING_PTR_STORAGE(L"TileBrush"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.TileBrush"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Transform
    {
        XSTRING_PTR_STORAGE(L"Transform"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Transform"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.VectorCollectionView
    {
        XSTRING_PTR_STORAGE(L"VectorCollectionView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.VectorCollectionView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.VectorViewCollectionView
    {
        XSTRING_PTR_STORAGE(L"VectorViewCollectionView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.VectorViewCollectionView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
    {
        XSTRING_PTR_STORAGE(L"XamlCompositionBrushBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.XamlCompositionBrushBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Windows.Foundation.Object]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Microsoft.UI.Xaml.DependencyObject]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.InputValidationError]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.ICommandBarElement]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"AppBarAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarLightDismissAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"AppBarLightDismissAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AppBarLightDismissAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotationCollection
    {
        XSTRING_PTR_STORAGE(L"AutomationAnnotationCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AutomationAnnotationCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotationCollection
    {
        XSTRING_PTR_STORAGE(L"AutomationPeerAnnotationCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotationCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerCollection
    {
        XSTRING_PTR_STORAGE(L"AutomationPeerCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationPeerCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"AutoSuggestBoxAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.Binding
    {
        XSTRING_PTR_STORAGE(L"Binding"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.Binding"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage
    {
        XSTRING_PTR_STORAGE(L"BitmapImage"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.BitmapImage"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Border
    {
        XSTRING_PTR_STORAGE(L"Border"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Border"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.BrushCollection
    {
        XSTRING_PTR_STORAGE(L"BrushCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.BrushCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ButtonBaseAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"CalendarDatePickerAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"CalendarViewAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.CalendarViewAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewBaseItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"CalendarViewBaseItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.CalendarViewBaseItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection
    {
        XSTRING_PTR_STORAGE(L"ColorKeyFrameCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection
    {
        XSTRING_PTR_STORAGE(L"ColumnDefinitionCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ComboBoxItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxLightDismissAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ComboBoxLightDismissAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ComboBoxLightDismissAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform
    {
        XSTRING_PTR_STORAGE(L"CompositeTransform"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.CompositeTransform"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ConnectedAnimationRoot
    {
        XSTRING_PTR_STORAGE(L"ConnectedAnimationRoot"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ConnectedAnimationRoot"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter
    {
        XSTRING_PTR_STORAGE(L"ContentPresenter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ContentPresenter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Control
    {
        XSTRING_PTR_STORAGE(L"Control"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Control"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"DatePickerAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.DisplayMemberTemplate
    {
        XSTRING_PTR_STORAGE(L"DisplayMemberTemplate"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.DisplayMemberTemplate"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.DoubleCollection
    {
        XSTRING_PTR_STORAGE(L"DoubleCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.DoubleCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection
    {
        XSTRING_PTR_STORAGE(L"DoubleKeyFrameCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DragItemThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"DragItemThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DragItemThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"DragOverThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"DrillInThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"DrillOutThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"DropTargetItemThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.FaceplateContentPresenterAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"FaceplateContentPresenterAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.FaceplateContentPresenterAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.FadeInThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"FadeInThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.FadeInThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.FadeOutThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"FadeOutThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.FadeOutThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"FlipViewItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.FloatCollection
    {
        XSTRING_PTR_STORAGE(L"FloatCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.FloatCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"FlyoutPresenterAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FullWindowMediaRootAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"FullWindowMediaRootAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FullWindowMediaRootAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.GeometryCollection
    {
        XSTRING_PTR_STORAGE(L"GeometryCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.GeometryCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.Glyphs
    {
        XSTRING_PTR_STORAGE(L"Glyphs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.Glyphs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.GradientStopCollection
    {
        XSTRING_PTR_STORAGE(L"GradientStopCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.GradientStopCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"GroupItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"HubAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"HubSectionAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.HubSectionCollection
    {
        XSTRING_PTR_STORAGE(L"HubSectionCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.HubSectionCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.HWCompMediaNode
    {
        XSTRING_PTR_STORAGE(L"HWCompMediaNode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.HWCompMediaNode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.HWCompRenderDataNode
    {
        XSTRING_PTR_STORAGE(L"HWCompRenderDataNode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.HWCompRenderDataNode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.HWCompSwapChainNode
    {
        XSTRING_PTR_STORAGE(L"HWCompSwapChainNode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.HWCompSwapChainNode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.HWRedirectedCompTreeNodeWinRT
    {
        XSTRING_PTR_STORAGE(L"HWRedirectedCompTreeNodeWinRT"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.HWRedirectedCompTreeNodeWinRT"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.IconElement
    {
        XSTRING_PTR_STORAGE(L"IconElement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.IconElement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Image
    {
        XSTRING_PTR_STORAGE(L"Image"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Image"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ImageAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.ImageBrush
    {
        XSTRING_PTR_STORAGE(L"ImageBrush"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.ImageBrush"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.InlineUIContainer
    {
        XSTRING_PTR_STORAGE(L"InlineUIContainer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.InlineUIContainer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.InputScopeNameCollection
    {
        XSTRING_PTR_STORAGE(L"InputScopeNameCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.InputScopeNameCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ItemsControlAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter
    {
        XSTRING_PTR_STORAGE(L"ItemsPresenter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ItemsPresenter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.IterableCollectionView
    {
        XSTRING_PTR_STORAGE(L"IterableCollectionView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.IterableCollectionView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorCollection
    {
        XSTRING_PTR_STORAGE(L"KeyboardAcceleratorCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.KeyboardAcceleratorCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.LandmarkTargetAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"LandmarkTargetAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.LandmarkTargetAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush
    {
        XSTRING_PTR_STORAGE(L"LinearGradientBrush"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.LinearGradientBrush"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.LineBreak
    {
        XSTRING_PTR_STORAGE(L"LineBreak"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.LineBreak"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ListBoxItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ListViewBaseHeaderItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ListViewBaseItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ListViewBaseItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemSecondaryChrome
    {
        XSTRING_PTR_STORAGE(L"ListViewBaseItemSecondaryChrome"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemSecondaryChrome"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.MatrixTransform
    {
        XSTRING_PTR_STORAGE(L"MatrixTransform"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.MatrixTransform"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.MediaBase
    {
        XSTRING_PTR_STORAGE(L"MediaBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.MediaBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.MediaFailedRoutedEventArgs
    {
        XSTRING_PTR_STORAGE(L"MediaFailedRoutedEventArgs"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.MediaFailedRoutedEventArgs"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"MediaPlayerElementAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerPresenter
    {
        XSTRING_PTR_STORAGE(L"MediaPlayerPresenter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.MediaPlayerPresenter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"MediaTransportControlsAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"MenuFlyoutItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItemBaseCollection
    {
        XSTRING_PTR_STORAGE(L"MenuFlyoutItemBaseCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.MenuFlyoutItemBaseCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutSubItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"MenuFlyoutSubItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutSubItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.NamedContainerAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"NamedContainerAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.NamedContainerAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection
    {
        XSTRING_PTR_STORAGE(L"ObjectKeyFrameCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Panel
    {
        XSTRING_PTR_STORAGE(L"Panel"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Panel"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.Paragraph
    {
        XSTRING_PTR_STORAGE(L"Paragraph"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.Paragraph"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveCollection
    {
        XSTRING_PTR_STORAGE(L"ParametricCurveCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.ParametricCurveCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegmentCollection
    {
        XSTRING_PTR_STORAGE(L"ParametricCurveSegmentCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.ParametricCurveSegmentCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"PasswordBoxAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.PathFigureCollection
    {
        XSTRING_PTR_STORAGE(L"PathFigureCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.PathFigureCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.PathSegmentCollection
    {
        XSTRING_PTR_STORAGE(L"PathSegmentCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.PathSegmentCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.PointCollection
    {
        XSTRING_PTR_STORAGE(L"PointCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.PointCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.PointerCollection
    {
        XSTRING_PTR_STORAGE(L"PointerCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.PointerCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.PointerDownThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"PointerDownThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.PointerDownThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrameCollection
    {
        XSTRING_PTR_STORAGE(L"PointerKeyFrameCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.PointerKeyFrameCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.PointerUpThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"PointerUpThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.PointerUpThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection
    {
        XSTRING_PTR_STORAGE(L"PointKeyFrameCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"PopInThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.PopOutThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"PopOutThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.PopOutThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup
    {
        XSTRING_PTR_STORAGE(L"Popup"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.Popup"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.PopupAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"PopupAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.PopupAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.PopupRootAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"PopupRootAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.PopupRootAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"RangeBaseAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.RepeatBehavior
    {
        XSTRING_PTR_STORAGE(L"RepeatBehavior"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.RepeatBehavior"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"RepositionThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ResourceDictionary
    {
        XSTRING_PTR_STORAGE(L"ResourceDictionary"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ResourceDictionary"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.ResourceDictionaryCollection
    {
        XSTRING_PTR_STORAGE(L"ResourceDictionaryCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.ResourceDictionaryCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"RichEditBoxAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock
    {
        XSTRING_PTR_STORAGE(L"RichTextBlock"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.RichTextBlock"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"RichTextBlockAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow
    {
        XSTRING_PTR_STORAGE(L"RichTextBlockOverflow"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.RichTextBlockOverflow"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"RichTextBlockOverflowAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.RotateTransform
    {
        XSTRING_PTR_STORAGE(L"RotateTransform"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.RotateTransform"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.RowDefinitionCollection
    {
        XSTRING_PTR_STORAGE(L"RowDefinitionCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.RowDefinitionCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.Run
    {
        XSTRING_PTR_STORAGE(L"Run"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.Run"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform
    {
        XSTRING_PTR_STORAGE(L"ScaleTransform"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.ScaleTransform"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ScrollViewerAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"SelectorItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"SemanticZoomAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.SetterBaseCollection
    {
        XSTRING_PTR_STORAGE(L"SetterBaseCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.SetterBaseCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Shapes.Shape
    {
        XSTRING_PTR_STORAGE(L"Shape"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Shapes.Shape"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Shapes, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.SkewTransform
    {
        XSTRING_PTR_STORAGE(L"SkewTransform"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.SkewTransform"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.Span
    {
        XSTRING_PTR_STORAGE(L"Span"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.Span"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"SplitCloseThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"SplitOpenThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.SplitViewLightDismissAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"SplitViewLightDismissAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.SplitViewLightDismissAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.SplitViewPaneAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"SplitViewPaneAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.SplitViewPaneAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.StateTriggerCollection
    {
        XSTRING_PTR_STORAGE(L"StateTriggerCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.StateTriggerCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard
    {
        XSTRING_PTR_STORAGE(L"Storyboard"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.Storyboard"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.StoryboardCollection
    {
        XSTRING_PTR_STORAGE(L"StoryboardCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.StoryboardCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"SwipeBackThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation
    {
        XSTRING_PTR_STORAGE(L"SwipeHintThemeAnimation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TextBlock
    {
        XSTRING_PTR_STORAGE(L"TextBlock"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TextBlock"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"TextBlockAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"TextBoxAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextBoxBaseAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"TextBoxBaseAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.TextBoxBaseAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.TextBoxView
    {
        XSTRING_PTR_STORAGE(L"TextBoxView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.TextBoxView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection
    {
        XSTRING_PTR_STORAGE(L"TextElementCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.TextElementCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighterCollection
    {
        XSTRING_PTR_STORAGE(L"TextHighlighterCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.TextHighlighterCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.TextRangeCollection
    {
        XSTRING_PTR_STORAGE(L"TextRangeCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.TextRangeCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ThemeAnimationBase
    {
        XSTRING_PTR_STORAGE(L"ThemeAnimationBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ThemeAnimationBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ThumbAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.TimelineCollection
    {
        XSTRING_PTR_STORAGE(L"TimelineCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.TimelineCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"TimePickerAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ToggleMenuFlyoutItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ToggleSwitchAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToolTipAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ToolTipAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ToolTipAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.TransformCollection
    {
        XSTRING_PTR_STORAGE(L"TransformCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.TransformCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.TransformGroup
    {
        XSTRING_PTR_STORAGE(L"TransformGroup"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.TransformGroup"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionCollection
    {
        XSTRING_PTR_STORAGE(L"TransitionCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.TransitionCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.TranslateTransform
    {
        XSTRING_PTR_STORAGE(L"TranslateTransform"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.TranslateTransform"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.TriggerActionCollection
    {
        XSTRING_PTR_STORAGE(L"TriggerActionCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.TriggerActionCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.TriggerCollection
    {
        XSTRING_PTR_STORAGE(L"TriggerCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.TriggerCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.UIElementCollection
    {
        XSTRING_PTR_STORAGE(L"UIElementCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.UIElementCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.UIElementWeakCollection
    {
        XSTRING_PTR_STORAGE(L"UIElementWeakCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.UIElementWeakCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Viewbox
    {
        XSTRING_PTR_STORAGE(L"Viewbox"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Viewbox"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource
    {
        XSTRING_PTR_STORAGE(L"VirtualSurfaceImageSource"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.VisualStateCollection
    {
        XSTRING_PTR_STORAGE(L"VisualStateCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.VisualStateCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection
    {
        XSTRING_PTR_STORAGE(L"VisualStateGroupCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.VisualStateGroupCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.VisualTransitionCollection
    {
        XSTRING_PTR_STORAGE(L"VisualTransitionCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.VisualTransitionCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap
    {
        XSTRING_PTR_STORAGE(L"WriteableBitmap"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.XamlLightCollection
    {
        XSTRING_PTR_STORAGE(L"XamlLightCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.XamlLightCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection`1[Microsoft.UI.Xaml.Documents.Inline]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection`1[Microsoft.UI.Xaml.Documents.Block]
    {
        { /* empty string */ }, // Name
        { /* empty string */ }, // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.AppBarSeparator
    {
        XSTRING_PTR_STORAGE(L"AppBarSeparator"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.AppBarSeparator"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.BasedOnSetterCollection
    {
        XSTRING_PTR_STORAGE(L"BasedOnSetterCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.BasedOnSetterCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.BitmapIcon
    {
        XSTRING_PTR_STORAGE(L"BitmapIcon"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.BitmapIcon"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.Bold
    {
        XSTRING_PTR_STORAGE(L"Bold"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.Bold"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ButtonAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker
    {
        XSTRING_PTR_STORAGE(L"CalendarDatePicker"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CalendarDatePicker"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarScrollViewerAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"CalendarScrollViewerAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.CalendarScrollViewerAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CalendarView
    {
        XSTRING_PTR_STORAGE(L"CalendarView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CalendarView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewBaseItem
    {
        XSTRING_PTR_STORAGE(L"CalendarViewBaseItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.CalendarViewBaseItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewDayItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"CalendarViewDayItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.CalendarViewDayItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"CalendarViewItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.CalendarViewItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Canvas
    {
        XSTRING_PTR_STORAGE(L"Canvas"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Canvas"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.CaretBrowsingCaret
    {
        XSTRING_PTR_STORAGE(L"CaretBrowsingCaret"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.CaretBrowsingCaret"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ColorPaletteResources
    {
        XSTRING_PTR_STORAGE(L"ColorPaletteResources"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ColorPaletteResources"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ComboBoxItemDataAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CommandBarElementCollection
    {
        XSTRING_PTR_STORAGE(L"CommandBarElementCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CommandBarElementCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CommandingContainer
    {
        XSTRING_PTR_STORAGE(L"CommandingContainer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CommandingContainer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ContentControl
    {
        XSTRING_PTR_STORAGE(L"ContentControl"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ContentControl"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.DatePicker
    {
        XSTRING_PTR_STORAGE(L"DatePicker"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.DatePicker"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.DependencyObjectCollection
    {
        XSTRING_PTR_STORAGE(L"DependencyObjectCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.DependencyObjectCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Shapes.Ellipse
    {
        XSTRING_PTR_STORAGE(L"Ellipse"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Shapes.Ellipse"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Shapes, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"FlipViewItemDataAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.FontIcon
    {
        XSTRING_PTR_STORAGE(L"FontIcon"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.FontIcon"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FullWindowMediaRoot
    {
        XSTRING_PTR_STORAGE(L"FullWindowMediaRoot"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FullWindowMediaRoot"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Grid
    {
        XSTRING_PTR_STORAGE(L"Grid"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Grid"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"GridViewHeaderItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"GridViewItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Hub
    {
        XSTRING_PTR_STORAGE(L"Hub"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Hub"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.HubSection
    {
        XSTRING_PTR_STORAGE(L"HubSection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.HubSection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.HWWindowedPopupCompTreeNodeWinRT
    {
        XSTRING_PTR_STORAGE(L"HWWindowedPopupCompTreeNodeWinRT"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.HWWindowedPopupCompTreeNodeWinRT"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink
    {
        XSTRING_PTR_STORAGE(L"Hyperlink"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.Hyperlink"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"HyperlinkButtonAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.IconSourceElement
    {
        XSTRING_PTR_STORAGE(L"IconSourceElement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.IconSourceElement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.Italic
    {
        XSTRING_PTR_STORAGE(L"Italic"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.Italic"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ItemCollection
    {
        XSTRING_PTR_STORAGE(L"ItemCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ItemCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl
    {
        XSTRING_PTR_STORAGE(L"ItemsControl"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ItemsControl"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Shapes.Line
    {
        XSTRING_PTR_STORAGE(L"Line"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Shapes.Line"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Shapes, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ListBoxItemDataAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseItemDataAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ListViewBaseItemDataAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ListViewBaseItemDataAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemPresenter
    {
        XSTRING_PTR_STORAGE(L"ListViewBaseItemPresenter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemPresenter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ListViewHeaderItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ListViewItemAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement
    {
        XSTRING_PTR_STORAGE(L"MediaPlayerElement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.MediaPlayerElement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls
    {
        XSTRING_PTR_STORAGE(L"MediaTransportControls"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.MediaTransportControls"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase
    {
        XSTRING_PTR_STORAGE(L"MenuFlyoutItemBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"MenuFlyoutPresenterAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ModernCollectionBasePanel
    {
        XSTRING_PTR_STORAGE(L"ModernCollectionBasePanel"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ModernCollectionBasePanel"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox
    {
        XSTRING_PTR_STORAGE(L"PasswordBox"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.PasswordBox"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Shapes.Path
    {
        XSTRING_PTR_STORAGE(L"Path"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Shapes.Path"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Shapes, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.PathIcon
    {
        XSTRING_PTR_STORAGE(L"PathIcon"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.PathIcon"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Shapes.Polygon
    {
        XSTRING_PTR_STORAGE(L"Polygon"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Shapes.Polygon"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Shapes, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Shapes.Polyline
    {
        XSTRING_PTR_STORAGE(L"Polyline"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Shapes.Polyline"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Shapes, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase
    {
        XSTRING_PTR_STORAGE(L"RangeBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.RangeBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Shapes.Rectangle
    {
        XSTRING_PTR_STORAGE(L"Rectangle"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Shapes.Rectangle"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Shapes, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel
    {
        XSTRING_PTR_STORAGE(L"RelativePanel"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.RelativePanel"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.RenderTargetBitmapRoot
    {
        XSTRING_PTR_STORAGE(L"RenderTargetBitmapRoot"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.RenderTargetBitmapRoot"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"RepeatButtonAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox
    {
        XSTRING_PTR_STORAGE(L"RichEditBox"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.RichEditBox"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.RootVisual
    {
        XSTRING_PTR_STORAGE(L"RootVisual"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.RootVisual"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ScrollBarAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ScrollContentPresenter
    {
        XSTRING_PTR_STORAGE(L"ScrollContentPresenter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ScrollContentPresenter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"SelectorAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom
    {
        XSTRING_PTR_STORAGE(L"SemanticZoom"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SemanticZoom"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"SliderAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SplitView
    {
        XSTRING_PTR_STORAGE(L"SplitView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SplitView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.StackPanel
    {
        XSTRING_PTR_STORAGE(L"StackPanel"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.StackPanel"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SymbolIcon
    {
        XSTRING_PTR_STORAGE(L"SymbolIcon"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SymbolIcon"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TextBox
    {
        XSTRING_PTR_STORAGE(L"TextBox"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TextBox"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.TextBoxBase
    {
        XSTRING_PTR_STORAGE(L"TextBoxBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.TextBoxBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Thumb
    {
        XSTRING_PTR_STORAGE(L"Thumb"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.Thumb"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.TickBar
    {
        XSTRING_PTR_STORAGE(L"TickBar"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.TickBar"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.TimePicker
    {
        XSTRING_PTR_STORAGE(L"TimePicker"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.TimePicker"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ToggleButtonAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch
    {
        XSTRING_PTR_STORAGE(L"ToggleSwitch"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ToggleSwitch"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.Underline
    {
        XSTRING_PTR_STORAGE(L"Underline"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.Underline"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.UserControl
    {
        XSTRING_PTR_STORAGE(L"UserControl"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.UserControl"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.ValidationErrorsCollection
    {
        XSTRING_PTR_STORAGE(L"ValidationErrorsCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.ValidationErrorsCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid
    {
        XSTRING_PTR_STORAGE(L"VariableSizedWrapGrid"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingPanel
    {
        XSTRING_PTR_STORAGE(L"VirtualizingPanel"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.VirtualizingPanel"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Hosting.XamlIslandRoot
    {
        XSTRING_PTR_STORAGE(L"XamlIslandRoot"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Hosting.XamlIslandRoot"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Hosting, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.XamlIslandRootCollection
    {
        XSTRING_PTR_STORAGE(L"XamlIslandRootCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.XamlIslandRootCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.AppBar
    {
        XSTRING_PTR_STORAGE(L"AppBar"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.AppBar"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"AppBarButtonAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.AppBarElementContainer
    {
        XSTRING_PTR_STORAGE(L"AppBarElementContainer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.AppBarElementContainer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.AppBarLightDismiss
    {
        XSTRING_PTR_STORAGE(L"AppBarLightDismiss"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.AppBarLightDismiss"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"AppBarToggleButtonAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox
    {
        XSTRING_PTR_STORAGE(L"AutoSuggestBox"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.AutoSuggestBox"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.BlockCollection
    {
        XSTRING_PTR_STORAGE(L"BlockCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.BlockCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
    {
        XSTRING_PTR_STORAGE(L"ButtonBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ButtonBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel
    {
        XSTRING_PTR_STORAGE(L"CalendarPanel"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDayItem
    {
        XSTRING_PTR_STORAGE(L"CalendarViewDayItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CalendarViewDayItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewItem
    {
        XSTRING_PTR_STORAGE(L"CalendarViewItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.CalendarViewItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel
    {
        XSTRING_PTR_STORAGE(L"CarouselPanel"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"CheckBoxAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ComboBoxAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxLightDismiss
    {
        XSTRING_PTR_STORAGE(L"ComboBoxLightDismiss"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ComboBoxLightDismiss"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CommandBarOverflowPresenter
    {
        XSTRING_PTR_STORAGE(L"CommandBarOverflowPresenter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CommandBarOverflowPresenter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog
    {
        XSTRING_PTR_STORAGE(L"ContentDialog"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ContentDialog"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"FlipViewAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.FlyoutPresenter
    {
        XSTRING_PTR_STORAGE(L"FlyoutPresenter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.FlyoutPresenter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Frame
    {
        XSTRING_PTR_STORAGE(L"Frame"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Frame"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"GridViewItemDataAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter
    {
        XSTRING_PTR_STORAGE(L"GridViewItemPresenter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.GroupItem
    {
        XSTRING_PTR_STORAGE(L"GroupItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.GroupItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.InlineCollection
    {
        XSTRING_PTR_STORAGE(L"InlineCollection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.InlineCollection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel
    {
        XSTRING_PTR_STORAGE(L"ItemsStackPanel"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ItemsStackPanel"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid
    {
        XSTRING_PTR_STORAGE(L"ItemsWrapGrid"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ItemsWrapGrid"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ListBoxAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ListViewBaseAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem
    {
        XSTRING_PTR_STORAGE(L"ListViewBaseHeaderItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ListViewItemDataAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter
    {
        XSTRING_PTR_STORAGE(L"ListViewItemPresenter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem
    {
        XSTRING_PTR_STORAGE(L"MenuFlyoutItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.MenuFlyoutItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter
    {
        XSTRING_PTR_STORAGE(L"MenuFlyoutPresenter"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSeparator
    {
        XSTRING_PTR_STORAGE(L"MenuFlyoutSeparator"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.MenuFlyoutSeparator"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem
    {
        XSTRING_PTR_STORAGE(L"MenuFlyoutSubItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel
    {
        XSTRING_PTR_STORAGE(L"OrientedVirtualizingPanel"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Page
    {
        XSTRING_PTR_STORAGE(L"Page"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Page"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.PopupRoot
    {
        XSTRING_PTR_STORAGE(L"PopupRoot"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.PopupRoot"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.PrintRoot
    {
        XSTRING_PTR_STORAGE(L"PrintRoot"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.PrintRoot"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"RadioButtonAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollBar
    {
        XSTRING_PTR_STORAGE(L"ScrollBar"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ScrollBar"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ScrollContentControl
    {
        XSTRING_PTR_STORAGE(L"ScrollContentControl"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ScrollContentControl"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.SeekSliderAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"SeekSliderAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.SeekSliderAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector
    {
        XSTRING_PTR_STORAGE(L"Selector"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.Selector"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SelectorItem
    {
        XSTRING_PTR_STORAGE(L"SelectorItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.SelectorItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Slider
    {
        XSTRING_PTR_STORAGE(L"Slider"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Slider"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SwapChainBackgroundPanel
    {
        XSTRING_PTR_STORAGE(L"SwapChainBackgroundPanel"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SwapChainBackgroundPanel"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SwapChainPanel
    {
        XSTRING_PTR_STORAGE(L"SwapChainPanel"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SwapChainPanel"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.TextSelectionGripper
    {
        XSTRING_PTR_STORAGE(L"TextSelectionGripper"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.TextSelectionGripper"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ToolTip
    {
        XSTRING_PTR_STORAGE(L"ToolTip"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ToolTip"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.TransitionRoot
    {
        XSTRING_PTR_STORAGE(L"TransitionRoot"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.TransitionRoot"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.WindowChrome
    {
        XSTRING_PTR_STORAGE(L"WindowChrome"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.WindowChrome"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Button
    {
        XSTRING_PTR_STORAGE(L"Button"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Button"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ComboBox
    {
        XSTRING_PTR_STORAGE(L"ComboBox"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ComboBox"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxItem
    {
        XSTRING_PTR_STORAGE(L"ComboBoxItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ComboBoxItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CommandBar
    {
        XSTRING_PTR_STORAGE(L"CommandBar"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CommandBar"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.FlipView
    {
        XSTRING_PTR_STORAGE(L"FlipView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.FlipView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.FlipViewItem
    {
        XSTRING_PTR_STORAGE(L"FlipViewItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.FlipViewItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"GridViewAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.GridViewHeaderItem
    {
        XSTRING_PTR_STORAGE(L"GridViewHeaderItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.GridViewHeaderItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.HyperlinkButton
    {
        XSTRING_PTR_STORAGE(L"HyperlinkButton"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.HyperlinkButton"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ListBox
    {
        XSTRING_PTR_STORAGE(L"ListBox"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ListBox"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ListBoxItem
    {
        XSTRING_PTR_STORAGE(L"ListBoxItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ListBoxItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer
    {
        XSTRING_PTR_STORAGE(L"ListViewAutomationPeer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase
    {
        XSTRING_PTR_STORAGE(L"ListViewBase"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ListViewBase"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ListViewBaseItem
    {
        XSTRING_PTR_STORAGE(L"ListViewBaseItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ListViewBaseItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ListViewHeaderItem
    {
        XSTRING_PTR_STORAGE(L"ListViewHeaderItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ListViewHeaderItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RepeatButton
    {
        XSTRING_PTR_STORAGE(L"RepeatButton"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.RepeatButton"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer
    {
        XSTRING_PTR_STORAGE(L"ScrollViewer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ScrollViewer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleButton
    {
        XSTRING_PTR_STORAGE(L"ToggleButton"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ToggleButton"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem
    {
        XSTRING_PTR_STORAGE(L"ToggleMenuFlyoutItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel
    {
        XSTRING_PTR_STORAGE(L"VirtualizingStackPanel"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.VirtualizingStackPanel"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid
    {
        XSTRING_PTR_STORAGE(L"WrapGrid"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.WrapGrid"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton
    {
        XSTRING_PTR_STORAGE(L"AppBarButton"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.AppBarButton"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton
    {
        XSTRING_PTR_STORAGE(L"AppBarToggleButton"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.AppBarToggleButton"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CheckBox
    {
        XSTRING_PTR_STORAGE(L"CheckBox"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CheckBox"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.GridView
    {
        XSTRING_PTR_STORAGE(L"GridView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.GridView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.GridViewItem
    {
        XSTRING_PTR_STORAGE(L"GridViewItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.GridViewItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ListView
    {
        XSTRING_PTR_STORAGE(L"ListView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ListView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ListViewItem
    {
        XSTRING_PTR_STORAGE(L"ListViewItem"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ListViewItem"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.RadioButton
    {
        XSTRING_PTR_STORAGE(L"RadioButton"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.RadioButton"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.RootScrollViewer
    {
        XSTRING_PTR_STORAGE(L"RootScrollViewer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.RootScrollViewer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AccessibilityView
    {
        XSTRING_PTR_STORAGE(L"AccessibilityView"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AccessibilityView"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.AlignmentX
    {
        XSTRING_PTR_STORAGE(L"AlignmentX"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.AlignmentX"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.AlignmentY
    {
        XSTRING_PTR_STORAGE(L"AlignmentY"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.AlignmentY"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection
    {
        XSTRING_PTR_STORAGE(L"AnimationDirection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AnnotationType
    {
        XSTRING_PTR_STORAGE(L"AnnotationType"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AnnotationType"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.AppBarClosedDisplayMode
    {
        XSTRING_PTR_STORAGE(L"AppBarClosedDisplayMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.AppBarClosedDisplayMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ApplicationHighContrastAdjustment
    {
        XSTRING_PTR_STORAGE(L"ApplicationHighContrastAdjustment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ApplicationHighContrastAdjustment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ApplicationRequiresPointerMode
    {
        XSTRING_PTR_STORAGE(L"ApplicationRequiresPointerMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ApplicationRequiresPointerMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ApplicationTheme
    {
        XSTRING_PTR_STORAGE(L"ApplicationTheme"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ApplicationTheme"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AutomationActiveEnd
    {
        XSTRING_PTR_STORAGE(L"AutomationActiveEnd"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AutomationActiveEnd"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnimationStyle
    {
        XSTRING_PTR_STORAGE(L"AutomationAnimationStyle"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AutomationAnimationStyle"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AutomationBulletStyle
    {
        XSTRING_PTR_STORAGE(L"AutomationBulletStyle"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AutomationBulletStyle"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AutomationCaretBidiMode
    {
        XSTRING_PTR_STORAGE(L"AutomationCaretBidiMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AutomationCaretBidiMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AutomationCaretPosition
    {
        XSTRING_PTR_STORAGE(L"AutomationCaretPosition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AutomationCaretPosition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationControlType
    {
        XSTRING_PTR_STORAGE(L"AutomationControlType"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationControlType"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationEvents
    {
        XSTRING_PTR_STORAGE(L"AutomationEvents"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationEvents"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AutomationFlowDirections
    {
        XSTRING_PTR_STORAGE(L"AutomationFlowDirections"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AutomationFlowDirections"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel
    {
        XSTRING_PTR_STORAGE(L"AutomationHeadingLevel"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType
    {
        XSTRING_PTR_STORAGE(L"AutomationLandmarkType"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting
    {
        XSTRING_PTR_STORAGE(L"AutomationLiveSetting"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection
    {
        XSTRING_PTR_STORAGE(L"AutomationNavigationDirection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind
    {
        XSTRING_PTR_STORAGE(L"AutomationNotificationKind"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing
    {
        XSTRING_PTR_STORAGE(L"AutomationNotificationProcessing"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation
    {
        XSTRING_PTR_STORAGE(L"AutomationOrientation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AutomationOutlineStyles
    {
        XSTRING_PTR_STORAGE(L"AutomationOutlineStyles"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AutomationOutlineStyles"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType
    {
        XSTRING_PTR_STORAGE(L"AutomationStructureChangeType"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AutomationStyleId
    {
        XSTRING_PTR_STORAGE(L"AutomationStyleId"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AutomationStyleId"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle
    {
        XSTRING_PTR_STORAGE(L"AutomationTextDecorationLineStyle"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType
    {
        XSTRING_PTR_STORAGE(L"AutomationTextEditChangeType"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason
    {
        XSTRING_PTR_STORAGE(L"AutoSuggestionBoxTextChangeReason"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.BackgroundSizing
    {
        XSTRING_PTR_STORAGE(L"BackgroundSizing"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.BackgroundSizing"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.BindingMode
    {
        XSTRING_PTR_STORAGE(L"BindingMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.BindingMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapCreateOptions
    {
        XSTRING_PTR_STORAGE(L"BitmapCreateOptions"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.BitmapCreateOptions"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.BrushMappingMode
    {
        XSTRING_PTR_STORAGE(L"BrushMappingMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.BrushMappingMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDisplayMode
    {
        XSTRING_PTR_STORAGE(L"CalendarViewDisplayMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CalendarViewDisplayMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewSelectionMode
    {
        XSTRING_PTR_STORAGE(L"CalendarViewSelectionMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CalendarViewSelectionMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CandidateWindowAlignment
    {
        XSTRING_PTR_STORAGE(L"CandidateWindowAlignment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CandidateWindowAlignment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CharacterCasing
    {
        XSTRING_PTR_STORAGE(L"CharacterCasing"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CharacterCasing"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ClickMode
    {
        XSTRING_PTR_STORAGE(L"ClickMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ClickMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ClockState
    {
        XSTRING_PTR_STORAGE(L"ClockState"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ClockState"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Windows.Foundation.Collections.CollectionChange
    {
        XSTRING_PTR_STORAGE(L"CollectionChange"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Foundation.Collections.CollectionChange"), // Full name
        KnownNamespaceIndex::Windows_Foundation_Collections, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.ColorInterpolationMode
    {
        XSTRING_PTR_STORAGE(L"ColorInterpolationMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.ColorInterpolationMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger
    {
        XSTRING_PTR_STORAGE(L"ComboBoxSelectionChangedTrigger"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CommandBarDefaultLabelPosition
    {
        XSTRING_PTR_STORAGE(L"CommandBarDefaultLabelPosition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CommandBarDefaultLabelPosition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CommandBarDynamicOverflowAction
    {
        XSTRING_PTR_STORAGE(L"CommandBarDynamicOverflowAction"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CommandBarDynamicOverflowAction"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CommandBarLabelPosition
    {
        XSTRING_PTR_STORAGE(L"CommandBarLabelPosition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CommandBarLabelPosition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.CommandBarOverflowButtonVisibility
    {
        XSTRING_PTR_STORAGE(L"CommandBarOverflowButtonVisibility"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.CommandBarOverflowButtonVisibility"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComponentResourceLocation
    {
        XSTRING_PTR_STORAGE(L"ComponentResourceLocation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ComponentResourceLocation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent
    {
        XSTRING_PTR_STORAGE(L"ConnectedAnimationComponent"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogButton
    {
        XSTRING_PTR_STORAGE(L"ContentDialogButton"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ContentDialogButton"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogPlacement
    {
        XSTRING_PTR_STORAGE(L"ContentDialogPlacement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ContentDialogPlacement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogResult
    {
        XSTRING_PTR_STORAGE(L"ContentDialogResult"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ContentDialogResult"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ControlHeaderPlacement
    {
        XSTRING_PTR_STORAGE(L"ControlHeaderPlacement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ControlHeaderPlacement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Windows.UI.Core.CoreCursorType
    {
        XSTRING_PTR_STORAGE(L"CoreCursorType"), // Name
        XSTRING_PTR_STORAGE(L"Windows.UI.Core.CoreCursorType"), // Full name
        KnownNamespaceIndex::Windows_UI_Core, // Declaring namespace index
    },
    // Windows.ApplicationModel.DataTransfer.DataPackageOperation
    {
        XSTRING_PTR_STORAGE(L"DataPackageOperation"), // Name
        XSTRING_PTR_STORAGE(L"Windows.ApplicationModel.DataTransfer.DataPackageOperation"), // Full name
        KnownNamespaceIndex::Windows_ApplicationModel_DataTransfer, // Declaring namespace index
    },
    // Windows.Globalization.DayOfWeek
    {
        XSTRING_PTR_STORAGE(L"DayOfWeek"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Globalization.DayOfWeek"), // Full name
        KnownNamespaceIndex::Windows_Globalization, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.DecodePixelType
    {
        XSTRING_PTR_STORAGE(L"DecodePixelType"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.DecodePixelType"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators
    {
        XSTRING_PTR_STORAGE(L"DisabledFormattingAccelerators"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.DockPosition
    {
        XSTRING_PTR_STORAGE(L"DockPosition"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.DockPosition"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingMode
    {
        XSTRING_PTR_STORAGE(L"EasingMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.EasingMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation
    {
        XSTRING_PTR_STORAGE(L"EdgeTransitionLocation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.ElementCompositeMode
    {
        XSTRING_PTR_STORAGE(L"ElementCompositeMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.ElementCompositeMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ElementHighContrastAdjustment
    {
        XSTRING_PTR_STORAGE(L"ElementHighContrastAdjustment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ElementHighContrastAdjustment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ElementSoundKind
    {
        XSTRING_PTR_STORAGE(L"ElementSoundKind"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ElementSoundKind"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ElementSoundMode
    {
        XSTRING_PTR_STORAGE(L"ElementSoundMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ElementSoundMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ElementSoundPlayerState
    {
        XSTRING_PTR_STORAGE(L"ElementSoundPlayerState"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ElementSoundPlayerState"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ElementSpatialAudioMode
    {
        XSTRING_PTR_STORAGE(L"ElementSpatialAudioMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ElementSpatialAudioMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.ElementTheme
    {
        XSTRING_PTR_STORAGE(L"ElementTheme"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.ElementTheme"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.ExpandCollapseState
    {
        XSTRING_PTR_STORAGE(L"ExpandCollapseState"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.ExpandCollapseState"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Windows.Media.Playback.FailedMediaStreamKind
    {
        XSTRING_PTR_STORAGE(L"FailedMediaStreamKind"), // Name
        XSTRING_PTR_STORAGE(L"Windows.Media.Playback.FailedMediaStreamKind"), // Full name
        KnownNamespaceIndex::Windows_Media_Playback, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.FastPlayFallbackBehaviour
    {
        XSTRING_PTR_STORAGE(L"FastPlayFallbackBehaviour"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.FastPlayFallbackBehaviour"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Animation.FillBehavior
    {
        XSTRING_PTR_STORAGE(L"FillBehavior"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Animation.FillBehavior"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Animation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.FillRule
    {
        XSTRING_PTR_STORAGE(L"FillRule"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.FillRule"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FlowDirection
    {
        XSTRING_PTR_STORAGE(L"FlowDirection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FlowDirection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode
    {
        XSTRING_PTR_STORAGE(L"FlyoutPlacementMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode
    {
        XSTRING_PTR_STORAGE(L"FlyoutShowMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.FocusInputDeviceKind
    {
        XSTRING_PTR_STORAGE(L"FocusInputDeviceKind"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.FocusInputDeviceKind"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.FocusNavigationDirection
    {
        XSTRING_PTR_STORAGE(L"FocusNavigationDirection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.FocusNavigationDirection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FocusState
    {
        XSTRING_PTR_STORAGE(L"FocusState"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FocusState"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FocusVisualKind
    {
        XSTRING_PTR_STORAGE(L"FocusVisualKind"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FocusVisualKind"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FontCapitals
    {
        XSTRING_PTR_STORAGE(L"FontCapitals"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FontCapitals"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FontEastAsianLanguage
    {
        XSTRING_PTR_STORAGE(L"FontEastAsianLanguage"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FontEastAsianLanguage"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FontEastAsianWidths
    {
        XSTRING_PTR_STORAGE(L"FontEastAsianWidths"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FontEastAsianWidths"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FontFraction
    {
        XSTRING_PTR_STORAGE(L"FontFraction"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FontFraction"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FontNumeralAlignment
    {
        XSTRING_PTR_STORAGE(L"FontNumeralAlignment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FontNumeralAlignment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FontNumeralStyle
    {
        XSTRING_PTR_STORAGE(L"FontNumeralStyle"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FontNumeralStyle"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Windows.UI.Text.FontStretch
    {
        XSTRING_PTR_STORAGE(L"FontStretch"), // Name
        XSTRING_PTR_STORAGE(L"Windows.UI.Text.FontStretch"), // Full name
        KnownNamespaceIndex::Windows_UI_Text, // Declaring namespace index
    },
    // Windows.UI.Text.FontStyle
    {
        XSTRING_PTR_STORAGE(L"FontStyle"), // Name
        XSTRING_PTR_STORAGE(L"Windows.UI.Text.FontStyle"), // Full name
        KnownNamespaceIndex::Windows_UI_Text, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.FontVariants
    {
        XSTRING_PTR_STORAGE(L"FontVariants"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.FontVariants"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GeneratorDirection
    {
        XSTRING_PTR_STORAGE(L"GeneratorDirection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.GeneratorDirection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.GestureModes
    {
        XSTRING_PTR_STORAGE(L"GestureModes"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.GestureModes"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.GradientSpreadMethod
    {
        XSTRING_PTR_STORAGE(L"GradientSpreadMethod"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.GradientSpreadMethod"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.GridUnitType
    {
        XSTRING_PTR_STORAGE(L"GridUnitType"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.GridUnitType"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GroupHeaderPlacement
    {
        XSTRING_PTR_STORAGE(L"GroupHeaderPlacement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.GroupHeaderPlacement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Input.HoldingState
    {
        XSTRING_PTR_STORAGE(L"HoldingState"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Input.HoldingState"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.HorizontalAlignment
    {
        XSTRING_PTR_STORAGE(L"HorizontalAlignment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.HorizontalAlignment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger
    {
        XSTRING_PTR_STORAGE(L"IncrementalLoadingTrigger"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.InputScopeNameValue
    {
        XSTRING_PTR_STORAGE(L"InputScopeNameValue"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.InputScopeNameValue"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.InputValidationErrorEventAction
    {
        XSTRING_PTR_STORAGE(L"InputValidationErrorEventAction"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.InputValidationErrorEventAction"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.InputValidationKind
    {
        XSTRING_PTR_STORAGE(L"InputValidationKind"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.InputValidationKind"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.InputValidationMode
    {
        XSTRING_PTR_STORAGE(L"InputValidationMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.InputValidationMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ItemsUpdatingScrollMode
    {
        XSTRING_PTR_STORAGE(L"ItemsUpdatingScrollMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ItemsUpdatingScrollMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode
    {
        XSTRING_PTR_STORAGE(L"KeyboardAcceleratorPlacementMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.KeyboardNavigationMode
    {
        XSTRING_PTR_STORAGE(L"KeyboardNavigationMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.KeyboardNavigationMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.KeyTipPlacementMode
    {
        XSTRING_PTR_STORAGE(L"KeyTipPlacementMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.KeyTipPlacementMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.LightDismissOverlayMode
    {
        XSTRING_PTR_STORAGE(L"LightDismissOverlayMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.LightDismissOverlayMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.LineStackingStrategy
    {
        XSTRING_PTR_STORAGE(L"LineStackingStrategy"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.LineStackingStrategy"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode
    {
        XSTRING_PTR_STORAGE(L"ListViewItemPresenterCheckMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterSelectionIndicatorMode
    {
        XSTRING_PTR_STORAGE(L"ListViewItemPresenterSelectionIndicatorMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterSelectionIndicatorMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ListViewReorderMode
    {
        XSTRING_PTR_STORAGE(L"ListViewReorderMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ListViewReorderMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ListViewSelectionMode
    {
        XSTRING_PTR_STORAGE(L"ListViewSelectionMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ListViewSelectionMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus
    {
        XSTRING_PTR_STORAGE(L"LoadedImageSourceLoadStatus"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.LogicalDirection
    {
        XSTRING_PTR_STORAGE(L"LogicalDirection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.LogicalDirection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.ManipulationModes
    {
        XSTRING_PTR_STORAGE(L"ManipulationModes"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.ManipulationModes"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.MarkupExtensionType
    {
        XSTRING_PTR_STORAGE(L"MarkupExtensionType"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.MarkupExtensionType"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Navigation.NavigationCacheMode
    {
        XSTRING_PTR_STORAGE(L"NavigationCacheMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Navigation.NavigationCacheMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Navigation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Navigation.NavigationMode
    {
        XSTRING_PTR_STORAGE(L"NavigationMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Navigation.NavigationMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Navigation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction
    {
        XSTRING_PTR_STORAGE(L"NotifyCollectionChangedAction"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Interop, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.OpticalMarginAlignment
    {
        XSTRING_PTR_STORAGE(L"OpticalMarginAlignment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.OpticalMarginAlignment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Orientation
    {
        XSTRING_PTR_STORAGE(L"Orientation"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Orientation"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.PanelScrollingDirection
    {
        XSTRING_PTR_STORAGE(L"PanelScrollingDirection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.PanelScrollingDirection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.PasswordRevealMode
    {
        XSTRING_PTR_STORAGE(L"PasswordRevealMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.PasswordRevealMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.Peers.PatternInterface
    {
        XSTRING_PTR_STORAGE(L"PatternInterface"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.Peers.PatternInterface"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation_Peers, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.PenLineCap
    {
        XSTRING_PTR_STORAGE(L"PenLineCap"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.PenLineCap"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.PenLineJoin
    {
        XSTRING_PTR_STORAGE(L"PenLineJoin"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.PenLineJoin"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.PlacementMode
    {
        XSTRING_PTR_STORAGE(L"PlacementMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.PlacementMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Input.PointerDeviceType
    {
        XSTRING_PTR_STORAGE(L"PointerDeviceType"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Input.PointerDeviceType"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Internal.PointerDirection
    {
        XSTRING_PTR_STORAGE(L"PointerDirection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Internal.PointerDirection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Internal, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode
    {
        XSTRING_PTR_STORAGE(L"PopupPlacementMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Printing.PreviewPageCountType
    {
        XSTRING_PTR_STORAGE(L"PreviewPageCountType"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Printing.PreviewPageCountType"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Printing, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Printing.PrintDocumentFormat
    {
        XSTRING_PTR_STORAGE(L"PrintDocumentFormat"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Printing.PrintDocumentFormat"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Printing, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.RelativeSourceMode
    {
        XSTRING_PTR_STORAGE(L"RelativeSourceMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.RelativeSourceMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.RequiresPointer
    {
        XSTRING_PTR_STORAGE(L"RequiresPointer"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.RequiresPointer"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.RichEditClipboardFormat
    {
        XSTRING_PTR_STORAGE(L"RichEditClipboardFormat"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.RichEditClipboardFormat"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.RowOrColumnMajor
    {
        XSTRING_PTR_STORAGE(L"RowOrColumnMajor"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.RowOrColumnMajor"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.ScrollAmount
    {
        XSTRING_PTR_STORAGE(L"ScrollAmount"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.ScrollAmount"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ScrollBarVisibility
    {
        XSTRING_PTR_STORAGE(L"ScrollBarVisibility"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ScrollBarVisibility"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType
    {
        XSTRING_PTR_STORAGE(L"ScrollEventType"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode
    {
        XSTRING_PTR_STORAGE(L"ScrollingIndicatorMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ScrollIntoViewAlignment
    {
        XSTRING_PTR_STORAGE(L"ScrollIntoViewAlignment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ScrollIntoViewAlignment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ScrollMode
    {
        XSTRING_PTR_STORAGE(L"ScrollMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ScrollMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SelectionMode
    {
        XSTRING_PTR_STORAGE(L"SelectionMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SelectionMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SliderSnapsTo
    {
        XSTRING_PTR_STORAGE(L"SliderSnapsTo"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.SliderSnapsTo"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment
    {
        XSTRING_PTR_STORAGE(L"SnapPointsAlignment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SnapPointsType
    {
        XSTRING_PTR_STORAGE(L"SnapPointsType"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SnapPointsType"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SplitViewDisplayMode
    {
        XSTRING_PTR_STORAGE(L"SplitViewDisplayMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SplitViewDisplayMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.SplitViewPanePlacement
    {
        XSTRING_PTR_STORAGE(L"SplitViewPanePlacement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.SplitViewPanePlacement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.StandardUICommandKind
    {
        XSTRING_PTR_STORAGE(L"StandardUICommandKind"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.StandardUICommandKind"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Stretch
    {
        XSTRING_PTR_STORAGE(L"Stretch"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Stretch"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.StretchDirection
    {
        XSTRING_PTR_STORAGE(L"StretchDirection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.StretchDirection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.StyleSimulations
    {
        XSTRING_PTR_STORAGE(L"StyleSimulations"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.StyleSimulations"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.SupportedTextSelection
    {
        XSTRING_PTR_STORAGE(L"SupportedTextSelection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.SupportedTextSelection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceLoadStatus
    {
        XSTRING_PTR_STORAGE(L"SvgImageSourceLoadStatus"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceLoadStatus"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media_Imaging, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.SweepDirection
    {
        XSTRING_PTR_STORAGE(L"SweepDirection"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.SweepDirection"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Symbol
    {
        XSTRING_PTR_STORAGE(L"Symbol"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Symbol"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.SynchronizedInputType
    {
        XSTRING_PTR_STORAGE(L"SynchronizedInputType"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.SynchronizedInputType"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.TextAlignment
    {
        XSTRING_PTR_STORAGE(L"TextAlignment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.TextAlignment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Windows.UI.Text.TextDecorations
    {
        XSTRING_PTR_STORAGE(L"TextDecorations"), // Name
        XSTRING_PTR_STORAGE(L"Windows.UI.Text.TextDecorations"), // Full name
        KnownNamespaceIndex::Windows_UI_Text, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.TextFormattingMode
    {
        XSTRING_PTR_STORAGE(L"TextFormattingMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.TextFormattingMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.TextHintingMode
    {
        XSTRING_PTR_STORAGE(L"TextHintingMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.TextHintingMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.TextLineBounds
    {
        XSTRING_PTR_STORAGE(L"TextLineBounds"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.TextLineBounds"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.TextReadingOrder
    {
        XSTRING_PTR_STORAGE(L"TextReadingOrder"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.TextReadingOrder"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Media.TextRenderingMode
    {
        XSTRING_PTR_STORAGE(L"TextRenderingMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Media.TextRenderingMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Media, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.TextTrimming
    {
        XSTRING_PTR_STORAGE(L"TextTrimming"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.TextTrimming"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.TextWrapping
    {
        XSTRING_PTR_STORAGE(L"TextWrapping"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.TextWrapping"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.Primitives.TickPlacement
    {
        XSTRING_PTR_STORAGE(L"TickPlacement"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.Primitives.TickPlacement"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls_Primitives, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.ToggleState
    {
        XSTRING_PTR_STORAGE(L"ToggleState"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.ToggleState"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Windows.UI.Xaml.Interop.TypeKind
    {
        XSTRING_PTR_STORAGE(L"TypeKind"), // Name
        XSTRING_PTR_STORAGE(L"Windows.UI.Xaml.Interop.TypeKind"), // Full name
        KnownNamespaceIndex::Windows_UI_Xaml_Interop, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Documents.UnderlineStyle
    {
        XSTRING_PTR_STORAGE(L"UnderlineStyle"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Documents.UnderlineStyle"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Documents, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Data.UpdateSourceTrigger
    {
        XSTRING_PTR_STORAGE(L"UpdateSourceTrigger"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Data.UpdateSourceTrigger"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Data, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Vector3TransitionComponents
    {
        XSTRING_PTR_STORAGE(L"Vector3TransitionComponents"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Vector3TransitionComponents"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.VerticalAlignment
    {
        XSTRING_PTR_STORAGE(L"VerticalAlignment"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.VerticalAlignment"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.VirtualizationMode
    {
        XSTRING_PTR_STORAGE(L"VirtualizationMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.VirtualizationMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Windows.System.VirtualKey
    {
        XSTRING_PTR_STORAGE(L"VirtualKey"), // Name
        XSTRING_PTR_STORAGE(L"Windows.System.VirtualKey"), // Full name
        KnownNamespaceIndex::Windows_System, // Declaring namespace index
    },
    // Windows.System.VirtualKeyModifiers
    {
        XSTRING_PTR_STORAGE(L"VirtualKeyModifiers"), // Name
        XSTRING_PTR_STORAGE(L"Windows.System.VirtualKeyModifiers"), // Full name
        KnownNamespaceIndex::Windows_System, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Visibility
    {
        XSTRING_PTR_STORAGE(L"Visibility"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Visibility"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.WindowInteractionState
    {
        XSTRING_PTR_STORAGE(L"WindowInteractionState"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.WindowInteractionState"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.WindowVisualState
    {
        XSTRING_PTR_STORAGE(L"WindowVisualState"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.WindowVisualState"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode
    {
        XSTRING_PTR_STORAGE(L"XYFocusKeyboardNavigationMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy
    {
        XSTRING_PTR_STORAGE(L"XYFocusNavigationStrategy"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Input.XYFocusNavigationStrategyOverride
    {
        XSTRING_PTR_STORAGE(L"XYFocusNavigationStrategyOverride"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Input.XYFocusNavigationStrategyOverride"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Input, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Controls.ZoomMode
    {
        XSTRING_PTR_STORAGE(L"ZoomMode"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Controls.ZoomMode"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Controls, // Declaring namespace index
    },
    // Microsoft.UI.Xaml.Automation.ZoomUnit
    {
        XSTRING_PTR_STORAGE(L"ZoomUnit"), // Name
        XSTRING_PTR_STORAGE(L"Microsoft.UI.Xaml.Automation.ZoomUnit"), // Full name
        KnownNamespaceIndex::Microsoft_UI_Xaml_Automation, // Declaring namespace index
    },
};

// Type property information.
extern const MetaDataTypeProperties c_aTypeProperties[KnownTypeCount] =
{
    // UnknownType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Collections.IObservableVector`1[Microsoft.UI.Xaml.Controls.GroupStyle]
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Collections.IVector`1[Windows.Foundation.Float]
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Collections.IVector`1[Microsoft.UI.Xaml.Navigation.PageStackEntry]
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Collections.IVector`1[Windows.Foundation.DateTime]
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Collections.IVectorView`1[Microsoft.UI.Xaml.Data.ItemIndexRange]
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Byte
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Char16
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.DateTime
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition
    {
        KnownPropertyIndex::GeneratorPosition_Index, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        2, // Property slot count
    },
    // Windows.Foundation.Guid
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Interop.IBindableIterable
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Interop.IBindableIterator
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Interop.IBindableObservableVector
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Interop.IBindableVector
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Interop.IBindableVectorView
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.ICollectionView
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.ICommand
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.IDataTemplateComponent
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.IDataTemplateExtension
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.IElementFactory
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Media.Playback.IMediaPlaybackSource
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Int16
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Int64
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Graphics.Printing.IPrintDocumentSource
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.IProvideValueTarget
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.IRootObjectProvider
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.IScrollAnchorProvider
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ISemanticZoomInformation
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Text.ITextDocument
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.IUriContext
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.IValueConverter
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.IXamlServiceProvider
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.IXamlTypeResolver
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Numerics.Matrix3x2
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Numerics.Matrix4x4
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Object
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Numerics.Quaternion
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Float
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.UI.Xaml.Interop.TypeName
    {
        KnownPropertyIndex::TypeName_Kind, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        2, // Property slot count
    },
    // Windows.Foundation.UInt16
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.UInt32
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.UInt64
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Numerics.Vector2
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Numerics.Vector3
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties
    {
        KnownPropertyIndex::AutomationProperties_AcceleratorKey, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Colors
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.DataTemplateSelector
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.DependencyObject
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Hosting.ElementCompositionPreview
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.EventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.EventHandlerStub
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.GroupStyleCollection
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.GroupStyleSelector
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Input.InputCursor
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.InputValidationContext
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.InteractionBase
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ItemContainerGenerator
    {
        KnownPropertyIndex::ItemContainerGenerator_DeferredUnlinkingPayload, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ListViewPersistenceHelper
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.MarkupExtension
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Media.Playback.MediaPlayer
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControlsHelper
    {
        KnownPropertyIndex::MediaTransportControlsHelper_DropoutOrder, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.ParserServiceProvider
    {
        KnownPropertyIndex::ParserServiceProvider_BaseUri, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        4, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.StyleSelector
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.TextOptions
    {
        KnownPropertyIndex::TextOptions_TextFormattingMode, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService
    {
        KnownPropertyIndex::ToolTipService_KeyboardAcceleratorToolTip, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.Typography
    {
        KnownPropertyIndex::Typography_AnnotationAlternates, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Uri
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.XamlBindingHelper
    {
        KnownPropertyIndex::XamlBindingHelper_DataTemplateComponent, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.XamlMarkupHelper
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.XamlRenderingBackgroundTask
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Printing.AddPagesEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarButtonTemplateSettings
    {
        KnownPropertyIndex::AppBarButtonTemplateSettings_KeyboardAcceleratorTextMinWidth, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings
    {
        KnownPropertyIndex::AppBarTemplateSettings_ClipRect, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarToggleButtonTemplateSettings
    {
        KnownPropertyIndex::AppBarToggleButtonTemplateSettings_KeyboardAcceleratorTextMinWidth, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Application
    {
        KnownPropertyIndex::Application_ApplicationStarted, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        1, // First enter property = Microsoft.UI.Xaml.Application.Resources
        1, // First render property = Microsoft.UI.Xaml.Application.Resources
        1, // First object property = Microsoft.UI.Xaml.Application.Resources
        14, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ApplicationBarService
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotation
    {
        KnownPropertyIndex::AutomationAnnotation_Element, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
    {
        KnownPropertyIndex::AutomationPeer_EventsSource, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation
    {
        KnownPropertyIndex::AutomationPeerAnnotation_Peer, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.AutomationPeerEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs
    {
        KnownPropertyIndex::AutoSuggestBoxQuerySubmittedEventArgs_ChosenSuggestion, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs
    {
        KnownPropertyIndex::AutoSuggestBoxSuggestionChosenEventArgs_SelectedItem, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs
    {
        KnownPropertyIndex::AutoSuggestBoxTextChangedEventArgs_Reason, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Printing.BeginPrintEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.BindingFailedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Boolean
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Brush
    {
        KnownPropertyIndex::Brush_Opacity, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.BrushTransition
    {
        KnownPropertyIndex::BrushTransition_Duration, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.CacheMode
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_CenterX, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        23, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.CollectionView
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.CollectionViewGroup
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.CollectionViewSource
    {
        KnownPropertyIndex::CollectionViewSource_IsSourceGrouped, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        12, // Property slot count
    },
    // Windows.UI.Color
    {
        KnownPropertyIndex::Color_A, // First property
        KnownPropertyIndex::Color_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        13, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame
    {
        KnownPropertyIndex::ColorKeyFrame_KeyTime, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinition
    {
        KnownPropertyIndex::ColumnDefinition_ActualWidth, // First property
        KnownPropertyIndex::ColumnDefinition_Width, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings
    {
        KnownPropertyIndex::ComboBoxTemplateSettings_DropDownClosedHeight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        13, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings
    {
        KnownPropertyIndex::CommandBarTemplateSettings_ContentHeight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        20, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CommandingContextChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogOpenedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.CornerRadius
    {
        KnownPropertyIndex::CornerRadius_BottomLeft, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.CurrentChangingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.DatePickerValueChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.DebugSettings
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.DeferredElement
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.DependencyObjectWrapper
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.DependencyPropertyProxy
    {
        KnownPropertyIndex::DependencyPropertyProxy_PropertyId, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Deployment
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Double
    {
        KnownPropertyIndex::Double_ContentProperty, // First property
        KnownPropertyIndex::Double_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame
    {
        KnownPropertyIndex::DoubleKeyFrame_KeyTime, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.DragItemsStartingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        KnownPropertyIndex::EasingFunctionBase_EasingMode, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Printing.EndPrintEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Enumerated
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.ErrorEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.ExternalObjectReference
    {
        KnownPropertyIndex::ExternalObjectReference_MarkupExtensionType, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        3, // First object property = Microsoft.UI.Xaml.Internal.ExternalObjectReference.NativeValue
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase
    {
        KnownPropertyIndex::FlyoutBase_AllowFocusOnInteraction, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        21, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.FocusedElementRemovedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.FocusManagerGotFocusEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.FocusManagerLostFocusEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.FontFamily
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Windows.UI.Text.FontWeight
    {
        KnownPropertyIndex::FontWeight_Weight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.FrameworkTemplate
    {
        KnownPropertyIndex::FrameworkTemplate_Template, // First property
        KnownPropertyIndex::FrameworkTemplate_Template, // Content property
        3, // First enter property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        3, // First render property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        4, // First object property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.GeneralTransform
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Geometry
    {
        KnownPropertyIndex::Geometry_Bounds, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        4, // First enter property = Microsoft.UI.Xaml.Media.Geometry.Transform
        4, // First render property = Microsoft.UI.Xaml.Media.Geometry.Transform
        5, // First object property = Microsoft.UI.Xaml.Media.Geometry.Transform
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Printing.GetPreviewPageEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.GradientStop
    {
        KnownPropertyIndex::GradientStop_Color, // First property
        KnownPropertyIndex::GradientStop_Color, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.GridLength
    {
        KnownPropertyIndex::GridLength_GridUnitType, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle
    {
        KnownPropertyIndex::GroupStyle_ContainerStyle, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        15, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.HasValidationErrorsChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.HWCompNode
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.IconSource
    {
        KnownPropertyIndex::IconSource_Foreground, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.ImageSource
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.InertiaExpansionBehavior
    {
        KnownPropertyIndex::InertiaExpansionBehavior_DesiredDeceleration, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.InertiaRotationBehavior
    {
        KnownPropertyIndex::InertiaRotationBehavior_DesiredDeceleration, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.InertiaTranslationBehavior
    {
        KnownPropertyIndex::InertiaTranslationBehavior_DesiredDeceleration, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.InputScope
    {
        KnownPropertyIndex::InputScope_Names, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        5, // First enter property = Microsoft.UI.Xaml.Input.InputScope.Names
        5, // First render property = Microsoft.UI.Xaml.Input.InputScope.Names
        6, // First object property = Microsoft.UI.Xaml.Input.InputScope.Names
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.InputScopeName
    {
        KnownPropertyIndex::InputScopeName_NameValue, // First property
        KnownPropertyIndex::InputScopeName_NameValue, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.InputValidationCommand
    {
        KnownPropertyIndex::InputValidationCommand_InputValidationKind, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.InputValidationErrorEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.Int32
    {
        KnownPropertyIndex::Int32_ContentProperty, // First property
        KnownPropertyIndex::Int32_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.IsApiContractNotPresent
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.IsApiContractPresent
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.IsEnabledChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.IsPropertyNotPresent
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.IsPropertyPresent
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.IsTypeNotPresent
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Markup.IsTypePresent
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.KeyboardAccelerator
    {
        KnownPropertyIndex::KeyboardAccelerator_IsEnabled, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        7, // First object property = Microsoft.UI.Xaml.Input.KeyboardAccelerator.ScopeOwner
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.KeySpline
    {
        KnownPropertyIndex::KeySpline_ControlPoint1, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        6, // First enter property = Microsoft.UI.Xaml.Media.Animation.KeySpline.ControlPoint1
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.LayoutTransitionStaggerItem
    {
        KnownPropertyIndex::LayoutTransitionStaggerItem_Bounds, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.LengthConverter
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemTemplateSettings
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSurface
    {
        KnownPropertyIndex::LoadedImageSurface_DecodedPhysicalSize, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.ManipulationDelta
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.ManipulationPivot
    {
        KnownPropertyIndex::ManipulationPivot_Center, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.ManipulationVelocities
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.MarkupExtensionBase
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Matrix
    {
        KnownPropertyIndex::Matrix_M11, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        14, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D
    {
        KnownPropertyIndex::Matrix3D_M11, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        24, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.MediaPlaybackItemConverter
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutItemTemplateSettings
    {
        KnownPropertyIndex::MenuFlyoutItemTemplateSettings_KeyboardAcceleratorTextMinWidth, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutPresenterTemplateSettings
    {
        KnownPropertyIndex::MenuFlyoutPresenterTemplateSettings_FlyoutContentMinWidth, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Navigation.NavigationEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.NullKeyedResource
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame
    {
        KnownPropertyIndex::ObjectKeyFrame_KeyTime, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        8, // First object property = Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame.Value
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Navigation.PageStackEntry
    {
        KnownPropertyIndex::PageStackEntry_SourcePageType, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Printing.PaginateEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurve
    {
        KnownPropertyIndex::ParametricCurve_CurveSegments, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        8, // First enter property = Microsoft.UI.Xaml.Internal.ParametricCurve.CurveSegments
        6, // First render property = Microsoft.UI.Xaml.Internal.ParametricCurve.CurveSegments
        9, // First object property = Microsoft.UI.Xaml.Internal.ParametricCurve.CurveSegments
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment
    {
        KnownPropertyIndex::ParametricCurveSegment_BeginOffset, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        13, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.PathFigure
    {
        KnownPropertyIndex::PathFigure_IsClosed, // First property
        KnownPropertyIndex::PathFigure_Segments, // Content property
        9, // First enter property = Microsoft.UI.Xaml.Media.PathFigure.Segments
        7, // First render property = Microsoft.UI.Xaml.Media.PathFigure.Segments
        10, // First object property = Microsoft.UI.Xaml.Media.PathFigure.Segments
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.PathSegment
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Windows.Foundation.Point
    {
        KnownPropertyIndex::Point_ContentProperty, // First property
        KnownPropertyIndex::Point_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.Pointer
    {
        KnownPropertyIndex::Pointer_IsInContact, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrame
    {
        KnownPropertyIndex::PointerKeyFrame_PointerValue, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrame
    {
        KnownPropertyIndex::PointKeyFrame_KeyTime, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Printing.PrintDocument
    {
        KnownPropertyIndex::PrintDocument_DesiredFormat, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Printing.PrintPageEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Projection
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.PropertyPath
    {
        KnownPropertyIndex::PropertyPath_Path, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Windows.Foundation.Rect
    {
        KnownPropertyIndex::Rect_Height, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.RenderedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.RenderingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.ResourceManagerRequestedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.RoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.RowDefinition
    {
        KnownPropertyIndex::RowDefinition_ActualHeight, // First property
        KnownPropertyIndex::RowDefinition_Height, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.ScalarTransition
    {
        KnownPropertyIndex::ScalarTransition_Duration, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.SecondaryContentRelationship
    {
        KnownPropertyIndex::SecondaryContentRelationship_Curves, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        10, // First enter property = Microsoft.UI.Xaml.Internal.SecondaryContentRelationship.Curves
        8, // First render property = Microsoft.UI.Xaml.Internal.SecondaryContentRelationship.Curves
        11, // First object property = Microsoft.UI.Xaml.Internal.SecondaryContentRelationship.Curves
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.SetterBase
    {
        KnownPropertyIndex::SetterBase_IsSealed, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Shadow
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Windows.Foundation.Size
    {
        KnownPropertyIndex::Size_Height, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings
    {
        KnownPropertyIndex::SplitViewTemplateSettings_CompactPaneGridLength, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        14, // Property slot count
    },
    // Microsoft.UI.Xaml.StaggerFunctionBase
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.StartupEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.StateTriggerBase
    {
        KnownPropertyIndex::StateTriggerBase_TriggerState, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Windows.Foundation.String
    {
        KnownPropertyIndex::String_ContentProperty, // First property
        KnownPropertyIndex::String_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Style
    {
        KnownPropertyIndex::Style_BasedOn, // First property
        KnownPropertyIndex::Style_Setters, // Content property
        11, // First enter property = Microsoft.UI.Xaml.Style.Setters
        9, // First render property = Microsoft.UI.Xaml.Style.Setters
        12, // First object property = Microsoft.UI.Xaml.Style.BasedOn
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.SystemBackdrop
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.TargetPropertyPath
    {
        KnownPropertyIndex::TargetPropertyPath_CachedStyleSetterProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.TemplateContent
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextAdapter
    {
        KnownPropertyIndex::TextAdapter_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TextControlPasteEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.TextElement
    {
        KnownPropertyIndex::TextElement_AccessKey, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        12, // First enter property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        10, // First render property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        14, // First object property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        26, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighterBase
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.TextPointerWrapper
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // MS.Internal.Automation.TextProvider
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.TextRange
    {
        KnownPropertyIndex::TextRange_Length, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextRangeAdapter
    {
        KnownPropertyIndex::TextRangeAdapter_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // MS.Internal.Automation.TextRangeProvider
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Thickness
    {
        KnownPropertyIndex::Thickness_Bottom, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline
    {
        KnownPropertyIndex::Timeline_AutoReverse, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        14, // First enter property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
        12, // First render property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
        16, // First object property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
        16, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TimePickerValueChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Windows.Foundation.TimeSpan
    {
        KnownPropertyIndex::TimeSpan_Seconds, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings
    {
        KnownPropertyIndex::ToggleSwitchTemplateSettings_CurtainCurrentToOffOffset, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        16, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings
    {
        KnownPropertyIndex::ToolTipTemplateSettings_FromHorizontalOffset, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Media3D.Transform3D
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.Transition
    {
        KnownPropertyIndex::Transition_GeneratedStaggerFunction, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        15, // First enter property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        13, // First render property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        17, // First object property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget
    {
        KnownPropertyIndex::TransitionTarget_ClipTransform, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        16, // First enter property = Microsoft.UI.Xaml.Media.Animation.TransitionTarget.ClipTransform
        14, // First render property = Microsoft.UI.Xaml.Media.Animation.TransitionTarget.ClipTransform
        18, // First object property = Microsoft.UI.Xaml.Media.Animation.TransitionTarget.ClipTransform
        14, // Property slot count
    },
    // Microsoft.UI.Xaml.TriggerAction
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.TriggerBase
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.UIElement
    {
        KnownPropertyIndex::UIElement_AccessKey, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        18, // First enter property = Microsoft.UI.Xaml.UIElement.KeyboardAccelerators
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        95, // Property slot count
    },
    // Microsoft.UI.Xaml.UnhandledExceptionEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Vector3Transition
    {
        KnownPropertyIndex::Vector3Transition_Components, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.VisualState
    {
        KnownPropertyIndex::VisualState___DeferredSetters, // First property
        KnownPropertyIndex::VisualState_Storyboard, // Content property
        19, // First enter property = Microsoft.UI.Xaml.VisualState.__DeferredSetters
        16, // First render property = Microsoft.UI.Xaml.VisualState.__DeferredSetters
        20, // First object property = Microsoft.UI.Xaml.VisualState.__DeferredSetters
        13, // Property slot count
    },
    // Microsoft.UI.Xaml.VisualStateChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.VisualStateGroup
    {
        KnownPropertyIndex::VisualStateGroup_States, // First property
        KnownPropertyIndex::VisualStateGroup_States, // Content property
        23, // First enter property = Microsoft.UI.Xaml.VisualStateGroup.States
        20, // First render property = Microsoft.UI.Xaml.VisualStateGroup.States
        24, // First object property = Microsoft.UI.Xaml.VisualStateGroup.States
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.VisualStateManager
    {
        KnownPropertyIndex::VisualStateManager_CustomVisualStateManager, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.VisualTransition
    {
        KnownPropertyIndex::VisualTransition_From, // First property
        KnownPropertyIndex::VisualTransition_Storyboard, // Content property
        25, // First enter property = Microsoft.UI.Xaml.VisualTransition.GeneratedEasingFunction
        22, // First render property = Microsoft.UI.Xaml.VisualTransition.GeneratedEasingFunction
        26, // First object property = Microsoft.UI.Xaml.VisualTransition.GeneratedEasingFunction
        13, // Property slot count
    },
    // Microsoft.UI.Xaml.Window
    {
        KnownPropertyIndex::Window_Content, // First property
        KnownPropertyIndex::Window_Content, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.WindowCreatedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.XamlLight
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.XamlResourceReferenceFailedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.XamlRootChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand
    {
        KnownPropertyIndex::XamlUICommand_AccessKey, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        27, // First enter property = Microsoft.UI.Xaml.Input.XamlUICommand.KeyboardAccelerators
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        14, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.UIElement]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.Transition]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.Timeline]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Input.Pointer]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.TriggerBase]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.DependencyObject]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.ResourceDictionary]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.SetterBase]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.XamlLight]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Input.KeyboardAccelerator]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Automation.Peers.AutomationPeer]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.TriggerAction]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.StateTriggerBase]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.VisualTransition]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.VisualState]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.VisualStateGroup]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.Storyboard]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Windows.Foundation.Double]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Windows.Foundation.Float]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Windows.Foundation.Point]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Brush]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Transform]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.PathSegment]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.PathFigure]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Geometry]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.GradientStop]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.PointKeyFrame]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Input.InputScopeName]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Documents.TextElement]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Documents.TextRange]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Documents.TextHighlighter]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.RowDefinition]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.ColumnDefinition]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.HubSection]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Internal.PointerKeyFrame]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Internal.ParametricCurveSegment]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Internal.ParametricCurve]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Automation.AutomationAnnotation]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.AdaptiveTrigger
    {
        KnownPropertyIndex::AdaptiveTrigger_MinWindowHeight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.AddDeleteThemeTransition
    {
        KnownPropertyIndex::Transition_GeneratedStaggerFunction, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        15, // First enter property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        13, // First render property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        17, // First object property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.ArcSegment
    {
        KnownPropertyIndex::ArcSegment_IsLargeArc, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        13, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.BackEase
    {
        KnownPropertyIndex::BackEase_Amplitude, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.BeginStoryboard
    {
        KnownPropertyIndex::BeginStoryboard_Storyboard, // First property
        KnownPropertyIndex::BeginStoryboard_Storyboard, // Content property
        28, // First enter property = Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.Storyboard
        24, // First render property = Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.Storyboard
        28, // First object property = Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.Storyboard
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.BezierSegment
    {
        KnownPropertyIndex::BezierSegment_Point1, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.BindingBase
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.BitmapCache
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.BitmapIconSource
    {
        KnownPropertyIndex::BitmapIconSource_ShowAsMonochrome, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapSource
    {
        KnownPropertyIndex::BitmapSource_PixelHeight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.Block
    {
        KnownPropertyIndex::Block_HorizontalTextAlignment, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        12, // First enter property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        10, // First render property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        14, // First object property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        31, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.BounceEase
    {
        KnownPropertyIndex::BounceEase_Bounces, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewHeaderAutomationPeer
    {
        KnownPropertyIndex::AutomationPeer_EventsSource, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.CircleEase
    {
        KnownPropertyIndex::EasingFunctionBase_EasingMode, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation
    {
        KnownPropertyIndex::ColorAnimation_By, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        29, // First enter property = Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EasingFunction
        25, // First render property = Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EasingFunction
        29, // First object property = Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EasingFunction
        21, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames
    {
        KnownPropertyIndex::ColorAnimationUsingKeyFrames_EnableDependentAnimation, // First property
        KnownPropertyIndex::ColorAnimationUsingKeyFrames_KeyFrames, // Content property
        30, // First enter property = Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames
        26, // First render property = Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames
        30, // First object property = Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D
    {
        KnownPropertyIndex::CompositeTransform3D_CenterX, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        32, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ContentDialogOpenCloseThemeTransition
    {
        KnownPropertyIndex::Transition_GeneratedStaggerFunction, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        15, // First enter property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        13, // First render property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        17, // First object property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition
    {
        KnownPropertyIndex::ContentThemeTransition_HorizontalOffset, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        15, // First enter property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        13, // First render property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        17, // First object property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ContextMenuEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.ContextRequestedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ControlTemplate
    {
        KnownPropertyIndex::ControlTemplate_TargetType, // First property
        KnownPropertyIndex::FrameworkTemplate_Template, // Content property
        3, // First enter property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        3, // First render property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        4, // First object property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.CubicEase
    {
        KnownPropertyIndex::EasingFunctionBase_EasingMode, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.CustomResource
    {
        KnownPropertyIndex::CustomResource_ResourceKey, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.DataTemplate
    {
        KnownPropertyIndex::DataTemplate_ExtensionInstance, // First property
        KnownPropertyIndex::FrameworkTemplate_Template, // Content property
        3, // First enter property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        3, // First render property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        4, // First object property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscreteColorKeyFrame
    {
        KnownPropertyIndex::ColorKeyFrame_KeyTime, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscreteDoubleKeyFrame
    {
        KnownPropertyIndex::DoubleKeyFrame_KeyTime, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscreteObjectKeyFrame
    {
        KnownPropertyIndex::ObjectKeyFrame_KeyTime, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        8, // First object property = Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame.Value
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscretePointKeyFrame
    {
        KnownPropertyIndex::PointKeyFrame_KeyTime, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.DispatcherTimer
    {
        KnownPropertyIndex::DispatcherTimer_Interval, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        31, // First enter property = Microsoft.UI.Xaml.DispatcherTimer.Interval
        27, // First render property = Microsoft.UI.Xaml.DispatcherTimer.Interval
        31, // First object property = Microsoft.UI.Xaml.DispatcherTimer.Interval
        17, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation
    {
        KnownPropertyIndex::DoubleAnimation_By, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        32, // First enter property = Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EasingFunction
        28, // First render property = Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EasingFunction
        32, // First object property = Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EasingFunction
        21, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames
    {
        KnownPropertyIndex::DoubleAnimationUsingKeyFrames_EnableDependentAnimation, // First property
        KnownPropertyIndex::DoubleAnimationUsingKeyFrames_KeyFrames, // Content property
        33, // First enter property = Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames
        29, // First render property = Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames
        33, // First object property = Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.DoubleTappedRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.DragEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.DragStartingEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.DropCompletedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Duration
    {
        KnownPropertyIndex::Duration_TimeSpan, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DynamicTimeline
    {
        KnownPropertyIndex::DynamicTimeline_Children, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        17, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame
    {
        KnownPropertyIndex::EasingColorKeyFrame_EasingFunction, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        35, // First enter property = Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame.EasingFunction
        31, // First render property = Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame.EasingFunction
        35, // First object property = Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame.EasingFunction
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame
    {
        KnownPropertyIndex::EasingDoubleKeyFrame_EasingFunction, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        36, // First enter property = Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame.EasingFunction
        32, // First render property = Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame.EasingFunction
        36, // First object property = Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame.EasingFunction
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame
    {
        KnownPropertyIndex::EasingPointKeyFrame_EasingFunction, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        37, // First enter property = Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame.EasingFunction
        33, // First render property = Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame.EasingFunction
        37, // First object property = Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame.EasingFunction
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.EdgeUIThemeTransition
    {
        KnownPropertyIndex::EdgeUIThemeTransition_Edge, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        15, // First enter property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        13, // First render property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        17, // First object property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ElasticEase
    {
        KnownPropertyIndex::ElasticEase_Oscillations, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.EllipseGeometry
    {
        KnownPropertyIndex::EllipseGeometry_Center, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        4, // First enter property = Microsoft.UI.Xaml.Media.Geometry.Transform
        4, // First render property = Microsoft.UI.Xaml.Media.Geometry.Transform
        5, // First object property = Microsoft.UI.Xaml.Media.Geometry.Transform
        13, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition
    {
        KnownPropertyIndex::EntranceThemeTransition_FromHorizontalOffset, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        15, // First enter property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        13, // First render property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        17, // First object property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.EventTrigger
    {
        KnownPropertyIndex::EventTrigger_Actions, // First property
        KnownPropertyIndex::EventTrigger_Actions, // Content property
        38, // First enter property = Microsoft.UI.Xaml.EventTrigger.Actions
        34, // First render property = Microsoft.UI.Xaml.EventTrigger.Actions
        38, // First object property = Microsoft.UI.Xaml.EventTrigger.Actions
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.ExceptionRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ExponentialEase
    {
        KnownPropertyIndex::ExponentialEase_Exponent, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Flyout
    {
        KnownPropertyIndex::Flyout_Content, // First property
        KnownPropertyIndex::Flyout_Content, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        23, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.FocusDisengagedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource
    {
        KnownPropertyIndex::FontIconSource_FontFamily, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        16, // Property slot count
    },
    // Microsoft.UI.Xaml.FrameworkElement
    {
        KnownPropertyIndex::FrameworkElement_ActualHeight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        39, // First enter property = Microsoft.UI.Xaml.FrameworkElement.Height
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        133, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.FrameworkElementEx
    {
        KnownPropertyIndex::FrameworkElementEx_ActualHeight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        41, // First enter property = Microsoft.UI.Xaml.FrameworkElementEx.Height
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        107, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.GeometryGroup
    {
        KnownPropertyIndex::GeometryGroup_Children, // First property
        KnownPropertyIndex::GeometryGroup_Children, // Content property
        43, // First enter property = Microsoft.UI.Xaml.Media.GeometryGroup.Children
        35, // First render property = Microsoft.UI.Xaml.Media.GeometryGroup.Children
        39, // First object property = Microsoft.UI.Xaml.Media.GeometryGroup.Children
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.GettingFocusEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.GradientBrush
    {
        KnownPropertyIndex::GradientBrush_ColorInterpolationMode, // First property
        KnownPropertyIndex::GradientBrush_GradientStops, // Content property
        44, // First enter property = Microsoft.UI.Xaml.Media.GradientBrush.GradientStops
        36, // First render property = Microsoft.UI.Xaml.Media.GradientBrush.GradientStops
        40, // First object property = Microsoft.UI.Xaml.Media.GradientBrush.GradientStops
        15, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings
    {
        KnownPropertyIndex::GridViewItemTemplateSettings_DragItemsCount, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.GroupedDataCollectionView
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.HWCompLeafNode
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.HWCompTreeNode
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.HyperlinkAutomationPeer
    {
        KnownPropertyIndex::AutomationPeer_EventsSource, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.Inline
    {
        KnownPropertyIndex::TextElement_AccessKey, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        12, // First enter property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        10, // First render property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        14, // First object property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        26, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.InputPaneThemeTransition
    {
        KnownPropertyIndex::Transition_GeneratedStaggerFunction, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        15, // First enter property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        13, // First render property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        17, // First object property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.InternalTransform
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer
    {
        KnownPropertyIndex::ItemAutomationPeer_Item, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ItemClickEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ItemsPanelTemplate
    {
        KnownPropertyIndex::FrameworkTemplate_Template, // First property
        KnownPropertyIndex::FrameworkTemplate_Template, // Content property
        3, // First enter property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        3, // First render property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        4, // First object property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.KeyRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.KeyTime
    {
        KnownPropertyIndex::KeyTime_TimeSpan, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.LayoutTransitionElement
    {
        KnownPropertyIndex::UIElement_AccessKey, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        18, // First enter property = Microsoft.UI.Xaml.UIElement.KeyboardAccelerators
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        95, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.LinearColorKeyFrame
    {
        KnownPropertyIndex::ColorKeyFrame_KeyTime, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.LinearDoubleKeyFrame
    {
        KnownPropertyIndex::DoubleKeyFrame_KeyTime, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.LinearPointKeyFrame
    {
        KnownPropertyIndex::PointKeyFrame_KeyTime, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.LineGeometry
    {
        KnownPropertyIndex::LineGeometry_EndPoint, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        4, // First enter property = Microsoft.UI.Xaml.Media.Geometry.Transform
        4, // First render property = Microsoft.UI.Xaml.Media.Geometry.Transform
        5, // First object property = Microsoft.UI.Xaml.Media.Geometry.Transform
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.LineSegment
    {
        KnownPropertyIndex::LineSegment_Point, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings
    {
        KnownPropertyIndex::ListViewItemTemplateSettings_DragItemsCount, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.LosingFocusEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.ManipulationStartingRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Matrix3DProjection
    {
        KnownPropertyIndex::Matrix3DProjection_ProjectionMatrix, // First property
        KnownPropertyIndex::Matrix3DProjection_ProjectionMatrix, // Content property
        45, // First enter property = Microsoft.UI.Xaml.Media.Matrix3DProjection.ProjectionMatrix
        37, // First render property = Microsoft.UI.Xaml.Media.Matrix3DProjection.ProjectionMatrix
        41, // First object property = Microsoft.UI.Xaml.Media.Matrix3DProjection.ProjectionMatrix
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.MediaSwapChainElement
    {
        KnownPropertyIndex::UIElement_AccessKey, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        18, // First enter property = Microsoft.UI.Xaml.UIElement.KeyboardAccelerators
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        95, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyout
    {
        KnownPropertyIndex::MenuFlyout_Items, // First property
        KnownPropertyIndex::MenuFlyout_Items, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        23, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.MenuPopupThemeTransition
    {
        KnownPropertyIndex::MenuPopupThemeTransition_ClosedRatio, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        15, // First enter property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        13, // First render property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        17, // First object property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.NullExtension
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames
    {
        KnownPropertyIndex::ObjectAnimationUsingKeyFrames_EnableDependentAnimation, // First property
        KnownPropertyIndex::ObjectAnimationUsingKeyFrames_KeyFrames, // Content property
        46, // First enter property = Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames
        38, // First render property = Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames
        42, // First object property = Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.PanelEx
    {
        KnownPropertyIndex::PanelEx_ActualHeight, // First property
        KnownPropertyIndex::PanelEx_Children, // Content property
        47, // First enter property = Microsoft.UI.Xaml.PanelEx.Height
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        107, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.PaneThemeTransition
    {
        KnownPropertyIndex::PaneThemeTransition_Edge, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        15, // First enter property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        13, // First render property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        17, // First object property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ParallelTimeline
    {
        KnownPropertyIndex::Timeline_AutoReverse, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        14, // First enter property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
        12, // First render property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
        16, // First object property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
        16, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.PathGeometry
    {
        KnownPropertyIndex::PathGeometry_Figures, // First property
        KnownPropertyIndex::PathGeometry_Figures, // Content property
        49, // First enter property = Microsoft.UI.Xaml.Media.PathGeometry.Figures
        39, // First render property = Microsoft.UI.Xaml.Media.PathGeometry.Figures
        43, // First object property = Microsoft.UI.Xaml.Media.PathGeometry.Figures
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.PathIconSource
    {
        KnownPropertyIndex::PathIconSource_Data, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D
    {
        KnownPropertyIndex::PerspectiveTransform3D_Depth, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.PickerFlyoutThemeTransition
    {
        KnownPropertyIndex::PickerFlyoutThemeTransition_OffsetFromCenter, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        15, // First enter property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        13, // First render property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        17, // First object property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection
    {
        KnownPropertyIndex::PlaneProjection_CenterOfRotationX, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        33, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation
    {
        KnownPropertyIndex::PointAnimation_By, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        50, // First enter property = Microsoft.UI.Xaml.Media.Animation.PointAnimation.EasingFunction
        40, // First render property = Microsoft.UI.Xaml.Media.Animation.PointAnimation.EasingFunction
        44, // First object property = Microsoft.UI.Xaml.Media.Animation.PointAnimation.EasingFunction
        21, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames
    {
        KnownPropertyIndex::PointAnimationUsingKeyFrames_EnableDependentAnimation, // First property
        KnownPropertyIndex::PointAnimationUsingKeyFrames_KeyFrames, // Content property
        51, // First enter property = Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames
        41, // First render property = Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames
        45, // First object property = Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames
    {
        KnownPropertyIndex::PointerAnimationUsingKeyFrames_KeyFrames, // First property
        KnownPropertyIndex::PointerAnimationUsingKeyFrames_KeyFrames, // Content property
        52, // First enter property = Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames.KeyFrames
        42, // First render property = Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames.KeyFrames
        46, // First object property = Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames.KeyFrames
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.PointerRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.PolyBezierSegment
    {
        KnownPropertyIndex::PolyBezierSegment_Points, // First property
        KnownPropertyIndex::PolyBezierSegment_Points, // Content property
        53, // First enter property = Microsoft.UI.Xaml.Media.PolyBezierSegment.Points
        43, // First render property = Microsoft.UI.Xaml.Media.PolyBezierSegment.Points
        47, // First object property = Microsoft.UI.Xaml.Media.PolyBezierSegment.Points
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.PolyLineSegment
    {
        KnownPropertyIndex::PolyLineSegment_Points, // First property
        KnownPropertyIndex::PolyLineSegment_Points, // Content property
        54, // First enter property = Microsoft.UI.Xaml.Media.PolyLineSegment.Points
        44, // First render property = Microsoft.UI.Xaml.Media.PolyLineSegment.Points
        48, // First object property = Microsoft.UI.Xaml.Media.PolyLineSegment.Points
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment
    {
        KnownPropertyIndex::PolyQuadraticBezierSegment_Points, // First property
        KnownPropertyIndex::PolyQuadraticBezierSegment_Points, // Content property
        55, // First enter property = Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment.Points
        45, // First render property = Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment.Points
        49, // First object property = Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment.Points
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition
    {
        KnownPropertyIndex::PopupThemeTransition_FromHorizontalOffset, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        15, // First enter property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        13, // First render property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        17, // First object property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.PowerEase
    {
        KnownPropertyIndex::PowerEase_Power, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.PVLStaggerFunction
    {
        KnownPropertyIndex::PVLStaggerFunction_Delay, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.QuadraticBezierSegment
    {
        KnownPropertyIndex::QuadraticBezierSegment_Point1, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.QuadraticEase
    {
        KnownPropertyIndex::EasingFunctionBase_EasingMode, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.QuarticEase
    {
        KnownPropertyIndex::EasingFunctionBase_EasingMode, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.QuinticEase
    {
        KnownPropertyIndex::EasingFunctionBase_EasingMode, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.RectangleGeometry
    {
        KnownPropertyIndex::RectangleGeometry_RadiusX, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        4, // First enter property = Microsoft.UI.Xaml.Media.Geometry.Transform
        4, // First render property = Microsoft.UI.Xaml.Media.Geometry.Transform
        5, // First object property = Microsoft.UI.Xaml.Media.Geometry.Transform
        13, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.RelativeSource
    {
        KnownPropertyIndex::RelativeSource_Mode, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap
    {
        KnownPropertyIndex::RenderTargetBitmap_PixelHeight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ReorderThemeTransition
    {
        KnownPropertyIndex::Transition_GeneratedStaggerFunction, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        15, // First enter property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        13, // First render property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        17, // First object property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeTransition
    {
        KnownPropertyIndex::RepositionThemeTransition_IsStaggeringEnabled, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        15, // First enter property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        13, // First render property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        17, // First object property = Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.RightTappedRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SelectionChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Setter
    {
        KnownPropertyIndex::Setter_Property, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        56, // First enter property = Microsoft.UI.Xaml.Setter.Property
        46, // First render property = Microsoft.UI.Xaml.Setter.Property
        50, // First object property = Microsoft.UI.Xaml.Setter.Property
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.SineEase
    {
        KnownPropertyIndex::EasingFunctionBase_EasingMode, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.SizeChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush
    {
        KnownPropertyIndex::SolidColorBrush_Color, // First property
        KnownPropertyIndex::SolidColorBrush_Color, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        17, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame
    {
        KnownPropertyIndex::SplineColorKeyFrame_KeySpline, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        58, // First enter property = Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame.KeySpline
        48, // First render property = Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame.KeySpline
        53, // First object property = Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame.KeySpline
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame
    {
        KnownPropertyIndex::SplineDoubleKeyFrame_KeySpline, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        59, // First enter property = Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame.KeySpline
        49, // First render property = Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame.KeySpline
        54, // First object property = Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame.KeySpline
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame
    {
        KnownPropertyIndex::SplinePointKeyFrame_KeySpline, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        60, // First enter property = Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame.KeySpline
        50, // First render property = Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame.KeySpline
        55, // First object property = Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame.KeySpline
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.StandardUICommand
    {
        KnownPropertyIndex::StandardUICommand_Kind, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        27, // First enter property = Microsoft.UI.Xaml.Input.XamlUICommand.KeyboardAccelerators
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        15, // Property slot count
    },
    // Microsoft.UI.Xaml.StateTrigger
    {
        KnownPropertyIndex::StateTrigger_IsActive, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.StaticResource
    {
        KnownPropertyIndex::StaticResource_ResourceKey, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.SurfaceImageSource
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSource
    {
        KnownPropertyIndex::SvgImageSource_RasterizePixelHeight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.SwapChainElement
    {
        KnownPropertyIndex::UIElement_AccessKey, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        18, // First enter property = Microsoft.UI.Xaml.UIElement.KeyboardAccelerators
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        95, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SymbolIconSource
    {
        KnownPropertyIndex::SymbolIconSource_Symbol, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.TappedRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.TemplateBinding
    {
        KnownPropertyIndex::TemplateBinding_Property, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        61, // First enter property = Microsoft.UI.Xaml.Data.TemplateBinding.Property
        51, // First render property = Microsoft.UI.Xaml.Data.TemplateBinding.Property
        56, // First object property = Microsoft.UI.Xaml.Data.TemplateBinding.Property
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TextChangedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter
    {
        KnownPropertyIndex::TextHighlighter_Background, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        62, // First enter property = Microsoft.UI.Xaml.Documents.TextHighlighter.Background
        52, // First render property = Microsoft.UI.Xaml.Documents.TextHighlighter.Background
        57, // First object property = Microsoft.UI.Xaml.Documents.TextHighlighter.Background
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.ThemeResource
    {
        KnownPropertyIndex::ThemeResource_ResourceKey, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.ThemeShadow
    {
        KnownPropertyIndex::ThemeShadow_Receivers, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.TileBrush
    {
        KnownPropertyIndex::TileBrush_AlignmentX, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        14, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Transform
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.VectorCollectionView
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.VectorViewCollectionView
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
    {
        KnownPropertyIndex::XamlCompositionBrushBase_FallbackColor, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Windows.Foundation.Object]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Microsoft.UI.Xaml.DependencyObject]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.InputValidationError]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.ICommandBarElement]
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarLightDismissAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotationCollection
    {
        KnownPropertyIndex::AutomationAnnotationCollection_ContentProperty, // First property
        KnownPropertyIndex::AutomationAnnotationCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotationCollection
    {
        KnownPropertyIndex::AutomationPeerAnnotationCollection_ContentProperty, // First property
        KnownPropertyIndex::AutomationPeerAnnotationCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerCollection
    {
        KnownPropertyIndex::AutomationPeerCollection_ContentProperty, // First property
        KnownPropertyIndex::AutomationPeerCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.Binding
    {
        KnownPropertyIndex::Binding_Converter, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        19, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage
    {
        KnownPropertyIndex::BitmapImage_AutoPlay, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Border
    {
        KnownPropertyIndex::Border_Background, // First property
        KnownPropertyIndex::Border_Child, // Content property
        64, // First enter property = Microsoft.UI.Xaml.Controls.Border.Background
        54, // First render property = Microsoft.UI.Xaml.Controls.Border.Background
        60, // First object property = Microsoft.UI.Xaml.Controls.Border.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.BrushCollection
    {
        KnownPropertyIndex::BrushCollection_ContentProperty, // First property
        KnownPropertyIndex::BrushCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewBaseItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection
    {
        KnownPropertyIndex::ColorKeyFrameCollection_ContentProperty, // First property
        KnownPropertyIndex::ColorKeyFrameCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection
    {
        KnownPropertyIndex::ColumnDefinitionCollection_ContentProperty, // First property
        KnownPropertyIndex::ColumnDefinitionCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxLightDismissAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform
    {
        KnownPropertyIndex::CompositeTransform_CenterX, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        26, // Property slot count
    },
    // Microsoft.UI.Xaml.ConnectedAnimationRoot
    {
        KnownPropertyIndex::FrameworkElement_ActualHeight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        39, // First enter property = Microsoft.UI.Xaml.FrameworkElement.Height
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        133, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter
    {
        KnownPropertyIndex::ContentPresenter_Background, // First property
        KnownPropertyIndex::ContentPresenter_Content, // Content property
        66, // First enter property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
        56, // First render property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
        62, // First object property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplate
        161, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Control
    {
        KnownPropertyIndex::Control_Background, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        160, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.DisplayMemberTemplate
    {
        KnownPropertyIndex::DisplayMemberTemplate_DisplayMemberPath, // First property
        KnownPropertyIndex::FrameworkTemplate_Template, // Content property
        3, // First enter property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        3, // First render property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        4, // First object property = Microsoft.UI.Xaml.FrameworkTemplate.Template
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.DoubleCollection
    {
        KnownPropertyIndex::DoubleCollection_ContentProperty, // First property
        KnownPropertyIndex::DoubleCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection
    {
        KnownPropertyIndex::DoubleKeyFrameCollection_ContentProperty, // First property
        KnownPropertyIndex::DoubleKeyFrameCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DragItemThemeAnimation
    {
        KnownPropertyIndex::DragItemThemeAnimation_TargetName, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation
    {
        KnownPropertyIndex::DragOverThemeAnimation_Direction, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        20, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation
    {
        KnownPropertyIndex::DrillInThemeAnimation_EntranceTarget, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        21, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation
    {
        KnownPropertyIndex::DrillOutThemeAnimation_EntranceTarget, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        21, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation
    {
        KnownPropertyIndex::DropTargetItemThemeAnimation_TargetName, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.FaceplateContentPresenterAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.FadeInThemeAnimation
    {
        KnownPropertyIndex::FadeInThemeAnimation_TargetName, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.FadeOutThemeAnimation
    {
        KnownPropertyIndex::FadeOutThemeAnimation_TargetName, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.FloatCollection
    {
        KnownPropertyIndex::FloatCollection_ContentProperty, // First property
        KnownPropertyIndex::FloatCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.FullWindowMediaRootAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.GeometryCollection
    {
        KnownPropertyIndex::GeometryCollection_ContentProperty, // First property
        KnownPropertyIndex::GeometryCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.Glyphs
    {
        KnownPropertyIndex::Glyphs_ColorFontPaletteIndex, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        75, // First enter property = Microsoft.UI.Xaml.Documents.Glyphs.Fill
        65, // First render property = Microsoft.UI.Xaml.Documents.Glyphs.Fill
        72, // First object property = Microsoft.UI.Xaml.Documents.Glyphs.Fill
        143, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.GradientStopCollection
    {
        KnownPropertyIndex::GradientStopCollection_ContentProperty, // First property
        KnownPropertyIndex::GradientStopCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.HubSectionCollection
    {
        KnownPropertyIndex::HubSectionCollection_ContentProperty, // First property
        KnownPropertyIndex::HubSectionCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.HWCompMediaNode
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.HWCompRenderDataNode
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.HWCompSwapChainNode
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.HWRedirectedCompTreeNodeWinRT
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.IconElement
    {
        KnownPropertyIndex::IconElement_Foreground, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        77, // First enter property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
        66, // First render property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
        73, // First object property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
        134, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Image
    {
        KnownPropertyIndex::Image_NineGrid, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        78, // First enter property = Microsoft.UI.Xaml.Controls.Image.Source
        67, // First render property = Microsoft.UI.Xaml.Controls.Image.Source
        74, // First object property = Microsoft.UI.Xaml.Controls.Image.Source
        136, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.ImageBrush
    {
        KnownPropertyIndex::ImageBrush_ImageSource, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        79, // First enter property = Microsoft.UI.Xaml.Media.ImageBrush.ImageSource
        68, // First render property = Microsoft.UI.Xaml.Media.ImageBrush.ImageSource
        75, // First object property = Microsoft.UI.Xaml.Media.ImageBrush.ImageSource
        15, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.InlineUIContainer
    {
        KnownPropertyIndex::InlineUIContainer_Child, // First property
        KnownPropertyIndex::InlineUIContainer_Child, // Content property
        80, // First enter property = Microsoft.UI.Xaml.Documents.InlineUIContainer.Child
        69, // First render property = Microsoft.UI.Xaml.Documents.InlineUIContainer.Child
        76, // First object property = Microsoft.UI.Xaml.Documents.InlineUIContainer.Child
        27, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.InputScopeNameCollection
    {
        KnownPropertyIndex::InputScopeNameCollection_ContentProperty, // First property
        KnownPropertyIndex::InputScopeNameCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter
    {
        KnownPropertyIndex::ItemsPresenter_Footer, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        81, // First enter property = Microsoft.UI.Xaml.Controls.ItemsPresenter.ItemsPanel
        70, // First render property = Microsoft.UI.Xaml.Controls.ItemsPresenter.ItemsPanel
        77, // First object property = Microsoft.UI.Xaml.Controls.ItemsPresenter.ItemsPanel
        141, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.IterableCollectionView
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorCollection
    {
        KnownPropertyIndex::KeyboardAcceleratorCollection_ContentProperty, // First property
        KnownPropertyIndex::KeyboardAcceleratorCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.LandmarkTargetAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush
    {
        KnownPropertyIndex::LinearGradientBrush_EndPoint, // First property
        KnownPropertyIndex::GradientBrush_GradientStops, // Content property
        44, // First enter property = Microsoft.UI.Xaml.Media.GradientBrush.GradientStops
        36, // First render property = Microsoft.UI.Xaml.Media.GradientBrush.GradientStops
        40, // First object property = Microsoft.UI.Xaml.Media.GradientBrush.GradientStops
        27, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.LineBreak
    {
        KnownPropertyIndex::TextElement_AccessKey, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        12, // First enter property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        10, // First render property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        14, // First object property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        26, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemSecondaryChrome
    {
        KnownPropertyIndex::FrameworkElement_ActualHeight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        39, // First enter property = Microsoft.UI.Xaml.FrameworkElement.Height
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        133, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.MatrixTransform
    {
        KnownPropertyIndex::MatrixTransform_Matrix, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        82, // First enter property = Microsoft.UI.Xaml.Media.MatrixTransform.Matrix
        71, // First render property = Microsoft.UI.Xaml.Media.MatrixTransform.Matrix
        78, // First object property = Microsoft.UI.Xaml.Media.MatrixTransform.Matrix
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.MediaBase
    {
        KnownPropertyIndex::FrameworkElement_ActualHeight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        39, // First enter property = Microsoft.UI.Xaml.FrameworkElement.Height
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        133, // Property slot count
    },
    // Microsoft.UI.Xaml.MediaFailedRoutedEventArgs
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerPresenter
    {
        KnownPropertyIndex::MediaPlayerPresenter_IsFullWindow, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        39, // First enter property = Microsoft.UI.Xaml.FrameworkElement.Height
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        136, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItemBaseCollection
    {
        KnownPropertyIndex::MenuFlyoutItemBaseCollection_ContentProperty, // First property
        KnownPropertyIndex::MenuFlyoutItemBaseCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutSubItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.NamedContainerAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection
    {
        KnownPropertyIndex::ObjectKeyFrameCollection_ContentProperty, // First property
        KnownPropertyIndex::ObjectKeyFrameCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Panel
    {
        KnownPropertyIndex::Panel_Background, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.Paragraph
    {
        KnownPropertyIndex::Paragraph_Inlines, // First property
        KnownPropertyIndex::Paragraph_Inlines, // Content property
        84, // First enter property = Microsoft.UI.Xaml.Documents.Paragraph.Inlines
        73, // First render property = Microsoft.UI.Xaml.Documents.Paragraph.Inlines
        80, // First object property = Microsoft.UI.Xaml.Documents.Paragraph.Inlines
        33, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveCollection
    {
        KnownPropertyIndex::ParametricCurveCollection_ContentProperty, // First property
        KnownPropertyIndex::ParametricCurveCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegmentCollection
    {
        KnownPropertyIndex::ParametricCurveSegmentCollection_ContentProperty, // First property
        KnownPropertyIndex::ParametricCurveSegmentCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.PathFigureCollection
    {
        KnownPropertyIndex::PathFigureCollection_ContentProperty, // First property
        KnownPropertyIndex::PathFigureCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.PathSegmentCollection
    {
        KnownPropertyIndex::PathSegmentCollection_ContentProperty, // First property
        KnownPropertyIndex::PathSegmentCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.PointCollection
    {
        KnownPropertyIndex::PointCollection_ContentProperty, // First property
        KnownPropertyIndex::PointCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.PointerCollection
    {
        KnownPropertyIndex::PointerCollection_ContentProperty, // First property
        KnownPropertyIndex::PointerCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.PointerDownThemeAnimation
    {
        KnownPropertyIndex::PointerDownThemeAnimation_TargetName, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrameCollection
    {
        KnownPropertyIndex::PointerKeyFrameCollection_ContentProperty, // First property
        KnownPropertyIndex::PointerKeyFrameCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.PointerUpThemeAnimation
    {
        KnownPropertyIndex::PointerUpThemeAnimation_TargetName, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection
    {
        KnownPropertyIndex::PointKeyFrameCollection_ContentProperty, // First property
        KnownPropertyIndex::PointKeyFrameCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation
    {
        KnownPropertyIndex::PopInThemeAnimation_FromHorizontalOffset, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        20, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.PopOutThemeAnimation
    {
        KnownPropertyIndex::PopOutThemeAnimation_TargetName, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup
    {
        KnownPropertyIndex::Popup_ActualPlacement, // First property
        KnownPropertyIndex::Popup_Child, // Content property
        85, // First enter property = Microsoft.UI.Xaml.Controls.Primitives.Popup.ChildTransitions
        74, // First render property = Microsoft.UI.Xaml.Controls.Primitives.Popup.ChildTransitions
        81, // First object property = Microsoft.UI.Xaml.Controls.Primitives.Popup.ChildTransitions
        152, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.PopupAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.PopupRootAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.RepeatBehavior
    {
        KnownPropertyIndex::RepeatBehavior_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation
    {
        KnownPropertyIndex::RepositionThemeAnimation_FromHorizontalOffset, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        20, // Property slot count
    },
    // Microsoft.UI.Xaml.ResourceDictionary
    {
        KnownPropertyIndex::ResourceDictionary_ContentProperty, // First property
        KnownPropertyIndex::ResourceDictionary_ContentProperty, // Content property
        87, // First enter property = Microsoft.UI.Xaml.ResourceDictionary.MergedDictionaries
        76, // First render property = Microsoft.UI.Xaml.ResourceDictionary.MergedDictionaries
        83, // First object property = Microsoft.UI.Xaml.ResourceDictionary.MergedDictionaries
        13, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.ResourceDictionaryCollection
    {
        KnownPropertyIndex::ResourceDictionaryCollection_ContentProperty, // First property
        KnownPropertyIndex::ResourceDictionaryCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock
    {
        KnownPropertyIndex::RichTextBlock_Blocks, // First property
        KnownPropertyIndex::RichTextBlock_Blocks, // Content property
        89, // First enter property = Microsoft.UI.Xaml.Controls.RichTextBlock.Blocks
        78, // First render property = Microsoft.UI.Xaml.Controls.RichTextBlock.Blocks
        85, // First object property = Microsoft.UI.Xaml.Controls.RichTextBlock.Blocks
        164, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow
    {
        KnownPropertyIndex::RichTextBlockOverflow_HasOverflowContent, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        94, // First enter property = Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.OverflowContentTarget
        83, // First render property = Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.OverflowContentTarget
        91, // First object property = Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.OverflowContentTarget
        138, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.RotateTransform
    {
        KnownPropertyIndex::RotateTransform_Angle, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        14, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.RowDefinitionCollection
    {
        KnownPropertyIndex::RowDefinitionCollection_ContentProperty, // First property
        KnownPropertyIndex::RowDefinitionCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.Run
    {
        KnownPropertyIndex::Run_FlowDirection, // First property
        KnownPropertyIndex::Run_Text, // Content property
        12, // First enter property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        10, // First render property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        14, // First object property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
        28, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform
    {
        KnownPropertyIndex::ScaleTransform_CenterX, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        16, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer
    {
        KnownPropertyIndex::ItemAutomationPeer_Item, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.SetterBaseCollection
    {
        KnownPropertyIndex::SetterBaseCollection_ContentProperty, // First property
        KnownPropertyIndex::SetterBaseCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Shapes.Shape
    {
        KnownPropertyIndex::Shape_Fill, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        95, // First enter property = Microsoft.UI.Xaml.Shapes.Shape.Fill
        84, // First render property = Microsoft.UI.Xaml.Shapes.Shape.Fill
        92, // First object property = Microsoft.UI.Xaml.Shapes.Shape.Fill
        145, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.SkewTransform
    {
        KnownPropertyIndex::SkewTransform_AngleX, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        16, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.Span
    {
        KnownPropertyIndex::Span_Inlines, // First property
        KnownPropertyIndex::Span_Inlines, // Content property
        96, // First enter property = Microsoft.UI.Xaml.Documents.Span.Inlines
        85, // First render property = Microsoft.UI.Xaml.Documents.Span.Inlines
        93, // First object property = Microsoft.UI.Xaml.Documents.Span.Inlines
        27, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation
    {
        KnownPropertyIndex::SplitCloseThemeAnimation_ClosedLength, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        28, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation
    {
        KnownPropertyIndex::SplitOpenThemeAnimation_ClosedLength, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        28, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.SplitViewLightDismissAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.SplitViewPaneAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.StateTriggerCollection
    {
        KnownPropertyIndex::StateTriggerCollection_ContentProperty, // First property
        KnownPropertyIndex::StateTriggerCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard
    {
        KnownPropertyIndex::Storyboard_Children, // First property
        KnownPropertyIndex::Storyboard_Children, // Content property
        97, // First enter property = Microsoft.UI.Xaml.Media.Animation.Storyboard.Children
        86, // First render property = Microsoft.UI.Xaml.Media.Animation.Storyboard.Children
        94, // First object property = Microsoft.UI.Xaml.Media.Animation.Storyboard.Children
        18, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.StoryboardCollection
    {
        KnownPropertyIndex::StoryboardCollection_ContentProperty, // First property
        KnownPropertyIndex::StoryboardCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation
    {
        KnownPropertyIndex::SwipeBackThemeAnimation_FromHorizontalOffset, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        20, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation
    {
        KnownPropertyIndex::SwipeHintThemeAnimation_TargetName, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        20, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TextBlock
    {
        KnownPropertyIndex::TextBlock_CharacterSpacing, // First property
        KnownPropertyIndex::TextBlock_Inlines, // Content property
        98, // First enter property = Microsoft.UI.Xaml.Controls.TextBlock.FontFamily
        87, // First render property = Microsoft.UI.Xaml.Controls.TextBlock.FontFamily
        95, // First object property = Microsoft.UI.Xaml.Controls.TextBlock.FontFamily
        162, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextBoxBaseAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.TextBoxView
    {
        KnownPropertyIndex::FrameworkElement_ActualHeight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        39, // First enter property = Microsoft.UI.Xaml.FrameworkElement.Height
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        133, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection
    {
        KnownPropertyIndex::TextElementCollection_ContentProperty, // First property
        KnownPropertyIndex::TextElementCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighterCollection
    {
        KnownPropertyIndex::TextHighlighterCollection_ContentProperty, // First property
        KnownPropertyIndex::TextHighlighterCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.TextRangeCollection
    {
        KnownPropertyIndex::TextRangeCollection_ContentProperty, // First property
        KnownPropertyIndex::TextRangeCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ThemeAnimationBase
    {
        KnownPropertyIndex::DynamicTimeline_Children, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        34, // First enter property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        30, // First render property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        34, // First object property = Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
        17, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.TimelineCollection
    {
        KnownPropertyIndex::TimelineCollection_ContentProperty, // First property
        KnownPropertyIndex::TimelineCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToolTipAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.TransformCollection
    {
        KnownPropertyIndex::TransformCollection_ContentProperty, // First property
        KnownPropertyIndex::TransformCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.TransformGroup
    {
        KnownPropertyIndex::TransformGroup_Children, // First property
        KnownPropertyIndex::TransformGroup_Children, // Content property
        101, // First enter property = Microsoft.UI.Xaml.Media.TransformGroup.Children
        90, // First render property = Microsoft.UI.Xaml.Media.TransformGroup.Children
        99, // First object property = Microsoft.UI.Xaml.Media.TransformGroup.Children
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionCollection
    {
        KnownPropertyIndex::TransitionCollection_ContentProperty, // First property
        KnownPropertyIndex::TransitionCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.TranslateTransform
    {
        KnownPropertyIndex::TranslateTransform_X, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        12, // Property slot count
    },
    // Microsoft.UI.Xaml.TriggerActionCollection
    {
        KnownPropertyIndex::TriggerActionCollection_ContentProperty, // First property
        KnownPropertyIndex::TriggerActionCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.TriggerCollection
    {
        KnownPropertyIndex::TriggerCollection_ContentProperty, // First property
        KnownPropertyIndex::TriggerCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.UIElementCollection
    {
        KnownPropertyIndex::UIElementCollection_ContentProperty, // First property
        KnownPropertyIndex::UIElementCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.UIElementWeakCollection
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Viewbox
    {
        KnownPropertyIndex::Viewbox_Child, // First property
        KnownPropertyIndex::Viewbox_Child, // Content property
        39, // First enter property = Microsoft.UI.Xaml.FrameworkElement.Height
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        136, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.VisualStateCollection
    {
        KnownPropertyIndex::VisualStateCollection_ContentProperty, // First property
        KnownPropertyIndex::VisualStateCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection
    {
        KnownPropertyIndex::VisualStateGroupCollection_ActiveStoryboards, // First property
        KnownPropertyIndex::VisualStateGroupCollection_ContentProperty, // Content property
        102, // First enter property = Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveStoryboards
        91, // First render property = Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveStoryboards
        100, // First object property = Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveStoryboards
        14, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.VisualTransitionCollection
    {
        KnownPropertyIndex::VisualTransitionCollection_ContentProperty, // First property
        KnownPropertyIndex::VisualTransitionCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap
    {
        KnownPropertyIndex::BitmapSource_PixelHeight, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.XamlLightCollection
    {
        KnownPropertyIndex::XamlLightCollection_ContentProperty, // First property
        KnownPropertyIndex::XamlLightCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection`1[Microsoft.UI.Xaml.Documents.Inline]
    {
        KnownPropertyIndex::TextElementCollection_ContentProperty, // First property
        KnownPropertyIndex::TextElementCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection`1[Microsoft.UI.Xaml.Documents.Block]
    {
        KnownPropertyIndex::TextElementCollection_ContentProperty, // First property
        KnownPropertyIndex::TextElementCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.AppBarSeparator
    {
        KnownPropertyIndex::AppBarSeparator_DynamicOverflowOrder, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        164, // Property slot count
    },
    // Microsoft.UI.Xaml.BasedOnSetterCollection
    {
        KnownPropertyIndex::SetterBaseCollection_ContentProperty, // First property
        KnownPropertyIndex::SetterBaseCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.BitmapIcon
    {
        KnownPropertyIndex::BitmapIcon_ShowAsMonochrome, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        77, // First enter property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
        66, // First render property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
        73, // First object property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
        136, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.Bold
    {
        KnownPropertyIndex::Span_Inlines, // First property
        KnownPropertyIndex::Span_Inlines, // Content property
        96, // First enter property = Microsoft.UI.Xaml.Documents.Span.Inlines
        85, // First render property = Microsoft.UI.Xaml.Documents.Span.Inlines
        93, // First object property = Microsoft.UI.Xaml.Documents.Span.Inlines
        27, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker
    {
        KnownPropertyIndex::CalendarDatePicker_CalendarIdentifier, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        179, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarScrollViewerAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CalendarView
    {
        KnownPropertyIndex::CalendarView_BlackoutBackground, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        106, // First enter property = Microsoft.UI.Xaml.Controls.CalendarView.BlackoutBackground
        95, // First render property = Microsoft.UI.Xaml.Controls.CalendarView.BlackoutBackground
        104, // First object property = Microsoft.UI.Xaml.Controls.CalendarView.BlackoutBackground
        237, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewBaseItem
    {
        KnownPropertyIndex::Control_Background, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        160, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewDayItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Canvas
    {
        KnownPropertyIndex::Canvas_Left, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.CaretBrowsingCaret
    {
        KnownPropertyIndex::Panel_Background, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.ColorPaletteResources
    {
        KnownPropertyIndex::ColorPaletteResources_Accent, // First property
        KnownPropertyIndex::ResourceDictionary_ContentProperty, // Content property
        87, // First enter property = Microsoft.UI.Xaml.ResourceDictionary.MergedDictionaries
        76, // First render property = Microsoft.UI.Xaml.ResourceDictionary.MergedDictionaries
        83, // First object property = Microsoft.UI.Xaml.ResourceDictionary.MergedDictionaries
        40, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer
    {
        KnownPropertyIndex::ItemAutomationPeer_Item, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CommandBarElementCollection
    {
        KnownPropertyIndex::CommandBarElementCollection_ContentProperty, // First property
        KnownPropertyIndex::CommandBarElementCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CommandingContainer
    {
        KnownPropertyIndex::CommandingContainer_CommandingContainer, // First property
        KnownPropertyIndex::ContentPresenter_Content, // Content property
        66, // First enter property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
        56, // First render property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
        62, // First object property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplate
        162, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ContentControl
    {
        KnownPropertyIndex::ContentControl_Content, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        165, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.DatePicker
    {
        KnownPropertyIndex::DatePicker_CalendarIdentifier, // First property
        KnownPropertyIndex::DatePicker_Header, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        176, // Property slot count
    },
    // Microsoft.UI.Xaml.DependencyObjectCollection
    {
        KnownPropertyIndex::DependencyObjectCollection_ContentProperty, // First property
        KnownPropertyIndex::DependencyObjectCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Shapes.Ellipse
    {
        KnownPropertyIndex::Shape_Fill, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        95, // First enter property = Microsoft.UI.Xaml.Shapes.Shape.Fill
        84, // First render property = Microsoft.UI.Xaml.Shapes.Shape.Fill
        92, // First object property = Microsoft.UI.Xaml.Shapes.Shape.Fill
        145, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer
    {
        KnownPropertyIndex::ItemAutomationPeer_Item, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.FontIcon
    {
        KnownPropertyIndex::FontIcon_FontFamily, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        147, // First enter property = Microsoft.UI.Xaml.Controls.FontIcon.FontFamily
        136, // First render property = Microsoft.UI.Xaml.Controls.FontIcon.FontFamily
        147, // First object property = Microsoft.UI.Xaml.Controls.FontIcon.FontFamily
        141, // Property slot count
    },
    // Microsoft.UI.Xaml.FullWindowMediaRoot
    {
        KnownPropertyIndex::Panel_Background, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Grid
    {
        KnownPropertyIndex::Grid_BackgroundSizing, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        148, // First enter property = Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
        137, // First render property = Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
        148, // First object property = Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
        151, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Hub
    {
        KnownPropertyIndex::Hub_DefaultSectionIndex, // First property
        KnownPropertyIndex::Hub_Sections, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        170, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.HubSection
    {
        KnownPropertyIndex::HubSection_ContentTemplate, // First property
        KnownPropertyIndex::HubSection_ContentTemplate, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        164, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.HWWindowedPopupCompTreeNodeWinRT
    {
        KnownPropertyIndex::DependencyObject_Column, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        8, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink
    {
        KnownPropertyIndex::Hyperlink_ElementSoundMode, // First property
        KnownPropertyIndex::Span_Inlines, // Content property
        96, // First enter property = Microsoft.UI.Xaml.Documents.Span.Inlines
        85, // First render property = Microsoft.UI.Xaml.Documents.Span.Inlines
        93, // First object property = Microsoft.UI.Xaml.Documents.Span.Inlines
        41, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.IconSourceElement
    {
        KnownPropertyIndex::IconSourceElement_IconSource, // First property
        KnownPropertyIndex::IconSourceElement_IconSource, // Content property
        150, // First enter property = Microsoft.UI.Xaml.Controls.IconSourceElement.IconSource
        139, // First render property = Microsoft.UI.Xaml.Controls.IconSourceElement.IconSource
        150, // First object property = Microsoft.UI.Xaml.Controls.IconSourceElement.IconSource
        135, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.Italic
    {
        KnownPropertyIndex::Span_Inlines, // First property
        KnownPropertyIndex::Span_Inlines, // Content property
        96, // First enter property = Microsoft.UI.Xaml.Documents.Span.Inlines
        85, // First render property = Microsoft.UI.Xaml.Documents.Span.Inlines
        93, // First object property = Microsoft.UI.Xaml.Documents.Span.Inlines
        27, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ItemCollection
    {
        KnownPropertyIndex::ItemCollection_ContentProperty, // First property
        KnownPropertyIndex::ItemCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl
    {
        KnownPropertyIndex::ItemsControl_DisplayMemberPath, // First property
        KnownPropertyIndex::ItemsControl_Items, // Content property
        151, // First enter property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        140, // First render property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        151, // First object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        174, // Property slot count
    },
    // Microsoft.UI.Xaml.Shapes.Line
    {
        KnownPropertyIndex::Line_X1, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        95, // First enter property = Microsoft.UI.Xaml.Shapes.Shape.Fill
        84, // First render property = Microsoft.UI.Xaml.Shapes.Shape.Fill
        92, // First object property = Microsoft.UI.Xaml.Shapes.Shape.Fill
        149, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer
    {
        KnownPropertyIndex::ItemAutomationPeer_Item, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseItemDataAutomationPeer
    {
        KnownPropertyIndex::ItemAutomationPeer_Item, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemPresenter
    {
        KnownPropertyIndex::ContentPresenter_Background, // First property
        KnownPropertyIndex::ContentPresenter_Content, // Content property
        66, // First enter property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
        56, // First render property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
        62, // First object property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplate
        161, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement
    {
        KnownPropertyIndex::MediaPlayerElement_AreTransportControlsEnabled, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        154, // First enter property = Microsoft.UI.Xaml.Controls.MediaPlayerElement.AutoPlay
        143, // First render property = Microsoft.UI.Xaml.Controls.MediaPlayerElement.PosterSource
        155, // First object property = Microsoft.UI.Xaml.Controls.MediaPlayerElement.PosterSource
        168, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls
    {
        KnownPropertyIndex::MediaTransportControls_FastPlayFallbackBehaviour, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        185, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase
    {
        KnownPropertyIndex::Control_Background, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        160, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ModernCollectionBasePanel
    {
        KnownPropertyIndex::ModernCollectionBasePanel_AreStickyGroupHeadersEnabledBase, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        143, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox
    {
        KnownPropertyIndex::PasswordBox_CanPasteClipboardContent, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        157, // First enter property = Microsoft.UI.Xaml.Controls.PasswordBox.InputScope
        144, // First render property = Microsoft.UI.Xaml.Controls.PasswordBox.InputScope
        156, // First object property = Microsoft.UI.Xaml.Controls.PasswordBox.InputScope
        183, // Property slot count
    },
    // Microsoft.UI.Xaml.Shapes.Path
    {
        KnownPropertyIndex::Path_Data, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        159, // First enter property = Microsoft.UI.Xaml.Shapes.Path.Data
        146, // First render property = Microsoft.UI.Xaml.Shapes.Path.Data
        158, // First object property = Microsoft.UI.Xaml.Shapes.Path.Data
        146, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.PathIcon
    {
        KnownPropertyIndex::PathIcon_Data, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        160, // First enter property = Microsoft.UI.Xaml.Controls.PathIcon.Data
        147, // First render property = Microsoft.UI.Xaml.Controls.PathIcon.Data
        159, // First object property = Microsoft.UI.Xaml.Controls.PathIcon.Data
        135, // Property slot count
    },
    // Microsoft.UI.Xaml.Shapes.Polygon
    {
        KnownPropertyIndex::Polygon_FillRule, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        161, // First enter property = Microsoft.UI.Xaml.Shapes.Polygon.Points
        148, // First render property = Microsoft.UI.Xaml.Shapes.Polygon.Points
        160, // First object property = Microsoft.UI.Xaml.Shapes.Polygon.Points
        147, // Property slot count
    },
    // Microsoft.UI.Xaml.Shapes.Polyline
    {
        KnownPropertyIndex::Polyline_FillRule, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        162, // First enter property = Microsoft.UI.Xaml.Shapes.Polyline.Points
        149, // First render property = Microsoft.UI.Xaml.Shapes.Polyline.Points
        161, // First object property = Microsoft.UI.Xaml.Shapes.Polyline.Points
        147, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase
    {
        KnownPropertyIndex::RangeBase_LargeChange, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        165, // Property slot count
    },
    // Microsoft.UI.Xaml.Shapes.Rectangle
    {
        KnownPropertyIndex::Rectangle_RadiusX, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        95, // First enter property = Microsoft.UI.Xaml.Shapes.Shape.Fill
        84, // First render property = Microsoft.UI.Xaml.Shapes.Shape.Fill
        92, // First object property = Microsoft.UI.Xaml.Shapes.Shape.Fill
        147, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel
    {
        KnownPropertyIndex::RelativePanel_Above, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        147, // Property slot count
    },
    // Microsoft.UI.Xaml.RenderTargetBitmapRoot
    {
        KnownPropertyIndex::Panel_Background, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox
    {
        KnownPropertyIndex::RichEditBox_AcceptsReturn, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        163, // First enter property = Microsoft.UI.Xaml.Controls.RichEditBox.InputScope
        150, // First render property = Microsoft.UI.Xaml.Controls.RichEditBox.InputScope
        162, // First object property = Microsoft.UI.Xaml.Controls.RichEditBox.InputScope
        186, // Property slot count
    },
    // Microsoft.UI.Xaml.RootVisual
    {
        KnownPropertyIndex::Panel_Background, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ScrollContentPresenter
    {
        KnownPropertyIndex::ScrollContentPresenter_CanContentRenderOutsideBounds, // First property
        KnownPropertyIndex::ContentPresenter_Content, // Content property
        66, // First enter property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
        56, // First render property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
        62, // First object property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplate
        163, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom
    {
        KnownPropertyIndex::SemanticZoom_CanChangeViews, // First property
        KnownPropertyIndex::SemanticZoom_ZoomedInView, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        165, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SplitView
    {
        KnownPropertyIndex::SplitView_CompactPaneLength, // First property
        KnownPropertyIndex::SplitView_Content, // Content property
        166, // First enter property = Microsoft.UI.Xaml.Controls.SplitView.TemplateSettings
        153, // First render property = Microsoft.UI.Xaml.Controls.SplitView.TemplateSettings
        165, // First object property = Microsoft.UI.Xaml.Controls.SplitView.TemplateSettings
        170, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.StackPanel
    {
        KnownPropertyIndex::StackPanel_AreScrollSnapPointsRegular, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        150, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SymbolIcon
    {
        KnownPropertyIndex::SymbolIcon_Symbol, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        77, // First enter property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
        66, // First render property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
        73, // First object property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
        135, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TextBox
    {
        KnownPropertyIndex::TextBox_AcceptsReturn, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        167, // First enter property = Microsoft.UI.Xaml.Controls.TextBox.InputScope
        154, // First render property = Microsoft.UI.Xaml.Controls.TextBox.InputScope
        166, // First object property = Microsoft.UI.Xaml.Controls.TextBox.InputScope
        201, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.TextBoxBase
    {
        KnownPropertyIndex::Control_Background, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        160, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Thumb
    {
        KnownPropertyIndex::Thumb_IsDragging, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        161, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.TickBar
    {
        KnownPropertyIndex::TickBar_Fill, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        143, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.TimePicker
    {
        KnownPropertyIndex::TimePicker_ClockIdentifier, // First property
        KnownPropertyIndex::TimePicker_Header, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        168, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch
    {
        KnownPropertyIndex::ToggleSwitch_Header, // First property
        KnownPropertyIndex::ToggleSwitch_Header, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        169, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.Underline
    {
        KnownPropertyIndex::Span_Inlines, // First property
        KnownPropertyIndex::Span_Inlines, // Content property
        96, // First enter property = Microsoft.UI.Xaml.Documents.Span.Inlines
        85, // First render property = Microsoft.UI.Xaml.Documents.Span.Inlines
        93, // First object property = Microsoft.UI.Xaml.Documents.Span.Inlines
        27, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.UserControl
    {
        KnownPropertyIndex::UserControl_Content, // First property
        KnownPropertyIndex::UserControl_Content, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        161, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.ValidationErrorsCollection
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        9, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid
    {
        KnownPropertyIndex::VariableSizedWrapGrid_ColumnSpan, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        148, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingPanel
    {
        KnownPropertyIndex::Panel_Background, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.Hosting.XamlIslandRoot
    {
        KnownPropertyIndex::Panel_Background, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.XamlIslandRootCollection
    {
        KnownPropertyIndex::Panel_Background, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.AppBar
    {
        KnownPropertyIndex::AppBar_ClosedDisplayMode, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        170, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.AppBarElementContainer
    {
        KnownPropertyIndex::AppBarElementContainer_DynamicOverflowOrder, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        169, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.AppBarLightDismiss
    {
        KnownPropertyIndex::Grid_BackgroundSizing, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        148, // First enter property = Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
        137, // First render property = Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
        148, // First object property = Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
        151, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox
    {
        KnownPropertyIndex::AutoSuggestBox_AutoMaximizeSuggestionArea, // First property
        KnownPropertyIndex::ItemsControl_Items, // Content property
        151, // First enter property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        140, // First render property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        151, // First object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        194, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.BlockCollection
    {
        KnownPropertyIndex::BlockCollection_ContentProperty, // First property
        KnownPropertyIndex::BlockCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
    {
        KnownPropertyIndex::ButtonBase_ClickMode, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        170, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel
    {
        KnownPropertyIndex::CalendarPanel_CacheLength, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        150, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDayItem
    {
        KnownPropertyIndex::CalendarViewDayItem_Date, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        162, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewItem
    {
        KnownPropertyIndex::CalendarViewItem_Date, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        161, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel
    {
        KnownPropertyIndex::Panel_Background, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxLightDismiss
    {
        KnownPropertyIndex::Canvas_Left, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CommandBarOverflowPresenter
    {
        KnownPropertyIndex::ItemsControl_DisplayMemberPath, // First property
        KnownPropertyIndex::ItemsControl_Items, // Content property
        151, // First enter property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        140, // First render property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        151, // First object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        174, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog
    {
        KnownPropertyIndex::ContentDialog_CloseButtonCommand, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        183, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.FlyoutPresenter
    {
        KnownPropertyIndex::FlyoutPresenter_IsDefaultShadowEnabled, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        166, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Frame
    {
        KnownPropertyIndex::Frame_BackStack, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        174, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer
    {
        KnownPropertyIndex::ItemAutomationPeer_Item, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter
    {
        KnownPropertyIndex::GridViewItemPresenter_CheckBrush, // First property
        KnownPropertyIndex::ContentPresenter_Content, // Content property
        170, // First enter property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckBrush
        157, // First render property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckBrush
        169, // First object property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckBrush
        183, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.GroupItem
    {
        KnownPropertyIndex::ContentControl_Content, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        165, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.InlineCollection
    {
        KnownPropertyIndex::InlineCollection_ContentProperty, // First property
        KnownPropertyIndex::InlineCollection_ContentProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel
    {
        KnownPropertyIndex::ItemsStackPanel_AreStickyGroupHeadersEnabled, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        149, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid
    {
        KnownPropertyIndex::ItemsWrapGrid_AreStickyGroupHeadersEnabled, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        151, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem
    {
        KnownPropertyIndex::ContentControl_Content, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        165, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer
    {
        KnownPropertyIndex::ItemAutomationPeer_Item, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        11, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxBorderBrush, // First property
        KnownPropertyIndex::ContentPresenter_Content, // Content property
        182, // First enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBorderBrush
        169, // First render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBorderBrush
        181, // First object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBorderBrush
        220, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem
    {
        KnownPropertyIndex::MenuFlyoutItem_Command, // First property
        KnownPropertyIndex::MenuFlyoutItem_Text, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        167, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter
    {
        KnownPropertyIndex::MenuFlyoutPresenter_IsDefaultShadowEnabled, // First property
        KnownPropertyIndex::ItemsControl_Items, // Content property
        151, // First enter property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        140, // First render property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        151, // First object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        177, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSeparator
    {
        KnownPropertyIndex::Control_Background, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        160, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem
    {
        KnownPropertyIndex::MenuFlyoutSubItem_Icon, // First property
        KnownPropertyIndex::MenuFlyoutSubItem_Items, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        163, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel
    {
        KnownPropertyIndex::OrientedVirtualizingPanel_IsContainerGeneratedForInsert, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Page
    {
        KnownPropertyIndex::Page_BottomAppBar, // First property
        KnownPropertyIndex::UserControl_Content, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        165, // Property slot count
    },
    // Microsoft.UI.Xaml.PopupRoot
    {
        KnownPropertyIndex::Canvas_Left, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.PrintRoot
    {
        KnownPropertyIndex::Canvas_Left, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollBar
    {
        KnownPropertyIndex::ScrollBar_IndicatorMode, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        168, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ScrollContentControl
    {
        KnownPropertyIndex::ContentControl_Content, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        165, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.SeekSliderAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector
    {
        KnownPropertyIndex::Selector_IsSelectionActive, // First property
        KnownPropertyIndex::ItemsControl_Items, // Content property
        151, // First enter property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        140, // First render property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        151, // First object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        180, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SelectorItem
    {
        KnownPropertyIndex::SelectorItem_IsSelected, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        166, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Slider
    {
        KnownPropertyIndex::Slider_Header, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        177, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SwapChainBackgroundPanel
    {
        KnownPropertyIndex::Grid_BackgroundSizing, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        148, // First enter property = Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
        137, // First render property = Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
        148, // First object property = Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
        151, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SwapChainPanel
    {
        KnownPropertyIndex::SwapChainPanel_CompositionScaleX, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        148, // First enter property = Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
        137, // First render property = Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
        148, // First object property = Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
        153, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.TextSelectionGripper
    {
        KnownPropertyIndex::Canvas_Left, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ToolTip
    {
        KnownPropertyIndex::ToolTip_HorizontalOffset, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        172, // Property slot count
    },
    // Microsoft.UI.Xaml.TransitionRoot
    {
        KnownPropertyIndex::Canvas_Left, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        142, // Property slot count
    },
    // Microsoft.UI.Xaml.WindowChrome
    {
        KnownPropertyIndex::WindowChrome_CaptionVisibility, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        166, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Button
    {
        KnownPropertyIndex::Button_Flyout, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        171, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ComboBox
    {
        KnownPropertyIndex::ComboBox_Description, // First property
        KnownPropertyIndex::ItemsControl_Items, // Content property
        151, // First enter property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        140, // First render property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        151, // First object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        205, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxItem
    {
        KnownPropertyIndex::SelectorItem_IsSelected, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        166, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CommandBar
    {
        KnownPropertyIndex::CommandBar_CommandBarOverflowPresenterStyle, // First property
        KnownPropertyIndex::CommandBar_PrimaryCommands, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        177, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.FlipView
    {
        KnownPropertyIndex::FlipView_UseTouchAnimationsForAllNavigation, // First property
        KnownPropertyIndex::ItemsControl_Items, // Content property
        151, // First enter property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        140, // First render property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        151, // First object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        181, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.FlipViewItem
    {
        KnownPropertyIndex::SelectorItem_IsSelected, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        166, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.GridViewHeaderItem
    {
        KnownPropertyIndex::ContentControl_Content, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        165, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.HyperlinkButton
    {
        KnownPropertyIndex::HyperlinkButton_NavigateUri, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        171, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ListBox
    {
        KnownPropertyIndex::ListBox_SelectedItems, // First property
        KnownPropertyIndex::ItemsControl_Items, // Content property
        151, // First enter property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        140, // First render property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        151, // First object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        183, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ListBoxItem
    {
        KnownPropertyIndex::SelectorItem_IsSelected, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        166, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property = UnknownObject.UnknownProperty
        0, // First render property = UnknownObject.UnknownProperty
        0, // First object property = UnknownObject.UnknownProperty
        10, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase
    {
        KnownPropertyIndex::ListViewBase_CanDragItems, // First property
        KnownPropertyIndex::ItemsControl_Items, // Content property
        151, // First enter property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        140, // First render property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        151, // First object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        203, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ListViewBaseItem
    {
        KnownPropertyIndex::ListViewBaseItem_IsDraggable, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        167, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ListViewHeaderItem
    {
        KnownPropertyIndex::ContentControl_Content, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        165, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RepeatButton
    {
        KnownPropertyIndex::RepeatButton_Delay, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        172, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer
    {
        KnownPropertyIndex::ScrollViewer_BringIntoViewOnFocusChange, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        190, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleButton
    {
        KnownPropertyIndex::ToggleButton_IsChecked, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        172, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem
    {
        KnownPropertyIndex::ToggleMenuFlyoutItem_IsChecked, // First property
        KnownPropertyIndex::MenuFlyoutItem_Text, // Content property
        69, // First enter property = Microsoft.UI.Xaml.Controls.Control.Background
        59, // First render property = Microsoft.UI.Xaml.Controls.Control.Background
        66, // First object property = Microsoft.UI.Xaml.Controls.Control.Background
        168, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel
    {
        KnownPropertyIndex::VirtualizingStackPanel_AreScrollSnapPointsRegular, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        144, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid
    {
        KnownPropertyIndex::WrapGrid_HorizontalChildrenAlignment, // First property
        KnownPropertyIndex::Panel_Children, // Content property
        83, // First enter property = Microsoft.UI.Xaml.Controls.Panel.Background
        72, // First render property = Microsoft.UI.Xaml.Controls.Panel.Background
        79, // First object property = Microsoft.UI.Xaml.Controls.Panel.Background
        148, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton
    {
        KnownPropertyIndex::AppBarButton_DynamicOverflowOrder, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        180, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton
    {
        KnownPropertyIndex::AppBarToggleButton_DynamicOverflowOrder, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        181, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CheckBox
    {
        KnownPropertyIndex::ToggleButton_IsChecked, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        172, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.GridView
    {
        KnownPropertyIndex::ListViewBase_CanDragItems, // First property
        KnownPropertyIndex::ItemsControl_Items, // Content property
        151, // First enter property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        140, // First render property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        151, // First object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        203, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.GridViewItem
    {
        KnownPropertyIndex::GridViewItem_TemplateSettings, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        168, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ListView
    {
        KnownPropertyIndex::ListViewBase_CanDragItems, // First property
        KnownPropertyIndex::ItemsControl_Items, // Content property
        151, // First enter property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        140, // First render property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        151, // First object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
        203, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ListViewItem
    {
        KnownPropertyIndex::ListViewItem_TemplateSettings, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        168, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.RadioButton
    {
        KnownPropertyIndex::RadioButton_GroupName, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        173, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.RootScrollViewer
    {
        KnownPropertyIndex::ScrollViewer_BringIntoViewOnFocusChange, // First property
        KnownPropertyIndex::ContentControl_Content, // Content property
        146, // First enter property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        135, // First render property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
        144, // First object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
        190, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AccessibilityView
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.AlignmentX
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.AlignmentY
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AnnotationType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.AppBarClosedDisplayMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.ApplicationHighContrastAdjustment
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.ApplicationRequiresPointerMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.ApplicationTheme
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AutomationActiveEnd
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnimationStyle
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AutomationBulletStyle
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AutomationCaretBidiMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AutomationCaretPosition
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationControlType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationEvents
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AutomationFlowDirections
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AutomationOutlineStyles
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AutomationStyleId
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.BackgroundSizing
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.BindingMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapCreateOptions
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.BrushMappingMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDisplayMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewSelectionMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CandidateWindowAlignment
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CharacterCasing
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ClickMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ClockState
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Windows.Foundation.Collections.CollectionChange
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.ColorInterpolationMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CommandBarDefaultLabelPosition
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CommandBarDynamicOverflowAction
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CommandBarLabelPosition
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.CommandBarOverflowButtonVisibility
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComponentResourceLocation
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogButton
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogPlacement
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogResult
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ControlHeaderPlacement
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Windows.UI.Core.CoreCursorType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Windows.ApplicationModel.DataTransfer.DataPackageOperation
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Windows.Globalization.DayOfWeek
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.DecodePixelType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.DockPosition
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.ElementCompositeMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.ElementHighContrastAdjustment
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.ElementSoundKind
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.ElementSoundMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.ElementSoundPlayerState
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.ElementSpatialAudioMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.ElementTheme
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.ExpandCollapseState
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Windows.Media.Playback.FailedMediaStreamKind
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.FastPlayFallbackBehaviour
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Animation.FillBehavior
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.FillRule
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.FlowDirection
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.FocusInputDeviceKind
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.FocusNavigationDirection
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.FocusState
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.FocusVisualKind
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.FontCapitals
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.FontEastAsianLanguage
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.FontEastAsianWidths
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.FontFraction
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.FontNumeralAlignment
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.FontNumeralStyle
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Windows.UI.Text.FontStretch
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Windows.UI.Text.FontStyle
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.FontVariants
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GeneratorDirection
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.GestureModes
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.GradientSpreadMethod
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.GridUnitType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GroupHeaderPlacement
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Input.HoldingState
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.HorizontalAlignment
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.InputScopeNameValue
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.InputValidationErrorEventAction
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.InputValidationKind
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.InputValidationMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ItemsUpdatingScrollMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.KeyboardNavigationMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.KeyTipPlacementMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.LightDismissOverlayMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.LineStackingStrategy
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterSelectionIndicatorMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ListViewReorderMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ListViewSelectionMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.LogicalDirection
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.ManipulationModes
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.MarkupExtensionType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Navigation.NavigationCacheMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Navigation.NavigationMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.OpticalMarginAlignment
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Orientation
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.PanelScrollingDirection
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.PasswordRevealMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.Peers.PatternInterface
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.PenLineCap
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.PenLineJoin
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.PlacementMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Input.PointerDeviceType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Internal.PointerDirection
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Printing.PreviewPageCountType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Printing.PrintDocumentFormat
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.RelativeSourceMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.RequiresPointer
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.RichEditClipboardFormat
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.RowOrColumnMajor
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.ScrollAmount
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ScrollBarVisibility
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ScrollIntoViewAlignment
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ScrollMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SelectionMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SliderSnapsTo
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SnapPointsType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SplitViewDisplayMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.SplitViewPanePlacement
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.StandardUICommandKind
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Stretch
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.StretchDirection
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.StyleSimulations
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.SupportedTextSelection
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceLoadStatus
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.SweepDirection
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Symbol
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.SynchronizedInputType
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.TextAlignment
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Windows.UI.Text.TextDecorations
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.TextFormattingMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.TextHintingMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.TextLineBounds
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.TextReadingOrder
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Media.TextRenderingMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.TextTrimming
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.TextWrapping
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.Primitives.TickPlacement
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.ToggleState
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Windows.UI.Xaml.Interop.TypeKind
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Documents.UnderlineStyle
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Data.UpdateSourceTrigger
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Vector3TransitionComponents
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.VerticalAlignment
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.VirtualizationMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Windows.System.VirtualKey
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Windows.System.VirtualKeyModifiers
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Visibility
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.WindowInteractionState
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.WindowVisualState
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Input.XYFocusNavigationStrategyOverride
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Controls.ZoomMode
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
    // Microsoft.UI.Xaml.Automation.ZoomUnit
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // First property
        KnownPropertyIndex::UnknownType_UnknownProperty, // Content property
        0, // First enter property
        0, // First object property
        0, // Property slot count
    },
};

// Type UUID information.
extern constexpr IID c_aTypeUUIDs[KnownTypeCount] =
{
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::Collections::IObservableVector<ABI::Microsoft::UI::Xaml::Controls::GroupStyle*>),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<FLOAT>),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Navigation::PageStackEntry*>),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Windows::Foundation::DateTime>),
    __uuidof(ABI::Windows::Foundation::Collections::IVectorView<ABI::Microsoft::UI::Xaml::Data::ItemIndexRange*>),
    __uuidof(ABI::Windows::Foundation::IReference<BYTE>),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::DateTime>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::GeneratorPosition>),
    __uuidof(ABI::Windows::Foundation::IReference<GUID>),
    __uuidof(ABI::Microsoft::UI::Xaml::Interop::IBindableIterable),
    __uuidof(ABI::Microsoft::UI::Xaml::Interop::IBindableIterator),
    __uuidof(ABI::Microsoft::UI::Xaml::Interop::IBindableObservableVector),
    __uuidof(ABI::Microsoft::UI::Xaml::Interop::IBindableVector),
    __uuidof(ABI::Microsoft::UI::Xaml::Interop::IBindableVectorView),
    __uuidof(ABI::Microsoft::UI::Xaml::Data::ICollectionView),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::ICommand),
    __uuidof(ABI::Microsoft::UI::Xaml::Markup::IDataTemplateComponent),
    __uuidof(ABI::Microsoft::UI::Xaml::IDataTemplateExtension),
    __uuidof(ABI::Microsoft::UI::Xaml::IElementFactory),
    __uuidof(ABI::Windows::Media::Playback::IMediaPlaybackSource),
    __uuidof(ABI::Windows::Foundation::IReference<INT16>),
    __uuidof(ABI::Windows::Foundation::IReference<INT64>),
    __uuidof(ABI::Windows::Graphics::Printing::IPrintDocumentSource),
    __uuidof(ABI::Microsoft::UI::Xaml::Markup::IProvideValueTarget),
    __uuidof(ABI::Microsoft::UI::Xaml::Markup::IRootObjectProvider),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IScrollAnchorProvider),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomInformation),
    __uuidof(ABI::Microsoft::UI::Text::ITextDocument),
    __uuidof(ABI::Microsoft::UI::Xaml::Markup::IUriContext),
    __uuidof(ABI::Microsoft::UI::Xaml::Data::IValueConverter),
    __uuidof(ABI::Microsoft::UI::Xaml::IXamlServiceProvider),
    __uuidof(ABI::Microsoft::UI::Xaml::Markup::IXamlTypeResolver),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Numerics::Matrix3x2>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Numerics::Matrix4x4>),
    __uuidof(IInspectable),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Numerics::Quaternion>),
    __uuidof(ABI::Windows::Foundation::IReference<FLOAT>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::UI::Xaml::Interop::TypeName>),
    __uuidof(ABI::Windows::Foundation::IReference<UINT16>),
    __uuidof(ABI::Windows::Foundation::IReference<UINT>),
    __uuidof(ABI::Windows::Foundation::IReference<UINT64>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Numerics::Vector2>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Numerics::Vector3>),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::IAutomationProperties),
    __uuidof(ABI::Microsoft::UI::IColors),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IDataTemplateSelector),
    __uuidof(ABI::Microsoft::UI::Xaml::IDependencyObject),
    __uuidof(ABI::Microsoft::UI::Xaml::Hosting::IElementCompositionPreview),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IGroupStyleSelector),
    __uuidof(ABI::Microsoft::UI::Input::IInputCursor),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IInputValidationContext),
    __uuidof(ABI::Microsoft::UI::Xaml::IInteractionBase),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IItemContainerGenerator),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IListViewPersistenceHelper),
    __uuidof(ABI::Microsoft::UI::Xaml::Markup::IMarkupExtension),
    __uuidof(ABI::Windows::Media::Playback::IMediaPlayer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IMediaTransportControlsHelper),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IStyleSelector),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IToolTipService),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::ITypography),
    __uuidof(ABI::Windows::Foundation::IUriRuntimeClass),
    __uuidof(ABI::Microsoft::UI::Xaml::Markup::IXamlBindingHelper),
    __uuidof(ABI::Microsoft::UI::Xaml::Markup::IXamlMarkupHelper),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Imaging::IXamlRenderingBackgroundTask),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IAccessKeyDisplayDismissedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IAccessKeyDisplayRequestedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IAccessKeyInvokedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Printing::IAddPagesEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IAnchorRequestedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IAppBarButtonTemplateSettings),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IAppBarTemplateSettings),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IAppBarToggleButtonTemplateSettings),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::IAutomationAnnotation),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IAutoSuggestBoxQuerySubmittedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IAutoSuggestBoxSuggestionChosenEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IAutoSuggestBoxTextChangedEventArgs),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::IBindingFailedEventArgs),
    __uuidof(ABI::Windows::Foundation::IReference<BOOLEAN>),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IBrush),
    __uuidof(ABI::Microsoft::UI::Xaml::IBrushTransition),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ICacheMode),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICalendarDatePickerDateChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICalendarViewDayItemChangingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICalendarViewSelectedDatesChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::ICalendarViewTemplateSettings),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICandidateWindowBoundsChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::ICanExecuteRequestedEventArgs),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Data::ICollectionViewSource),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::UI::Color>),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IColorKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IColumnDefinition),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IComboBoxTemplateSettings),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IComboBoxTextSubmittedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::ICommandBarTemplateSettings),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICommandingContextChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IConnectedAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IConnectedAnimationService),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IContentDialogButtonClickEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IContentDialogClosedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IContentDialogClosingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IContentDialogOpenedEventArgs),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::CornerRadius>),
    __uuidof(ABI::Microsoft::UI::Xaml::Data::ICurrentChangingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IDatePickerSelectedValueChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IDatePickerValueChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::IDebugSettings),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Hosting::IDesktopWindowXamlSourceGotFocusEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Hosting::IDesktopWindowXamlSourceTakeFocusRequestedEventArgs),
    __uuidof(ABI::Windows::Foundation::IReference<DOUBLE>),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IDoubleKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Imaging::IDownloadProgressEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IDragItemsCompletedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IDragItemsStartingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IDynamicOverflowItemsChangingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IEasingFunctionBase),
    __uuidof(ABI::Microsoft::UI::Xaml::IEffectiveViewportChangedEventArgs),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IExecuteRequestedEventArgs),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IFlyoutBase),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IFlyoutBaseClosingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IFocusedElementRemovedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IFocusManagerGotFocusEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IFocusManagerLostFocusEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IFontFamily),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::UI::Text::FontWeight>),
    __uuidof(ABI::Microsoft::UI::Xaml::IFrameworkTemplate),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IGeneralTransform),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IGeometry),
    __uuidof(ABI::Microsoft::UI::Xaml::Printing::IGetPreviewPageEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IGradientStop),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::GridLength>),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IGroupStyle),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IHasValidationErrorsChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IHubSectionHeaderClickEventArgs),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IIconSource),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IImageSource),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IInertiaExpansionBehavior),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IInertiaRotationBehavior),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IInertiaTranslationBehavior),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IInputScope),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IInputScopeName),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IInputValidationCommand),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IInputValidationErrorEventArgs),
    __uuidof(ABI::Windows::Foundation::IReference<INT>),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Provider::IIRawElementProviderSimple),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IIsTextTrimmedChangedEventArgs),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IKeyboardAccelerator),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IKeyboardAcceleratorInvokedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IKeySpline),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ILoadedImageSourceLoadCompletedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ILoadedImageSurface),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IManipulationPivot),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Matrix>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Media3D::Matrix3D>),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IMediaTransportControlsThumbnailRequestedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IMenuFlyoutItemTemplateSettings),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IMenuFlyoutPresenterTemplateSettings),
    __uuidof(ABI::Microsoft::UI::Xaml::Navigation::INavigatingCancelEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Navigation::INavigationEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Navigation::INavigationFailedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::INavigationTransitionInfo),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IObjectKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Navigation::IPageStackEntry),
    __uuidof(ABI::Microsoft::UI::Xaml::Printing::IPaginateEventArgs),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IPasswordBoxPasswordChangingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IPathFigure),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IPathSegment),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Point>),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IPointer),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IPointKeyFrame),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Printing::IPrintDocument),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IProjection),
    __uuidof(ABI::Microsoft::UI::Xaml::IPropertyPath),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Rect>),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IRenderedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IRenderingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::IResourceManagerRequestedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IRichEditBoxSelectionChangingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IRichEditBoxTextChangingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::IRoutedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IRowDefinition),
    __uuidof(ABI::Microsoft::UI::Xaml::IScalarTransition),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IScrollViewerViewChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IScrollViewerViewChangingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Internal::ISecondaryContentRelationship),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISectionsInViewChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomViewChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::ISetterBase),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IShadow),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Size>),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISplitViewPaneClosingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::ISplitViewTemplateSettings),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::IStateTriggerBase),
    __uuidof(ABI::Windows::Foundation::IReference<HSTRING>),
    __uuidof(ABI::Microsoft::UI::Xaml::IStyle),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSourceFailedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSourceOpenedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ISystemBackdrop),
    __uuidof(ABI::Microsoft::UI::Xaml::ITargetPropertyPath),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITextBoxBeforeTextChangingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITextBoxSelectionChangingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITextBoxTextChangingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITextCompositionChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITextCompositionEndedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITextCompositionStartedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITextControlCopyingToClipboardEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITextControlCuttingToClipboardEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITextControlPasteEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::ITextElement),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::ITextHighlighterBase),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Documents::TextRange>),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Thickness>),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITimePickerSelectedValueChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITimePickerValueChangedEventArgs),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::TimeSpan>),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IToggleSwitchTemplateSettings),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IToolTipTemplateSettings),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Media3D::ITransform3D),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ITransition),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::ITriggerAction),
    __uuidof(ABI::Microsoft::UI::Xaml::ITriggerBase),
    __uuidof(ABI::Microsoft::UI::Xaml::IUIElement),
    __uuidof(ABI::Microsoft::UI::Xaml::IUnhandledExceptionEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::IVector3Transition),
    __uuidof(ABI::Microsoft::UI::Xaml::IVisualState),
    __uuidof(ABI::Microsoft::UI::Xaml::IVisualStateChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::IVisualStateGroup),
    __uuidof(ABI::Microsoft::UI::Xaml::IVisualStateManager),
    __uuidof(ABI::Microsoft::UI::Xaml::IVisualTransition),
    __uuidof(ABI::Microsoft::UI::Xaml::IWindow),
    __uuidof(ABI::Microsoft::UI::Xaml::IWindowCreatedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IXamlLight),
    __uuidof(ABI::Microsoft::UI::Xaml::IXamlResourceReferenceFailedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::IXamlRootChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IXamlUICommand),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::IAdaptiveTrigger),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IAddDeleteThemeTransition),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IArcSegment),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IBackEase),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IBeginStoryboard),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IBezierSegment),
    __uuidof(ABI::Microsoft::UI::Xaml::Data::IBindingBase),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IBitmapCache),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IBitmapIconSource),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Imaging::IBitmapSource),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::IBlock),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IBounceEase),
    __uuidof(ABI::Microsoft::UI::Xaml::IBringIntoViewRequestedEventArgs),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Input::ICharacterReceivedRoutedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ICircleEase),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICleanUpVirtualizedItemEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IColorAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IColorAnimationUsingKeyFrames),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Media3D::ICompositeTransform3D),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IContentThemeTransition),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IContextMenuEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IContextRequestedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IControlTemplate),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ICubicEase),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::IDataTemplate),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IDiscreteColorKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IDiscreteDoubleKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IDiscreteObjectKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IDiscretePointKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::IDispatcherTimer),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IDoubleAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IDoubleAnimationUsingKeyFrames),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IDoubleTappedRoutedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IDragCompletedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IDragDeltaEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::IDragEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IDragStartedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::IDragStartingEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::IDropCompletedEventArgs),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Duration>),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IEasingColorKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IEasingDoubleKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IEasingPointKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IEdgeUIThemeTransition),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IElasticEase),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IEllipseGeometry),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IEntranceThemeTransition),
    __uuidof(ABI::Microsoft::UI::Xaml::IEventTrigger),
    __uuidof(ABI::Microsoft::UI::Xaml::IExceptionRoutedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IExponentialEase),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IFlyout),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IFocusDisengagedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IFocusEngagedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IFontIconSource),
    __uuidof(ABI::Microsoft::UI::Xaml::IFrameworkElement),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::IFrameworkElementEx),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IGeometryGroup),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IGettingFocusEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IGradientBrush),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IGridViewItemTemplateSettings),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IHoldingRoutedEventArgs),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::IHyperlinkClickEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::IInline),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IItemClickEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IItemsPanelTemplate),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Animation::KeyTime>),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ILinearColorKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ILinearDoubleKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ILinearPointKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ILineGeometry),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ILineSegment),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IListViewItemTemplateSettings),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::ILosingFocusEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IManipulationCompletedRoutedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IManipulationDeltaRoutedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IManipulationInertiaStartingRoutedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IManipulationStartedRoutedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IManipulationStartingRoutedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IMatrix3DProjection),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IMenuFlyout),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Input::INoFocusCandidateFoundEventArgs),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IObjectAnimationUsingKeyFrames),
    __uuidof(ABI::Microsoft::UI::Xaml::IPanelEx),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IPaneThemeTransition),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IPathGeometry),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IPathIconSource),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Media3D::IPerspectiveTransform3D),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IPlaneProjection),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IPointAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IPointAnimationUsingKeyFrames),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IPolyBezierSegment),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IPolyLineSegment),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IPolyQuadraticBezierSegment),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IPopupThemeTransition),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IPowerEase),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IQuadraticBezierSegment),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IQuadraticEase),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IQuarticEase),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IQuinticEase),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IRangeBaseValueChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IRectangleGeometry),
    __uuidof(ABI::Microsoft::UI::Xaml::Data::IRelativeSource),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Imaging::IRenderTargetBitmap),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IReorderThemeTransition),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IRepositionThemeTransition),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IRightTappedRoutedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IScrollEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISelectionChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::ISetter),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ISineEase),
    __uuidof(ABI::Microsoft::UI::Xaml::ISizeChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Imaging::ISoftwareBitmapSource),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ISolidColorBrush),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ISplineColorKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ISplineDoubleKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ISplinePointKeyFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::IStandardUICommand),
    __uuidof(ABI::Microsoft::UI::Xaml::IStateTrigger),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Imaging::ISurfaceImageSource),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSource),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISymbolIconSource),
    __uuidof(ABI::Microsoft::UI::Xaml::Input::ITappedRoutedEventArgs),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITextChangedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::ITextHighlighter),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IThemeShadow),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ITileBrush),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ITransform),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IXamlCompositionBrushBase),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeer),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Data::IBinding),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Imaging::IBitmapImage),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IBorder),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Brush*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeer),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::ColorKeyFrame*>),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Controls::ColumnDefinition*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeer),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ICompositeTransform),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IContentPresenter),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IControl),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeer),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::Collections::IVector<DOUBLE>),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::DoubleKeyFrame*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IDragItemThemeAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IDragOverThemeAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IDrillInThemeAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IDrillOutThemeAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IDropTargetItemThemeAnimation),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IFadeInThemeAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IFadeOutThemeAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeer),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeer),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Geometry*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::IGlyphs),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::GradientStop*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeer),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Controls::HubSection*>),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IIconElement),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IImage),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IImageBrush),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::IInlineUIContainer),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IItemsPresenter),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ILinearGradientBrush),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::ILineBreak),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeer),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IMatrixTransform),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::IMediaFailedRoutedEventArgs),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IMediaPlayerPresenter),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeer),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::ObjectKeyFrame*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IPanel),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::IParagraph),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeer),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::PathFigure*>),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::PathSegment*>),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Windows::Foundation::Point>),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IPointerDownThemeAnimation),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IPointerUpThemeAnimation),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::PointKeyFrame*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IPopInThemeAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IPopOutThemeAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IPopup),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeer),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Animation::RepeatBehavior>),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IRepositionThemeAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::IResourceDictionary),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IRichTextBlock),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IRichTextBlockOverflow),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IRotateTransform),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Controls::RowDefinition*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::IRun),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::IScaleTransform),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::ISetterBaseCollection),
    __uuidof(ABI::Microsoft::UI::Xaml::Shapes::IShape),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ISkewTransform),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::ISpan),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ISplitCloseThemeAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ISplitOpenThemeAnimation),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IStoryboard),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ISwipeBackThemeAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ISwipeHintThemeAnimation),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITextBlock),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeer),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IThemeAnimationBase),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeer),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Timeline*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeer),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Transform*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ITransformGroup),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Transition*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::ITranslateTransform),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::TriggerAction*>),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::TriggerBase*>),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::UIElement*>),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::UIElement*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IViewbox),
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Imaging::IVirtualSurfaceImageSource),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Media::Imaging::IWriteableBitmap),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IAppBarSeparator),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IBitmapIcon),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::IBold),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICalendarDatePicker),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICalendarView),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICanvas),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::IColorPaletteResources),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeer),
    __uuidof(ABI::Windows::Foundation::Collections::IObservableVector<ABI::Microsoft::UI::Xaml::Controls::ICommandBarElement*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICommandingContainer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IContentControl),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IDatePicker),
    __uuidof(ABI::Windows::Foundation::Collections::IObservableVector<ABI::Microsoft::UI::Xaml::DependencyObject*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Shapes::IEllipse),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IFontIcon),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IGrid),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IHub),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IHubSection),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::IHyperlink),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IIconSourceElement),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::IItalic),
    __uuidof(ABI::Windows::Foundation::Collections::IObservableVector<IInspectable*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IItemsControl),
    __uuidof(ABI::Microsoft::UI::Xaml::Shapes::ILine),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeer),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IMediaPlayerElement),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IMediaTransportControls),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IMenuFlyoutItemBase),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeer),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IPasswordBox),
    __uuidof(ABI::Microsoft::UI::Xaml::Shapes::IPath),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IPathIcon),
    __uuidof(ABI::Microsoft::UI::Xaml::Shapes::IPolygon),
    __uuidof(ABI::Microsoft::UI::Xaml::Shapes::IPolyline),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IRangeBase),
    __uuidof(ABI::Microsoft::UI::Xaml::Shapes::IRectangle),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IRelativePanel),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IRichEditBox),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IScrollContentPresenter),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISemanticZoom),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISplitView),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IStackPanel),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISymbolIcon),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITextBox),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IThumb),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::ITickBar),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ITimePicker),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IToggleSwitch),
    __uuidof(ABI::Microsoft::UI::Xaml::Documents::IUnderline),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IUserControl),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IVariableSizedWrapGrid),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IVirtualizingPanel),
    __uuidof(ABI::Microsoft::UI::Xaml::Hosting::IXamlIslandRoot),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IAppBar),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IAppBarElementContainer),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IAutoSuggestBox),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Documents::Block*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IButtonBase),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::ICalendarPanel),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICalendarViewDayItem),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::ICarouselPanel),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeer),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICommandBarOverflowPresenter),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IContentDialog),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IFlyoutPresenter),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IFrame),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IGridViewItemPresenter),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IGroupItem),
    __uuidof(ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Documents::Inline*>),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IItemsStackPanel),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IItemsWrapGrid),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IListViewBaseHeaderItem),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IListViewItemPresenter),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IMenuFlyoutItem),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IMenuFlyoutPresenter),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IMenuFlyoutSeparator),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IMenuFlyoutSubItem),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IOrientedVirtualizingPanel),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IPage),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IScrollBar),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::ISelector),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::ISelectorItem),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISlider),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISwapChainBackgroundPanel),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISwapChainPanel),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IToolTip),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::IWindowChrome),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IButton),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IComboBox),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IComboBoxItem),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICommandBar),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IFlipView),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IFlipViewItem),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IGridViewHeaderItem),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IHyperlinkButton),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IListBox),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IListBoxItem),
    __uuidof(ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IListViewBase),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IListViewHeaderItem),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IRepeatButton),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IScrollViewer),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IToggleButton),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IToggleMenuFlyoutItem),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IVirtualizingStackPanel),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IWrapGrid),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IAppBarButton),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IAppBarToggleButton),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::ICheckBox),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IGridView),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IGridViewItem),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IListView),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IListViewItem),
    __uuidof(ABI::Microsoft::UI::Xaml::Controls::IRadioButton),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AccessibilityView>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::AlignmentX>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::AlignmentY>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::AnimationDirection>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AnnotationType>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::AppBarClosedDisplayMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ApplicationHighContrastAdjustment>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ApplicationRequiresPointerMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ApplicationTheme>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationActiveEnd>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationAnimationStyle>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationBulletStyle>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationCaretBidiMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationCaretPosition>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationControlType>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationEvents>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationFlowDirections>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationHeadingLevel>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLandmarkType>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLiveSetting>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNavigationDirection>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationKind>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationProcessing>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationOrientation>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationOutlineStyles>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationStructureChangeType>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationStyleId>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationTextDecorationLineStyle>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationTextEditChangeType>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::AutoSuggestionBoxTextChangeReason>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Data::BindingMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Imaging::BitmapCreateOptions>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::BrushMappingMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CalendarViewDisplayMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CalendarViewSelectionMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CandidateWindowAlignment>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CharacterCasing>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ClickMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Animation::ClockState>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Collections::CollectionChange>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::ColorInterpolationMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ComboBoxSelectionChangedTrigger>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CommandBarDefaultLabelPosition>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CommandBarDynamicOverflowAction>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CommandBarLabelPosition>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CommandBarOverflowButtonVisibility>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ComponentResourceLocation>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Animation::ConnectedAnimationComponent>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ContentDialogButton>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ContentDialogPlacement>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ContentDialogResult>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ControlHeaderPlacement>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::UI::Core::CoreCursorType>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::Globalization::DayOfWeek>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Imaging::DecodePixelType>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::DisabledFormattingAccelerators>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::DockPosition>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Animation::EasingMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::EdgeTransitionLocation>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::ElementCompositeMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ElementHighContrastAdjustment>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ElementSoundKind>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ElementSoundMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ElementSoundPlayerState>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ElementSpatialAudioMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ElementTheme>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::ExpandCollapseState>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::Media::Playback::FailedMediaStreamKind>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::FastPlayFallbackBehaviour>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Animation::FillBehavior>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::FillRule>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FlowDirection>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutPlacementMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutShowMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::FocusInputDeviceKind>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::FocusNavigationDirection>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FocusState>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FocusVisualKind>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontCapitals>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontEastAsianLanguage>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontEastAsianWidths>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontFraction>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontNumeralAlignment>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontNumeralStyle>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::UI::Text::FontStretch>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::UI::Text::FontStyle>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontVariants>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::GeneratorDirection>),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::GradientSpreadMethod>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::GridUnitType>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::GroupHeaderPlacement>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Input::HoldingState>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::HorizontalAlignment>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::IncrementalLoadingTrigger>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::InputScopeNameValue>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::InputValidationErrorEventAction>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::InputValidationKind>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::InputValidationMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ItemsUpdatingScrollMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::KeyboardAcceleratorPlacementMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::KeyboardNavigationMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::KeyTipPlacementMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::LightDismissOverlayMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::LineStackingStrategy>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ListViewItemPresenterCheckMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ListViewItemPresenterSelectionIndicatorMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ListViewReorderMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ListViewSelectionMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::LoadedImageSourceLoadStatus>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Documents::LogicalDirection>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::ManipulationModes>),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Navigation::NavigationCacheMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Navigation::NavigationMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Interop::NotifyCollectionChangedAction>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::OpticalMarginAlignment>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Orientation>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::PanelScrollingDirection>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::PasswordRevealMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::PatternInterface>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::PenLineCap>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::PenLineJoin>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::PlacementMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Input::PointerDeviceType>),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::PopupPlacementMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Printing::PreviewPageCountType>),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Data::RelativeSourceMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::RequiresPointer>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::RichEditClipboardFormat>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::RowOrColumnMajor>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::ScrollAmount>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ScrollBarVisibility>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollEventType>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollingIndicatorMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ScrollIntoViewAlignment>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ScrollMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::SelectionMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::SliderSnapsTo>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::SnapPointsAlignment>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::SnapPointsType>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::SplitViewDisplayMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::SplitViewPanePlacement>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::StandardUICommandKind>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Stretch>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::StretchDirection>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::StyleSimulations>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::SupportedTextSelection>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSourceLoadStatus>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::SweepDirection>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Symbol>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::SynchronizedInputType>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::TextAlignment>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::UI::Text::TextDecorations>),
    GUID{} /*GUID_NULL*/,
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::TextLineBounds>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::TextReadingOrder>),
    GUID{} /*GUID_NULL*/,
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::TextTrimming>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::TextWrapping>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::TickPlacement>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::ToggleState>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::UI::Xaml::Interop::TypeKind>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Documents::UnderlineStyle>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Data::UpdateSourceTrigger>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Vector3TransitionComponents>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::VerticalAlignment>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::VirtualizationMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::System::VirtualKey>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Windows::System::VirtualKeyModifiers>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Visibility>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::WindowInteractionState>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::WindowVisualState>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::XYFocusKeyboardNavigationMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategyOverride>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ZoomMode>),
    __uuidof(ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::ZoomUnit>),
};

// Types that can be referenced from XAML.
extern const MetaDataTypeName c_aTypeNames[940] =
{
    { KnownTypeIndex::UnknownType },
    { KnownTypeIndex::Hub },
    { KnownTypeIndex::Run },
    { KnownTypeIndex::Uri },
    { KnownTypeIndex::Bold },
    { KnownTypeIndex::Byte },
    { KnownTypeIndex::Grid },
    { KnownTypeIndex::Guid },
    { KnownTypeIndex::Line },
    { KnownTypeIndex::Page },
    { KnownTypeIndex::Path },
    { KnownTypeIndex::Rect },
    { KnownTypeIndex::Size },
    { KnownTypeIndex::Span },
    { KnownTypeIndex::Block },
    { KnownTypeIndex::Brush },
    { KnownTypeIndex::Color },
    { KnownTypeIndex::Frame },
    { KnownTypeIndex::Image },
    { KnownTypeIndex::Int16 },
    { KnownTypeIndex::Int32 },
    { KnownTypeIndex::Int64 },
    { KnownTypeIndex::Panel },
    { KnownTypeIndex::Point },
    { KnownTypeIndex::Popup },
    { KnownTypeIndex::Shape },
    { KnownTypeIndex::Style },
    { KnownTypeIndex::Thumb },
    { KnownTypeIndex::AppBar },
    { KnownTypeIndex::Border },
    { KnownTypeIndex::Button },
    { KnownTypeIndex::Canvas },
    { KnownTypeIndex::Char16 },
    { KnownTypeIndex::Colors },
    { KnownTypeIndex::Double },
    { KnownTypeIndex::Flyout },
    { KnownTypeIndex::Glyphs },
    { KnownTypeIndex::Inline },
    { KnownTypeIndex::Italic },
    { KnownTypeIndex::Matrix },
    { KnownTypeIndex::Object },
    { KnownTypeIndex::Setter },
    { KnownTypeIndex::Shadow },
    { KnownTypeIndex::Float },
    { KnownTypeIndex::Slider },
    { KnownTypeIndex::String },
    { KnownTypeIndex::Symbol },
    { KnownTypeIndex::UInt16 },
    { KnownTypeIndex::UInt32 },
    { KnownTypeIndex::UInt64 },
    { KnownTypeIndex::Window },
    { KnownTypeIndex::Binding },
    { KnownTypeIndex::Boolean },
    { KnownTypeIndex::Control },
    { KnownTypeIndex::Ellipse },
    { KnownTypeIndex::KeyTime },
    { KnownTypeIndex::ListBox },
    { KnownTypeIndex::PanelEx },
    { KnownTypeIndex::Pointer },
    { KnownTypeIndex::Polygon },
    { KnownTypeIndex::Stretch },
    { KnownTypeIndex::TextBox },
    { KnownTypeIndex::TickBar },
    { KnownTypeIndex::ToolTip },
    { KnownTypeIndex::Vector2 },
    { KnownTypeIndex::Vector3 },
    { KnownTypeIndex::Viewbox },
    { KnownTypeIndex::BackEase },
    { KnownTypeIndex::CheckBox },
    { KnownTypeIndex::ComboBox },
    { KnownTypeIndex::DateTime },
    { KnownTypeIndex::Duration },
    { KnownTypeIndex::FillRule },
    { KnownTypeIndex::FlipView },
    { KnownTypeIndex::FontIcon },
    { KnownTypeIndex::Geometry },
    { KnownTypeIndex::GridView },
    { KnownTypeIndex::ICommand },
    { KnownTypeIndex::ListView },
    { KnownTypeIndex::Matrix3D },
    { KnownTypeIndex::PathIcon },
    { KnownTypeIndex::Polyline },
    { KnownTypeIndex::Selector },
    { KnownTypeIndex::SineEase },
    { KnownTypeIndex::Timeline },
    { KnownTypeIndex::TimeSpan },
    { KnownTypeIndex::TypeKind },
    { KnownTypeIndex::TypeName },
    { KnownTypeIndex::WrapGrid },
    { KnownTypeIndex::ZoomMode },
    { KnownTypeIndex::ZoomUnit },
    { KnownTypeIndex::CacheMode },
    { KnownTypeIndex::ClickMode },
    { KnownTypeIndex::CubicEase },
    { KnownTypeIndex::DayOfWeek },
    { KnownTypeIndex::EventArgs },
    { KnownTypeIndex::FontStyle },
    { KnownTypeIndex::GroupItem },
    { KnownTypeIndex::Hyperlink },
    { KnownTypeIndex::KeySpline },
    { KnownTypeIndex::LineBreak },
    { KnownTypeIndex::Matrix3x2 },
    { KnownTypeIndex::Matrix4x4 },
    { KnownTypeIndex::MediaBase },
    { KnownTypeIndex::Paragraph },
    { KnownTypeIndex::PopupRoot },
    { KnownTypeIndex::PowerEase },
    { KnownTypeIndex::PrintRoot },
    { KnownTypeIndex::RangeBase },
    { KnownTypeIndex::Rectangle },
    { KnownTypeIndex::ScrollBar },
    { KnownTypeIndex::SplitView },
    { KnownTypeIndex::TextBlock },
    { KnownTypeIndex::TextRange },
    { KnownTypeIndex::Thickness },
    { KnownTypeIndex::TileBrush },
    { KnownTypeIndex::Transform },
    { KnownTypeIndex::UIElement },
    { KnownTypeIndex::Underline },
    { KnownTypeIndex::XamlLight },
    { KnownTypeIndex::AlignmentX },
    { KnownTypeIndex::AlignmentY },
    { KnownTypeIndex::ArcSegment },
    { KnownTypeIndex::BitmapIcon },
    { KnownTypeIndex::BounceEase },
    { KnownTypeIndex::ButtonBase },
    { KnownTypeIndex::CircleEase },
    { KnownTypeIndex::ClockState },
    { KnownTypeIndex::CommandBar },
    { KnownTypeIndex::DatePicker },
    { KnownTypeIndex::Deployment },
    { KnownTypeIndex::EasingMode },
    { KnownTypeIndex::Enumerated },
    { KnownTypeIndex::FlyoutBase },
    { KnownTypeIndex::FocusState },
    { KnownTypeIndex::FontFamily },
    { KnownTypeIndex::FontWeight },
    { KnownTypeIndex::GridLength },
    { KnownTypeIndex::GroupStyle },
    { KnownTypeIndex::HubSection },
    { KnownTypeIndex::HWCompNode },
    { KnownTypeIndex::IconSource },
    { KnownTypeIndex::ImageBrush },
    { KnownTypeIndex::InputScope },
    { KnownTypeIndex::MenuFlyout },
    { KnownTypeIndex::PathFigure },
    { KnownTypeIndex::PenLineCap },
    { KnownTypeIndex::Projection },
    { KnownTypeIndex::Quaternion },
    { KnownTypeIndex::RootVisual },
    { KnownTypeIndex::ScrollMode },
    { KnownTypeIndex::SetterBase },
    { KnownTypeIndex::StackPanel },
    { KnownTypeIndex::Storyboard },
    { KnownTypeIndex::SymbolIcon },
    { KnownTypeIndex::TimePicker },
    { KnownTypeIndex::Transition },
    { KnownTypeIndex::Typography },
    { KnownTypeIndex::VirtualKey },
    { KnownTypeIndex::Visibility },
    { KnownTypeIndex::Application },
    { KnownTypeIndex::BindingBase },
    { KnownTypeIndex::BindingMode },
    { KnownTypeIndex::BitmapCache },
    { KnownTypeIndex::BitmapImage },
    { KnownTypeIndex::ElasticEase },
    { KnownTypeIndex::FontStretch },
    { KnownTypeIndex::IconElement },
    { KnownTypeIndex::ImageSource },
    { KnownTypeIndex::InputCursor },
    { KnownTypeIndex::IUriContext },
    { KnownTypeIndex::LineSegment },
    { KnownTypeIndex::ListBoxItem },
    { KnownTypeIndex::MediaPlayer },
    { KnownTypeIndex::Orientation },
    { KnownTypeIndex::PasswordBox },
    { KnownTypeIndex::PathSegment },
    { KnownTypeIndex::PenLineJoin },
    { KnownTypeIndex::QuarticEase },
    { KnownTypeIndex::QuinticEase },
    { KnownTypeIndex::RadioButton },
    { KnownTypeIndex::RichEditBox },
    { KnownTypeIndex::TextAdapter },
    { KnownTypeIndex::TextBoxBase },
    { KnownTypeIndex::TextBoxView },
    { KnownTypeIndex::TextElement },
    { KnownTypeIndex::TextOptions },
    { KnownTypeIndex::ThemeShadow },
    { KnownTypeIndex::ToggleState },
    { KnownTypeIndex::Transform3D },
    { KnownTypeIndex::TriggerBase },
    { KnownTypeIndex::UserControl },
    { KnownTypeIndex::VisualState },
    { KnownTypeIndex::AppBarButton },
    { KnownTypeIndex::BitmapSource },
    { KnownTypeIndex::CalendarView },
    { KnownTypeIndex::ComboBoxItem },
    { KnownTypeIndex::CornerRadius },
    { KnownTypeIndex::DataTemplate },
    { KnownTypeIndex::DockPosition },
    { KnownTypeIndex::ElementTheme },
    { KnownTypeIndex::EventHandlerStub },
    { KnownTypeIndex::EventTrigger },
    { KnownTypeIndex::FillBehavior },
    { KnownTypeIndex::FlipViewItem },
    { KnownTypeIndex::FontCapitals },
    { KnownTypeIndex::FontFraction },
    { KnownTypeIndex::FontVariants },
    { KnownTypeIndex::GestureModes },
    { KnownTypeIndex::GradientStop },
    { KnownTypeIndex::GridUnitType },
    { KnownTypeIndex::GridViewItem },
    { KnownTypeIndex::HoldingState },
    { KnownTypeIndex::ItemsControl },
    { KnownTypeIndex::LineGeometry },
    { KnownTypeIndex::ListViewBase },
    { KnownTypeIndex::ListViewItem },
    { KnownTypeIndex::PathGeometry },
    { KnownTypeIndex::PropertyPath },
    { KnownTypeIndex::RepeatButton },
    { KnownTypeIndex::ScrollAmount },
    { KnownTypeIndex::ScrollViewer },
    { KnownTypeIndex::SelectorItem },
    { KnownTypeIndex::SemanticZoom },
    { KnownTypeIndex::StateTrigger },
    { KnownTypeIndex::TextProvider },
    { KnownTypeIndex::TextTrimming },
    { KnownTypeIndex::TextWrapping },
    { KnownTypeIndex::ToggleButton },
    { KnownTypeIndex::ToggleSwitch },
    { KnownTypeIndex::WindowChrome },
    { KnownTypeIndex::BezierSegment },
    { KnownTypeIndex::CalendarPanel },
    { KnownTypeIndex::CarouselPanel },
    { KnownTypeIndex::ColorKeyFrame },
    { KnownTypeIndex::ContentDialog },
    { KnownTypeIndex::DebugSettings },
    { KnownTypeIndex::DragEventArgs },
    { KnownTypeIndex::FlowDirection },
    { KnownTypeIndex::GeometryGroup },
    { KnownTypeIndex::GradientBrush },
    { KnownTypeIndex::IsTypePresent },
    { KnownTypeIndex::ItemsWrapGrid },
    { KnownTypeIndex::ITextDocument },
    { KnownTypeIndex::NullExtension },
    { KnownTypeIndex::PlacementMode },
    { KnownTypeIndex::PointKeyFrame },
    { KnownTypeIndex::PrintDocument },
    { KnownTypeIndex::QuadraticEase },
    { KnownTypeIndex::RelativePanel },
    { KnownTypeIndex::RichTextBlock },
    { KnownTypeIndex::RowDefinition },
    { KnownTypeIndex::SelectionMode },
    { KnownTypeIndex::SkewTransform },
    { KnownTypeIndex::SliderSnapsTo },
    { KnownTypeIndex::StyleSelector },
    { KnownTypeIndex::TextAlignment },
    { KnownTypeIndex::ThemeResource },
    { KnownTypeIndex::TickPlacement },
    { KnownTypeIndex::TriggerAction },
    { KnownTypeIndex::XamlUICommand },
    { KnownTypeIndex::AnnotationType },
    { KnownTypeIndex::AutomationPeer },
    { KnownTypeIndex::AutoSuggestBox },
    { KnownTypeIndex::CollectionView },
    { KnownTypeIndex::ColorAnimation },
    { KnownTypeIndex::ContentControl },
    { KnownTypeIndex::CoreCursorType },
    { KnownTypeIndex::CustomResource },
    { KnownTypeIndex::DoubleKeyFrame },
    { KnownTypeIndex::ErrorEventArgs },
    { KnownTypeIndex::FlyoutShowMode },
    { KnownTypeIndex::FontIconSource },
    { KnownTypeIndex::HWCompLeafNode },
    { KnownTypeIndex::HWCompTreeNode },
    { KnownTypeIndex::InputScopeName },
    { KnownTypeIndex::ItemCollection },
    { KnownTypeIndex::ItemsPresenter },
    { KnownTypeIndex::MenuFlyoutItem },
    { KnownTypeIndex::NavigationMode },
    { KnownTypeIndex::ObjectKeyFrame },
    { KnownTypeIndex::PageStackEntry },
    { KnownTypeIndex::PathIconSource },
    { KnownTypeIndex::PointAnimation },
    { KnownTypeIndex::RelativeSource },
    { KnownTypeIndex::RepeatBehavior },
    { KnownTypeIndex::ScaleTransform },
    { KnownTypeIndex::SnapPointsType },
    { KnownTypeIndex::StaticResource },
    { KnownTypeIndex::SvgImageSource },
    { KnownTypeIndex::SwapChainPanel },
    { KnownTypeIndex::SweepDirection },
    { KnownTypeIndex::SystemBackdrop },
    { KnownTypeIndex::TextLineBounds },
    { KnownTypeIndex::ToolTipService },
    { KnownTypeIndex::TransformGroup },
    { KnownTypeIndex::TransitionRoot },
    { KnownTypeIndex::UnderlineStyle },
    { KnownTypeIndex::XamlIslandRoot },
    { KnownTypeIndex::AdaptiveTrigger },
    { KnownTypeIndex::AppBarSeparator },
    { KnownTypeIndex::BeginStoryboard },
    { KnownTypeIndex::BlockCollection },
    { KnownTypeIndex::BrushCollection },
    { KnownTypeIndex::BrushTransition },
    { KnownTypeIndex::CharacterCasing },
    { KnownTypeIndex::ControlTemplate },
    { KnownTypeIndex::DecodePixelType },
    { KnownTypeIndex::DeferredElement },
    { KnownTypeIndex::DispatcherTimer },
    { KnownTypeIndex::DoubleAnimation },
    { KnownTypeIndex::DynamicTimeline },
    { KnownTypeIndex::EllipseGeometry },
    { KnownTypeIndex::ExponentialEase },
    { KnownTypeIndex::FloatCollection },
    { KnownTypeIndex::FlyoutPresenter },
    { KnownTypeIndex::FocusVisualKind },
    { KnownTypeIndex::HWCompMediaNode },
    { KnownTypeIndex::HyperlinkButton },
    { KnownTypeIndex::IBindableVector },
    { KnownTypeIndex::ICollectionView },
    { KnownTypeIndex::IElementFactory },
    { KnownTypeIndex::InteractionBase },
    { KnownTypeIndex::ItemsStackPanel },
    { KnownTypeIndex::IValueConverter },
    { KnownTypeIndex::LengthConverter },
    { KnownTypeIndex::MarkupExtension },
    { KnownTypeIndex::MatrixTransform },
    { KnownTypeIndex::ParametricCurve },
    { KnownTypeIndex::PlaneProjection },
    { KnownTypeIndex::PointCollection },
    { KnownTypeIndex::PointerKeyFrame },
    { KnownTypeIndex::PolyLineSegment },
    { KnownTypeIndex::RequiresPointer },
    { KnownTypeIndex::RotateTransform },
    { KnownTypeIndex::RoutedEventArgs },
    { KnownTypeIndex::ScrollEventArgs },
    { KnownTypeIndex::ScrollEventType },
    { KnownTypeIndex::SolidColorBrush },
    { KnownTypeIndex::TemplateBinding },
    { KnownTypeIndex::TemplateContent },
    { KnownTypeIndex::TextDecorations },
    { KnownTypeIndex::TextHighlighter },
    { KnownTypeIndex::TextHintingMode },
    { KnownTypeIndex::WriteableBitmap },
    { KnownTypeIndex::ApplicationTheme },
    { KnownTypeIndex::AutomationEvents },
    { KnownTypeIndex::BackgroundSizing },
    { KnownTypeIndex::BitmapIconSource },
    { KnownTypeIndex::BrushMappingMode },
    { KnownTypeIndex::CalendarViewItem },
    { KnownTypeIndex::CollectionChange },
    { KnownTypeIndex::ColumnDefinition },
    { KnownTypeIndex::ContentPresenter },
    { KnownTypeIndex::DependencyObject },
    { KnownTypeIndex::DoubleCollection },
    { KnownTypeIndex::ElementSoundKind },
    { KnownTypeIndex::ElementSoundMode },
    { KnownTypeIndex::FontNumeralStyle },
    { KnownTypeIndex::FrameworkElement },
    { KnownTypeIndex::GeneralTransform },
    { KnownTypeIndex::InlineCollection },
    { KnownTypeIndex::IsTypeNotPresent },
    { KnownTypeIndex::ListViewBaseItem },
    { KnownTypeIndex::LogicalDirection },
    { KnownTypeIndex::ParallelTimeline },
    { KnownTypeIndex::PatternInterface },
    { KnownTypeIndex::PointerDirection },
    { KnownTypeIndex::RootScrollViewer },
    { KnownTypeIndex::RowOrColumnMajor },
    { KnownTypeIndex::ScalarTransition },
    { KnownTypeIndex::StartupEventArgs },
    { KnownTypeIndex::StateTriggerBase },
    { KnownTypeIndex::StretchDirection },
    { KnownTypeIndex::StyleSimulations },
    { KnownTypeIndex::SwapChainElement },
    { KnownTypeIndex::SymbolIconSource },
    { KnownTypeIndex::TextRangeAdapter },
    { KnownTypeIndex::TextReadingOrder },
    { KnownTypeIndex::TransitionTarget },
    { KnownTypeIndex::VisualStateGroup },
    { KnownTypeIndex::VisualTransition },
    { KnownTypeIndex::XamlMarkupHelper },
    { KnownTypeIndex::AccessibilityView },
    { KnownTypeIndex::AddPagesEventArgs },
    { KnownTypeIndex::AutomationStyleId },
    { KnownTypeIndex::EndPrintEventArgs },
    { KnownTypeIndex::FrameworkTemplate },
    { KnownTypeIndex::GeneratorPosition },
    { KnownTypeIndex::HubAutomationPeer },
    { KnownTypeIndex::IBindableIterable },
    { KnownTypeIndex::IBindableIterator },
    { KnownTypeIndex::IconSourceElement },
    { KnownTypeIndex::InlineUIContainer },
    { KnownTypeIndex::InternalTransform },
    { KnownTypeIndex::IsPropertyPresent },
    { KnownTypeIndex::IXamlTypeResolver },
    { KnownTypeIndex::ManipulationDelta },
    { KnownTypeIndex::ManipulationModes },
    { KnownTypeIndex::ManipulationPivot },
    { KnownTypeIndex::MenuFlyoutSubItem },
    { KnownTypeIndex::NullKeyedResource },
    { KnownTypeIndex::PaginateEventArgs },
    { KnownTypeIndex::PointerCollection },
    { KnownTypeIndex::PointerDeviceType },
    { KnownTypeIndex::PolyBezierSegment },
    { KnownTypeIndex::RectangleGeometry },
    { KnownTypeIndex::RenderedEventArgs },
    { KnownTypeIndex::StandardUICommand },
    { KnownTypeIndex::TextRangeProvider },
    { KnownTypeIndex::TextRenderingMode },
    { KnownTypeIndex::TriggerCollection },
    { KnownTypeIndex::Vector3Transition },
    { KnownTypeIndex::VerticalAlignment },
    { KnownTypeIndex::VirtualizingPanel },
    { KnownTypeIndex::WindowVisualState },
    { KnownTypeIndex::XamlBindingHelper },
    { KnownTypeIndex::AnimationDirection },
    { KnownTypeIndex::AppBarLightDismiss },
    { KnownTypeIndex::AppBarToggleButton },
    { KnownTypeIndex::CalendarDatePicker },
    { KnownTypeIndex::CaretBrowsingCaret },
    { KnownTypeIndex::CompositeTransform },
    { KnownTypeIndex::ConnectedAnimation },
    { KnownTypeIndex::DragDeltaEventArgs },
    { KnownTypeIndex::EasingFunctionBase },
    { KnownTypeIndex::FrameworkElementEx },
    { KnownTypeIndex::GeneratorDirection },
    { KnownTypeIndex::GeometryCollection },
    { KnownTypeIndex::GridViewHeaderItem },
    { KnownTypeIndex::GroupStyleSelector },
    { KnownTypeIndex::ItemAutomationPeer },
    { KnownTypeIndex::ItemClickEventArgs },
    { KnownTypeIndex::ItemsPanelTemplate },
    { KnownTypeIndex::KeyRoutedEventArgs },
    { KnownTypeIndex::ListViewHeaderItem },
    { KnownTypeIndex::LoadedImageSurface },
    { KnownTypeIndex::Matrix3DProjection },
    { KnownTypeIndex::MediaPlayerElement },
    { KnownTypeIndex::MenuFlyoutItemBase },
    { KnownTypeIndex::PasswordRevealMode },
    { KnownTypeIndex::PopupPlacementMode },
    { KnownTypeIndex::PrintPageEventArgs },
    { KnownTypeIndex::PVLStaggerFunction },
    { KnownTypeIndex::RelativeSourceMode },
    { KnownTypeIndex::RenderingEventArgs },
    { KnownTypeIndex::RenderTargetBitmap },
    { KnownTypeIndex::ResourceDictionary },
    { KnownTypeIndex::SurfaceImageSource },
    { KnownTypeIndex::TargetPropertyPath },
    { KnownTypeIndex::TextFormattingMode },
    { KnownTypeIndex::TextPointerWrapper },
    { KnownTypeIndex::ThemeAnimationBase },
    { KnownTypeIndex::TimelineCollection },
    { KnownTypeIndex::TranslateTransform },
    { KnownTypeIndex::VirtualizationMode },
    { KnownTypeIndex::VisualStateManager },
    { KnownTypeIndex::AutomationActiveEnd },
    { KnownTypeIndex::BeginPrintEventArgs },
    { KnownTypeIndex::BitmapCreateOptions },
    { KnownTypeIndex::CalendarViewDayItem },
    { KnownTypeIndex::CollectionViewGroup },
    { KnownTypeIndex::CommandingContainer },
    { KnownTypeIndex::ContentDialogButton },
    { KnownTypeIndex::ContentDialogResult },
    { KnownTypeIndex::EasingColorKeyFrame },
    { KnownTypeIndex::EasingPointKeyFrame },
    { KnownTypeIndex::ExpandCollapseState },
    { KnownTypeIndex::FlyoutPlacementMode },
    { KnownTypeIndex::FontEastAsianWidths },
    { KnownTypeIndex::FullWindowMediaRoot },
    { KnownTypeIndex::HorizontalAlignment },
    { KnownTypeIndex::HWCompSwapChainNode },
    { KnownTypeIndex::IBindableVectorView },
    { KnownTypeIndex::ImageAutomationPeer },
    { KnownTypeIndex::InputScopeNameValue },
    { KnownTypeIndex::InputValidationKind },
    { KnownTypeIndex::InputValidationMode },
    { KnownTypeIndex::IProvideValueTarget },
    { KnownTypeIndex::IRootObjectProvider },
    { KnownTypeIndex::KeyboardAccelerator },
    { KnownTypeIndex::KeyTipPlacementMode },
    { KnownTypeIndex::LinearColorKeyFrame },
    { KnownTypeIndex::LinearGradientBrush },
    { KnownTypeIndex::LinearPointKeyFrame },
    { KnownTypeIndex::ListViewReorderMode },
    { KnownTypeIndex::MarkupExtensionBase },
    { KnownTypeIndex::MarkupExtensionType },
    { KnownTypeIndex::MenuFlyoutPresenter },
    { KnownTypeIndex::MenuFlyoutSeparator },
    { KnownTypeIndex::NavigationCacheMode },
    { KnownTypeIndex::NavigationEventArgs },
    { KnownTypeIndex::PaneThemeTransition },
    { KnownTypeIndex::PopInThemeAnimation },
    { KnownTypeIndex::PopupAutomationPeer },
    { KnownTypeIndex::PrintDocumentFormat },
    { KnownTypeIndex::ScrollBarVisibility },
    { KnownTypeIndex::SnapPointsAlignment },
    { KnownTypeIndex::SplineColorKeyFrame },
    { KnownTypeIndex::SplinePointKeyFrame },
    { KnownTypeIndex::StaggerFunctionBase },
    { KnownTypeIndex::TextHighlighterBase },
    { KnownTypeIndex::TextRangeCollection },
    { KnownTypeIndex::ThumbAutomationPeer },
    { KnownTypeIndex::TransformCollection },
    { KnownTypeIndex::UIElementCollection },
    { KnownTypeIndex::UpdateSourceTrigger },
    { KnownTypeIndex::VirtualKeyModifiers },
    { KnownTypeIndex::XamlLightCollection },
    { KnownTypeIndex::AppBarAutomationPeer },
    { KnownTypeIndex::AutomationAnnotation },
    { KnownTypeIndex::AutomationProperties },
    { KnownTypeIndex::ButtonAutomationPeer },
    { KnownTypeIndex::CalendarViewBaseItem },
    { KnownTypeIndex::CollectionViewSource },
    { KnownTypeIndex::ComboBoxLightDismiss },
    { KnownTypeIndex::CompositeTransform3D },
    { KnownTypeIndex::ContextMenuEventArgs },
    { KnownTypeIndex::DataPackageOperation },
    { KnownTypeIndex::DataTemplateSelector },
    { KnownTypeIndex::DragStartedEventArgs },
    { KnownTypeIndex::EasingDoubleKeyFrame },
    { KnownTypeIndex::ElementCompositeMode },
    { KnownTypeIndex::FadeInThemeAnimation },
    { KnownTypeIndex::FocusInputDeviceKind },
    { KnownTypeIndex::FontNumeralAlignment },
    { KnownTypeIndex::GradientSpreadMethod },
    { KnownTypeIndex::GroupHeaderPlacement },
    { KnownTypeIndex::GroupStyleCollection },
    { KnownTypeIndex::HubSectionCollection },
    { KnownTypeIndex::HWCompRenderDataNode },
    { KnownTypeIndex::IMediaPlaybackSource },
    { KnownTypeIndex::IPrintDocumentSource },
    { KnownTypeIndex::IsApiContractPresent },
    { KnownTypeIndex::IsPropertyNotPresent },
    { KnownTypeIndex::IXamlServiceProvider },
    { KnownTypeIndex::LinearDoubleKeyFrame },
    { KnownTypeIndex::LineStackingStrategy },
    { KnownTypeIndex::LosingFocusEventArgs },
    { KnownTypeIndex::MediaPlayerPresenter },
    { KnownTypeIndex::PathFigureCollection },
    { KnownTypeIndex::PopOutThemeAnimation },
    { KnownTypeIndex::PopupThemeTransition },
    { KnownTypeIndex::PreviewPageCountType },
    { KnownTypeIndex::ScrollContentControl },
    { KnownTypeIndex::SetterBaseCollection },
    { KnownTypeIndex::SizeChangedEventArgs },
    { KnownTypeIndex::SliderAutomationPeer },
    { KnownTypeIndex::SoftwareBitmapSource },
    { KnownTypeIndex::SplineDoubleKeyFrame },
    { KnownTypeIndex::SplitViewDisplayMode },
    { KnownTypeIndex::StoryboardCollection },
    { KnownTypeIndex::TextChangedEventArgs },
    { KnownTypeIndex::TextSelectionGripper },
    { KnownTypeIndex::ToggleMenuFlyoutItem },
    { KnownTypeIndex::TransitionCollection },
    { KnownTypeIndex::VectorCollectionView },
    { KnownTypeIndex::ApplicationBarService },
    { KnownTypeIndex::AutomationBulletStyle },
    { KnownTypeIndex::AutomationControlType },
    { KnownTypeIndex::AutomationLiveSetting },
    { KnownTypeIndex::AutomationOrientation },
    { KnownTypeIndex::ColorPaletteResources },
    { KnownTypeIndex::DiscreteColorKeyFrame },
    { KnownTypeIndex::DiscretePointKeyFrame },
    { KnownTypeIndex::DisplayMemberTemplate },
    { KnownTypeIndex::DragStartingEventArgs },
    { KnownTypeIndex::DrillInThemeAnimation },
    { KnownTypeIndex::EdgeUIThemeTransition },
    { KnownTypeIndex::FadeOutThemeAnimation },
    { KnownTypeIndex::FailedMediaStreamKind },
    { KnownTypeIndex::FocusEngagedEventArgs },
    { KnownTypeIndex::FontEastAsianLanguage },
    { KnownTypeIndex::GettingFocusEventArgs },
    { KnownTypeIndex::GridViewItemPresenter },
    { KnownTypeIndex::IScrollAnchorProvider },
    { KnownTypeIndex::ListBoxAutomationPeer },
    { KnownTypeIndex::ListViewItemPresenter },
    { KnownTypeIndex::ListViewSelectionMode },
    { KnownTypeIndex::MediaSwapChainElement },
    { KnownTypeIndex::ParserServiceProvider },
    { KnownTypeIndex::PathSegmentCollection },
    { KnownTypeIndex::RichTextBlockOverflow },
    { KnownTypeIndex::StandardUICommandKind },
    { KnownTypeIndex::SynchronizedInputType },
    { KnownTypeIndex::TappedRoutedEventArgs },
    { KnownTypeIndex::TextBoxAutomationPeer },
    { KnownTypeIndex::TextElementCollection },
    { KnownTypeIndex::ToolTipAutomationPeer },
    { KnownTypeIndex::VariableSizedWrapGrid },
    { KnownTypeIndex::VisualStateCollection },
    { KnownTypeIndex::AppBarElementContainer },
    { KnownTypeIndex::AppBarTemplateSettings },
    { KnownTypeIndex::AutomationHeadingLevel },
    { KnownTypeIndex::AutomationLandmarkType },
    { KnownTypeIndex::BindingFailedEventArgs },
    { KnownTypeIndex::CheckBoxAutomationPeer },
    { KnownTypeIndex::ColorInterpolationMode },
    { KnownTypeIndex::ComboBoxAutomationPeer },
    { KnownTypeIndex::ConnectedAnimationRoot },
    { KnownTypeIndex::ContentDialogPlacement },
    { KnownTypeIndex::ContentThemeTransition },
    { KnownTypeIndex::ControlHeaderPlacement },
    { KnownTypeIndex::DiscreteDoubleKeyFrame },
    { KnownTypeIndex::DiscreteObjectKeyFrame },
    { KnownTypeIndex::DragCompletedEventArgs },
    { KnownTypeIndex::DragItemThemeAnimation },
    { KnownTypeIndex::DragOverThemeAnimation },
    { KnownTypeIndex::DrillOutThemeAnimation },
    { KnownTypeIndex::DropCompletedEventArgs },
    { KnownTypeIndex::EdgeTransitionLocation },
    { KnownTypeIndex::FlipViewAutomationPeer },
    { KnownTypeIndex::GradientStopCollection },
    { KnownTypeIndex::GridViewAutomationPeer },
    { KnownTypeIndex::HoldingRoutedEventArgs },
    { KnownTypeIndex::IDataTemplateComponent },
    { KnownTypeIndex::IDataTemplateExtension },
    { KnownTypeIndex::InputValidationCommand },
    { KnownTypeIndex::InputValidationContext },
    { KnownTypeIndex::ItemContainerGenerator },
    { KnownTypeIndex::IterableCollectionView },
    { KnownTypeIndex::KeyboardNavigationMode },
    { KnownTypeIndex::ListViewAutomationPeer },
    { KnownTypeIndex::ListViewBaseHeaderItem },
    { KnownTypeIndex::ManipulationVelocities },
    { KnownTypeIndex::MediaTransportControls },
    { KnownTypeIndex::OpticalMarginAlignment },
    { KnownTypeIndex::ParametricCurveSegment },
    { KnownTypeIndex::PerspectiveTransform3D },
    { KnownTypeIndex::PointerRoutedEventArgs },
    { KnownTypeIndex::QuadraticBezierSegment },
    { KnownTypeIndex::RenderTargetBitmapRoot },
    { KnownTypeIndex::ReorderThemeTransition },
    { KnownTypeIndex::ScrollContentPresenter },
    { KnownTypeIndex::ScrollingIndicatorMode },
    { KnownTypeIndex::SelectorAutomationPeer },
    { KnownTypeIndex::SplitViewPanePlacement },
    { KnownTypeIndex::StateTriggerCollection },
    { KnownTypeIndex::SupportedTextSelection },
    { KnownTypeIndex::VirtualizingStackPanel },
    { KnownTypeIndex::WindowCreatedEventArgs },
    { KnownTypeIndex::WindowInteractionState },
    { KnownTypeIndex::AppBarClosedDisplayMode },
    { KnownTypeIndex::AutomationCaretBidiMode },
    { KnownTypeIndex::AutomationCaretPosition },
    { KnownTypeIndex::AutomationOutlineStyles },
    { KnownTypeIndex::AutomationPeerEventArgs },
    { KnownTypeIndex::BasedOnSetterCollection },
    { KnownTypeIndex::CalendarViewDisplayMode },
    { KnownTypeIndex::ColorKeyFrameCollection },
    { KnownTypeIndex::CommandBarLabelPosition },
    { KnownTypeIndex::DependencyObjectWrapper },
    { KnownTypeIndex::DependencyPropertyProxy },
    { KnownTypeIndex::ElementSoundPlayerState },
    { KnownTypeIndex::ElementSpatialAudioMode },
    { KnownTypeIndex::EntranceThemeTransition },
    { KnownTypeIndex::ExternalObjectReference },
    { KnownTypeIndex::GetPreviewPageEventArgs },
    { KnownTypeIndex::GroupItemAutomationPeer },
    { KnownTypeIndex::HyperlinkAutomationPeer },
    { KnownTypeIndex::HyperlinkClickEventArgs },
    { KnownTypeIndex::InertiaRotationBehavior },
    { KnownTypeIndex::IsApiContractNotPresent },
    { KnownTypeIndex::ItemsUpdatingScrollMode },
    { KnownTypeIndex::LayoutTransitionElement },
    { KnownTypeIndex::LightDismissOverlayMode },
    { KnownTypeIndex::PanelScrollingDirection },
    { KnownTypeIndex::PointerUpThemeAnimation },
    { KnownTypeIndex::PointKeyFrameCollection },
    { KnownTypeIndex::PopupRootAutomationPeer },
    { KnownTypeIndex::RangeBaseAutomationPeer },
    { KnownTypeIndex::RichEditClipboardFormat },
    { KnownTypeIndex::RowDefinitionCollection },
    { KnownTypeIndex::ScrollBarAutomationPeer },
    { KnownTypeIndex::ScrollIntoViewAlignment },
    { KnownTypeIndex::SplitOpenThemeAnimation },
    { KnownTypeIndex::SwipeBackThemeAnimation },
    { KnownTypeIndex::SwipeHintThemeAnimation },
    { KnownTypeIndex::TextBlockAutomationPeer },
    { KnownTypeIndex::ToolTipTemplateSettings },
    { KnownTypeIndex::TriggerActionCollection },
    { KnownTypeIndex::UIElementWeakCollection },
    { KnownTypeIndex::AddDeleteThemeTransition },
    { KnownTypeIndex::AnchorRequestedEventArgs },
    { KnownTypeIndex::AutomationAnimationStyle },
    { KnownTypeIndex::AutomationFlowDirections },
    { KnownTypeIndex::AutomationPeerAnnotation },
    { KnownTypeIndex::AutomationPeerCollection },
    { KnownTypeIndex::ButtonBaseAutomationPeer },
    { KnownTypeIndex::CandidateWindowAlignment },
    { KnownTypeIndex::ComboBoxTemplateSettings },
    { KnownTypeIndex::CurrentChangingEventArgs },
    { KnownTypeIndex::DatePickerAutomationPeer },
    { KnownTypeIndex::DoubleKeyFrameCollection },
    { KnownTypeIndex::ExceptionRoutedEventArgs },
    { KnownTypeIndex::FocusDisengagedEventArgs },
    { KnownTypeIndex::FocusNavigationDirection },
    { KnownTypeIndex::HubSectionAutomationPeer },
    { KnownTypeIndex::InertiaExpansionBehavior },
    { KnownTypeIndex::InputPaneThemeTransition },
    { KnownTypeIndex::InputScopeNameCollection },
    { KnownTypeIndex::ISemanticZoomInformation },
    { KnownTypeIndex::MenuPopupThemeTransition },
    { KnownTypeIndex::NavigationTransitionInfo },
    { KnownTypeIndex::ObjectKeyFrameCollection },
    { KnownTypeIndex::RepositionThemeAnimation },
    { KnownTypeIndex::SeekSliderAutomationPeer },
    { KnownTypeIndex::SplitCloseThemeAnimation },
    { KnownTypeIndex::SvgImageSourceLoadStatus },
    { KnownTypeIndex::SwapChainBackgroundPanel },
    { KnownTypeIndex::TimePickerAutomationPeer },
    { KnownTypeIndex::VectorViewCollectionView },
    { KnownTypeIndex::XamlCompositionBrushBase },
    { KnownTypeIndex::XamlIslandRootCollection },
    { KnownTypeIndex::XamlRootChangedEventArgs },
    { KnownTypeIndex::AccessKeyInvokedEventArgs },
    { KnownTypeIndex::CalendarViewSelectionMode },
    { KnownTypeIndex::ComponentResourceLocation },
    { KnownTypeIndex::ConnectedAnimationService },
    { KnownTypeIndex::ContextRequestedEventArgs },
    { KnownTypeIndex::DownloadProgressEventArgs },
    { KnownTypeIndex::ElementCompositionPreview },
    { KnownTypeIndex::ExecuteRequestedEventArgs },
    { KnownTypeIndex::FastPlayFallbackBehaviour },
    { KnownTypeIndex::GroupedDataCollectionView },
    { KnownTypeIndex::IBindableObservableVector },
    { KnownTypeIndex::IncrementalLoadingTrigger },
    { KnownTypeIndex::IRawElementProviderSimple },
    { KnownTypeIndex::IsEnabledChangedEventArgs },
    { KnownTypeIndex::ListBoxItemAutomationPeer },
    { KnownTypeIndex::ListViewBaseItemPresenter },
    { KnownTypeIndex::ListViewPersistenceHelper },
    { KnownTypeIndex::ModernCollectionBasePanel },
    { KnownTypeIndex::NavigatingCancelEventArgs },
    { KnownTypeIndex::NavigationFailedEventArgs },
    { KnownTypeIndex::OrientedVirtualizingPanel },
    { KnownTypeIndex::ParametricCurveCollection },
    { KnownTypeIndex::PasswordBoxAutomationPeer },
    { KnownTypeIndex::PointerDownThemeAnimation },
    { KnownTypeIndex::PointerKeyFrameCollection },
    { KnownTypeIndex::RadioButtonAutomationPeer },
    { KnownTypeIndex::RepositionThemeTransition },
    { KnownTypeIndex::RichEditBoxAutomationPeer },
    { KnownTypeIndex::SelectionChangedEventArgs },
    { KnownTypeIndex::SplitViewTemplateSettings },
    { KnownTypeIndex::TextBoxBaseAutomationPeer },
    { KnownTypeIndex::TextControlPasteEventArgs },
    { KnownTypeIndex::TextHighlighterCollection },
    { KnownTypeIndex::VirtualSurfaceImageSource },
    { KnownTypeIndex::XYFocusNavigationStrategy },
    { KnownTypeIndex::AppBarButtonAutomationPeer },
    { KnownTypeIndex::AutomationNotificationKind },
    { KnownTypeIndex::CalendarViewAutomationPeer },
    { KnownTypeIndex::ColumnDefinitionCollection },
    { KnownTypeIndex::ComboBoxItemAutomationPeer },
    { KnownTypeIndex::CommandBarTemplateSettings },
    { KnownTypeIndex::DependencyObjectCollection },
    { KnownTypeIndex::DragItemsStartingEventArgs },
    { KnownTypeIndex::FlipViewItemAutomationPeer },
    { KnownTypeIndex::FlyoutBaseClosingEventArgs },
    { KnownTypeIndex::GridViewItemAutomationPeer },
    { KnownTypeIndex::InertiaTranslationBehavior },
    { KnownTypeIndex::ItemsControlAutomationPeer },
    { KnownTypeIndex::ListViewBaseAutomationPeer },
    { KnownTypeIndex::ListViewItemAutomationPeer },
    { KnownTypeIndex::MediaFailedRoutedEventArgs },
    { KnownTypeIndex::MediaPlaybackItemConverter },
    { KnownTypeIndex::PolyQuadraticBezierSegment },
    { KnownTypeIndex::RepeatButtonAutomationPeer },
    { KnownTypeIndex::RightTappedRoutedEventArgs },
    { KnownTypeIndex::ScrollViewerAutomationPeer },
    { KnownTypeIndex::SelectorItemAutomationPeer },
    { KnownTypeIndex::SemanticZoomAutomationPeer },
    { KnownTypeIndex::ToggleButtonAutomationPeer },
    { KnownTypeIndex::ToggleSwitchAutomationPeer },
    { KnownTypeIndex::ValidationErrorsCollection },
    { KnownTypeIndex::VisualStateGroupCollection },
    { KnownTypeIndex::VisualTransitionCollection },
    { KnownTypeIndex::CommandBarElementCollection },
    { KnownTypeIndex::CommandBarOverflowPresenter },
    { KnownTypeIndex::ConnectedAnimationComponent },
    { KnownTypeIndex::DoubleTappedRoutedEventArgs },
    { KnownTypeIndex::DragItemsCompletedEventArgs },
    { KnownTypeIndex::LayoutTransitionStaggerItem },
    { KnownTypeIndex::LoadedImageSourceLoadStatus },
    { KnownTypeIndex::PickerFlyoutThemeTransition },
    { KnownTypeIndex::RichTextBlockAutomationPeer },
    { KnownTypeIndex::SplitViewPaneAutomationPeer },
    { KnownTypeIndex::UnhandledExceptionEventArgs },
    { KnownTypeIndex::Vector3TransitionComponents },
    { KnownTypeIndex::VisualStateChangedEventArgs },
    { KnownTypeIndex::XamlRenderingBackgroundTask },
    { KnownTypeIndex::AppBarButtonTemplateSettings },
    { KnownTypeIndex::AutomationTextEditChangeType },
    { KnownTypeIndex::AutoSuggestBoxAutomationPeer },
    { KnownTypeIndex::CalendarViewTemplateSettings },
    { KnownTypeIndex::CanExecuteRequestedEventArgs },
    { KnownTypeIndex::ColorAnimationUsingKeyFrames },
    { KnownTypeIndex::ContentDialogClosedEventArgs },
    { KnownTypeIndex::ContentDialogOpenedEventArgs },
    { KnownTypeIndex::DropTargetItemThemeAnimation },
    { KnownTypeIndex::GridViewItemTemplateSettings },
    { KnownTypeIndex::LandmarkTargetAutomationPeer },
    { KnownTypeIndex::ListViewItemTemplateSettings },
    { KnownTypeIndex::MediaTransportControlsHelper },
    { KnownTypeIndex::MenuFlyoutItemAutomationPeer },
    { KnownTypeIndex::MenuFlyoutItemBaseCollection },
    { KnownTypeIndex::NamedContainerAutomationPeer },
    { KnownTypeIndex::PointAnimationUsingKeyFrames },
    { KnownTypeIndex::ResourceDictionaryCollection },
    { KnownTypeIndex::SecondaryContentRelationship },
    { KnownTypeIndex::TextBoxTextChangingEventArgs },
    { KnownTypeIndex::ToggleSwitchTemplateSettings },
    { KnownTypeIndex::AutomationNavigationDirection },
    { KnownTypeIndex::AutomationStructureChangeType },
    { KnownTypeIndex::ContentDialogClosingEventArgs },
    { KnownTypeIndex::DoubleAnimationUsingKeyFrames },
    { KnownTypeIndex::ElementHighContrastAdjustment },
    { KnownTypeIndex::FlyoutPresenterAutomationPeer },
    { KnownTypeIndex::FocusManagerGotFocusEventArgs },
    { KnownTypeIndex::HWRedirectedCompTreeNodeWinRT },
    { KnownTypeIndex::HyperlinkButtonAutomationPeer },
    { KnownTypeIndex::InputValidationErrorEventArgs },
    { KnownTypeIndex::IsTextTrimmedChangedEventArgs },
    { KnownTypeIndex::KeyboardAcceleratorCollection },
    { KnownTypeIndex::ListBoxItemDataAutomationPeer },
    { KnownTypeIndex::NotifyCollectionChangedAction },
    { KnownTypeIndex::ObjectAnimationUsingKeyFrames },
    { KnownTypeIndex::SplitViewPaneClosingEventArgs },
    { KnownTypeIndex::SvgImageSourceFailedEventArgs },
    { KnownTypeIndex::SvgImageSourceOpenedEventArgs },
    { KnownTypeIndex::TextCompositionEndedEventArgs },
    { KnownTypeIndex::XYFocusKeyboardNavigationMode },
    { KnownTypeIndex::ApplicationRequiresPointerMode },
    { KnownTypeIndex::AutomationAnnotationCollection },
    { KnownTypeIndex::CalendarViewItemAutomationPeer },
    { KnownTypeIndex::ComboBoxItemDataAutomationPeer },
    { KnownTypeIndex::ComboBoxTextSubmittedEventArgs },
    { KnownTypeIndex::CommandBarDefaultLabelPosition },
    { KnownTypeIndex::DisabledFormattingAccelerators },
    { KnownTypeIndex::FlipViewItemDataAutomationPeer },
    { KnownTypeIndex::FocusedElementRemovedEventArgs },
    { KnownTypeIndex::FocusManagerLostFocusEventArgs },
    { KnownTypeIndex::FrameworkElementAutomationPeer },
    { KnownTypeIndex::GridViewItemDataAutomationPeer },
    { KnownTypeIndex::HubSectionHeaderClickEventArgs },
    { KnownTypeIndex::ListViewBaseItemAutomationPeer },
    { KnownTypeIndex::ListViewItemDataAutomationPeer },
    { KnownTypeIndex::ListViewItemPresenterCheckMode },
    { KnownTypeIndex::MenuFlyoutItemTemplateSettings },
    { KnownTypeIndex::NoFocusCandidateFoundEventArgs },
    { KnownTypeIndex::PointerAnimationUsingKeyFrames },
    { KnownTypeIndex::RangeBaseValueChangedEventArgs },
    { KnownTypeIndex::SectionsInViewChangedEventArgs },
    { KnownTypeIndex::BringIntoViewRequestedEventArgs },
    { KnownTypeIndex::CleanUpVirtualizedItemEventArgs },
    { KnownTypeIndex::ComboBoxSelectionChangedTrigger },
    { KnownTypeIndex::CommandBarDynamicOverflowAction },
    { KnownTypeIndex::DatePickerValueChangedEventArgs },
    { KnownTypeIndex::InputValidationErrorEventAction },
    { KnownTypeIndex::ListViewBaseItemSecondaryChrome },
    { KnownTypeIndex::MenuFlyoutSubItemAutomationPeer },
    { KnownTypeIndex::PresentationFrameworkCollection },
    { KnownTypeIndex::TextCompositionChangedEventArgs },
    { KnownTypeIndex::TextCompositionStartedEventArgs },
    { KnownTypeIndex::TimePickerValueChangedEventArgs },
    { KnownTypeIndex::AppBarLightDismissAutomationPeer },
    { KnownTypeIndex::AppBarToggleButtonAutomationPeer },
    { KnownTypeIndex::AutomationNotificationProcessing },
    { KnownTypeIndex::CalendarDatePickerAutomationPeer },
    { KnownTypeIndex::CalendarViewHeaderAutomationPeer },
    { KnownTypeIndex::CharacterReceivedRoutedEventArgs },
    { KnownTypeIndex::GridViewHeaderItemAutomationPeer },
    { KnownTypeIndex::HWWindowedPopupCompTreeNodeWinRT },
    { KnownTypeIndex::KeyboardAcceleratorPlacementMode },
    { KnownTypeIndex::ListViewBaseItemTemplateSettings },
    { KnownTypeIndex::ListViewHeaderItemAutomationPeer },
    { KnownTypeIndex::ManipulationDeltaRoutedEventArgs },
    { KnownTypeIndex::MediaPlayerElementAutomationPeer },
    { KnownTypeIndex::ParametricCurveSegmentCollection },
    { KnownTypeIndex::RichEditBoxTextChangingEventArgs },
    { KnownTypeIndex::ScrollViewerViewChangedEventArgs },
    { KnownTypeIndex::SemanticZoomViewChangedEventArgs },
    { KnownTypeIndex::ApplicationHighContrastAdjustment },
    { KnownTypeIndex::AutomationTextDecorationLineStyle },
    { KnownTypeIndex::AutoSuggestionBoxTextChangeReason },
    { KnownTypeIndex::CalendarViewDayItemAutomationPeer },
    { KnownTypeIndex::CommandingContextChangedEventArgs },
    { KnownTypeIndex::ContentDialogButtonClickEventArgs },
    { KnownTypeIndex::EffectiveViewportChangedEventArgs },
    { KnownTypeIndex::FullWindowMediaRootAutomationPeer },
    { KnownTypeIndex::MenuFlyoutPresenterAutomationPeer },
    { KnownTypeIndex::ResourceManagerRequestedEventArgs },
    { KnownTypeIndex::ScrollViewerViewChangingEventArgs },
    { KnownTypeIndex::TextBoxSelectionChangingEventArgs },
    { KnownTypeIndex::XYFocusNavigationStrategyOverride },
    { KnownTypeIndex::AccessKeyDisplayDismissedEventArgs },
    { KnownTypeIndex::AccessKeyDisplayRequestedEventArgs },
    { KnownTypeIndex::AppBarToggleButtonTemplateSettings },
    { KnownTypeIndex::AutomationPeerAnnotationCollection },
    { KnownTypeIndex::AutoSuggestBoxTextChangedEventArgs },
    { KnownTypeIndex::CalendarScrollViewerAutomationPeer },
    { KnownTypeIndex::CalendarViewBaseItemAutomationPeer },
    { KnownTypeIndex::ComboBoxLightDismissAutomationPeer },
    { KnownTypeIndex::CommandBarOverflowButtonVisibility },
    { KnownTypeIndex::ListViewBaseItemDataAutomationPeer },
    { KnownTypeIndex::ManipulationStartedRoutedEventArgs },
    { KnownTypeIndex::TextBoxBeforeTextChangingEventArgs },
    { KnownTypeIndex::ToggleMenuFlyoutItemAutomationPeer },
    { KnownTypeIndex::HasValidationErrorsChangedEventArgs },
    { KnownTypeIndex::KeyboardAcceleratorInvokedEventArgs },
    { KnownTypeIndex::ManipulationStartingRoutedEventArgs },
    { KnownTypeIndex::MenuFlyoutPresenterTemplateSettings },
    { KnownTypeIndex::RichTextBlockOverflowAutomationPeer },
    { KnownTypeIndex::SplitViewLightDismissAutomationPeer },
    { KnownTypeIndex::CalendarViewDayItemChangingEventArgs },
    { KnownTypeIndex::ListViewBaseHeaderItemAutomationPeer },
    { KnownTypeIndex::ManipulationCompletedRoutedEventArgs },
    { KnownTypeIndex::MediaTransportControlsAutomationPeer },
    { KnownTypeIndex::PasswordBoxPasswordChangingEventArgs },
    { KnownTypeIndex::XamlResourceReferenceFailedEventArgs },
    { KnownTypeIndex::AutoSuggestBoxQuerySubmittedEventArgs },
    { KnownTypeIndex::CandidateWindowBoundsChangedEventArgs },
    { KnownTypeIndex::ContentDialogOpenCloseThemeTransition },
    { KnownTypeIndex::DynamicOverflowItemsChangingEventArgs },
    { KnownTypeIndex::RichEditBoxSelectionChangingEventArgs },
    { KnownTypeIndex::CalendarDatePickerDateChangedEventArgs },
    { KnownTypeIndex::TextControlCopyingToClipboardEventArgs },
    { KnownTypeIndex::TextControlCuttingToClipboardEventArgs },
    { KnownTypeIndex::AutoSuggestBoxSuggestionChosenEventArgs },
    { KnownTypeIndex::DatePickerSelectedValueChangedEventArgs },
    { KnownTypeIndex::FaceplateContentPresenterAutomationPeer },
    { KnownTypeIndex::LoadedImageSourceLoadCompletedEventArgs },
    { KnownTypeIndex::TimePickerSelectedValueChangedEventArgs },
    { KnownTypeIndex::DesktopWindowXamlSourceGotFocusEventArgs },
    { KnownTypeIndex::CalendarViewSelectedDatesChangedEventArgs },
    { KnownTypeIndex::ManipulationInertiaStartingRoutedEventArgs },
    { KnownTypeIndex::ListViewItemPresenterSelectionIndicatorMode },
    { KnownTypeIndex::MediaTransportControlsThumbnailRequestedEventArgs },
    { KnownTypeIndex::DesktopWindowXamlSourceTakeFocusRequestedEventArgs },
};

// Properties.
extern const MetaDataProperty c_aProperties[KnownPropertyCount] =
{
    // UnknownObject.UnknownProperty
    {
        KnownPropertyIndex::UnknownType_UnknownProperty, // Index name
        KnownTypeIndex::UnknownType, // Property type
        KnownTypeIndex::UnknownType, // Declaring type
        KnownTypeIndex::UnknownType, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition.Index
    {
        KnownPropertyIndex::GeneratorPosition_Index, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::GeneratorPosition, // Declaring type
        KnownTypeIndex::GeneratorPosition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition.Offset
    {
        KnownPropertyIndex::GeneratorPosition_Offset, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::GeneratorPosition, // Declaring type
        KnownTypeIndex::GeneratorPosition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Windows.UI.Xaml.Interop.TypeName.Kind
    {
        KnownPropertyIndex::TypeName_Kind, // Index name
        KnownTypeIndex::TypeKind, // Property type
        KnownTypeIndex::TypeName, // Declaring type
        KnownTypeIndex::TypeName, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Windows.UI.Xaml.Interop.TypeName.Name
    {
        KnownPropertyIndex::TypeName_Name, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::TypeName, // Declaring type
        KnownTypeIndex::TypeName, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.AcceleratorKey
    {
        KnownPropertyIndex::AutomationProperties_AcceleratorKey, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.AccessibilityView
    {
        KnownPropertyIndex::AutomationProperties_AccessibilityView, // Index name
        KnownTypeIndex::AccessibilityView, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.AccessKey
    {
        KnownPropertyIndex::AutomationProperties_AccessKey, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.Annotations
    {
        KnownPropertyIndex::AutomationProperties_Annotations, // Index name
        KnownTypeIndex::AutomationAnnotationCollection, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.AutomationControlType
    {
        KnownPropertyIndex::AutomationProperties_AutomationControlType, // Index name
        KnownTypeIndex::AutomationControlType, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.AutomationId
    {
        KnownPropertyIndex::AutomationProperties_AutomationId, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.ControlledPeers
    {
        KnownPropertyIndex::AutomationProperties_ControlledPeers, // Index name
        KnownTypeIndex::UIElementCollection, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.Culture
    {
        KnownPropertyIndex::AutomationProperties_Culture, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.DescribedBy
    {
        KnownPropertyIndex::AutomationProperties_DescribedBy, // Index name
        KnownTypeIndex::DependencyObjectCollection, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.FlowsFrom
    {
        KnownPropertyIndex::AutomationProperties_FlowsFrom, // Index name
        KnownTypeIndex::DependencyObjectCollection, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.FlowsTo
    {
        KnownPropertyIndex::AutomationProperties_FlowsTo, // Index name
        KnownTypeIndex::DependencyObjectCollection, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.FullDescription
    {
        KnownPropertyIndex::AutomationProperties_FullDescription, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.HeadingLevel
    {
        KnownPropertyIndex::AutomationProperties_HeadingLevel, // Index name
        KnownTypeIndex::AutomationHeadingLevel, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.HelpText
    {
        KnownPropertyIndex::AutomationProperties_HelpText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.IsDataValidForForm
    {
        KnownPropertyIndex::AutomationProperties_IsDataValidForForm, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.IsDialog
    {
        KnownPropertyIndex::AutomationProperties_IsDialog, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.IsPeripheral
    {
        KnownPropertyIndex::AutomationProperties_IsPeripheral, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.IsRequiredForForm
    {
        KnownPropertyIndex::AutomationProperties_IsRequiredForForm, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.ItemStatus
    {
        KnownPropertyIndex::AutomationProperties_ItemStatus, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.ItemType
    {
        KnownPropertyIndex::AutomationProperties_ItemType, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.LabeledBy
    {
        KnownPropertyIndex::AutomationProperties_LabeledBy, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.LandmarkType
    {
        KnownPropertyIndex::AutomationProperties_LandmarkType, // Index name
        KnownTypeIndex::AutomationLandmarkType, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.Level
    {
        KnownPropertyIndex::AutomationProperties_Level, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.LiveSetting
    {
        KnownPropertyIndex::AutomationProperties_LiveSetting, // Index name
        KnownTypeIndex::AutomationLiveSetting, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.LocalizedControlType
    {
        KnownPropertyIndex::AutomationProperties_LocalizedControlType, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.LocalizedLandmarkType
    {
        KnownPropertyIndex::AutomationProperties_LocalizedLandmarkType, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.Name
    {
        KnownPropertyIndex::AutomationProperties_Name, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.PositionInSet
    {
        KnownPropertyIndex::AutomationProperties_PositionInSet, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.SizeOfSet
    {
        KnownPropertyIndex::AutomationProperties_SizeOfSet, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::AutomationProperties, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.DependencyObject.Column
    {
        KnownPropertyIndex::DependencyObject_Column, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::DependencyObject, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.DependencyObject.DeferredStorage
    {
        KnownPropertyIndex::DependencyObject_DeferredStorage, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::DependencyObject, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.DependencyObject.Line
    {
        KnownPropertyIndex::DependencyObject_Line, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::DependencyObject, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.DependencyObject.Name
    {
        KnownPropertyIndex::DependencyObject_Name, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DependencyObject, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.DependencyObject.ParseUri
    {
        KnownPropertyIndex::DependencyObject_ParseUri, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DependencyObject, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.DependencyObject.RealizingProxy
    {
        KnownPropertyIndex::DependencyObject_RealizingProxy, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::DependencyObject, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.DependencyObject.XbfHash
    {
        KnownPropertyIndex::DependencyObject_XbfHash, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DependencyObject, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemContainerGenerator.DeferredUnlinkingPayload
    {
        KnownPropertyIndex::ItemContainerGenerator_DeferredUnlinkingPayload, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ItemContainerGenerator, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemContainerGenerator.IsRecycledContainer
    {
        KnownPropertyIndex::ItemContainerGenerator_IsRecycledContainer, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ItemContainerGenerator, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemContainerGenerator.ItemForItemContainer
    {
        KnownPropertyIndex::ItemContainerGenerator_ItemForItemContainer, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ItemContainerGenerator, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControlsHelper.DropoutOrder
    {
        KnownPropertyIndex::MediaTransportControlsHelper_DropoutOrder, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::MediaTransportControlsHelper, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable)), // Property flags
    },
    // Microsoft.UI.Xaml.Markup.ParserServiceProvider.BaseUri
    {
        KnownPropertyIndex::ParserServiceProvider_BaseUri, // Index name
        KnownTypeIndex::Uri, // Property type
        KnownTypeIndex::ParserServiceProvider, // Declaring type
        KnownTypeIndex::ParserServiceProvider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Markup.ParserServiceProvider.RootObject
    {
        KnownPropertyIndex::ParserServiceProvider_RootObject, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ParserServiceProvider, // Declaring type
        KnownTypeIndex::ParserServiceProvider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Markup.ParserServiceProvider.TargetObject
    {
        KnownPropertyIndex::ParserServiceProvider_TargetObject, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ParserServiceProvider, // Declaring type
        KnownTypeIndex::ParserServiceProvider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Markup.ParserServiceProvider.TargetProperty
    {
        KnownPropertyIndex::ParserServiceProvider_TargetProperty, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ParserServiceProvider, // Declaring type
        KnownTypeIndex::ParserServiceProvider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.TextOptions.TextFormattingMode
    {
        KnownPropertyIndex::TextOptions_TextFormattingMode, // Index name
        KnownTypeIndex::TextFormattingMode, // Property type
        KnownTypeIndex::TextOptions, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.TextOptions.TextHintingMode
    {
        KnownPropertyIndex::TextOptions_TextHintingMode, // Index name
        KnownTypeIndex::TextHintingMode, // Property type
        KnownTypeIndex::TextOptions, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.TextOptions.TextRenderingMode
    {
        KnownPropertyIndex::TextOptions_TextRenderingMode, // Index name
        KnownTypeIndex::TextRenderingMode, // Property type
        KnownTypeIndex::TextOptions, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService.KeyboardAcceleratorToolTip
    {
        KnownPropertyIndex::ToolTipService_KeyboardAcceleratorToolTip, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ToolTipService, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService.KeyboardAcceleratorToolTipObject
    {
        KnownPropertyIndex::ToolTipService_KeyboardAcceleratorToolTipObject, // Index name
        KnownTypeIndex::ToolTip, // Property type
        KnownTypeIndex::ToolTipService, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService.Placement
    {
        KnownPropertyIndex::ToolTipService_Placement, // Index name
        KnownTypeIndex::PlacementMode, // Property type
        KnownTypeIndex::ToolTipService, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService.PlacementTarget
    {
        KnownPropertyIndex::ToolTipService_PlacementTarget, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::ToolTipService, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService.ToolTip
    {
        KnownPropertyIndex::ToolTipService_ToolTip, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ToolTipService, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService.ToolTipObject
    {
        KnownPropertyIndex::ToolTipService_ToolTipObject, // Index name
        KnownTypeIndex::ToolTip, // Property type
        KnownTypeIndex::ToolTipService, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.AnnotationAlternates
    {
        KnownPropertyIndex::Typography_AnnotationAlternates, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.Capitals
    {
        KnownPropertyIndex::Typography_Capitals, // Index name
        KnownTypeIndex::FontCapitals, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.CapitalSpacing
    {
        KnownPropertyIndex::Typography_CapitalSpacing, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.CaseSensitiveForms
    {
        KnownPropertyIndex::Typography_CaseSensitiveForms, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.ContextualAlternates
    {
        KnownPropertyIndex::Typography_ContextualAlternates, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.ContextualLigatures
    {
        KnownPropertyIndex::Typography_ContextualLigatures, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.ContextualSwashes
    {
        KnownPropertyIndex::Typography_ContextualSwashes, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.DiscretionaryLigatures
    {
        KnownPropertyIndex::Typography_DiscretionaryLigatures, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.EastAsianExpertForms
    {
        KnownPropertyIndex::Typography_EastAsianExpertForms, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.EastAsianLanguage
    {
        KnownPropertyIndex::Typography_EastAsianLanguage, // Index name
        KnownTypeIndex::FontEastAsianLanguage, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.EastAsianWidths
    {
        KnownPropertyIndex::Typography_EastAsianWidths, // Index name
        KnownTypeIndex::FontEastAsianWidths, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.Fraction
    {
        KnownPropertyIndex::Typography_Fraction, // Index name
        KnownTypeIndex::FontFraction, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.HistoricalForms
    {
        KnownPropertyIndex::Typography_HistoricalForms, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.HistoricalLigatures
    {
        KnownPropertyIndex::Typography_HistoricalLigatures, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.Kerning
    {
        KnownPropertyIndex::Typography_Kerning, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.MathematicalGreek
    {
        KnownPropertyIndex::Typography_MathematicalGreek, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.NumeralAlignment
    {
        KnownPropertyIndex::Typography_NumeralAlignment, // Index name
        KnownTypeIndex::FontNumeralAlignment, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.NumeralStyle
    {
        KnownPropertyIndex::Typography_NumeralStyle, // Index name
        KnownTypeIndex::FontNumeralStyle, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.SlashedZero
    {
        KnownPropertyIndex::Typography_SlashedZero, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StandardLigatures
    {
        KnownPropertyIndex::Typography_StandardLigatures, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StandardSwashes
    {
        KnownPropertyIndex::Typography_StandardSwashes, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticAlternates
    {
        KnownPropertyIndex::Typography_StylisticAlternates, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet1
    {
        KnownPropertyIndex::Typography_StylisticSet1, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet10
    {
        KnownPropertyIndex::Typography_StylisticSet10, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet11
    {
        KnownPropertyIndex::Typography_StylisticSet11, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet12
    {
        KnownPropertyIndex::Typography_StylisticSet12, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet13
    {
        KnownPropertyIndex::Typography_StylisticSet13, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet14
    {
        KnownPropertyIndex::Typography_StylisticSet14, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet15
    {
        KnownPropertyIndex::Typography_StylisticSet15, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet16
    {
        KnownPropertyIndex::Typography_StylisticSet16, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet17
    {
        KnownPropertyIndex::Typography_StylisticSet17, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet18
    {
        KnownPropertyIndex::Typography_StylisticSet18, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet19
    {
        KnownPropertyIndex::Typography_StylisticSet19, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet2
    {
        KnownPropertyIndex::Typography_StylisticSet2, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet20
    {
        KnownPropertyIndex::Typography_StylisticSet20, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet3
    {
        KnownPropertyIndex::Typography_StylisticSet3, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet4
    {
        KnownPropertyIndex::Typography_StylisticSet4, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet5
    {
        KnownPropertyIndex::Typography_StylisticSet5, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet6
    {
        KnownPropertyIndex::Typography_StylisticSet6, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet7
    {
        KnownPropertyIndex::Typography_StylisticSet7, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet8
    {
        KnownPropertyIndex::Typography_StylisticSet8, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet9
    {
        KnownPropertyIndex::Typography_StylisticSet9, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Typography.Variants
    {
        KnownPropertyIndex::Typography_Variants, // Index name
        KnownTypeIndex::FontVariants, // Property type
        KnownTypeIndex::Typography, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Markup.XamlBindingHelper.DataTemplateComponent
    {
        KnownPropertyIndex::XamlBindingHelper_DataTemplateComponent, // Index name
        KnownTypeIndex::IDataTemplateComponent, // Property type
        KnownTypeIndex::XamlBindingHelper, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarButtonTemplateSettings.KeyboardAcceleratorTextMinWidth
    {
        KnownPropertyIndex::AppBarButtonTemplateSettings_KeyboardAcceleratorTextMinWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::AppBarButtonTemplateSettings, // Declaring type
        KnownTypeIndex::AppBarButtonTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.ClipRect
    {
        KnownPropertyIndex::AppBarTemplateSettings_ClipRect, // Index name
        KnownTypeIndex::Rect, // Property type
        KnownTypeIndex::AppBarTemplateSettings, // Declaring type
        KnownTypeIndex::AppBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.CompactRootMargin
    {
        KnownPropertyIndex::AppBarTemplateSettings_CompactRootMargin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::AppBarTemplateSettings, // Declaring type
        KnownTypeIndex::AppBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.CompactVerticalDelta
    {
        KnownPropertyIndex::AppBarTemplateSettings_CompactVerticalDelta, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::AppBarTemplateSettings, // Declaring type
        KnownTypeIndex::AppBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.HiddenRootMargin
    {
        KnownPropertyIndex::AppBarTemplateSettings_HiddenRootMargin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::AppBarTemplateSettings, // Declaring type
        KnownTypeIndex::AppBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.HiddenVerticalDelta
    {
        KnownPropertyIndex::AppBarTemplateSettings_HiddenVerticalDelta, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::AppBarTemplateSettings, // Declaring type
        KnownTypeIndex::AppBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.MinimalRootMargin
    {
        KnownPropertyIndex::AppBarTemplateSettings_MinimalRootMargin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::AppBarTemplateSettings, // Declaring type
        KnownTypeIndex::AppBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.MinimalVerticalDelta
    {
        KnownPropertyIndex::AppBarTemplateSettings_MinimalVerticalDelta, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::AppBarTemplateSettings, // Declaring type
        KnownTypeIndex::AppBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.NegativeCompactVerticalDelta
    {
        KnownPropertyIndex::AppBarTemplateSettings_NegativeCompactVerticalDelta, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::AppBarTemplateSettings, // Declaring type
        KnownTypeIndex::AppBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.NegativeHiddenVerticalDelta
    {
        KnownPropertyIndex::AppBarTemplateSettings_NegativeHiddenVerticalDelta, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::AppBarTemplateSettings, // Declaring type
        KnownTypeIndex::AppBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.NegativeMinimalVerticalDelta
    {
        KnownPropertyIndex::AppBarTemplateSettings_NegativeMinimalVerticalDelta, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::AppBarTemplateSettings, // Declaring type
        KnownTypeIndex::AppBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarToggleButtonTemplateSettings.KeyboardAcceleratorTextMinWidth
    {
        KnownPropertyIndex::AppBarToggleButtonTemplateSettings_KeyboardAcceleratorTextMinWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::AppBarToggleButtonTemplateSettings, // Declaring type
        KnownTypeIndex::AppBarToggleButtonTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Application.ApplicationStarted
    {
        KnownPropertyIndex::Application_ApplicationStarted, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Application, // Declaring type
        KnownTypeIndex::Application, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Application.HighContrastAdjustment
    {
        KnownPropertyIndex::Application_HighContrastAdjustment, // Index name
        KnownTypeIndex::ApplicationHighContrastAdjustment, // Property type
        KnownTypeIndex::Application, // Declaring type
        KnownTypeIndex::Application, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Application.RequestedTheme
    {
        KnownPropertyIndex::Application_RequestedTheme, // Index name
        KnownTypeIndex::ApplicationTheme, // Property type
        KnownTypeIndex::Application, // Declaring type
        KnownTypeIndex::Application, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Application.RequiresPointerMode
    {
        KnownPropertyIndex::Application_RequiresPointerMode, // Index name
        KnownTypeIndex::ApplicationRequiresPointerMode, // Property type
        KnownTypeIndex::Application, // Declaring type
        KnownTypeIndex::Application, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Application.Resources
    {
        KnownPropertyIndex::Application_Resources, // Index name
        KnownTypeIndex::ResourceDictionary, // Property type
        KnownTypeIndex::Application, // Declaring type
        KnownTypeIndex::Application, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Application.RootVisual
    {
        KnownPropertyIndex::Application_RootVisual, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::Application, // Declaring type
        KnownTypeIndex::Application, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotation.Element
    {
        KnownPropertyIndex::AutomationAnnotation_Element, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::AutomationAnnotation, // Declaring type
        KnownTypeIndex::AutomationAnnotation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotation.Type
    {
        KnownPropertyIndex::AutomationAnnotation_Type, // Index name
        KnownTypeIndex::AnnotationType, // Property type
        KnownTypeIndex::AutomationAnnotation, // Declaring type
        KnownTypeIndex::AutomationAnnotation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.EventsSource
    {
        KnownPropertyIndex::AutomationPeer_EventsSource, // Index name
        KnownTypeIndex::AutomationPeer, // Property type
        KnownTypeIndex::AutomationPeer, // Declaring type
        KnownTypeIndex::AutomationPeer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.Peer
    {
        KnownPropertyIndex::AutomationPeerAnnotation_Peer, // Index name
        KnownTypeIndex::AutomationPeer, // Property type
        KnownTypeIndex::AutomationPeerAnnotation, // Declaring type
        KnownTypeIndex::AutomationPeerAnnotation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.Type
    {
        KnownPropertyIndex::AutomationPeerAnnotation_Type, // Index name
        KnownTypeIndex::AnnotationType, // Property type
        KnownTypeIndex::AutomationPeerAnnotation, // Declaring type
        KnownTypeIndex::AutomationPeerAnnotation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs.ChosenSuggestion
    {
        KnownPropertyIndex::AutoSuggestBoxQuerySubmittedEventArgs_ChosenSuggestion, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::AutoSuggestBoxQuerySubmittedEventArgs, // Declaring type
        KnownTypeIndex::AutoSuggestBoxQuerySubmittedEventArgs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs.QueryText
    {
        KnownPropertyIndex::AutoSuggestBoxQuerySubmittedEventArgs_QueryText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutoSuggestBoxQuerySubmittedEventArgs, // Declaring type
        KnownTypeIndex::AutoSuggestBoxQuerySubmittedEventArgs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs.SelectedItem
    {
        KnownPropertyIndex::AutoSuggestBoxSuggestionChosenEventArgs_SelectedItem, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::AutoSuggestBoxSuggestionChosenEventArgs, // Declaring type
        KnownTypeIndex::AutoSuggestBoxSuggestionChosenEventArgs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs.Reason
    {
        KnownPropertyIndex::AutoSuggestBoxTextChangedEventArgs_Reason, // Index name
        KnownTypeIndex::AutoSuggestionBoxTextChangeReason, // Property type
        KnownTypeIndex::AutoSuggestBoxTextChangedEventArgs, // Declaring type
        KnownTypeIndex::AutoSuggestBoxTextChangedEventArgs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Brush.Opacity
    {
        KnownPropertyIndex::Brush_Opacity, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Brush, // Declaring type
        KnownTypeIndex::Brush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Brush.RelativeTransform
    {
        KnownPropertyIndex::Brush_RelativeTransform, // Index name
        KnownTypeIndex::Transform, // Property type
        KnownTypeIndex::Brush, // Declaring type
        KnownTypeIndex::Brush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNonStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Brush.Transform
    {
        KnownPropertyIndex::Brush_Transform, // Index name
        KnownTypeIndex::Transform, // Property type
        KnownTypeIndex::Brush, // Declaring type
        KnownTypeIndex::Brush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNonStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.CenterX
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_CenterX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.CenterY
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_CenterY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.ClipRect
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_ClipRect, // Index name
        KnownTypeIndex::Rect, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.HasMoreContentAfter
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_HasMoreContentAfter, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.HasMoreContentBefore
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_HasMoreContentBefore, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.HasMoreViews
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_HasMoreViews, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.HeaderText
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_HeaderText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.MinViewWidth
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_MinViewWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay1
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay1, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay2
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay2, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay3
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay3, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay4
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay4, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay5
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay5, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay6
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay6, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay7
    {
        KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay7, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarViewTemplateSettings, // Declaring type
        KnownTypeIndex::CalendarViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.CollectionViewSource.IsSourceGrouped
    {
        KnownPropertyIndex::CollectionViewSource_IsSourceGrouped, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::CollectionViewSource, // Declaring type
        KnownTypeIndex::CollectionViewSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.CollectionViewSource.ItemsPath
    {
        KnownPropertyIndex::CollectionViewSource_ItemsPath, // Index name
        KnownTypeIndex::PropertyPath, // Property type
        KnownTypeIndex::CollectionViewSource, // Declaring type
        KnownTypeIndex::CollectionViewSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.CollectionViewSource.Source
    {
        KnownPropertyIndex::CollectionViewSource_Source, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CollectionViewSource, // Declaring type
        KnownTypeIndex::CollectionViewSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.CollectionViewSource.View
    {
        KnownPropertyIndex::CollectionViewSource_View, // Index name
        KnownTypeIndex::ICollectionView, // Property type
        KnownTypeIndex::CollectionViewSource, // Declaring type
        KnownTypeIndex::CollectionViewSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Windows.UI.Color.A
    {
        KnownPropertyIndex::Color_A, // Index name
        KnownTypeIndex::Byte, // Property type
        KnownTypeIndex::Color, // Declaring type
        KnownTypeIndex::Color, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Windows.UI.Color.B
    {
        KnownPropertyIndex::Color_B, // Index name
        KnownTypeIndex::Byte, // Property type
        KnownTypeIndex::Color, // Declaring type
        KnownTypeIndex::Color, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Windows.UI.Color.ContentProperty
    {
        KnownPropertyIndex::Color_ContentProperty, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::Color, // Declaring type
        KnownTypeIndex::Color, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Windows.UI.Color.G
    {
        KnownPropertyIndex::Color_G, // Index name
        KnownTypeIndex::Byte, // Property type
        KnownTypeIndex::Color, // Declaring type
        KnownTypeIndex::Color, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Windows.UI.Color.R
    {
        KnownPropertyIndex::Color_R, // Index name
        KnownTypeIndex::Byte, // Property type
        KnownTypeIndex::Color, // Declaring type
        KnownTypeIndex::Color, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame.KeyTime
    {
        KnownPropertyIndex::ColorKeyFrame_KeyTime, // Index name
        KnownTypeIndex::KeyTime, // Property type
        KnownTypeIndex::ColorKeyFrame, // Declaring type
        KnownTypeIndex::ColorKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame.Value
    {
        KnownPropertyIndex::ColorKeyFrame_Value, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorKeyFrame, // Declaring type
        KnownTypeIndex::ColorKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinition.ActualWidth
    {
        KnownPropertyIndex::ColumnDefinition_ActualWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ColumnDefinition, // Declaring type
        KnownTypeIndex::ColumnDefinition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinition.MaxWidth
    {
        KnownPropertyIndex::ColumnDefinition_MaxWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ColumnDefinition, // Declaring type
        KnownTypeIndex::ColumnDefinition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinition.MinWidth
    {
        KnownPropertyIndex::ColumnDefinition_MinWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ColumnDefinition, // Declaring type
        KnownTypeIndex::ColumnDefinition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinition.Width
    {
        KnownPropertyIndex::ColumnDefinition_Width, // Index name
        KnownTypeIndex::GridLength, // Property type
        KnownTypeIndex::ColumnDefinition, // Declaring type
        KnownTypeIndex::ColumnDefinition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.DropDownClosedHeight
    {
        KnownPropertyIndex::ComboBoxTemplateSettings_DropDownClosedHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ComboBoxTemplateSettings, // Declaring type
        KnownTypeIndex::ComboBoxTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.DropDownContentMinWidth
    {
        KnownPropertyIndex::ComboBoxTemplateSettings_DropDownContentMinWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ComboBoxTemplateSettings, // Declaring type
        KnownTypeIndex::ComboBoxTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.DropDownOffset
    {
        KnownPropertyIndex::ComboBoxTemplateSettings_DropDownOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ComboBoxTemplateSettings, // Declaring type
        KnownTypeIndex::ComboBoxTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.DropDownOpenedHeight
    {
        KnownPropertyIndex::ComboBoxTemplateSettings_DropDownOpenedHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ComboBoxTemplateSettings, // Declaring type
        KnownTypeIndex::ComboBoxTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.SelectedItemDirection
    {
        KnownPropertyIndex::ComboBoxTemplateSettings_SelectedItemDirection, // Index name
        KnownTypeIndex::AnimationDirection, // Property type
        KnownTypeIndex::ComboBoxTemplateSettings, // Declaring type
        KnownTypeIndex::ComboBoxTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.ContentHeight
    {
        KnownPropertyIndex::CommandBarTemplateSettings_ContentHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CommandBarTemplateSettings, // Declaring type
        KnownTypeIndex::CommandBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.EffectiveOverflowButtonVisibility
    {
        KnownPropertyIndex::CommandBarTemplateSettings_EffectiveOverflowButtonVisibility, // Index name
        KnownTypeIndex::Visibility, // Property type
        KnownTypeIndex::CommandBarTemplateSettings, // Declaring type
        KnownTypeIndex::CommandBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.NegativeOverflowContentHeight
    {
        KnownPropertyIndex::CommandBarTemplateSettings_NegativeOverflowContentHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CommandBarTemplateSettings, // Declaring type
        KnownTypeIndex::CommandBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentClipRect
    {
        KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentClipRect, // Index name
        KnownTypeIndex::Rect, // Property type
        KnownTypeIndex::CommandBarTemplateSettings, // Declaring type
        KnownTypeIndex::CommandBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentCompactYTranslation
    {
        KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentCompactYTranslation, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CommandBarTemplateSettings, // Declaring type
        KnownTypeIndex::CommandBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentHeight
    {
        KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CommandBarTemplateSettings, // Declaring type
        KnownTypeIndex::CommandBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentHiddenYTranslation
    {
        KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentHiddenYTranslation, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CommandBarTemplateSettings, // Declaring type
        KnownTypeIndex::CommandBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentHorizontalOffset
    {
        KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentHorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CommandBarTemplateSettings, // Declaring type
        KnownTypeIndex::CommandBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentMaxHeight
    {
        KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentMaxHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CommandBarTemplateSettings, // Declaring type
        KnownTypeIndex::CommandBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentMaxWidth
    {
        KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentMaxWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CommandBarTemplateSettings, // Declaring type
        KnownTypeIndex::CommandBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentMinimalYTranslation
    {
        KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentMinimalYTranslation, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CommandBarTemplateSettings, // Declaring type
        KnownTypeIndex::CommandBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentMinWidth
    {
        KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentMinWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CommandBarTemplateSettings, // Declaring type
        KnownTypeIndex::CommandBarTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.CornerRadius.BottomLeft
    {
        KnownPropertyIndex::CornerRadius_BottomLeft, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CornerRadius, // Declaring type
        KnownTypeIndex::CornerRadius, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.CornerRadius.BottomRight
    {
        KnownPropertyIndex::CornerRadius_BottomRight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CornerRadius, // Declaring type
        KnownTypeIndex::CornerRadius, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.CornerRadius.TopLeft
    {
        KnownPropertyIndex::CornerRadius_TopLeft, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CornerRadius, // Declaring type
        KnownTypeIndex::CornerRadius, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.CornerRadius.TopRight
    {
        KnownPropertyIndex::CornerRadius_TopRight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CornerRadius, // Declaring type
        KnownTypeIndex::CornerRadius, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.DependencyPropertyProxy.PropertyId
    {
        KnownPropertyIndex::DependencyPropertyProxy_PropertyId, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::DependencyPropertyProxy, // Declaring type
        KnownTypeIndex::DependencyPropertyProxy, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Double.ContentProperty
    {
        KnownPropertyIndex::Double_ContentProperty, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Double, // Declaring type
        KnownTypeIndex::Double, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame.KeyTime
    {
        KnownPropertyIndex::DoubleKeyFrame_KeyTime, // Index name
        KnownTypeIndex::KeyTime, // Property type
        KnownTypeIndex::DoubleKeyFrame, // Declaring type
        KnownTypeIndex::DoubleKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame.Value
    {
        KnownPropertyIndex::DoubleKeyFrame_Value, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::DoubleKeyFrame, // Declaring type
        KnownTypeIndex::DoubleKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase.EasingMode
    {
        KnownPropertyIndex::EasingFunctionBase_EasingMode, // Index name
        KnownTypeIndex::EasingMode, // Property type
        KnownTypeIndex::EasingFunctionBase, // Declaring type
        KnownTypeIndex::EasingFunctionBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.ExternalObjectReference.MarkupExtensionType
    {
        KnownPropertyIndex::ExternalObjectReference_MarkupExtensionType, // Index name
        KnownTypeIndex::MarkupExtensionType, // Property type
        KnownTypeIndex::ExternalObjectReference, // Declaring type
        KnownTypeIndex::ExternalObjectReference, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.ExternalObjectReference.NativeValue
    {
        KnownPropertyIndex::ExternalObjectReference_NativeValue, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ExternalObjectReference, // Declaring type
        KnownTypeIndex::ExternalObjectReference, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AllowFocusOnInteraction
    {
        KnownPropertyIndex::FlyoutBase_AllowFocusOnInteraction, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FlyoutBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AllowFocusWhenDisabled
    {
        KnownPropertyIndex::FlyoutBase_AllowFocusWhenDisabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FlyoutBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AreOpenCloseAnimationsEnabled
    {
        KnownPropertyIndex::FlyoutBase_AreOpenCloseAnimationsEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FlyoutBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AttachedFlyout
    {
        KnownPropertyIndex::FlyoutBase_AttachedFlyout, // Index name
        KnownTypeIndex::FlyoutBase, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ElementSoundMode
    {
        KnownPropertyIndex::FlyoutBase_ElementSoundMode, // Index name
        KnownTypeIndex::ElementSoundMode, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FlyoutBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.InputDevicePrefersPrimaryCommands
    {
        KnownPropertyIndex::FlyoutBase_InputDevicePrefersPrimaryCommands, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FlyoutBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.IsOpen
    {
        KnownPropertyIndex::FlyoutBase_IsOpen, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FlyoutBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.LightDismissOverlayMode
    {
        KnownPropertyIndex::FlyoutBase_LightDismissOverlayMode, // Index name
        KnownTypeIndex::LightDismissOverlayMode, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FlyoutBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.OverlayInputPassThroughElement
    {
        KnownPropertyIndex::FlyoutBase_OverlayInputPassThroughElement, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FlyoutBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.Placement
    {
        KnownPropertyIndex::FlyoutBase_Placement, // Index name
        KnownTypeIndex::FlyoutPlacementMode, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FlyoutBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ShouldConstrainToRootBounds
    {
        KnownPropertyIndex::FlyoutBase_ShouldConstrainToRootBounds, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FlyoutBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ShowMode
    {
        KnownPropertyIndex::FlyoutBase_ShowMode, // Index name
        KnownTypeIndex::FlyoutShowMode, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FlyoutBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.SystemBackdrop
    {
        KnownPropertyIndex::FlyoutBase_SystemBackdrop, // Index name
        KnownTypeIndex::SystemBackdrop, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FlyoutBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.Target
    {
        KnownPropertyIndex::FlyoutBase_Target, // Index name
        KnownTypeIndex::FrameworkElement, // Property type
        KnownTypeIndex::FlyoutBase, // Declaring type
        KnownTypeIndex::FlyoutBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Windows.UI.Text.FontWeight.Weight
    {
        KnownPropertyIndex::FontWeight_Weight, // Index name
        KnownTypeIndex::UInt16, // Property type
        KnownTypeIndex::FontWeight, // Declaring type
        KnownTypeIndex::FontWeight, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkTemplate.Template
    {
        KnownPropertyIndex::FrameworkTemplate_Template, // Index name
        KnownTypeIndex::TemplateContent, // Property type
        KnownTypeIndex::FrameworkTemplate, // Declaring type
        KnownTypeIndex::FrameworkTemplate, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Geometry.Bounds
    {
        KnownPropertyIndex::Geometry_Bounds, // Index name
        KnownTypeIndex::Rect, // Property type
        KnownTypeIndex::Geometry, // Declaring type
        KnownTypeIndex::Geometry, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Geometry.Transform
    {
        KnownPropertyIndex::Geometry_Transform, // Index name
        KnownTypeIndex::Transform, // Property type
        KnownTypeIndex::Geometry, // Declaring type
        KnownTypeIndex::Geometry, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.GradientStop.Color
    {
        KnownPropertyIndex::GradientStop_Color, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::GradientStop, // Declaring type
        KnownTypeIndex::GradientStop, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.GradientStop.Offset
    {
        KnownPropertyIndex::GradientStop_Offset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::GradientStop, // Declaring type
        KnownTypeIndex::GradientStop, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.GridLength.GridUnitType
    {
        KnownPropertyIndex::GridLength_GridUnitType, // Index name
        KnownTypeIndex::GridUnitType, // Property type
        KnownTypeIndex::GridLength, // Declaring type
        KnownTypeIndex::GridLength, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.GridLength.Value
    {
        KnownPropertyIndex::GridLength_Value, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::GridLength, // Declaring type
        KnownTypeIndex::GridLength, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.ContainerStyle
    {
        KnownPropertyIndex::GroupStyle_ContainerStyle, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::GroupStyle, // Declaring type
        KnownTypeIndex::GroupStyle, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.ContainerStyleSelector
    {
        KnownPropertyIndex::GroupStyle_ContainerStyleSelector, // Index name
        KnownTypeIndex::StyleSelector, // Property type
        KnownTypeIndex::GroupStyle, // Declaring type
        KnownTypeIndex::GroupStyle, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.HeaderContainerStyle
    {
        KnownPropertyIndex::GroupStyle_HeaderContainerStyle, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::GroupStyle, // Declaring type
        KnownTypeIndex::GroupStyle, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.HeaderTemplate
    {
        KnownPropertyIndex::GroupStyle_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::GroupStyle, // Declaring type
        KnownTypeIndex::GroupStyle, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.HeaderTemplateSelector
    {
        KnownPropertyIndex::GroupStyle_HeaderTemplateSelector, // Index name
        KnownTypeIndex::DataTemplateSelector, // Property type
        KnownTypeIndex::GroupStyle, // Declaring type
        KnownTypeIndex::GroupStyle, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.HidesIfEmpty
    {
        KnownPropertyIndex::GroupStyle_HidesIfEmpty, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::GroupStyle, // Declaring type
        KnownTypeIndex::GroupStyle, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.Panel
    {
        KnownPropertyIndex::GroupStyle_Panel, // Index name
        KnownTypeIndex::ItemsPanelTemplate, // Property type
        KnownTypeIndex::GroupStyle, // Declaring type
        KnownTypeIndex::GroupStyle, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.IconSource.Foreground
    {
        KnownPropertyIndex::IconSource_Foreground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::IconSource, // Declaring type
        KnownTypeIndex::IconSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.InertiaExpansionBehavior.DesiredDeceleration
    {
        KnownPropertyIndex::InertiaExpansionBehavior_DesiredDeceleration, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::InertiaExpansionBehavior, // Declaring type
        KnownTypeIndex::InertiaExpansionBehavior, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.InertiaExpansionBehavior.DesiredExpansion
    {
        KnownPropertyIndex::InertiaExpansionBehavior_DesiredExpansion, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::InertiaExpansionBehavior, // Declaring type
        KnownTypeIndex::InertiaExpansionBehavior, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.InertiaRotationBehavior.DesiredDeceleration
    {
        KnownPropertyIndex::InertiaRotationBehavior_DesiredDeceleration, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::InertiaRotationBehavior, // Declaring type
        KnownTypeIndex::InertiaRotationBehavior, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.InertiaRotationBehavior.DesiredRotation
    {
        KnownPropertyIndex::InertiaRotationBehavior_DesiredRotation, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::InertiaRotationBehavior, // Declaring type
        KnownTypeIndex::InertiaRotationBehavior, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.InertiaTranslationBehavior.DesiredDeceleration
    {
        KnownPropertyIndex::InertiaTranslationBehavior_DesiredDeceleration, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::InertiaTranslationBehavior, // Declaring type
        KnownTypeIndex::InertiaTranslationBehavior, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.InertiaTranslationBehavior.DesiredDisplacement
    {
        KnownPropertyIndex::InertiaTranslationBehavior_DesiredDisplacement, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::InertiaTranslationBehavior, // Declaring type
        KnownTypeIndex::InertiaTranslationBehavior, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.InputScope.Names
    {
        KnownPropertyIndex::InputScope_Names, // Index name
        KnownTypeIndex::InputScopeNameCollection, // Property type
        KnownTypeIndex::InputScope, // Declaring type
        KnownTypeIndex::InputScope, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.InputScopeName.NameValue
    {
        KnownPropertyIndex::InputScopeName_NameValue, // Index name
        KnownTypeIndex::InputScopeNameValue, // Property type
        KnownTypeIndex::InputScopeName, // Declaring type
        KnownTypeIndex::InputScopeName, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.InputValidationCommand.InputValidationKind
    {
        KnownPropertyIndex::InputValidationCommand_InputValidationKind, // Index name
        KnownTypeIndex::InputValidationKind, // Property type
        KnownTypeIndex::InputValidationCommand, // Declaring type
        KnownTypeIndex::InputValidationCommand, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.InputValidationCommand.InputValidationMode
    {
        KnownPropertyIndex::InputValidationCommand_InputValidationMode, // Index name
        KnownTypeIndex::InputValidationMode, // Property type
        KnownTypeIndex::InputValidationCommand, // Declaring type
        KnownTypeIndex::InputValidationCommand, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Int32.ContentProperty
    {
        KnownPropertyIndex::Int32_ContentProperty, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Int32, // Declaring type
        KnownTypeIndex::Int32, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Input.KeyboardAccelerator.IsEnabled
    {
        KnownPropertyIndex::KeyboardAccelerator_IsEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::KeyboardAccelerator, // Declaring type
        KnownTypeIndex::KeyboardAccelerator, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.KeyboardAccelerator.Key
    {
        KnownPropertyIndex::KeyboardAccelerator_Key, // Index name
        KnownTypeIndex::VirtualKey, // Property type
        KnownTypeIndex::KeyboardAccelerator, // Declaring type
        KnownTypeIndex::KeyboardAccelerator, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.KeyboardAccelerator.Modifiers
    {
        KnownPropertyIndex::KeyboardAccelerator_Modifiers, // Index name
        KnownTypeIndex::VirtualKeyModifiers, // Property type
        KnownTypeIndex::KeyboardAccelerator, // Declaring type
        KnownTypeIndex::KeyboardAccelerator, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.KeyboardAccelerator.ScopeOwner
    {
        KnownPropertyIndex::KeyboardAccelerator_ScopeOwner, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::KeyboardAccelerator, // Declaring type
        KnownTypeIndex::KeyboardAccelerator, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.KeySpline.ControlPoint1
    {
        KnownPropertyIndex::KeySpline_ControlPoint1, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::KeySpline, // Declaring type
        KnownTypeIndex::KeySpline, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.KeySpline.ControlPoint2
    {
        KnownPropertyIndex::KeySpline_ControlPoint2, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::KeySpline, // Declaring type
        KnownTypeIndex::KeySpline, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke)), // Property flags
    },
    // Microsoft.UI.Xaml.LayoutTransitionStaggerItem.Bounds
    {
        KnownPropertyIndex::LayoutTransitionStaggerItem_Bounds, // Index name
        KnownTypeIndex::Rect, // Property type
        KnownTypeIndex::LayoutTransitionStaggerItem, // Declaring type
        KnownTypeIndex::LayoutTransitionStaggerItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.LayoutTransitionStaggerItem.Element
    {
        KnownPropertyIndex::LayoutTransitionStaggerItem_Element, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::LayoutTransitionStaggerItem, // Declaring type
        KnownTypeIndex::LayoutTransitionStaggerItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.LayoutTransitionStaggerItem.Index
    {
        KnownPropertyIndex::LayoutTransitionStaggerItem_Index, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::LayoutTransitionStaggerItem, // Declaring type
        KnownTypeIndex::LayoutTransitionStaggerItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.LayoutTransitionStaggerItem.StaggerTime
    {
        KnownPropertyIndex::LayoutTransitionStaggerItem_StaggerTime, // Index name
        KnownTypeIndex::TimeSpan, // Property type
        KnownTypeIndex::LayoutTransitionStaggerItem, // Declaring type
        KnownTypeIndex::LayoutTransitionStaggerItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSurface.DecodedPhysicalSize
    {
        KnownPropertyIndex::LoadedImageSurface_DecodedPhysicalSize, // Index name
        KnownTypeIndex::Size, // Property type
        KnownTypeIndex::LoadedImageSurface, // Declaring type
        KnownTypeIndex::LoadedImageSurface, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSurface.DecodedSize
    {
        KnownPropertyIndex::LoadedImageSurface_DecodedSize, // Index name
        KnownTypeIndex::Size, // Property type
        KnownTypeIndex::LoadedImageSurface, // Declaring type
        KnownTypeIndex::LoadedImageSurface, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSurface.NaturalSize
    {
        KnownPropertyIndex::LoadedImageSurface_NaturalSize, // Index name
        KnownTypeIndex::Size, // Property type
        KnownTypeIndex::LoadedImageSurface, // Declaring type
        KnownTypeIndex::LoadedImageSurface, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.ManipulationPivot.Center
    {
        KnownPropertyIndex::ManipulationPivot_Center, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::ManipulationPivot, // Declaring type
        KnownTypeIndex::ManipulationPivot, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.ManipulationPivot.Radius
    {
        KnownPropertyIndex::ManipulationPivot_Radius, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ManipulationPivot, // Declaring type
        KnownTypeIndex::ManipulationPivot, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Matrix.M11
    {
        KnownPropertyIndex::Matrix_M11, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix, // Declaring type
        KnownTypeIndex::Matrix, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Matrix.M12
    {
        KnownPropertyIndex::Matrix_M12, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix, // Declaring type
        KnownTypeIndex::Matrix, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Matrix.M21
    {
        KnownPropertyIndex::Matrix_M21, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix, // Declaring type
        KnownTypeIndex::Matrix, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Matrix.M22
    {
        KnownPropertyIndex::Matrix_M22, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix, // Declaring type
        KnownTypeIndex::Matrix, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Matrix.OffsetX
    {
        KnownPropertyIndex::Matrix_OffsetX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix, // Declaring type
        KnownTypeIndex::Matrix, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Matrix.OffsetY
    {
        KnownPropertyIndex::Matrix_OffsetY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix, // Declaring type
        KnownTypeIndex::Matrix, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M11
    {
        KnownPropertyIndex::Matrix3D_M11, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M12
    {
        KnownPropertyIndex::Matrix3D_M12, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M13
    {
        KnownPropertyIndex::Matrix3D_M13, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M14
    {
        KnownPropertyIndex::Matrix3D_M14, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M21
    {
        KnownPropertyIndex::Matrix3D_M21, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M22
    {
        KnownPropertyIndex::Matrix3D_M22, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M23
    {
        KnownPropertyIndex::Matrix3D_M23, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M24
    {
        KnownPropertyIndex::Matrix3D_M24, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M31
    {
        KnownPropertyIndex::Matrix3D_M31, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M32
    {
        KnownPropertyIndex::Matrix3D_M32, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M33
    {
        KnownPropertyIndex::Matrix3D_M33, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M34
    {
        KnownPropertyIndex::Matrix3D_M34, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M44
    {
        KnownPropertyIndex::Matrix3D_M44, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.OffsetX
    {
        KnownPropertyIndex::Matrix3D_OffsetX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.OffsetY
    {
        KnownPropertyIndex::Matrix3D_OffsetY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.OffsetZ
    {
        KnownPropertyIndex::Matrix3D_OffsetZ, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Matrix3D, // Declaring type
        KnownTypeIndex::Matrix3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutItemTemplateSettings.KeyboardAcceleratorTextMinWidth
    {
        KnownPropertyIndex::MenuFlyoutItemTemplateSettings_KeyboardAcceleratorTextMinWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::MenuFlyoutItemTemplateSettings, // Declaring type
        KnownTypeIndex::MenuFlyoutItemTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutPresenterTemplateSettings.FlyoutContentMinWidth
    {
        KnownPropertyIndex::MenuFlyoutPresenterTemplateSettings_FlyoutContentMinWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::MenuFlyoutPresenterTemplateSettings, // Declaring type
        KnownTypeIndex::MenuFlyoutPresenterTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame.KeyTime
    {
        KnownPropertyIndex::ObjectKeyFrame_KeyTime, // Index name
        KnownTypeIndex::KeyTime, // Property type
        KnownTypeIndex::ObjectKeyFrame, // Declaring type
        KnownTypeIndex::ObjectKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame.Value
    {
        KnownPropertyIndex::ObjectKeyFrame_Value, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ObjectKeyFrame, // Declaring type
        KnownTypeIndex::ObjectKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Navigation.PageStackEntry.SourcePageType
    {
        KnownPropertyIndex::PageStackEntry_SourcePageType, // Index name
        KnownTypeIndex::TypeName, // Property type
        KnownTypeIndex::PageStackEntry, // Declaring type
        KnownTypeIndex::PageStackEntry, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurve.CurveSegments
    {
        KnownPropertyIndex::ParametricCurve_CurveSegments, // Index name
        KnownTypeIndex::ParametricCurveSegmentCollection, // Property type
        KnownTypeIndex::ParametricCurve, // Declaring type
        KnownTypeIndex::ParametricCurve, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment.BeginOffset
    {
        KnownPropertyIndex::ParametricCurveSegment_BeginOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ParametricCurveSegment, // Declaring type
        KnownTypeIndex::ParametricCurveSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment.ConstantCoefficient
    {
        KnownPropertyIndex::ParametricCurveSegment_ConstantCoefficient, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ParametricCurveSegment, // Declaring type
        KnownTypeIndex::ParametricCurveSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment.CubicCoefficient
    {
        KnownPropertyIndex::ParametricCurveSegment_CubicCoefficient, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ParametricCurveSegment, // Declaring type
        KnownTypeIndex::ParametricCurveSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment.LinearCoefficient
    {
        KnownPropertyIndex::ParametricCurveSegment_LinearCoefficient, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ParametricCurveSegment, // Declaring type
        KnownTypeIndex::ParametricCurveSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment.QuadraticCoefficient
    {
        KnownPropertyIndex::ParametricCurveSegment_QuadraticCoefficient, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ParametricCurveSegment, // Declaring type
        KnownTypeIndex::ParametricCurveSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PathFigure.IsClosed
    {
        KnownPropertyIndex::PathFigure_IsClosed, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::PathFigure, // Declaring type
        KnownTypeIndex::PathFigure, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PathFigure.IsFilled
    {
        KnownPropertyIndex::PathFigure_IsFilled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::PathFigure, // Declaring type
        KnownTypeIndex::PathFigure, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PathFigure.Segments
    {
        KnownPropertyIndex::PathFigure_Segments, // Index name
        KnownTypeIndex::PathSegmentCollection, // Property type
        KnownTypeIndex::PathFigure, // Declaring type
        KnownTypeIndex::PathFigure, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PathFigure.StartPoint
    {
        KnownPropertyIndex::PathFigure_StartPoint, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::PathFigure, // Declaring type
        KnownTypeIndex::PathFigure, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Windows.Foundation.Point.ContentProperty
    {
        KnownPropertyIndex::Point_ContentProperty, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Point, // Declaring type
        KnownTypeIndex::Point, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Windows.Foundation.Point.X
    {
        KnownPropertyIndex::Point_X, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Point, // Declaring type
        KnownTypeIndex::Point, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Windows.Foundation.Point.Y
    {
        KnownPropertyIndex::Point_Y, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Point, // Declaring type
        KnownTypeIndex::Point, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.Pointer.IsInContact
    {
        KnownPropertyIndex::Pointer_IsInContact, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Pointer, // Declaring type
        KnownTypeIndex::Pointer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.Pointer.IsInRange
    {
        KnownPropertyIndex::Pointer_IsInRange, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Pointer, // Declaring type
        KnownTypeIndex::Pointer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.Pointer.PointerDeviceType
    {
        KnownPropertyIndex::Pointer_PointerDeviceType, // Index name
        KnownTypeIndex::PointerDeviceType, // Property type
        KnownTypeIndex::Pointer, // Declaring type
        KnownTypeIndex::Pointer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.Pointer.PointerId
    {
        KnownPropertyIndex::Pointer_PointerId, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Pointer, // Declaring type
        KnownTypeIndex::Pointer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrame.PointerValue
    {
        KnownPropertyIndex::PointerKeyFrame_PointerValue, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PointerKeyFrame, // Declaring type
        KnownTypeIndex::PointerKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrame.TargetValue
    {
        KnownPropertyIndex::PointerKeyFrame_TargetValue, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PointerKeyFrame, // Declaring type
        KnownTypeIndex::PointerKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrame.KeyTime
    {
        KnownPropertyIndex::PointKeyFrame_KeyTime, // Index name
        KnownTypeIndex::KeyTime, // Property type
        KnownTypeIndex::PointKeyFrame, // Declaring type
        KnownTypeIndex::PointKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrame.Value
    {
        KnownPropertyIndex::PointKeyFrame_Value, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::PointKeyFrame, // Declaring type
        KnownTypeIndex::PointKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection.Count
    {
        KnownPropertyIndex::PresentationFrameworkCollection_Count, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PresentationFrameworkCollection, // Declaring type
        KnownTypeIndex::PresentationFrameworkCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Printing.PrintDocument.DesiredFormat
    {
        KnownPropertyIndex::PrintDocument_DesiredFormat, // Index name
        KnownTypeIndex::PrintDocumentFormat, // Property type
        KnownTypeIndex::PrintDocument, // Declaring type
        KnownTypeIndex::PrintDocument, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Printing.PrintDocument.DocumentSource
    {
        KnownPropertyIndex::PrintDocument_DocumentSource, // Index name
        KnownTypeIndex::IPrintDocumentSource, // Property type
        KnownTypeIndex::PrintDocument, // Declaring type
        KnownTypeIndex::PrintDocument, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Printing.PrintDocument.PrintedPageCount
    {
        KnownPropertyIndex::PrintDocument_PrintedPageCount, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::PrintDocument, // Declaring type
        KnownTypeIndex::PrintDocument, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.PropertyPath.Path
    {
        KnownPropertyIndex::PropertyPath_Path, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::PropertyPath, // Declaring type
        KnownTypeIndex::PropertyPath, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Windows.Foundation.Rect.Height
    {
        KnownPropertyIndex::Rect_Height, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Rect, // Declaring type
        KnownTypeIndex::Rect, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Windows.Foundation.Rect.Width
    {
        KnownPropertyIndex::Rect_Width, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Rect, // Declaring type
        KnownTypeIndex::Rect, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Windows.Foundation.Rect.X
    {
        KnownPropertyIndex::Rect_X, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Rect, // Declaring type
        KnownTypeIndex::Rect, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Windows.Foundation.Rect.Y
    {
        KnownPropertyIndex::Rect_Y, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Rect, // Declaring type
        KnownTypeIndex::Rect, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RowDefinition.ActualHeight
    {
        KnownPropertyIndex::RowDefinition_ActualHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RowDefinition, // Declaring type
        KnownTypeIndex::RowDefinition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RowDefinition.Height
    {
        KnownPropertyIndex::RowDefinition_Height, // Index name
        KnownTypeIndex::GridLength, // Property type
        KnownTypeIndex::RowDefinition, // Declaring type
        KnownTypeIndex::RowDefinition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RowDefinition.MaxHeight
    {
        KnownPropertyIndex::RowDefinition_MaxHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RowDefinition, // Declaring type
        KnownTypeIndex::RowDefinition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RowDefinition.MinHeight
    {
        KnownPropertyIndex::RowDefinition_MinHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RowDefinition, // Declaring type
        KnownTypeIndex::RowDefinition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.SecondaryContentRelationship.Curves
    {
        KnownPropertyIndex::SecondaryContentRelationship_Curves, // Index name
        KnownTypeIndex::ParametricCurveCollection, // Property type
        KnownTypeIndex::SecondaryContentRelationship, // Declaring type
        KnownTypeIndex::SecondaryContentRelationship, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.SecondaryContentRelationship.IsDescendant
    {
        KnownPropertyIndex::SecondaryContentRelationship_IsDescendant, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::SecondaryContentRelationship, // Declaring type
        KnownTypeIndex::SecondaryContentRelationship, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.SecondaryContentRelationship.ShouldTargetClip
    {
        KnownPropertyIndex::SecondaryContentRelationship_ShouldTargetClip, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::SecondaryContentRelationship, // Declaring type
        KnownTypeIndex::SecondaryContentRelationship, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.SetterBase.IsSealed
    {
        KnownPropertyIndex::SetterBase_IsSealed, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::SetterBase, // Declaring type
        KnownTypeIndex::SetterBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Windows.Foundation.Size.Height
    {
        KnownPropertyIndex::Size_Height, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Size, // Declaring type
        KnownTypeIndex::Size, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Windows.Foundation.Size.Width
    {
        KnownPropertyIndex::Size_Width, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Size, // Declaring type
        KnownTypeIndex::Size, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.CompactPaneGridLength
    {
        KnownPropertyIndex::SplitViewTemplateSettings_CompactPaneGridLength, // Index name
        KnownTypeIndex::GridLength, // Property type
        KnownTypeIndex::SplitViewTemplateSettings, // Declaring type
        KnownTypeIndex::SplitViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.NegativeOpenPaneLength
    {
        KnownPropertyIndex::SplitViewTemplateSettings_NegativeOpenPaneLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitViewTemplateSettings, // Declaring type
        KnownTypeIndex::SplitViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.NegativeOpenPaneLengthMinusCompactLength
    {
        KnownPropertyIndex::SplitViewTemplateSettings_NegativeOpenPaneLengthMinusCompactLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitViewTemplateSettings, // Declaring type
        KnownTypeIndex::SplitViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.OpenPaneGridLength
    {
        KnownPropertyIndex::SplitViewTemplateSettings_OpenPaneGridLength, // Index name
        KnownTypeIndex::GridLength, // Property type
        KnownTypeIndex::SplitViewTemplateSettings, // Declaring type
        KnownTypeIndex::SplitViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.OpenPaneLength
    {
        KnownPropertyIndex::SplitViewTemplateSettings_OpenPaneLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitViewTemplateSettings, // Declaring type
        KnownTypeIndex::SplitViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.OpenPaneLengthMinusCompactLength
    {
        KnownPropertyIndex::SplitViewTemplateSettings_OpenPaneLengthMinusCompactLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitViewTemplateSettings, // Declaring type
        KnownTypeIndex::SplitViewTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.StateTriggerBase.TriggerState
    {
        KnownPropertyIndex::StateTriggerBase_TriggerState, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::StateTriggerBase, // Declaring type
        KnownTypeIndex::StateTriggerBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // String.ContentProperty
    {
        KnownPropertyIndex::String_ContentProperty, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::String, // Declaring type
        KnownTypeIndex::String, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Style.BasedOn
    {
        KnownPropertyIndex::Style_BasedOn, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::Style, // Declaring type
        KnownTypeIndex::Style, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Style.IsSealed
    {
        KnownPropertyIndex::Style_IsSealed, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Style, // Declaring type
        KnownTypeIndex::Style, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Style.Setters
    {
        KnownPropertyIndex::Style_Setters, // Index name
        KnownTypeIndex::SetterBaseCollection, // Property type
        KnownTypeIndex::Style, // Declaring type
        KnownTypeIndex::Style, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Style.TargetType
    {
        KnownPropertyIndex::Style_TargetType, // Index name
        KnownTypeIndex::TypeName, // Property type
        KnownTypeIndex::Style, // Declaring type
        KnownTypeIndex::Style, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.TargetPropertyPath.CachedStyleSetterProperty
    {
        KnownPropertyIndex::TargetPropertyPath_CachedStyleSetterProperty, // Index name
        KnownTypeIndex::DependencyPropertyProxy, // Property type
        KnownTypeIndex::TargetPropertyPath, // Declaring type
        KnownTypeIndex::TargetPropertyPath, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.TargetPropertyPath.Path
    {
        KnownPropertyIndex::TargetPropertyPath_Path, // Index name
        KnownTypeIndex::PropertyPath, // Property type
        KnownTypeIndex::TargetPropertyPath, // Declaring type
        KnownTypeIndex::TargetPropertyPath, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.TargetPropertyPath.Target
    {
        KnownPropertyIndex::TargetPropertyPath_Target, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::TargetPropertyPath, // Declaring type
        KnownTypeIndex::TargetPropertyPath, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextAdapter.Owner
    {
        KnownPropertyIndex::TextAdapter_Owner, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::TextAdapter, // Declaring type
        KnownTypeIndex::TextAdapter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.AccessKey
    {
        KnownPropertyIndex::TextElement_AccessKey, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.AccessKeyScopeOwner
    {
        KnownPropertyIndex::TextElement_AccessKeyScopeOwner, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.AllowFocusOnInteraction
    {
        KnownPropertyIndex::TextElement_AllowFocusOnInteraction, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.CharacterSpacing
    {
        KnownPropertyIndex::TextElement_CharacterSpacing, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.ExitDisplayModeOnAccessKeyInvoked
    {
        KnownPropertyIndex::TextElement_ExitDisplayModeOnAccessKeyInvoked, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.FontFamily
    {
        KnownPropertyIndex::TextElement_FontFamily, // Index name
        KnownTypeIndex::FontFamily, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.FontSize
    {
        KnownPropertyIndex::TextElement_FontSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.FontStretch
    {
        KnownPropertyIndex::TextElement_FontStretch, // Index name
        KnownTypeIndex::FontStretch, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.FontStyle
    {
        KnownPropertyIndex::TextElement_FontStyle, // Index name
        KnownTypeIndex::FontStyle, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.FontWeight
    {
        KnownPropertyIndex::TextElement_FontWeight, // Index name
        KnownTypeIndex::FontWeight, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.Foreground
    {
        KnownPropertyIndex::TextElement_Foreground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.IsAccessKeyScope
    {
        KnownPropertyIndex::TextElement_IsAccessKeyScope, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.IsTextScaleFactorEnabled
    {
        KnownPropertyIndex::TextElement_IsTextScaleFactorEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.KeyTipHorizontalOffset
    {
        KnownPropertyIndex::TextElement_KeyTipHorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.KeyTipPlacementMode
    {
        KnownPropertyIndex::TextElement_KeyTipPlacementMode, // Index name
        KnownTypeIndex::KeyTipPlacementMode, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.KeyTipVerticalOffset
    {
        KnownPropertyIndex::TextElement_KeyTipVerticalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.Language
    {
        KnownPropertyIndex::TextElement_Language, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElement.TextDecorations
    {
        KnownPropertyIndex::TextElement_TextDecorations, // Index name
        KnownTypeIndex::TextDecorations, // Property type
        KnownTypeIndex::TextElement, // Declaring type
        KnownTypeIndex::TextElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextRange.Length
    {
        KnownPropertyIndex::TextRange_Length, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::TextRange, // Declaring type
        KnownTypeIndex::TextRange, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextRange.StartIndex
    {
        KnownPropertyIndex::TextRange_StartIndex, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::TextRange, // Declaring type
        KnownTypeIndex::TextRange, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextRangeAdapter.Owner
    {
        KnownPropertyIndex::TextRangeAdapter_Owner, // Index name
        KnownTypeIndex::TextAdapter, // Property type
        KnownTypeIndex::TextRangeAdapter, // Declaring type
        KnownTypeIndex::TextRangeAdapter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Thickness.Bottom
    {
        KnownPropertyIndex::Thickness_Bottom, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Thickness, // Declaring type
        KnownTypeIndex::Thickness, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Thickness.Left
    {
        KnownPropertyIndex::Thickness_Left, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Thickness, // Declaring type
        KnownTypeIndex::Thickness, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Thickness.Right
    {
        KnownPropertyIndex::Thickness_Right, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Thickness, // Declaring type
        KnownTypeIndex::Thickness, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Thickness.Top
    {
        KnownPropertyIndex::Thickness_Top, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Thickness, // Declaring type
        KnownTypeIndex::Thickness, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.AutoReverse
    {
        KnownPropertyIndex::Timeline_AutoReverse, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Timeline, // Declaring type
        KnownTypeIndex::Timeline, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    {
        KnownPropertyIndex::Timeline_BeginTime, // Index name
        KnownTypeIndex::TimeSpan, // Property type
        KnownTypeIndex::Timeline, // Declaring type
        KnownTypeIndex::Timeline, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.Duration
    {
        KnownPropertyIndex::Timeline_Duration, // Index name
        KnownTypeIndex::Duration, // Property type
        KnownTypeIndex::Timeline, // Declaring type
        KnownTypeIndex::Timeline, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.FillBehavior
    {
        KnownPropertyIndex::Timeline_FillBehavior, // Index name
        KnownTypeIndex::FillBehavior, // Property type
        KnownTypeIndex::Timeline, // Declaring type
        KnownTypeIndex::Timeline, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.RepeatBehavior
    {
        KnownPropertyIndex::Timeline_RepeatBehavior, // Index name
        KnownTypeIndex::RepeatBehavior, // Property type
        KnownTypeIndex::Timeline, // Declaring type
        KnownTypeIndex::Timeline, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.SpeedRatio
    {
        KnownPropertyIndex::Timeline_SpeedRatio, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Timeline, // Declaring type
        KnownTypeIndex::Timeline, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Windows.Foundation.TimeSpan.Seconds
    {
        KnownPropertyIndex::TimeSpan_Seconds, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::TimeSpan, // Declaring type
        KnownTypeIndex::TimeSpan, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.CurtainCurrentToOffOffset
    {
        KnownPropertyIndex::ToggleSwitchTemplateSettings_CurtainCurrentToOffOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Declaring type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.CurtainCurrentToOnOffset
    {
        KnownPropertyIndex::ToggleSwitchTemplateSettings_CurtainCurrentToOnOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Declaring type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.CurtainOffToOnOffset
    {
        KnownPropertyIndex::ToggleSwitchTemplateSettings_CurtainOffToOnOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Declaring type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.CurtainOnToOffOffset
    {
        KnownPropertyIndex::ToggleSwitchTemplateSettings_CurtainOnToOffOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Declaring type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.KnobCurrentToOffOffset
    {
        KnownPropertyIndex::ToggleSwitchTemplateSettings_KnobCurrentToOffOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Declaring type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.KnobCurrentToOnOffset
    {
        KnownPropertyIndex::ToggleSwitchTemplateSettings_KnobCurrentToOnOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Declaring type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.KnobOffToOnOffset
    {
        KnownPropertyIndex::ToggleSwitchTemplateSettings_KnobOffToOnOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Declaring type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.KnobOnToOffOffset
    {
        KnownPropertyIndex::ToggleSwitchTemplateSettings_KnobOnToOffOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Declaring type
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings.FromHorizontalOffset
    {
        KnownPropertyIndex::ToolTipTemplateSettings_FromHorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ToolTipTemplateSettings, // Declaring type
        KnownTypeIndex::ToolTipTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings.FromVerticalOffset
    {
        KnownPropertyIndex::ToolTipTemplateSettings_FromVerticalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ToolTipTemplateSettings, // Declaring type
        KnownTypeIndex::ToolTipTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
    {
        KnownPropertyIndex::Transition_GeneratedStaggerFunction, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::Transition, // Declaring type
        KnownTypeIndex::Transition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.ClipTransform
    {
        KnownPropertyIndex::TransitionTarget_ClipTransform, // Index name
        KnownTypeIndex::CompositeTransform, // Property type
        KnownTypeIndex::TransitionTarget, // Declaring type
        KnownTypeIndex::TransitionTarget, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.ClipTransformOrigin
    {
        KnownPropertyIndex::TransitionTarget_ClipTransformOrigin, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::TransitionTarget, // Declaring type
        KnownTypeIndex::TransitionTarget, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.CompositeTransform
    {
        KnownPropertyIndex::TransitionTarget_CompositeTransform, // Index name
        KnownTypeIndex::CompositeTransform, // Property type
        KnownTypeIndex::TransitionTarget, // Declaring type
        KnownTypeIndex::TransitionTarget, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.Opacity
    {
        KnownPropertyIndex::TransitionTarget_Opacity, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::TransitionTarget, // Declaring type
        KnownTypeIndex::TransitionTarget, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.OpacityAnimation
    {
        KnownPropertyIndex::TransitionTarget_OpacityAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::TransitionTarget, // Declaring type
        KnownTypeIndex::TransitionTarget, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.TransformOrigin
    {
        KnownPropertyIndex::TransitionTarget_TransformOrigin, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::TransitionTarget, // Declaring type
        KnownTypeIndex::TransitionTarget, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.AccessKey
    {
        KnownPropertyIndex::UIElement_AccessKey, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.AccessKeyScopeOwner
    {
        KnownPropertyIndex::UIElement_AccessKeyScopeOwner, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.ActualOffset
    {
        KnownPropertyIndex::UIElement_ActualOffset, // Index name
        KnownTypeIndex::Vector3, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.ActualSize
    {
        KnownPropertyIndex::UIElement_ActualSize, // Index name
        KnownTypeIndex::Vector2, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.AllowDrop
    {
        KnownPropertyIndex::UIElement_AllowDrop, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.CacheMode
    {
        KnownPropertyIndex::UIElement_CacheMode, // Index name
        KnownTypeIndex::CacheMode, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.CanBeScrollAnchor
    {
        KnownPropertyIndex::UIElement_CanBeScrollAnchor, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.CanDrag
    {
        KnownPropertyIndex::UIElement_CanDrag, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.CanvasOffset
    {
        KnownPropertyIndex::UIElement_CanvasOffset, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.ChildrenInternal
    {
        KnownPropertyIndex::UIElement_ChildrenInternal, // Index name
        KnownTypeIndex::UIElementCollection, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.Clip
    {
        KnownPropertyIndex::UIElement_Clip, // Index name
        KnownTypeIndex::Geometry, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.CompositeMode
    {
        KnownPropertyIndex::UIElement_CompositeMode, // Index name
        KnownTypeIndex::ElementCompositeMode, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.ContextFlyout
    {
        KnownPropertyIndex::UIElement_ContextFlyout, // Index name
        KnownTypeIndex::FlyoutBase, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.DirectManipulationContainer
    {
        KnownPropertyIndex::UIElement_DirectManipulationContainer, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.ExitDisplayModeOnAccessKeyInvoked
    {
        KnownPropertyIndex::UIElement_ExitDisplayModeOnAccessKeyInvoked, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.FocusState
    {
        KnownPropertyIndex::UIElement_FocusState, // Index name
        KnownTypeIndex::FocusState, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.GlobalScaleFactor
    {
        KnownPropertyIndex::UIElement_GlobalScaleFactor, // Index name
        KnownTypeIndex::Float, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.HandOffVisualClip
    {
        KnownPropertyIndex::UIElement_HandOffVisualClip, // Index name
        KnownTypeIndex::RectangleGeometry, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.HandOffVisualTransform
    {
        KnownPropertyIndex::UIElement_HandOffVisualTransform, // Index name
        KnownTypeIndex::Transform, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.HandOffVisualTransformMatrix3D
    {
        KnownPropertyIndex::UIElement_HandOffVisualTransformMatrix3D, // Index name
        KnownTypeIndex::Matrix3D, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.HighContrastAdjustment
    {
        KnownPropertyIndex::UIElement_HighContrastAdjustment, // Index name
        KnownTypeIndex::ElementHighContrastAdjustment, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.IsAccessKeyScope
    {
        KnownPropertyIndex::UIElement_IsAccessKeyScope, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.IsDoubleTapEnabled
    {
        KnownPropertyIndex::UIElement_IsDoubleTapEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.IsGamepadFocusCandidate
    {
        KnownPropertyIndex::UIElement_IsGamepadFocusCandidate, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.IsHitTestVisible
    {
        KnownPropertyIndex::UIElement_IsHitTestVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.IsHoldingEnabled
    {
        KnownPropertyIndex::UIElement_IsHoldingEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.IsRightTapEnabled
    {
        KnownPropertyIndex::UIElement_IsRightTapEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.IsTabStop
    {
        KnownPropertyIndex::UIElement_IsTabStop, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.IsTapEnabled
    {
        KnownPropertyIndex::UIElement_IsTapEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.KeyboardAcceleratorPlacementMode
    {
        KnownPropertyIndex::UIElement_KeyboardAcceleratorPlacementMode, // Index name
        KnownTypeIndex::KeyboardAcceleratorPlacementMode, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.KeyboardAcceleratorPlacementTarget
    {
        KnownPropertyIndex::UIElement_KeyboardAcceleratorPlacementTarget, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.KeyboardAccelerators
    {
        KnownPropertyIndex::UIElement_KeyboardAccelerators, // Index name
        KnownTypeIndex::KeyboardAcceleratorCollection, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.KeyTipHorizontalOffset
    {
        KnownPropertyIndex::UIElement_KeyTipHorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.KeyTipPlacementMode
    {
        KnownPropertyIndex::UIElement_KeyTipPlacementMode, // Index name
        KnownTypeIndex::KeyTipPlacementMode, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.KeyTipTarget
    {
        KnownPropertyIndex::UIElement_KeyTipTarget, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.KeyTipVerticalOffset
    {
        KnownPropertyIndex::UIElement_KeyTipVerticalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.Lights
    {
        KnownPropertyIndex::UIElement_Lights, // Index name
        KnownTypeIndex::XamlLightCollection, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.ManipulationMode
    {
        KnownPropertyIndex::UIElement_ManipulationMode, // Index name
        KnownTypeIndex::ManipulationModes, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.OffsetXAnimation
    {
        KnownPropertyIndex::UIElement_OffsetXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.OffsetYAnimation
    {
        KnownPropertyIndex::UIElement_OffsetYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.Opacity
    {
        KnownPropertyIndex::UIElement_Opacity, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.OpacityAnimation
    {
        KnownPropertyIndex::UIElement_OpacityAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.OpacityExpression
    {
        KnownPropertyIndex::UIElement_OpacityExpression, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.OpacityTransition
    {
        KnownPropertyIndex::UIElement_OpacityTransition, // Index name
        KnownTypeIndex::ScalarTransition, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.PointerCaptures
    {
        KnownPropertyIndex::UIElement_PointerCaptures, // Index name
        KnownTypeIndex::PointerCollection, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.Projection
    {
        KnownPropertyIndex::UIElement_Projection, // Index name
        KnownTypeIndex::Projection, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNonStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.ProtectedCursor
    {
        KnownPropertyIndex::UIElement_ProtectedCursor, // Index name
        KnownTypeIndex::InputCursor, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.RenderSize
    {
        KnownPropertyIndex::UIElement_RenderSize, // Index name
        KnownTypeIndex::Size, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.RenderTransform
    {
        KnownPropertyIndex::UIElement_RenderTransform, // Index name
        KnownTypeIndex::Transform, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNonStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.RenderTransformOrigin
    {
        KnownPropertyIndex::UIElement_RenderTransformOrigin, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNonStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.RotationTransition
    {
        KnownPropertyIndex::UIElement_RotationTransition, // Index name
        KnownTypeIndex::ScalarTransition, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.ScaleTransition
    {
        KnownPropertyIndex::UIElement_ScaleTransition, // Index name
        KnownTypeIndex::Vector3Transition, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.Shadow
    {
        KnownPropertyIndex::UIElement_Shadow, // Index name
        KnownTypeIndex::Shadow, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.TabFocusNavigation
    {
        KnownPropertyIndex::UIElement_TabFocusNavigation, // Index name
        KnownTypeIndex::KeyboardNavigationMode, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.TabIndex
    {
        KnownPropertyIndex::UIElement_TabIndex, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.Transform3D
    {
        KnownPropertyIndex::UIElement_Transform3D, // Index name
        KnownTypeIndex::Transform3D, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNonStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.Transitions
    {
        KnownPropertyIndex::UIElement_Transitions, // Index name
        KnownTypeIndex::TransitionCollection, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.TransitionTarget
    {
        KnownPropertyIndex::UIElement_TransitionTarget, // Index name
        KnownTypeIndex::TransitionTarget, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.TranslationTransition
    {
        KnownPropertyIndex::UIElement_TranslationTransition, // Index name
        KnownTypeIndex::Vector3Transition, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.UseLayoutRounding
    {
        KnownPropertyIndex::UIElement_UseLayoutRounding, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.UseSystemFocusVisuals
    {
        KnownPropertyIndex::UIElement_UseSystemFocusVisuals, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.Visibility
    {
        KnownPropertyIndex::UIElement_Visibility, // Index name
        KnownTypeIndex::Visibility, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusDown
    {
        KnownPropertyIndex::UIElement_XYFocusDown, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusDownNavigationStrategy
    {
        KnownPropertyIndex::UIElement_XYFocusDownNavigationStrategy, // Index name
        KnownTypeIndex::XYFocusNavigationStrategy, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusKeyboardNavigation
    {
        KnownPropertyIndex::UIElement_XYFocusKeyboardNavigation, // Index name
        KnownTypeIndex::XYFocusKeyboardNavigationMode, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusLeft
    {
        KnownPropertyIndex::UIElement_XYFocusLeft, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusLeftNavigationStrategy
    {
        KnownPropertyIndex::UIElement_XYFocusLeftNavigationStrategy, // Index name
        KnownTypeIndex::XYFocusNavigationStrategy, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusRight
    {
        KnownPropertyIndex::UIElement_XYFocusRight, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusRightNavigationStrategy
    {
        KnownPropertyIndex::UIElement_XYFocusRightNavigationStrategy, // Index name
        KnownTypeIndex::XYFocusNavigationStrategy, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusUp
    {
        KnownPropertyIndex::UIElement_XYFocusUp, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusUpNavigationStrategy
    {
        KnownPropertyIndex::UIElement_XYFocusUpNavigationStrategy, // Index name
        KnownTypeIndex::XYFocusNavigationStrategy, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualState.__DeferredSetters
    {
        KnownPropertyIndex::VisualState___DeferredSetters, // Index name
        KnownTypeIndex::TemplateContent, // Property type
        KnownTypeIndex::VisualState, // Declaring type
        KnownTypeIndex::VisualState, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualState.__DeferredStoryboard
    {
        KnownPropertyIndex::VisualState___DeferredStoryboard, // Index name
        KnownTypeIndex::TemplateContent, // Property type
        KnownTypeIndex::VisualState, // Declaring type
        KnownTypeIndex::VisualState, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualState.Setters
    {
        KnownPropertyIndex::VisualState_Setters, // Index name
        KnownTypeIndex::SetterBaseCollection, // Property type
        KnownTypeIndex::VisualState, // Declaring type
        KnownTypeIndex::VisualState, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualState.StateTriggers
    {
        KnownPropertyIndex::VisualState_StateTriggers, // Index name
        KnownTypeIndex::StateTriggerCollection, // Property type
        KnownTypeIndex::VisualState, // Declaring type
        KnownTypeIndex::VisualState, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualState.Storyboard
    {
        KnownPropertyIndex::VisualState_Storyboard, // Index name
        KnownTypeIndex::Storyboard, // Property type
        KnownTypeIndex::VisualState, // Declaring type
        KnownTypeIndex::VisualState, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualStateGroup.States
    {
        KnownPropertyIndex::VisualStateGroup_States, // Index name
        KnownTypeIndex::VisualStateCollection, // Property type
        KnownTypeIndex::VisualStateGroup, // Declaring type
        KnownTypeIndex::VisualStateGroup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualStateGroup.Transitions
    {
        KnownPropertyIndex::VisualStateGroup_Transitions, // Index name
        KnownTypeIndex::VisualTransitionCollection, // Property type
        KnownTypeIndex::VisualStateGroup, // Declaring type
        KnownTypeIndex::VisualStateGroup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualStateManager.CustomVisualStateManager
    {
        KnownPropertyIndex::VisualStateManager_CustomVisualStateManager, // Index name
        KnownTypeIndex::VisualStateManager, // Property type
        KnownTypeIndex::VisualStateManager, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualStateManager.VisualStateGroups
    {
        KnownPropertyIndex::VisualStateManager_VisualStateGroups, // Index name
        KnownTypeIndex::VisualStateGroupCollection, // Property type
        KnownTypeIndex::VisualStateManager, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualTransition.From
    {
        KnownPropertyIndex::VisualTransition_From, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::VisualTransition, // Declaring type
        KnownTypeIndex::VisualTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualTransition.GeneratedDuration
    {
        KnownPropertyIndex::VisualTransition_GeneratedDuration, // Index name
        KnownTypeIndex::Duration, // Property type
        KnownTypeIndex::VisualTransition, // Declaring type
        KnownTypeIndex::VisualTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualTransition.GeneratedEasingFunction
    {
        KnownPropertyIndex::VisualTransition_GeneratedEasingFunction, // Index name
        KnownTypeIndex::EasingFunctionBase, // Property type
        KnownTypeIndex::VisualTransition, // Declaring type
        KnownTypeIndex::VisualTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualTransition.Storyboard
    {
        KnownPropertyIndex::VisualTransition_Storyboard, // Index name
        KnownTypeIndex::Storyboard, // Property type
        KnownTypeIndex::VisualTransition, // Declaring type
        KnownTypeIndex::VisualTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.VisualTransition.To
    {
        KnownPropertyIndex::VisualTransition_To, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::VisualTransition, // Declaring type
        KnownTypeIndex::VisualTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Window.Content
    {
        KnownPropertyIndex::Window_Content, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::Window, // Declaring type
        KnownTypeIndex::Window, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Window.SystemBackdrop
    {
        KnownPropertyIndex::Window_SystemBackdrop, // Index name
        KnownTypeIndex::SystemBackdrop, // Property type
        KnownTypeIndex::Window, // Declaring type
        KnownTypeIndex::Window, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Window.Title
    {
        KnownPropertyIndex::Window_Title, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::Window, // Declaring type
        KnownTypeIndex::Window, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Window.TransparentBackground
    {
        KnownPropertyIndex::Window_TransparentBackground, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Window, // Declaring type
        KnownTypeIndex::Window, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand.AccessKey
    {
        KnownPropertyIndex::XamlUICommand_AccessKey, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::XamlUICommand, // Declaring type
        KnownTypeIndex::XamlUICommand, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand.Command
    {
        KnownPropertyIndex::XamlUICommand_Command, // Index name
        KnownTypeIndex::ICommand, // Property type
        KnownTypeIndex::XamlUICommand, // Declaring type
        KnownTypeIndex::XamlUICommand, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand.Description
    {
        KnownPropertyIndex::XamlUICommand_Description, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::XamlUICommand, // Declaring type
        KnownTypeIndex::XamlUICommand, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand.IconSource
    {
        KnownPropertyIndex::XamlUICommand_IconSource, // Index name
        KnownTypeIndex::IconSource, // Property type
        KnownTypeIndex::XamlUICommand, // Declaring type
        KnownTypeIndex::XamlUICommand, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand.KeyboardAccelerators
    {
        KnownPropertyIndex::XamlUICommand_KeyboardAccelerators, // Index name
        KnownTypeIndex::KeyboardAcceleratorCollection, // Property type
        KnownTypeIndex::XamlUICommand, // Declaring type
        KnownTypeIndex::XamlUICommand, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand.Label
    {
        KnownPropertyIndex::XamlUICommand_Label, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::XamlUICommand, // Declaring type
        KnownTypeIndex::XamlUICommand, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.AdaptiveTrigger.MinWindowHeight
    {
        KnownPropertyIndex::AdaptiveTrigger_MinWindowHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::AdaptiveTrigger, // Declaring type
        KnownTypeIndex::AdaptiveTrigger, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.AdaptiveTrigger.MinWindowWidth
    {
        KnownPropertyIndex::AdaptiveTrigger_MinWindowWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::AdaptiveTrigger, // Declaring type
        KnownTypeIndex::AdaptiveTrigger, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ArcSegment.IsLargeArc
    {
        KnownPropertyIndex::ArcSegment_IsLargeArc, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ArcSegment, // Declaring type
        KnownTypeIndex::ArcSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ArcSegment.Point
    {
        KnownPropertyIndex::ArcSegment_Point, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::ArcSegment, // Declaring type
        KnownTypeIndex::ArcSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ArcSegment.RotationAngle
    {
        KnownPropertyIndex::ArcSegment_RotationAngle, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ArcSegment, // Declaring type
        KnownTypeIndex::ArcSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ArcSegment.Size
    {
        KnownPropertyIndex::ArcSegment_Size, // Index name
        KnownTypeIndex::Size, // Property type
        KnownTypeIndex::ArcSegment, // Declaring type
        KnownTypeIndex::ArcSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ArcSegment.SweepDirection
    {
        KnownPropertyIndex::ArcSegment_SweepDirection, // Index name
        KnownTypeIndex::SweepDirection, // Property type
        KnownTypeIndex::ArcSegment, // Declaring type
        KnownTypeIndex::ArcSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.BackEase.Amplitude
    {
        KnownPropertyIndex::BackEase_Amplitude, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::BackEase, // Declaring type
        KnownTypeIndex::BackEase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.Storyboard
    {
        KnownPropertyIndex::BeginStoryboard_Storyboard, // Index name
        KnownTypeIndex::Storyboard, // Property type
        KnownTypeIndex::BeginStoryboard, // Declaring type
        KnownTypeIndex::BeginStoryboard, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.BezierSegment.Point1
    {
        KnownPropertyIndex::BezierSegment_Point1, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::BezierSegment, // Declaring type
        KnownTypeIndex::BezierSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.BezierSegment.Point2
    {
        KnownPropertyIndex::BezierSegment_Point2, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::BezierSegment, // Declaring type
        KnownTypeIndex::BezierSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.BezierSegment.Point3
    {
        KnownPropertyIndex::BezierSegment_Point3, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::BezierSegment, // Declaring type
        KnownTypeIndex::BezierSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.BitmapIconSource.ShowAsMonochrome
    {
        KnownPropertyIndex::BitmapIconSource_ShowAsMonochrome, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::BitmapIconSource, // Declaring type
        KnownTypeIndex::BitmapIconSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.BitmapIconSource.UriSource
    {
        KnownPropertyIndex::BitmapIconSource_UriSource, // Index name
        KnownTypeIndex::Uri, // Property type
        KnownTypeIndex::BitmapIconSource, // Declaring type
        KnownTypeIndex::BitmapIconSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapSource.PixelHeight
    {
        KnownPropertyIndex::BitmapSource_PixelHeight, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::BitmapSource, // Declaring type
        KnownTypeIndex::BitmapSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapSource.PixelWidth
    {
        KnownPropertyIndex::BitmapSource_PixelWidth, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::BitmapSource, // Declaring type
        KnownTypeIndex::BitmapSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Block.HorizontalTextAlignment
    {
        KnownPropertyIndex::Block_HorizontalTextAlignment, // Index name
        KnownTypeIndex::TextAlignment, // Property type
        KnownTypeIndex::Block, // Declaring type
        KnownTypeIndex::Block, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Block.LineHeight
    {
        KnownPropertyIndex::Block_LineHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Block, // Declaring type
        KnownTypeIndex::Block, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Block.LineStackingStrategy
    {
        KnownPropertyIndex::Block_LineStackingStrategy, // Index name
        KnownTypeIndex::LineStackingStrategy, // Property type
        KnownTypeIndex::Block, // Declaring type
        KnownTypeIndex::Block, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Block.Margin
    {
        KnownPropertyIndex::Block_Margin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::Block, // Declaring type
        KnownTypeIndex::Block, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Block.TextAlignment
    {
        KnownPropertyIndex::Block_TextAlignment, // Index name
        KnownTypeIndex::TextAlignment, // Property type
        KnownTypeIndex::Block, // Declaring type
        KnownTypeIndex::Block, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.BounceEase.Bounces
    {
        KnownPropertyIndex::BounceEase_Bounces, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::BounceEase, // Declaring type
        KnownTypeIndex::BounceEase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.BounceEase.Bounciness
    {
        KnownPropertyIndex::BounceEase_Bounciness, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::BounceEase, // Declaring type
        KnownTypeIndex::BounceEase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation.By
    {
        KnownPropertyIndex::ColorAnimation_By, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorAnimation, // Declaring type
        KnownTypeIndex::ColorAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EasingFunction
    {
        KnownPropertyIndex::ColorAnimation_EasingFunction, // Index name
        KnownTypeIndex::EasingFunctionBase, // Property type
        KnownTypeIndex::ColorAnimation, // Declaring type
        KnownTypeIndex::ColorAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EnableDependentAnimation
    {
        KnownPropertyIndex::ColorAnimation_EnableDependentAnimation, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ColorAnimation, // Declaring type
        KnownTypeIndex::ColorAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation.From
    {
        KnownPropertyIndex::ColorAnimation_From, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorAnimation, // Declaring type
        KnownTypeIndex::ColorAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation.To
    {
        KnownPropertyIndex::ColorAnimation_To, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorAnimation, // Declaring type
        KnownTypeIndex::ColorAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.EnableDependentAnimation
    {
        KnownPropertyIndex::ColorAnimationUsingKeyFrames_EnableDependentAnimation, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ColorAnimationUsingKeyFrames, // Declaring type
        KnownTypeIndex::ColorAnimationUsingKeyFrames, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames
    {
        KnownPropertyIndex::ColorAnimationUsingKeyFrames_KeyFrames, // Index name
        KnownTypeIndex::ColorKeyFrameCollection, // Property type
        KnownTypeIndex::ColorAnimationUsingKeyFrames, // Declaring type
        KnownTypeIndex::ColorAnimationUsingKeyFrames, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterX
    {
        KnownPropertyIndex::CompositeTransform3D_CenterX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterXAnimation
    {
        KnownPropertyIndex::CompositeTransform3D_CenterXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterY
    {
        KnownPropertyIndex::CompositeTransform3D_CenterY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterYAnimation
    {
        KnownPropertyIndex::CompositeTransform3D_CenterYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterZ
    {
        KnownPropertyIndex::CompositeTransform3D_CenterZ, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterZAnimation
    {
        KnownPropertyIndex::CompositeTransform3D_CenterZAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationX
    {
        KnownPropertyIndex::CompositeTransform3D_RotationX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationXAnimation
    {
        KnownPropertyIndex::CompositeTransform3D_RotationXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationY
    {
        KnownPropertyIndex::CompositeTransform3D_RotationY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationYAnimation
    {
        KnownPropertyIndex::CompositeTransform3D_RotationYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationZ
    {
        KnownPropertyIndex::CompositeTransform3D_RotationZ, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationZAnimation
    {
        KnownPropertyIndex::CompositeTransform3D_RotationZAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleX
    {
        KnownPropertyIndex::CompositeTransform3D_ScaleX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleXAnimation
    {
        KnownPropertyIndex::CompositeTransform3D_ScaleXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleY
    {
        KnownPropertyIndex::CompositeTransform3D_ScaleY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleYAnimation
    {
        KnownPropertyIndex::CompositeTransform3D_ScaleYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleZ
    {
        KnownPropertyIndex::CompositeTransform3D_ScaleZ, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleZAnimation
    {
        KnownPropertyIndex::CompositeTransform3D_ScaleZAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateX
    {
        KnownPropertyIndex::CompositeTransform3D_TranslateX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateXAnimation
    {
        KnownPropertyIndex::CompositeTransform3D_TranslateXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateY
    {
        KnownPropertyIndex::CompositeTransform3D_TranslateY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateYAnimation
    {
        KnownPropertyIndex::CompositeTransform3D_TranslateYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateZ
    {
        KnownPropertyIndex::CompositeTransform3D_TranslateZ, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateZAnimation
    {
        KnownPropertyIndex::CompositeTransform3D_TranslateZAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform3D, // Declaring type
        KnownTypeIndex::CompositeTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition.HorizontalOffset
    {
        KnownPropertyIndex::ContentThemeTransition_HorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ContentThemeTransition, // Declaring type
        KnownTypeIndex::ContentThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition.VerticalOffset
    {
        KnownPropertyIndex::ContentThemeTransition_VerticalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ContentThemeTransition, // Declaring type
        KnownTypeIndex::ContentThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ControlTemplate.TargetType
    {
        KnownPropertyIndex::ControlTemplate_TargetType, // Index name
        KnownTypeIndex::TypeName, // Property type
        KnownTypeIndex::ControlTemplate, // Declaring type
        KnownTypeIndex::ControlTemplate, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.CustomResource.ResourceKey
    {
        KnownPropertyIndex::CustomResource_ResourceKey, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CustomResource, // Declaring type
        KnownTypeIndex::CustomResource, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.DataTemplate.ExtensionInstance
    {
        KnownPropertyIndex::DataTemplate_ExtensionInstance, // Index name
        KnownTypeIndex::IDataTemplateExtension, // Property type
        KnownTypeIndex::DataTemplate, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.DispatcherTimer.Interval
    {
        KnownPropertyIndex::DispatcherTimer_Interval, // Index name
        KnownTypeIndex::TimeSpan, // Property type
        KnownTypeIndex::DispatcherTimer, // Declaring type
        KnownTypeIndex::DispatcherTimer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.By
    {
        KnownPropertyIndex::DoubleAnimation_By, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::DoubleAnimation, // Declaring type
        KnownTypeIndex::DoubleAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EasingFunction
    {
        KnownPropertyIndex::DoubleAnimation_EasingFunction, // Index name
        KnownTypeIndex::EasingFunctionBase, // Property type
        KnownTypeIndex::DoubleAnimation, // Declaring type
        KnownTypeIndex::DoubleAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EnableDependentAnimation
    {
        KnownPropertyIndex::DoubleAnimation_EnableDependentAnimation, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::DoubleAnimation, // Declaring type
        KnownTypeIndex::DoubleAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.From
    {
        KnownPropertyIndex::DoubleAnimation_From, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::DoubleAnimation, // Declaring type
        KnownTypeIndex::DoubleAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.To
    {
        KnownPropertyIndex::DoubleAnimation_To, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::DoubleAnimation, // Declaring type
        KnownTypeIndex::DoubleAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.EnableDependentAnimation
    {
        KnownPropertyIndex::DoubleAnimationUsingKeyFrames_EnableDependentAnimation, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::DoubleAnimationUsingKeyFrames, // Declaring type
        KnownTypeIndex::DoubleAnimationUsingKeyFrames, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames
    {
        KnownPropertyIndex::DoubleAnimationUsingKeyFrames_KeyFrames, // Index name
        KnownTypeIndex::DoubleKeyFrameCollection, // Property type
        KnownTypeIndex::DoubleAnimationUsingKeyFrames, // Declaring type
        KnownTypeIndex::DoubleAnimationUsingKeyFrames, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Duration.TimeSpan
    {
        KnownPropertyIndex::Duration_TimeSpan, // Index name
        KnownTypeIndex::TimeSpan, // Property type
        KnownTypeIndex::Duration, // Declaring type
        KnownTypeIndex::Duration, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
    {
        KnownPropertyIndex::DynamicTimeline_Children, // Index name
        KnownTypeIndex::TimelineCollection, // Property type
        KnownTypeIndex::DynamicTimeline, // Declaring type
        KnownTypeIndex::DynamicTimeline, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame.EasingFunction
    {
        KnownPropertyIndex::EasingColorKeyFrame_EasingFunction, // Index name
        KnownTypeIndex::EasingFunctionBase, // Property type
        KnownTypeIndex::EasingColorKeyFrame, // Declaring type
        KnownTypeIndex::EasingColorKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame.EasingFunction
    {
        KnownPropertyIndex::EasingDoubleKeyFrame_EasingFunction, // Index name
        KnownTypeIndex::EasingFunctionBase, // Property type
        KnownTypeIndex::EasingDoubleKeyFrame, // Declaring type
        KnownTypeIndex::EasingDoubleKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame.EasingFunction
    {
        KnownPropertyIndex::EasingPointKeyFrame_EasingFunction, // Index name
        KnownTypeIndex::EasingFunctionBase, // Property type
        KnownTypeIndex::EasingPointKeyFrame, // Declaring type
        KnownTypeIndex::EasingPointKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EdgeUIThemeTransition.Edge
    {
        KnownPropertyIndex::EdgeUIThemeTransition_Edge, // Index name
        KnownTypeIndex::EdgeTransitionLocation, // Property type
        KnownTypeIndex::EdgeUIThemeTransition, // Declaring type
        KnownTypeIndex::EdgeUIThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ElasticEase.Oscillations
    {
        KnownPropertyIndex::ElasticEase_Oscillations, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::ElasticEase, // Declaring type
        KnownTypeIndex::ElasticEase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ElasticEase.Springiness
    {
        KnownPropertyIndex::ElasticEase_Springiness, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ElasticEase, // Declaring type
        KnownTypeIndex::ElasticEase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.EllipseGeometry.Center
    {
        KnownPropertyIndex::EllipseGeometry_Center, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::EllipseGeometry, // Declaring type
        KnownTypeIndex::EllipseGeometry, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.EllipseGeometry.RadiusX
    {
        KnownPropertyIndex::EllipseGeometry_RadiusX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::EllipseGeometry, // Declaring type
        KnownTypeIndex::EllipseGeometry, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.EllipseGeometry.RadiusY
    {
        KnownPropertyIndex::EllipseGeometry_RadiusY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::EllipseGeometry, // Declaring type
        KnownTypeIndex::EllipseGeometry, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition.FromHorizontalOffset
    {
        KnownPropertyIndex::EntranceThemeTransition_FromHorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::EntranceThemeTransition, // Declaring type
        KnownTypeIndex::EntranceThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition.FromVerticalOffset
    {
        KnownPropertyIndex::EntranceThemeTransition_FromVerticalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::EntranceThemeTransition, // Declaring type
        KnownTypeIndex::EntranceThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition.IsStaggeringEnabled
    {
        KnownPropertyIndex::EntranceThemeTransition_IsStaggeringEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::EntranceThemeTransition, // Declaring type
        KnownTypeIndex::EntranceThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.EventTrigger.Actions
    {
        KnownPropertyIndex::EventTrigger_Actions, // Index name
        KnownTypeIndex::TriggerActionCollection, // Property type
        KnownTypeIndex::EventTrigger, // Declaring type
        KnownTypeIndex::EventTrigger, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.EventTrigger.RoutedEvent
    {
        KnownPropertyIndex::EventTrigger_RoutedEvent, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::EventTrigger, // Declaring type
        KnownTypeIndex::EventTrigger, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ExponentialEase.Exponent
    {
        KnownPropertyIndex::ExponentialEase_Exponent, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ExponentialEase, // Declaring type
        KnownTypeIndex::ExponentialEase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Flyout.Content
    {
        KnownPropertyIndex::Flyout_Content, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::Flyout, // Declaring type
        KnownTypeIndex::Flyout, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Flyout.FlyoutPresenterStyle
    {
        KnownPropertyIndex::Flyout_FlyoutPresenterStyle, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::Flyout, // Declaring type
        KnownTypeIndex::Flyout, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.FontFamily
    {
        KnownPropertyIndex::FontIconSource_FontFamily, // Index name
        KnownTypeIndex::FontFamily, // Property type
        KnownTypeIndex::FontIconSource, // Declaring type
        KnownTypeIndex::FontIconSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.FontSize
    {
        KnownPropertyIndex::FontIconSource_FontSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FontIconSource, // Declaring type
        KnownTypeIndex::FontIconSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.FontStyle
    {
        KnownPropertyIndex::FontIconSource_FontStyle, // Index name
        KnownTypeIndex::FontStyle, // Property type
        KnownTypeIndex::FontIconSource, // Declaring type
        KnownTypeIndex::FontIconSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.FontWeight
    {
        KnownPropertyIndex::FontIconSource_FontWeight, // Index name
        KnownTypeIndex::FontWeight, // Property type
        KnownTypeIndex::FontIconSource, // Declaring type
        KnownTypeIndex::FontIconSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.Glyph
    {
        KnownPropertyIndex::FontIconSource_Glyph, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::FontIconSource, // Declaring type
        KnownTypeIndex::FontIconSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.IsTextScaleFactorEnabled
    {
        KnownPropertyIndex::FontIconSource_IsTextScaleFactorEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FontIconSource, // Declaring type
        KnownTypeIndex::FontIconSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.MirroredWhenRightToLeft
    {
        KnownPropertyIndex::FontIconSource_MirroredWhenRightToLeft, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FontIconSource, // Declaring type
        KnownTypeIndex::FontIconSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.ActualHeight
    {
        KnownPropertyIndex::FrameworkElement_ActualHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.ActualTheme
    {
        KnownPropertyIndex::FrameworkElement_ActualTheme, // Index name
        KnownTypeIndex::ElementTheme, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.ActualWidth
    {
        KnownPropertyIndex::FrameworkElement_ActualWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.AllowFocusOnInteraction
    {
        KnownPropertyIndex::FrameworkElement_AllowFocusOnInteraction, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.AllowFocusWhenDisabled
    {
        KnownPropertyIndex::FrameworkElement_AllowFocusWhenDisabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.AutomationPeerFactoryIndex
    {
        KnownPropertyIndex::FrameworkElement_AutomationPeerFactoryIndex, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.BringIntoViewDistanceX
    {
        KnownPropertyIndex::FrameworkElement_BringIntoViewDistanceX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.BringIntoViewDistanceY
    {
        KnownPropertyIndex::FrameworkElement_BringIntoViewDistanceY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.DataContext
    {
        KnownPropertyIndex::FrameworkElement_DataContext, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.EffectiveViewport
    {
        KnownPropertyIndex::FrameworkElement_EffectiveViewport, // Index name
        KnownTypeIndex::Rect, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.FlowDirection
    {
        KnownPropertyIndex::FrameworkElement_FlowDirection, // Index name
        KnownTypeIndex::FlowDirection, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.FocusVisualMargin
    {
        KnownPropertyIndex::FrameworkElement_FocusVisualMargin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.FocusVisualPrimaryBrush
    {
        KnownPropertyIndex::FrameworkElement_FocusVisualPrimaryBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.FocusVisualPrimaryThickness
    {
        KnownPropertyIndex::FrameworkElement_FocusVisualPrimaryThickness, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.FocusVisualSecondaryBrush
    {
        KnownPropertyIndex::FrameworkElement_FocusVisualSecondaryBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.FocusVisualSecondaryThickness
    {
        KnownPropertyIndex::FrameworkElement_FocusVisualSecondaryThickness, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.Height
    {
        KnownPropertyIndex::FrameworkElement_Height, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.HorizontalAlignment
    {
        KnownPropertyIndex::FrameworkElement_HorizontalAlignment, // Index name
        KnownTypeIndex::HorizontalAlignment, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.IsTextScaleFactorEnabledInternal
    {
        KnownPropertyIndex::FrameworkElement_IsTextScaleFactorEnabledInternal, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.Language
    {
        KnownPropertyIndex::FrameworkElement_Language, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.Margin
    {
        KnownPropertyIndex::FrameworkElement_Margin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.MaxHeight
    {
        KnownPropertyIndex::FrameworkElement_MaxHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.MaxViewport
    {
        KnownPropertyIndex::FrameworkElement_MaxViewport, // Index name
        KnownTypeIndex::Rect, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.MaxWidth
    {
        KnownPropertyIndex::FrameworkElement_MaxWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.MinHeight
    {
        KnownPropertyIndex::FrameworkElement_MinHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.MinWidth
    {
        KnownPropertyIndex::FrameworkElement_MinWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.Parent
    {
        KnownPropertyIndex::FrameworkElement_Parent, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.RequestedTheme
    {
        KnownPropertyIndex::FrameworkElement_RequestedTheme, // Index name
        KnownTypeIndex::ElementTheme, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.Resources
    {
        KnownPropertyIndex::FrameworkElement_Resources, // Index name
        KnownTypeIndex::ResourceDictionary, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.Style
    {
        KnownPropertyIndex::FrameworkElement_Style, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.Tag
    {
        KnownPropertyIndex::FrameworkElement_Tag, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.Triggers
    {
        KnownPropertyIndex::FrameworkElement_Triggers, // Index name
        KnownTypeIndex::TriggerCollection, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.VerticalAlignment
    {
        KnownPropertyIndex::FrameworkElement_VerticalAlignment, // Index name
        KnownTypeIndex::VerticalAlignment, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElement.Width
    {
        KnownPropertyIndex::FrameworkElement_Width, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElement, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer.Owner
    {
        KnownPropertyIndex::FrameworkElementAutomationPeer_Owner, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::FrameworkElementAutomationPeer, // Declaring type
        KnownTypeIndex::FrameworkElementAutomationPeer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.ActualHeight
    {
        KnownPropertyIndex::FrameworkElementEx_ActualHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElementEx, // Declaring type
        KnownTypeIndex::FrameworkElementEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.ActualWidth
    {
        KnownPropertyIndex::FrameworkElementEx_ActualWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElementEx, // Declaring type
        KnownTypeIndex::FrameworkElementEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.Children
    {
        KnownPropertyIndex::FrameworkElementEx_Children, // Index name
        KnownTypeIndex::UIElementCollection, // Property type
        KnownTypeIndex::FrameworkElementEx, // Declaring type
        KnownTypeIndex::FrameworkElementEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.Height
    {
        KnownPropertyIndex::FrameworkElementEx_Height, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElementEx, // Declaring type
        KnownTypeIndex::FrameworkElementEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.HorizontalAlignment
    {
        KnownPropertyIndex::FrameworkElementEx_HorizontalAlignment, // Index name
        KnownTypeIndex::HorizontalAlignment, // Property type
        KnownTypeIndex::FrameworkElementEx, // Declaring type
        KnownTypeIndex::FrameworkElementEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.Margin
    {
        KnownPropertyIndex::FrameworkElementEx_Margin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::FrameworkElementEx, // Declaring type
        KnownTypeIndex::FrameworkElementEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.MaxHeight
    {
        KnownPropertyIndex::FrameworkElementEx_MaxHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElementEx, // Declaring type
        KnownTypeIndex::FrameworkElementEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.MaxWidth
    {
        KnownPropertyIndex::FrameworkElementEx_MaxWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElementEx, // Declaring type
        KnownTypeIndex::FrameworkElementEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.MinHeight
    {
        KnownPropertyIndex::FrameworkElementEx_MinHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElementEx, // Declaring type
        KnownTypeIndex::FrameworkElementEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.MinWidth
    {
        KnownPropertyIndex::FrameworkElementEx_MinWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElementEx, // Declaring type
        KnownTypeIndex::FrameworkElementEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.VerticalAlignment
    {
        KnownPropertyIndex::FrameworkElementEx_VerticalAlignment, // Index name
        KnownTypeIndex::VerticalAlignment, // Property type
        KnownTypeIndex::FrameworkElementEx, // Declaring type
        KnownTypeIndex::FrameworkElementEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.Width
    {
        KnownPropertyIndex::FrameworkElementEx_Width, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FrameworkElementEx, // Declaring type
        KnownTypeIndex::FrameworkElementEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.GeometryGroup.Children
    {
        KnownPropertyIndex::GeometryGroup_Children, // Index name
        KnownTypeIndex::GeometryCollection, // Property type
        KnownTypeIndex::GeometryGroup, // Declaring type
        KnownTypeIndex::GeometryGroup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.GeometryGroup.FillRule
    {
        KnownPropertyIndex::GeometryGroup_FillRule, // Index name
        KnownTypeIndex::FillRule, // Property type
        KnownTypeIndex::GeometryGroup, // Declaring type
        KnownTypeIndex::GeometryGroup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.GradientBrush.ColorInterpolationMode
    {
        KnownPropertyIndex::GradientBrush_ColorInterpolationMode, // Index name
        KnownTypeIndex::ColorInterpolationMode, // Property type
        KnownTypeIndex::GradientBrush, // Declaring type
        KnownTypeIndex::GradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.GradientBrush.GradientStops
    {
        KnownPropertyIndex::GradientBrush_GradientStops, // Index name
        KnownTypeIndex::GradientStopCollection, // Property type
        KnownTypeIndex::GradientBrush, // Declaring type
        KnownTypeIndex::GradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.GradientBrush.MappingMode
    {
        KnownPropertyIndex::GradientBrush_MappingMode, // Index name
        KnownTypeIndex::BrushMappingMode, // Property type
        KnownTypeIndex::GradientBrush, // Declaring type
        KnownTypeIndex::GradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.GradientBrush.SpreadMethod
    {
        KnownPropertyIndex::GradientBrush_SpreadMethod, // Index name
        KnownTypeIndex::GradientSpreadMethod, // Property type
        KnownTypeIndex::GradientBrush, // Declaring type
        KnownTypeIndex::GradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings.DragItemsCount
    {
        KnownPropertyIndex::GridViewItemTemplateSettings_DragItemsCount, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::GridViewItemTemplateSettings, // Declaring type
        KnownTypeIndex::GridViewItemTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.Item
    {
        KnownPropertyIndex::ItemAutomationPeer_Item, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ItemAutomationPeer, // Declaring type
        KnownTypeIndex::ItemAutomationPeer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer
    {
        KnownPropertyIndex::ItemAutomationPeer_ItemsControlAutomationPeer, // Index name
        KnownTypeIndex::ItemsControlAutomationPeer, // Property type
        KnownTypeIndex::ItemAutomationPeer, // Declaring type
        KnownTypeIndex::ItemAutomationPeer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.KeyTime.TimeSpan
    {
        KnownPropertyIndex::KeyTime_TimeSpan, // Index name
        KnownTypeIndex::TimeSpan, // Property type
        KnownTypeIndex::KeyTime, // Declaring type
        KnownTypeIndex::KeyTime, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LineGeometry.EndPoint
    {
        KnownPropertyIndex::LineGeometry_EndPoint, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::LineGeometry, // Declaring type
        KnownTypeIndex::LineGeometry, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LineGeometry.StartPoint
    {
        KnownPropertyIndex::LineGeometry_StartPoint, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::LineGeometry, // Declaring type
        KnownTypeIndex::LineGeometry, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LineSegment.Point
    {
        KnownPropertyIndex::LineSegment_Point, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::LineSegment, // Declaring type
        KnownTypeIndex::LineSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings.DragItemsCount
    {
        KnownPropertyIndex::ListViewItemTemplateSettings_DragItemsCount, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::ListViewItemTemplateSettings, // Declaring type
        KnownTypeIndex::ListViewItemTemplateSettings, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Matrix3DProjection.ProjectionMatrix
    {
        KnownPropertyIndex::Matrix3DProjection_ProjectionMatrix, // Index name
        KnownTypeIndex::Matrix3D, // Property type
        KnownTypeIndex::Matrix3DProjection, // Declaring type
        KnownTypeIndex::Matrix3DProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyout.Items
    {
        KnownPropertyIndex::MenuFlyout_Items, // Index name
        KnownTypeIndex::MenuFlyoutItemBaseCollection, // Property type
        KnownTypeIndex::MenuFlyout, // Declaring type
        KnownTypeIndex::MenuFlyout, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyout.MenuFlyoutPresenterStyle
    {
        KnownPropertyIndex::MenuFlyout_MenuFlyoutPresenterStyle, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::MenuFlyout, // Declaring type
        KnownTypeIndex::MenuFlyout, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.MenuPopupThemeTransition.ClosedRatio
    {
        KnownPropertyIndex::MenuPopupThemeTransition_ClosedRatio, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::MenuPopupThemeTransition, // Declaring type
        KnownTypeIndex::MenuPopupThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.MenuPopupThemeTransition.Direction
    {
        KnownPropertyIndex::MenuPopupThemeTransition_Direction, // Index name
        KnownTypeIndex::AnimationDirection, // Property type
        KnownTypeIndex::MenuPopupThemeTransition, // Declaring type
        KnownTypeIndex::MenuPopupThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.MenuPopupThemeTransition.OpenedLength
    {
        KnownPropertyIndex::MenuPopupThemeTransition_OpenedLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::MenuPopupThemeTransition, // Declaring type
        KnownTypeIndex::MenuPopupThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.EnableDependentAnimation
    {
        KnownPropertyIndex::ObjectAnimationUsingKeyFrames_EnableDependentAnimation, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ObjectAnimationUsingKeyFrames, // Declaring type
        KnownTypeIndex::ObjectAnimationUsingKeyFrames, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames
    {
        KnownPropertyIndex::ObjectAnimationUsingKeyFrames_KeyFrames, // Index name
        KnownTypeIndex::ObjectKeyFrameCollection, // Property type
        KnownTypeIndex::ObjectAnimationUsingKeyFrames, // Declaring type
        KnownTypeIndex::ObjectAnimationUsingKeyFrames, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.PanelEx.ActualHeight
    {
        KnownPropertyIndex::PanelEx_ActualHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PanelEx, // Declaring type
        KnownTypeIndex::PanelEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.PanelEx.ActualWidth
    {
        KnownPropertyIndex::PanelEx_ActualWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PanelEx, // Declaring type
        KnownTypeIndex::PanelEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.PanelEx.Children
    {
        KnownPropertyIndex::PanelEx_Children, // Index name
        KnownTypeIndex::UIElementCollection, // Property type
        KnownTypeIndex::PanelEx, // Declaring type
        KnownTypeIndex::PanelEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.PanelEx.Height
    {
        KnownPropertyIndex::PanelEx_Height, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PanelEx, // Declaring type
        KnownTypeIndex::PanelEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.PanelEx.HorizontalAlignment
    {
        KnownPropertyIndex::PanelEx_HorizontalAlignment, // Index name
        KnownTypeIndex::HorizontalAlignment, // Property type
        KnownTypeIndex::PanelEx, // Declaring type
        KnownTypeIndex::PanelEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.PanelEx.Margin
    {
        KnownPropertyIndex::PanelEx_Margin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::PanelEx, // Declaring type
        KnownTypeIndex::PanelEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.PanelEx.MaxHeight
    {
        KnownPropertyIndex::PanelEx_MaxHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PanelEx, // Declaring type
        KnownTypeIndex::PanelEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.PanelEx.MaxWidth
    {
        KnownPropertyIndex::PanelEx_MaxWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PanelEx, // Declaring type
        KnownTypeIndex::PanelEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.PanelEx.MinHeight
    {
        KnownPropertyIndex::PanelEx_MinHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PanelEx, // Declaring type
        KnownTypeIndex::PanelEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.PanelEx.MinWidth
    {
        KnownPropertyIndex::PanelEx_MinWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PanelEx, // Declaring type
        KnownTypeIndex::PanelEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.PanelEx.VerticalAlignment
    {
        KnownPropertyIndex::PanelEx_VerticalAlignment, // Index name
        KnownTypeIndex::VerticalAlignment, // Property type
        KnownTypeIndex::PanelEx, // Declaring type
        KnownTypeIndex::PanelEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.PanelEx.Width
    {
        KnownPropertyIndex::PanelEx_Width, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PanelEx, // Declaring type
        KnownTypeIndex::PanelEx, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PaneThemeTransition.Edge
    {
        KnownPropertyIndex::PaneThemeTransition_Edge, // Index name
        KnownTypeIndex::EdgeTransitionLocation, // Property type
        KnownTypeIndex::PaneThemeTransition, // Declaring type
        KnownTypeIndex::PaneThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PathGeometry.Figures
    {
        KnownPropertyIndex::PathGeometry_Figures, // Index name
        KnownTypeIndex::PathFigureCollection, // Property type
        KnownTypeIndex::PathGeometry, // Declaring type
        KnownTypeIndex::PathGeometry, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PathGeometry.FillRule
    {
        KnownPropertyIndex::PathGeometry_FillRule, // Index name
        KnownTypeIndex::FillRule, // Property type
        KnownTypeIndex::PathGeometry, // Declaring type
        KnownTypeIndex::PathGeometry, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PathIconSource.Data
    {
        KnownPropertyIndex::PathIconSource_Data, // Index name
        KnownTypeIndex::Geometry, // Property type
        KnownTypeIndex::PathIconSource, // Declaring type
        KnownTypeIndex::PathIconSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D.Depth
    {
        KnownPropertyIndex::PerspectiveTransform3D_Depth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PerspectiveTransform3D, // Declaring type
        KnownTypeIndex::PerspectiveTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D.OffsetX
    {
        KnownPropertyIndex::PerspectiveTransform3D_OffsetX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PerspectiveTransform3D, // Declaring type
        KnownTypeIndex::PerspectiveTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D.OffsetY
    {
        KnownPropertyIndex::PerspectiveTransform3D_OffsetY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PerspectiveTransform3D, // Declaring type
        KnownTypeIndex::PerspectiveTransform3D, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PickerFlyoutThemeTransition.OffsetFromCenter
    {
        KnownPropertyIndex::PickerFlyoutThemeTransition_OffsetFromCenter, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PickerFlyoutThemeTransition, // Declaring type
        KnownTypeIndex::PickerFlyoutThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PickerFlyoutThemeTransition.OpenedLength
    {
        KnownPropertyIndex::PickerFlyoutThemeTransition_OpenedLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PickerFlyoutThemeTransition, // Declaring type
        KnownTypeIndex::PickerFlyoutThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationX
    {
        KnownPropertyIndex::PlaneProjection_CenterOfRotationX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationXAnimation
    {
        KnownPropertyIndex::PlaneProjection_CenterOfRotationXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationY
    {
        KnownPropertyIndex::PlaneProjection_CenterOfRotationY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationYAnimation
    {
        KnownPropertyIndex::PlaneProjection_CenterOfRotationYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationZ
    {
        KnownPropertyIndex::PlaneProjection_CenterOfRotationZ, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationZAnimation
    {
        KnownPropertyIndex::PlaneProjection_CenterOfRotationZAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetX
    {
        KnownPropertyIndex::PlaneProjection_GlobalOffsetX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetXAnimation
    {
        KnownPropertyIndex::PlaneProjection_GlobalOffsetXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetY
    {
        KnownPropertyIndex::PlaneProjection_GlobalOffsetY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetYAnimation
    {
        KnownPropertyIndex::PlaneProjection_GlobalOffsetYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetZ
    {
        KnownPropertyIndex::PlaneProjection_GlobalOffsetZ, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetZAnimation
    {
        KnownPropertyIndex::PlaneProjection_GlobalOffsetZAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetX
    {
        KnownPropertyIndex::PlaneProjection_LocalOffsetX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetXAnimation
    {
        KnownPropertyIndex::PlaneProjection_LocalOffsetXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetY
    {
        KnownPropertyIndex::PlaneProjection_LocalOffsetY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetYAnimation
    {
        KnownPropertyIndex::PlaneProjection_LocalOffsetYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetZ
    {
        KnownPropertyIndex::PlaneProjection_LocalOffsetZ, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetZAnimation
    {
        KnownPropertyIndex::PlaneProjection_LocalOffsetZAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.ProjectionMatrix
    {
        KnownPropertyIndex::PlaneProjection_ProjectionMatrix, // Index name
        KnownTypeIndex::Matrix3D, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.RotationX
    {
        KnownPropertyIndex::PlaneProjection_RotationX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.RotationXAnimation
    {
        KnownPropertyIndex::PlaneProjection_RotationXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.RotationY
    {
        KnownPropertyIndex::PlaneProjection_RotationY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.RotationYAnimation
    {
        KnownPropertyIndex::PlaneProjection_RotationYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.RotationZ
    {
        KnownPropertyIndex::PlaneProjection_RotationZ, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.RotationZAnimation
    {
        KnownPropertyIndex::PlaneProjection_RotationZAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PlaneProjection, // Declaring type
        KnownTypeIndex::PlaneProjection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation.By
    {
        KnownPropertyIndex::PointAnimation_By, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::PointAnimation, // Declaring type
        KnownTypeIndex::PointAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation.EasingFunction
    {
        KnownPropertyIndex::PointAnimation_EasingFunction, // Index name
        KnownTypeIndex::EasingFunctionBase, // Property type
        KnownTypeIndex::PointAnimation, // Declaring type
        KnownTypeIndex::PointAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation.EnableDependentAnimation
    {
        KnownPropertyIndex::PointAnimation_EnableDependentAnimation, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::PointAnimation, // Declaring type
        KnownTypeIndex::PointAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation.From
    {
        KnownPropertyIndex::PointAnimation_From, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::PointAnimation, // Declaring type
        KnownTypeIndex::PointAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation.To
    {
        KnownPropertyIndex::PointAnimation_To, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::PointAnimation, // Declaring type
        KnownTypeIndex::PointAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.EnableDependentAnimation
    {
        KnownPropertyIndex::PointAnimationUsingKeyFrames_EnableDependentAnimation, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::PointAnimationUsingKeyFrames, // Declaring type
        KnownTypeIndex::PointAnimationUsingKeyFrames, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames
    {
        KnownPropertyIndex::PointAnimationUsingKeyFrames_KeyFrames, // Index name
        KnownTypeIndex::PointKeyFrameCollection, // Property type
        KnownTypeIndex::PointAnimationUsingKeyFrames, // Declaring type
        KnownTypeIndex::PointAnimationUsingKeyFrames, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames.KeyFrames
    {
        KnownPropertyIndex::PointerAnimationUsingKeyFrames_KeyFrames, // Index name
        KnownTypeIndex::PointerKeyFrameCollection, // Property type
        KnownTypeIndex::PointerAnimationUsingKeyFrames, // Declaring type
        KnownTypeIndex::PointerAnimationUsingKeyFrames, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames.PointerSource
    {
        KnownPropertyIndex::PointerAnimationUsingKeyFrames_PointerSource, // Index name
        KnownTypeIndex::PointerDirection, // Property type
        KnownTypeIndex::PointerAnimationUsingKeyFrames, // Declaring type
        KnownTypeIndex::PointerAnimationUsingKeyFrames, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Media.PolyBezierSegment.Points
    {
        KnownPropertyIndex::PolyBezierSegment_Points, // Index name
        KnownTypeIndex::PointCollection, // Property type
        KnownTypeIndex::PolyBezierSegment, // Declaring type
        KnownTypeIndex::PolyBezierSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PolyLineSegment.Points
    {
        KnownPropertyIndex::PolyLineSegment_Points, // Index name
        KnownTypeIndex::PointCollection, // Property type
        KnownTypeIndex::PolyLineSegment, // Declaring type
        KnownTypeIndex::PolyLineSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment.Points
    {
        KnownPropertyIndex::PolyQuadraticBezierSegment_Points, // Index name
        KnownTypeIndex::PointCollection, // Property type
        KnownTypeIndex::PolyQuadraticBezierSegment, // Declaring type
        KnownTypeIndex::PolyQuadraticBezierSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition.FromHorizontalOffset
    {
        KnownPropertyIndex::PopupThemeTransition_FromHorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PopupThemeTransition, // Declaring type
        KnownTypeIndex::PopupThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition.FromVerticalOffset
    {
        KnownPropertyIndex::PopupThemeTransition_FromVerticalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PopupThemeTransition, // Declaring type
        KnownTypeIndex::PopupThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PowerEase.Power
    {
        KnownPropertyIndex::PowerEase_Power, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PowerEase, // Declaring type
        KnownTypeIndex::PowerEase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.PVLStaggerFunction.Delay
    {
        KnownPropertyIndex::PVLStaggerFunction_Delay, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PVLStaggerFunction, // Declaring type
        KnownTypeIndex::PVLStaggerFunction, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.PVLStaggerFunction.DelayReduce
    {
        KnownPropertyIndex::PVLStaggerFunction_DelayReduce, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PVLStaggerFunction, // Declaring type
        KnownTypeIndex::PVLStaggerFunction, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.PVLStaggerFunction.Maximum
    {
        KnownPropertyIndex::PVLStaggerFunction_Maximum, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PVLStaggerFunction, // Declaring type
        KnownTypeIndex::PVLStaggerFunction, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.PVLStaggerFunction.Reverse
    {
        KnownPropertyIndex::PVLStaggerFunction_Reverse, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::PVLStaggerFunction, // Declaring type
        KnownTypeIndex::PVLStaggerFunction, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Media.QuadraticBezierSegment.Point1
    {
        KnownPropertyIndex::QuadraticBezierSegment_Point1, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::QuadraticBezierSegment, // Declaring type
        KnownTypeIndex::QuadraticBezierSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.QuadraticBezierSegment.Point2
    {
        KnownPropertyIndex::QuadraticBezierSegment_Point2, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::QuadraticBezierSegment, // Declaring type
        KnownTypeIndex::QuadraticBezierSegment, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.RectangleGeometry.RadiusX
    {
        KnownPropertyIndex::RectangleGeometry_RadiusX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RectangleGeometry, // Declaring type
        KnownTypeIndex::RectangleGeometry, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.RectangleGeometry.RadiusY
    {
        KnownPropertyIndex::RectangleGeometry_RadiusY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RectangleGeometry, // Declaring type
        KnownTypeIndex::RectangleGeometry, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.RectangleGeometry.Rect
    {
        KnownPropertyIndex::RectangleGeometry_Rect, // Index name
        KnownTypeIndex::Rect, // Property type
        KnownTypeIndex::RectangleGeometry, // Declaring type
        KnownTypeIndex::RectangleGeometry, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.RelativeSource.Mode
    {
        KnownPropertyIndex::RelativeSource_Mode, // Index name
        KnownTypeIndex::RelativeSourceMode, // Property type
        KnownTypeIndex::RelativeSource, // Declaring type
        KnownTypeIndex::RelativeSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap.PixelHeight
    {
        KnownPropertyIndex::RenderTargetBitmap_PixelHeight, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::RenderTargetBitmap, // Declaring type
        KnownTypeIndex::RenderTargetBitmap, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap.PixelWidth
    {
        KnownPropertyIndex::RenderTargetBitmap_PixelWidth, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::RenderTargetBitmap, // Declaring type
        KnownTypeIndex::RenderTargetBitmap, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeTransition.IsStaggeringEnabled
    {
        KnownPropertyIndex::RepositionThemeTransition_IsStaggeringEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RepositionThemeTransition, // Declaring type
        KnownTypeIndex::RepositionThemeTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Setter.Property
    {
        KnownPropertyIndex::Setter_Property, // Index name
        KnownTypeIndex::DependencyPropertyProxy, // Property type
        KnownTypeIndex::Setter, // Declaring type
        KnownTypeIndex::Setter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Setter.Target
    {
        KnownPropertyIndex::Setter_Target, // Index name
        KnownTypeIndex::TargetPropertyPath, // Property type
        KnownTypeIndex::Setter, // Declaring type
        KnownTypeIndex::Setter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Setter.Value
    {
        KnownPropertyIndex::Setter_Value, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::Setter, // Declaring type
        KnownTypeIndex::Setter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush.Color
    {
        KnownPropertyIndex::SolidColorBrush_Color, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::SolidColorBrush, // Declaring type
        KnownTypeIndex::SolidColorBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush.ColorAAnimation
    {
        KnownPropertyIndex::SolidColorBrush_ColorAAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::SolidColorBrush, // Declaring type
        KnownTypeIndex::SolidColorBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush.ColorAnimation
    {
        KnownPropertyIndex::SolidColorBrush_ColorAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::SolidColorBrush, // Declaring type
        KnownTypeIndex::SolidColorBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush.ColorBAnimation
    {
        KnownPropertyIndex::SolidColorBrush_ColorBAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::SolidColorBrush, // Declaring type
        KnownTypeIndex::SolidColorBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush.ColorGAnimation
    {
        KnownPropertyIndex::SolidColorBrush_ColorGAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::SolidColorBrush, // Declaring type
        KnownTypeIndex::SolidColorBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush.ColorRAnimation
    {
        KnownPropertyIndex::SolidColorBrush_ColorRAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::SolidColorBrush, // Declaring type
        KnownTypeIndex::SolidColorBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame.KeySpline
    {
        KnownPropertyIndex::SplineColorKeyFrame_KeySpline, // Index name
        KnownTypeIndex::KeySpline, // Property type
        KnownTypeIndex::SplineColorKeyFrame, // Declaring type
        KnownTypeIndex::SplineColorKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame.KeySpline
    {
        KnownPropertyIndex::SplineDoubleKeyFrame_KeySpline, // Index name
        KnownTypeIndex::KeySpline, // Property type
        KnownTypeIndex::SplineDoubleKeyFrame, // Declaring type
        KnownTypeIndex::SplineDoubleKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame.KeySpline
    {
        KnownPropertyIndex::SplinePointKeyFrame_KeySpline, // Index name
        KnownTypeIndex::KeySpline, // Property type
        KnownTypeIndex::SplinePointKeyFrame, // Declaring type
        KnownTypeIndex::SplinePointKeyFrame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.StandardUICommand.Kind
    {
        KnownPropertyIndex::StandardUICommand_Kind, // Index name
        KnownTypeIndex::StandardUICommandKind, // Property type
        KnownTypeIndex::StandardUICommand, // Declaring type
        KnownTypeIndex::StandardUICommand, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.StateTrigger.IsActive
    {
        KnownPropertyIndex::StateTrigger_IsActive, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::StateTrigger, // Declaring type
        KnownTypeIndex::StateTrigger, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.StaticResource.ResourceKey
    {
        KnownPropertyIndex::StaticResource_ResourceKey, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::StaticResource, // Declaring type
        KnownTypeIndex::StaticResource, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.RasterizePixelHeight
    {
        KnownPropertyIndex::SvgImageSource_RasterizePixelHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SvgImageSource, // Declaring type
        KnownTypeIndex::SvgImageSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.RasterizePixelWidth
    {
        KnownPropertyIndex::SvgImageSource_RasterizePixelWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SvgImageSource, // Declaring type
        KnownTypeIndex::SvgImageSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.UriSource
    {
        KnownPropertyIndex::SvgImageSource_UriSource, // Index name
        KnownTypeIndex::Uri, // Property type
        KnownTypeIndex::SvgImageSource, // Declaring type
        KnownTypeIndex::SvgImageSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SymbolIconSource.Symbol
    {
        KnownPropertyIndex::SymbolIconSource_Symbol, // Index name
        KnownTypeIndex::Symbol, // Property type
        KnownTypeIndex::SymbolIconSource, // Declaring type
        KnownTypeIndex::SymbolIconSource, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.TemplateBinding.Property
    {
        KnownPropertyIndex::TemplateBinding_Property, // Index name
        KnownTypeIndex::DependencyPropertyProxy, // Property type
        KnownTypeIndex::TemplateBinding, // Declaring type
        KnownTypeIndex::TemplateBinding, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter.Background
    {
        KnownPropertyIndex::TextHighlighter_Background, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::TextHighlighter, // Declaring type
        KnownTypeIndex::TextHighlighter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter.Foreground
    {
        KnownPropertyIndex::TextHighlighter_Foreground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::TextHighlighter, // Declaring type
        KnownTypeIndex::TextHighlighter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter.Ranges
    {
        KnownPropertyIndex::TextHighlighter_Ranges, // Index name
        KnownTypeIndex::TextRangeCollection, // Property type
        KnownTypeIndex::TextHighlighter, // Declaring type
        KnownTypeIndex::TextHighlighter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.ThemeResource.ResourceKey
    {
        KnownPropertyIndex::ThemeResource_ResourceKey, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::ThemeResource, // Declaring type
        KnownTypeIndex::ThemeResource, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Media.ThemeShadow.Receivers
    {
        KnownPropertyIndex::ThemeShadow_Receivers, // Index name
        KnownTypeIndex::UIElementWeakCollection, // Property type
        KnownTypeIndex::ThemeShadow, // Declaring type
        KnownTypeIndex::ThemeShadow, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.TileBrush.AlignmentX
    {
        KnownPropertyIndex::TileBrush_AlignmentX, // Index name
        KnownTypeIndex::AlignmentX, // Property type
        KnownTypeIndex::TileBrush, // Declaring type
        KnownTypeIndex::TileBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.TileBrush.AlignmentY
    {
        KnownPropertyIndex::TileBrush_AlignmentY, // Index name
        KnownTypeIndex::AlignmentY, // Property type
        KnownTypeIndex::TileBrush, // Declaring type
        KnownTypeIndex::TileBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.TileBrush.Stretch
    {
        KnownPropertyIndex::TileBrush_Stretch, // Index name
        KnownTypeIndex::Stretch, // Property type
        KnownTypeIndex::TileBrush, // Declaring type
        KnownTypeIndex::TileBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.XamlCompositionBrushBase.FallbackColor
    {
        KnownPropertyIndex::XamlCompositionBrushBase_FallbackColor, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::XamlCompositionBrushBase, // Declaring type
        KnownTypeIndex::XamlCompositionBrushBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotationCollection.ContentProperty
    {
        KnownPropertyIndex::AutomationAnnotationCollection_ContentProperty, // Index name
        KnownTypeIndex::AutomationAnnotation, // Property type
        KnownTypeIndex::AutomationAnnotationCollection, // Declaring type
        KnownTypeIndex::AutomationAnnotationCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotationCollection.ContentProperty
    {
        KnownPropertyIndex::AutomationPeerAnnotationCollection_ContentProperty, // Index name
        KnownTypeIndex::AutomationPeerAnnotation, // Property type
        KnownTypeIndex::AutomationPeerAnnotationCollection, // Declaring type
        KnownTypeIndex::AutomationPeerAnnotationCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerCollection.ContentProperty
    {
        KnownPropertyIndex::AutomationPeerCollection_ContentProperty, // Index name
        KnownTypeIndex::AutomationPeer, // Property type
        KnownTypeIndex::AutomationPeerCollection, // Declaring type
        KnownTypeIndex::AutomationPeerCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.Binding.Converter
    {
        KnownPropertyIndex::Binding_Converter, // Index name
        KnownTypeIndex::IValueConverter, // Property type
        KnownTypeIndex::Binding, // Declaring type
        KnownTypeIndex::Binding, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.Binding.ConverterLanguage
    {
        KnownPropertyIndex::Binding_ConverterLanguage, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::Binding, // Declaring type
        KnownTypeIndex::Binding, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.Binding.ConverterParameter
    {
        KnownPropertyIndex::Binding_ConverterParameter, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::Binding, // Declaring type
        KnownTypeIndex::Binding, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.Binding.ElementName
    {
        KnownPropertyIndex::Binding_ElementName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::Binding, // Declaring type
        KnownTypeIndex::Binding, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.Binding.FallbackValue
    {
        KnownPropertyIndex::Binding_FallbackValue, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::Binding, // Declaring type
        KnownTypeIndex::Binding, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.Binding.Mode
    {
        KnownPropertyIndex::Binding_Mode, // Index name
        KnownTypeIndex::BindingMode, // Property type
        KnownTypeIndex::Binding, // Declaring type
        KnownTypeIndex::Binding, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.Binding.Path
    {
        KnownPropertyIndex::Binding_Path, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::Binding, // Declaring type
        KnownTypeIndex::Binding, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.Binding.RelativeSource
    {
        KnownPropertyIndex::Binding_RelativeSource, // Index name
        KnownTypeIndex::RelativeSource, // Property type
        KnownTypeIndex::Binding, // Declaring type
        KnownTypeIndex::Binding, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.Binding.Source
    {
        KnownPropertyIndex::Binding_Source, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::Binding, // Declaring type
        KnownTypeIndex::Binding, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.Binding.TargetNullValue
    {
        KnownPropertyIndex::Binding_TargetNullValue, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::Binding, // Declaring type
        KnownTypeIndex::Binding, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Data.Binding.UpdateSourceTrigger
    {
        KnownPropertyIndex::Binding_UpdateSourceTrigger, // Index name
        KnownTypeIndex::UpdateSourceTrigger, // Property type
        KnownTypeIndex::Binding, // Declaring type
        KnownTypeIndex::Binding, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.AutoPlay
    {
        KnownPropertyIndex::BitmapImage_AutoPlay, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::BitmapImage, // Declaring type
        KnownTypeIndex::BitmapImage, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.CreateOptions
    {
        KnownPropertyIndex::BitmapImage_CreateOptions, // Index name
        KnownTypeIndex::BitmapCreateOptions, // Property type
        KnownTypeIndex::BitmapImage, // Declaring type
        KnownTypeIndex::BitmapImage, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelHeight
    {
        KnownPropertyIndex::BitmapImage_DecodePixelHeight, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::BitmapImage, // Declaring type
        KnownTypeIndex::BitmapImage, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelType
    {
        KnownPropertyIndex::BitmapImage_DecodePixelType, // Index name
        KnownTypeIndex::DecodePixelType, // Property type
        KnownTypeIndex::BitmapImage, // Declaring type
        KnownTypeIndex::BitmapImage, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelWidth
    {
        KnownPropertyIndex::BitmapImage_DecodePixelWidth, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::BitmapImage, // Declaring type
        KnownTypeIndex::BitmapImage, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.IsAnimatedBitmap
    {
        KnownPropertyIndex::BitmapImage_IsAnimatedBitmap, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::BitmapImage, // Declaring type
        KnownTypeIndex::BitmapImage, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.IsPlaying
    {
        KnownPropertyIndex::BitmapImage_IsPlaying, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::BitmapImage, // Declaring type
        KnownTypeIndex::BitmapImage, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.UriSource
    {
        KnownPropertyIndex::BitmapImage_UriSource, // Index name
        KnownTypeIndex::Uri, // Property type
        KnownTypeIndex::BitmapImage, // Declaring type
        KnownTypeIndex::BitmapImage, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Border.Background
    {
        KnownPropertyIndex::Border_Background, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::Border, // Declaring type
        KnownTypeIndex::Border, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Border.BackgroundSizing
    {
        KnownPropertyIndex::Border_BackgroundSizing, // Index name
        KnownTypeIndex::BackgroundSizing, // Property type
        KnownTypeIndex::Border, // Declaring type
        KnownTypeIndex::Border, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Border.BackgroundTransition
    {
        KnownPropertyIndex::Border_BackgroundTransition, // Index name
        KnownTypeIndex::BrushTransition, // Property type
        KnownTypeIndex::Border, // Declaring type
        KnownTypeIndex::Border, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Border.BorderBrush
    {
        KnownPropertyIndex::Border_BorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::Border, // Declaring type
        KnownTypeIndex::Border, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Border.BorderThickness
    {
        KnownPropertyIndex::Border_BorderThickness, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::Border, // Declaring type
        KnownTypeIndex::Border, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Border.Child
    {
        KnownPropertyIndex::Border_Child, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::Border, // Declaring type
        KnownTypeIndex::Border, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Border.ChildTransitions
    {
        KnownPropertyIndex::Border_ChildTransitions, // Index name
        KnownTypeIndex::TransitionCollection, // Property type
        KnownTypeIndex::Border, // Declaring type
        KnownTypeIndex::Border, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Border.CornerRadius
    {
        KnownPropertyIndex::Border_CornerRadius, // Index name
        KnownTypeIndex::CornerRadius, // Property type
        KnownTypeIndex::Border, // Declaring type
        KnownTypeIndex::Border, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Border.Padding
    {
        KnownPropertyIndex::Border_Padding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::Border, // Declaring type
        KnownTypeIndex::Border, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.BrushCollection.ContentProperty
    {
        KnownPropertyIndex::BrushCollection_ContentProperty, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::BrushCollection, // Declaring type
        KnownTypeIndex::BrushCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.ContentProperty
    {
        KnownPropertyIndex::ColorKeyFrameCollection_ContentProperty, // Index name
        KnownTypeIndex::ColorKeyFrame, // Property type
        KnownTypeIndex::ColorKeyFrameCollection, // Declaring type
        KnownTypeIndex::ColorKeyFrameCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.ContentProperty
    {
        KnownPropertyIndex::ColumnDefinitionCollection_ContentProperty, // Index name
        KnownTypeIndex::ColumnDefinition, // Property type
        KnownTypeIndex::ColumnDefinitionCollection, // Declaring type
        KnownTypeIndex::ColumnDefinitionCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.CenterX
    {
        KnownPropertyIndex::CompositeTransform_CenterX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.CenterXAnimation
    {
        KnownPropertyIndex::CompositeTransform_CenterXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.CenterY
    {
        KnownPropertyIndex::CompositeTransform_CenterY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.CenterYAnimation
    {
        KnownPropertyIndex::CompositeTransform_CenterYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.RotateAnimation
    {
        KnownPropertyIndex::CompositeTransform_RotateAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.Rotation
    {
        KnownPropertyIndex::CompositeTransform_Rotation, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.ScaleX
    {
        KnownPropertyIndex::CompositeTransform_ScaleX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.ScaleXAnimation
    {
        KnownPropertyIndex::CompositeTransform_ScaleXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.ScaleY
    {
        KnownPropertyIndex::CompositeTransform_ScaleY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.ScaleYAnimation
    {
        KnownPropertyIndex::CompositeTransform_ScaleYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.SkewX
    {
        KnownPropertyIndex::CompositeTransform_SkewX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.SkewXAnimation
    {
        KnownPropertyIndex::CompositeTransform_SkewXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.SkewY
    {
        KnownPropertyIndex::CompositeTransform_SkewY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.SkewYAnimation
    {
        KnownPropertyIndex::CompositeTransform_SkewYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.TranslateX
    {
        KnownPropertyIndex::CompositeTransform_TranslateX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.TranslateXAnimation
    {
        KnownPropertyIndex::CompositeTransform_TranslateXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.TranslateY
    {
        KnownPropertyIndex::CompositeTransform_TranslateY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.TranslateYAnimation
    {
        KnownPropertyIndex::CompositeTransform_TranslateYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CompositeTransform, // Declaring type
        KnownTypeIndex::CompositeTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.Background
    {
        KnownPropertyIndex::ContentPresenter_Background, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.BackgroundSizing
    {
        KnownPropertyIndex::ContentPresenter_BackgroundSizing, // Index name
        KnownTypeIndex::BackgroundSizing, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.BackgroundTransition
    {
        KnownPropertyIndex::ContentPresenter_BackgroundTransition, // Index name
        KnownTypeIndex::BrushTransition, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.BorderBrush
    {
        KnownPropertyIndex::ContentPresenter_BorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.BorderThickness
    {
        KnownPropertyIndex::ContentPresenter_BorderThickness, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.CharacterSpacing
    {
        KnownPropertyIndex::ContentPresenter_CharacterSpacing, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.Content
    {
        KnownPropertyIndex::ContentPresenter_Content, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplate
    {
        KnownPropertyIndex::ContentPresenter_ContentTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplateSelector
    {
        KnownPropertyIndex::ContentPresenter_ContentTemplateSelector, // Index name
        KnownTypeIndex::DataTemplateSelector, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
    {
        KnownPropertyIndex::ContentPresenter_ContentTransitions, // Index name
        KnownTypeIndex::TransitionCollection, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.CornerRadius
    {
        KnownPropertyIndex::ContentPresenter_CornerRadius, // Index name
        KnownTypeIndex::CornerRadius, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.FontFamily
    {
        KnownPropertyIndex::ContentPresenter_FontFamily, // Index name
        KnownTypeIndex::FontFamily, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.FontSize
    {
        KnownPropertyIndex::ContentPresenter_FontSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.FontStretch
    {
        KnownPropertyIndex::ContentPresenter_FontStretch, // Index name
        KnownTypeIndex::FontStretch, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.FontStyle
    {
        KnownPropertyIndex::ContentPresenter_FontStyle, // Index name
        KnownTypeIndex::FontStyle, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.FontWeight
    {
        KnownPropertyIndex::ContentPresenter_FontWeight, // Index name
        KnownTypeIndex::FontWeight, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.Foreground
    {
        KnownPropertyIndex::ContentPresenter_Foreground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.HorizontalContentAlignment
    {
        KnownPropertyIndex::ContentPresenter_HorizontalContentAlignment, // Index name
        KnownTypeIndex::HorizontalAlignment, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.IsTextScaleFactorEnabled
    {
        KnownPropertyIndex::ContentPresenter_IsTextScaleFactorEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.LineHeight
    {
        KnownPropertyIndex::ContentPresenter_LineHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.LineStackingStrategy
    {
        KnownPropertyIndex::ContentPresenter_LineStackingStrategy, // Index name
        KnownTypeIndex::LineStackingStrategy, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.MaxLines
    {
        KnownPropertyIndex::ContentPresenter_MaxLines, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.OpticalMarginAlignment
    {
        KnownPropertyIndex::ContentPresenter_OpticalMarginAlignment, // Index name
        KnownTypeIndex::OpticalMarginAlignment, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.Padding
    {
        KnownPropertyIndex::ContentPresenter_Padding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.SelectedContentTemplate
    {
        KnownPropertyIndex::ContentPresenter_SelectedContentTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.TextLineBounds
    {
        KnownPropertyIndex::ContentPresenter_TextLineBounds, // Index name
        KnownTypeIndex::TextLineBounds, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.TextWrapping
    {
        KnownPropertyIndex::ContentPresenter_TextWrapping, // Index name
        KnownTypeIndex::TextWrapping, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.VerticalContentAlignment
    {
        KnownPropertyIndex::ContentPresenter_VerticalContentAlignment, // Index name
        KnownTypeIndex::VerticalAlignment, // Property type
        KnownTypeIndex::ContentPresenter, // Declaring type
        KnownTypeIndex::ContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.Background
    {
        KnownPropertyIndex::Control_Background, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.BackgroundSizing
    {
        KnownPropertyIndex::Control_BackgroundSizing, // Index name
        KnownTypeIndex::BackgroundSizing, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.BorderBrush
    {
        KnownPropertyIndex::Control_BorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.BorderThickness
    {
        KnownPropertyIndex::Control_BorderThickness, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.CharacterSpacing
    {
        KnownPropertyIndex::Control_CharacterSpacing, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.CornerRadius
    {
        KnownPropertyIndex::Control_CornerRadius, // Index name
        KnownTypeIndex::CornerRadius, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.DefaultStyleKey
    {
        KnownPropertyIndex::Control_DefaultStyleKey, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.DefaultStyleResourceUri
    {
        KnownPropertyIndex::Control_DefaultStyleResourceUri, // Index name
        KnownTypeIndex::Uri, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.ElementSoundMode
    {
        KnownPropertyIndex::Control_ElementSoundMode, // Index name
        KnownTypeIndex::ElementSoundMode, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.FocusTargetDescendant
    {
        KnownPropertyIndex::Control_FocusTargetDescendant, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.FontFamily
    {
        KnownPropertyIndex::Control_FontFamily, // Index name
        KnownTypeIndex::FontFamily, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.FontSize
    {
        KnownPropertyIndex::Control_FontSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.FontStretch
    {
        KnownPropertyIndex::Control_FontStretch, // Index name
        KnownTypeIndex::FontStretch, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.FontStyle
    {
        KnownPropertyIndex::Control_FontStyle, // Index name
        KnownTypeIndex::FontStyle, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.FontWeight
    {
        KnownPropertyIndex::Control_FontWeight, // Index name
        KnownTypeIndex::FontWeight, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.Foreground
    {
        KnownPropertyIndex::Control_Foreground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.HorizontalContentAlignment
    {
        KnownPropertyIndex::Control_HorizontalContentAlignment, // Index name
        KnownTypeIndex::HorizontalAlignment, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.IsEnabled
    {
        KnownPropertyIndex::Control_IsEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.IsFocusEngaged
    {
        KnownPropertyIndex::Control_IsFocusEngaged, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.IsFocusEngagementEnabled
    {
        KnownPropertyIndex::Control_IsFocusEngagementEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.IsTemplateFocusTarget
    {
        KnownPropertyIndex::Control_IsTemplateFocusTarget, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.IsTemplateKeyTipTarget
    {
        KnownPropertyIndex::Control_IsTemplateKeyTipTarget, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled
    {
        KnownPropertyIndex::Control_IsTextScaleFactorEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.Padding
    {
        KnownPropertyIndex::Control_Padding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.RequiresPointer
    {
        KnownPropertyIndex::Control_RequiresPointer, // Index name
        KnownTypeIndex::RequiresPointer, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.TabNavigation
    {
        KnownPropertyIndex::Control_TabNavigation, // Index name
        KnownTypeIndex::KeyboardNavigationMode, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.Template
    {
        KnownPropertyIndex::Control_Template, // Index name
        KnownTypeIndex::ControlTemplate, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.TemplateKeyTipTarget
    {
        KnownPropertyIndex::Control_TemplateKeyTipTarget, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Control.VerticalContentAlignment
    {
        KnownPropertyIndex::Control_VerticalContentAlignment, // Index name
        KnownTypeIndex::VerticalAlignment, // Property type
        KnownTypeIndex::Control, // Declaring type
        KnownTypeIndex::Control, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.DisplayMemberTemplate.DisplayMemberPath
    {
        KnownPropertyIndex::DisplayMemberTemplate_DisplayMemberPath, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DisplayMemberTemplate, // Declaring type
        KnownTypeIndex::DisplayMemberTemplate, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.DoubleCollection.ContentProperty
    {
        KnownPropertyIndex::DoubleCollection_ContentProperty, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::DoubleCollection, // Declaring type
        KnownTypeIndex::DoubleCollection, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.ContentProperty
    {
        KnownPropertyIndex::DoubleKeyFrameCollection_ContentProperty, // Index name
        KnownTypeIndex::DoubleKeyFrame, // Property type
        KnownTypeIndex::DoubleKeyFrameCollection, // Declaring type
        KnownTypeIndex::DoubleKeyFrameCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DragItemThemeAnimation.TargetName
    {
        KnownPropertyIndex::DragItemThemeAnimation_TargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DragItemThemeAnimation, // Declaring type
        KnownTypeIndex::DragItemThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation.Direction
    {
        KnownPropertyIndex::DragOverThemeAnimation_Direction, // Index name
        KnownTypeIndex::AnimationDirection, // Property type
        KnownTypeIndex::DragOverThemeAnimation, // Declaring type
        KnownTypeIndex::DragOverThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation.TargetName
    {
        KnownPropertyIndex::DragOverThemeAnimation_TargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DragOverThemeAnimation, // Declaring type
        KnownTypeIndex::DragOverThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation.ToOffset
    {
        KnownPropertyIndex::DragOverThemeAnimation_ToOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::DragOverThemeAnimation, // Declaring type
        KnownTypeIndex::DragOverThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.EntranceTarget
    {
        KnownPropertyIndex::DrillInThemeAnimation_EntranceTarget, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::DrillInThemeAnimation, // Declaring type
        KnownTypeIndex::DrillInThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.EntranceTargetName
    {
        KnownPropertyIndex::DrillInThemeAnimation_EntranceTargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DrillInThemeAnimation, // Declaring type
        KnownTypeIndex::DrillInThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.ExitTarget
    {
        KnownPropertyIndex::DrillInThemeAnimation_ExitTarget, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::DrillInThemeAnimation, // Declaring type
        KnownTypeIndex::DrillInThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.ExitTargetName
    {
        KnownPropertyIndex::DrillInThemeAnimation_ExitTargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DrillInThemeAnimation, // Declaring type
        KnownTypeIndex::DrillInThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.EntranceTarget
    {
        KnownPropertyIndex::DrillOutThemeAnimation_EntranceTarget, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::DrillOutThemeAnimation, // Declaring type
        KnownTypeIndex::DrillOutThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.EntranceTargetName
    {
        KnownPropertyIndex::DrillOutThemeAnimation_EntranceTargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DrillOutThemeAnimation, // Declaring type
        KnownTypeIndex::DrillOutThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.ExitTarget
    {
        KnownPropertyIndex::DrillOutThemeAnimation_ExitTarget, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::DrillOutThemeAnimation, // Declaring type
        KnownTypeIndex::DrillOutThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.ExitTargetName
    {
        KnownPropertyIndex::DrillOutThemeAnimation_ExitTargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DrillOutThemeAnimation, // Declaring type
        KnownTypeIndex::DrillOutThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation.TargetName
    {
        KnownPropertyIndex::DropTargetItemThemeAnimation_TargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DropTargetItemThemeAnimation, // Declaring type
        KnownTypeIndex::DropTargetItemThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.FadeInThemeAnimation.TargetName
    {
        KnownPropertyIndex::FadeInThemeAnimation_TargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::FadeInThemeAnimation, // Declaring type
        KnownTypeIndex::FadeInThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.FadeOutThemeAnimation.TargetName
    {
        KnownPropertyIndex::FadeOutThemeAnimation_TargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::FadeOutThemeAnimation, // Declaring type
        KnownTypeIndex::FadeOutThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.FloatCollection.ContentProperty
    {
        KnownPropertyIndex::FloatCollection_ContentProperty, // Index name
        KnownTypeIndex::Float, // Property type
        KnownTypeIndex::FloatCollection, // Declaring type
        KnownTypeIndex::FloatCollection, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Media.GeometryCollection.ContentProperty
    {
        KnownPropertyIndex::GeometryCollection_ContentProperty, // Index name
        KnownTypeIndex::Geometry, // Property type
        KnownTypeIndex::GeometryCollection, // Declaring type
        KnownTypeIndex::GeometryCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.ColorFontPaletteIndex
    {
        KnownPropertyIndex::Glyphs_ColorFontPaletteIndex, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Glyphs, // Declaring type
        KnownTypeIndex::Glyphs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.Fill
    {
        KnownPropertyIndex::Glyphs_Fill, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::Glyphs, // Declaring type
        KnownTypeIndex::Glyphs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.FontRenderingEmSize
    {
        KnownPropertyIndex::Glyphs_FontRenderingEmSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Glyphs, // Declaring type
        KnownTypeIndex::Glyphs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.FontUri
    {
        KnownPropertyIndex::Glyphs_FontUri, // Index name
        KnownTypeIndex::Uri, // Property type
        KnownTypeIndex::Glyphs, // Declaring type
        KnownTypeIndex::Glyphs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.Indices
    {
        KnownPropertyIndex::Glyphs_Indices, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::Glyphs, // Declaring type
        KnownTypeIndex::Glyphs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.IsColorFontEnabled
    {
        KnownPropertyIndex::Glyphs_IsColorFontEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Glyphs, // Declaring type
        KnownTypeIndex::Glyphs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.OriginX
    {
        KnownPropertyIndex::Glyphs_OriginX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Glyphs, // Declaring type
        KnownTypeIndex::Glyphs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.OriginY
    {
        KnownPropertyIndex::Glyphs_OriginY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Glyphs, // Declaring type
        KnownTypeIndex::Glyphs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.StyleSimulations
    {
        KnownPropertyIndex::Glyphs_StyleSimulations, // Index name
        KnownTypeIndex::StyleSimulations, // Property type
        KnownTypeIndex::Glyphs, // Declaring type
        KnownTypeIndex::Glyphs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.UnicodeString
    {
        KnownPropertyIndex::Glyphs_UnicodeString, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::Glyphs, // Declaring type
        KnownTypeIndex::Glyphs, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.GradientStopCollection.ContentProperty
    {
        KnownPropertyIndex::GradientStopCollection_ContentProperty, // Index name
        KnownTypeIndex::GradientStop, // Property type
        KnownTypeIndex::GradientStopCollection, // Declaring type
        KnownTypeIndex::GradientStopCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.HubSectionCollection.ContentProperty
    {
        KnownPropertyIndex::HubSectionCollection_ContentProperty, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::HubSectionCollection, // Declaring type
        KnownTypeIndex::HubSectionCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.IconElement.Foreground
    {
        KnownPropertyIndex::IconElement_Foreground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::IconElement, // Declaring type
        KnownTypeIndex::IconElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Image.NineGrid
    {
        KnownPropertyIndex::Image_NineGrid, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::Image, // Declaring type
        KnownTypeIndex::Image, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Image.Source
    {
        KnownPropertyIndex::Image_Source, // Index name
        KnownTypeIndex::ImageSource, // Property type
        KnownTypeIndex::Image, // Declaring type
        KnownTypeIndex::Image, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Image.Stretch
    {
        KnownPropertyIndex::Image_Stretch, // Index name
        KnownTypeIndex::Stretch, // Property type
        KnownTypeIndex::Image, // Declaring type
        KnownTypeIndex::Image, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ImageBrush.ImageSource
    {
        KnownPropertyIndex::ImageBrush_ImageSource, // Index name
        KnownTypeIndex::ImageSource, // Property type
        KnownTypeIndex::ImageBrush, // Declaring type
        KnownTypeIndex::ImageBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.InlineUIContainer.Child
    {
        KnownPropertyIndex::InlineUIContainer_Child, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::InlineUIContainer, // Declaring type
        KnownTypeIndex::InlineUIContainer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.InputScopeNameCollection.ContentProperty
    {
        KnownPropertyIndex::InputScopeNameCollection_ContentProperty, // Index name
        KnownTypeIndex::InputScopeName, // Property type
        KnownTypeIndex::InputScopeNameCollection, // Declaring type
        KnownTypeIndex::InputScopeNameCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.Footer
    {
        KnownPropertyIndex::ItemsPresenter_Footer, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ItemsPresenter, // Declaring type
        KnownTypeIndex::ItemsPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.FooterTemplate
    {
        KnownPropertyIndex::ItemsPresenter_FooterTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ItemsPresenter, // Declaring type
        KnownTypeIndex::ItemsPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.FooterTransitions
    {
        KnownPropertyIndex::ItemsPresenter_FooterTransitions, // Index name
        KnownTypeIndex::TransitionCollection, // Property type
        KnownTypeIndex::ItemsPresenter, // Declaring type
        KnownTypeIndex::ItemsPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.Header
    {
        KnownPropertyIndex::ItemsPresenter_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ItemsPresenter, // Declaring type
        KnownTypeIndex::ItemsPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.HeaderTemplate
    {
        KnownPropertyIndex::ItemsPresenter_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ItemsPresenter, // Declaring type
        KnownTypeIndex::ItemsPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.HeaderTransitions
    {
        KnownPropertyIndex::ItemsPresenter_HeaderTransitions, // Index name
        KnownTypeIndex::TransitionCollection, // Property type
        KnownTypeIndex::ItemsPresenter, // Declaring type
        KnownTypeIndex::ItemsPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.ItemsPanel
    {
        KnownPropertyIndex::ItemsPresenter_ItemsPanel, // Index name
        KnownTypeIndex::ItemsPanelTemplate, // Property type
        KnownTypeIndex::ItemsPresenter, // Declaring type
        KnownTypeIndex::ItemsPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.Padding
    {
        KnownPropertyIndex::ItemsPresenter_Padding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::ItemsPresenter, // Declaring type
        KnownTypeIndex::ItemsPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorCollection.ContentProperty
    {
        KnownPropertyIndex::KeyboardAcceleratorCollection_ContentProperty, // Index name
        KnownTypeIndex::KeyboardAccelerator, // Property type
        KnownTypeIndex::KeyboardAcceleratorCollection, // Declaring type
        KnownTypeIndex::KeyboardAcceleratorCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.EndPoint
    {
        KnownPropertyIndex::LinearGradientBrush_EndPoint, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::LinearGradientBrush, // Declaring type
        KnownTypeIndex::LinearGradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.StartPoint
    {
        KnownPropertyIndex::LinearGradientBrush_StartPoint, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::LinearGradientBrush, // Declaring type
        KnownTypeIndex::LinearGradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.MatrixTransform.Matrix
    {
        KnownPropertyIndex::MatrixTransform_Matrix, // Index name
        KnownTypeIndex::Matrix, // Property type
        KnownTypeIndex::MatrixTransform, // Declaring type
        KnownTypeIndex::MatrixTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerPresenter.IsFullWindow
    {
        KnownPropertyIndex::MediaPlayerPresenter_IsFullWindow, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaPlayerPresenter, // Declaring type
        KnownTypeIndex::MediaPlayerPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerPresenter.MediaPlayer
    {
        KnownPropertyIndex::MediaPlayerPresenter_MediaPlayer, // Index name
        KnownTypeIndex::MediaPlayer, // Property type
        KnownTypeIndex::MediaPlayerPresenter, // Declaring type
        KnownTypeIndex::MediaPlayerPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerPresenter.Stretch
    {
        KnownPropertyIndex::MediaPlayerPresenter_Stretch, // Index name
        KnownTypeIndex::Stretch, // Property type
        KnownTypeIndex::MediaPlayerPresenter, // Declaring type
        KnownTypeIndex::MediaPlayerPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItemBaseCollection.ContentProperty
    {
        KnownPropertyIndex::MenuFlyoutItemBaseCollection_ContentProperty, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::MenuFlyoutItemBaseCollection, // Declaring type
        KnownTypeIndex::MenuFlyoutItemBaseCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.ContentProperty
    {
        KnownPropertyIndex::ObjectKeyFrameCollection_ContentProperty, // Index name
        KnownTypeIndex::ObjectKeyFrame, // Property type
        KnownTypeIndex::ObjectKeyFrameCollection, // Declaring type
        KnownTypeIndex::ObjectKeyFrameCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Panel.Background
    {
        KnownPropertyIndex::Panel_Background, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::Panel, // Declaring type
        KnownTypeIndex::Panel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Panel.BackgroundTransition
    {
        KnownPropertyIndex::Panel_BackgroundTransition, // Index name
        KnownTypeIndex::BrushTransition, // Property type
        KnownTypeIndex::Panel, // Declaring type
        KnownTypeIndex::Panel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Panel.BorderBrushProtected
    {
        KnownPropertyIndex::Panel_BorderBrushProtected, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::Panel, // Declaring type
        KnownTypeIndex::Panel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Panel.BorderThicknessProtected
    {
        KnownPropertyIndex::Panel_BorderThicknessProtected, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::Panel, // Declaring type
        KnownTypeIndex::Panel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Panel.Children
    {
        KnownPropertyIndex::Panel_Children, // Index name
        KnownTypeIndex::UIElementCollection, // Property type
        KnownTypeIndex::Panel, // Declaring type
        KnownTypeIndex::Panel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Panel.ChildrenTransitions
    {
        KnownPropertyIndex::Panel_ChildrenTransitions, // Index name
        KnownTypeIndex::TransitionCollection, // Property type
        KnownTypeIndex::Panel, // Declaring type
        KnownTypeIndex::Panel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Panel.CornerRadiusProtected
    {
        KnownPropertyIndex::Panel_CornerRadiusProtected, // Index name
        KnownTypeIndex::CornerRadius, // Property type
        KnownTypeIndex::Panel, // Declaring type
        KnownTypeIndex::Panel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Panel.IsIgnoringTransitions
    {
        KnownPropertyIndex::Panel_IsIgnoringTransitions, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Panel, // Declaring type
        KnownTypeIndex::Panel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Panel.IsItemsHost
    {
        KnownPropertyIndex::Panel_IsItemsHost, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Panel, // Declaring type
        KnownTypeIndex::Panel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Paragraph.Inlines
    {
        KnownPropertyIndex::Paragraph_Inlines, // Index name
        KnownTypeIndex::InlineCollection, // Property type
        KnownTypeIndex::Paragraph, // Declaring type
        KnownTypeIndex::Paragraph, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Paragraph.TextIndent
    {
        KnownPropertyIndex::Paragraph_TextIndent, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Paragraph, // Declaring type
        KnownTypeIndex::Paragraph, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveCollection.ContentProperty
    {
        KnownPropertyIndex::ParametricCurveCollection_ContentProperty, // Index name
        KnownTypeIndex::ParametricCurve, // Property type
        KnownTypeIndex::ParametricCurveCollection, // Declaring type
        KnownTypeIndex::ParametricCurveCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegmentCollection.ContentProperty
    {
        KnownPropertyIndex::ParametricCurveSegmentCollection_ContentProperty, // Index name
        KnownTypeIndex::ParametricCurveSegment, // Property type
        KnownTypeIndex::ParametricCurveSegmentCollection, // Declaring type
        KnownTypeIndex::ParametricCurveSegmentCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PathFigureCollection.ContentProperty
    {
        KnownPropertyIndex::PathFigureCollection_ContentProperty, // Index name
        KnownTypeIndex::PathFigure, // Property type
        KnownTypeIndex::PathFigureCollection, // Declaring type
        KnownTypeIndex::PathFigureCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PathSegmentCollection.ContentProperty
    {
        KnownPropertyIndex::PathSegmentCollection_ContentProperty, // Index name
        KnownTypeIndex::PathSegment, // Property type
        KnownTypeIndex::PathSegmentCollection, // Declaring type
        KnownTypeIndex::PathSegmentCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.PointCollection.ContentProperty
    {
        KnownPropertyIndex::PointCollection_ContentProperty, // Index name
        KnownTypeIndex::Point, // Property type
        KnownTypeIndex::PointCollection, // Declaring type
        KnownTypeIndex::PointCollection, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Input.PointerCollection.ContentProperty
    {
        KnownPropertyIndex::PointerCollection_ContentProperty, // Index name
        KnownTypeIndex::Pointer, // Property type
        KnownTypeIndex::PointerCollection, // Declaring type
        KnownTypeIndex::PointerCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointerDownThemeAnimation.TargetName
    {
        KnownPropertyIndex::PointerDownThemeAnimation_TargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::PointerDownThemeAnimation, // Declaring type
        KnownTypeIndex::PointerDownThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrameCollection.ContentProperty
    {
        KnownPropertyIndex::PointerKeyFrameCollection_ContentProperty, // Index name
        KnownTypeIndex::PointerKeyFrame, // Property type
        KnownTypeIndex::PointerKeyFrameCollection, // Declaring type
        KnownTypeIndex::PointerKeyFrameCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointerUpThemeAnimation.TargetName
    {
        KnownPropertyIndex::PointerUpThemeAnimation_TargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::PointerUpThemeAnimation, // Declaring type
        KnownTypeIndex::PointerUpThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.ContentProperty
    {
        KnownPropertyIndex::PointKeyFrameCollection_ContentProperty, // Index name
        KnownTypeIndex::PointKeyFrame, // Property type
        KnownTypeIndex::PointKeyFrameCollection, // Declaring type
        KnownTypeIndex::PointKeyFrameCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation.FromHorizontalOffset
    {
        KnownPropertyIndex::PopInThemeAnimation_FromHorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PopInThemeAnimation, // Declaring type
        KnownTypeIndex::PopInThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation.FromVerticalOffset
    {
        KnownPropertyIndex::PopInThemeAnimation_FromVerticalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::PopInThemeAnimation, // Declaring type
        KnownTypeIndex::PopInThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation.TargetName
    {
        KnownPropertyIndex::PopInThemeAnimation_TargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::PopInThemeAnimation, // Declaring type
        KnownTypeIndex::PopInThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.PopOutThemeAnimation.TargetName
    {
        KnownPropertyIndex::PopOutThemeAnimation_TargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::PopOutThemeAnimation, // Declaring type
        KnownTypeIndex::PopOutThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.ActualPlacement
    {
        KnownPropertyIndex::Popup_ActualPlacement, // Index name
        KnownTypeIndex::PopupPlacementMode, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.AssociatedFlyout
    {
        KnownPropertyIndex::Popup_AssociatedFlyout, // Index name
        KnownTypeIndex::FlyoutBase, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.Child
    {
        KnownPropertyIndex::Popup_Child, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.ChildTransitions
    {
        KnownPropertyIndex::Popup_ChildTransitions, // Index name
        KnownTypeIndex::TransitionCollection, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.DesiredPlacement
    {
        KnownPropertyIndex::Popup_DesiredPlacement, // Index name
        KnownTypeIndex::PopupPlacementMode, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.DisableOverlayIsLightDismissCheck
    {
        KnownPropertyIndex::Popup_DisableOverlayIsLightDismissCheck, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.HorizontalOffset
    {
        KnownPropertyIndex::Popup_HorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.IsApplicationBarService
    {
        KnownPropertyIndex::Popup_IsApplicationBarService, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.IsContentDialog
    {
        KnownPropertyIndex::Popup_IsContentDialog, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.IsLightDismissEnabled
    {
        KnownPropertyIndex::Popup_IsLightDismissEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.IsOpen
    {
        KnownPropertyIndex::Popup_IsOpen, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.IsSubMenu
    {
        KnownPropertyIndex::Popup_IsSubMenu, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.LightDismissOverlayMode
    {
        KnownPropertyIndex::Popup_LightDismissOverlayMode, // Index name
        KnownTypeIndex::LightDismissOverlayMode, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.OverlayElement
    {
        KnownPropertyIndex::Popup_OverlayElement, // Index name
        KnownTypeIndex::FrameworkElement, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.OverlayInputPassThroughElement
    {
        KnownPropertyIndex::Popup_OverlayInputPassThroughElement, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.PlacementTarget
    {
        KnownPropertyIndex::Popup_PlacementTarget, // Index name
        KnownTypeIndex::FrameworkElement, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.ShouldConstrainToRootBounds
    {
        KnownPropertyIndex::Popup_ShouldConstrainToRootBounds, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.SystemBackdrop
    {
        KnownPropertyIndex::Popup_SystemBackdrop, // Index name
        KnownTypeIndex::SystemBackdrop, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.VerticalOffset
    {
        KnownPropertyIndex::Popup_VerticalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Popup, // Declaring type
        KnownTypeIndex::Popup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.RepeatBehavior.Count
    {
        KnownPropertyIndex::RepeatBehavior_Count, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RepeatBehavior, // Declaring type
        KnownTypeIndex::RepeatBehavior, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.RepeatBehavior.Duration
    {
        KnownPropertyIndex::RepeatBehavior_Duration, // Index name
        KnownTypeIndex::TimeSpan, // Property type
        KnownTypeIndex::RepeatBehavior, // Declaring type
        KnownTypeIndex::RepeatBehavior, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation.FromHorizontalOffset
    {
        KnownPropertyIndex::RepositionThemeAnimation_FromHorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RepositionThemeAnimation, // Declaring type
        KnownTypeIndex::RepositionThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation.FromVerticalOffset
    {
        KnownPropertyIndex::RepositionThemeAnimation_FromVerticalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RepositionThemeAnimation, // Declaring type
        KnownTypeIndex::RepositionThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation.TargetName
    {
        KnownPropertyIndex::RepositionThemeAnimation_TargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::RepositionThemeAnimation, // Declaring type
        KnownTypeIndex::RepositionThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.ResourceDictionary.ContentProperty
    {
        KnownPropertyIndex::ResourceDictionary_ContentProperty, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::ResourceDictionary, // Declaring type
        KnownTypeIndex::ResourceDictionary, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.ResourceDictionary.MergedDictionaries
    {
        KnownPropertyIndex::ResourceDictionary_MergedDictionaries, // Index name
        KnownTypeIndex::ResourceDictionaryCollection, // Property type
        KnownTypeIndex::ResourceDictionary, // Declaring type
        KnownTypeIndex::ResourceDictionary, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.ResourceDictionary.Source
    {
        KnownPropertyIndex::ResourceDictionary_Source, // Index name
        KnownTypeIndex::Uri, // Property type
        KnownTypeIndex::ResourceDictionary, // Declaring type
        KnownTypeIndex::ResourceDictionary, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.ResourceDictionary.ThemeDictionaries
    {
        KnownPropertyIndex::ResourceDictionary_ThemeDictionaries, // Index name
        KnownTypeIndex::ResourceDictionary, // Property type
        KnownTypeIndex::ResourceDictionary, // Declaring type
        KnownTypeIndex::ResourceDictionary, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.ResourceDictionaryCollection.ContentProperty
    {
        KnownPropertyIndex::ResourceDictionaryCollection_ContentProperty, // Index name
        KnownTypeIndex::ResourceDictionary, // Property type
        KnownTypeIndex::ResourceDictionaryCollection, // Declaring type
        KnownTypeIndex::ResourceDictionaryCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.Blocks
    {
        KnownPropertyIndex::RichTextBlock_Blocks, // Index name
        KnownTypeIndex::BlockCollection, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.CharacterSpacing
    {
        KnownPropertyIndex::RichTextBlock_CharacterSpacing, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.FontFamily
    {
        KnownPropertyIndex::RichTextBlock_FontFamily, // Index name
        KnownTypeIndex::FontFamily, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.FontSize
    {
        KnownPropertyIndex::RichTextBlock_FontSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.FontStretch
    {
        KnownPropertyIndex::RichTextBlock_FontStretch, // Index name
        KnownTypeIndex::FontStretch, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.FontStyle
    {
        KnownPropertyIndex::RichTextBlock_FontStyle, // Index name
        KnownTypeIndex::FontStyle, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.FontWeight
    {
        KnownPropertyIndex::RichTextBlock_FontWeight, // Index name
        KnownTypeIndex::FontWeight, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.Foreground
    {
        KnownPropertyIndex::RichTextBlock_Foreground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.HasOverflowContent
    {
        KnownPropertyIndex::RichTextBlock_HasOverflowContent, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.HorizontalTextAlignment
    {
        KnownPropertyIndex::RichTextBlock_HorizontalTextAlignment, // Index name
        KnownTypeIndex::TextAlignment, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.IsColorFontEnabled
    {
        KnownPropertyIndex::RichTextBlock_IsColorFontEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.IsTextScaleFactorEnabled
    {
        KnownPropertyIndex::RichTextBlock_IsTextScaleFactorEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.IsTextSelectionEnabled
    {
        KnownPropertyIndex::RichTextBlock_IsTextSelectionEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.IsTextTrimmed
    {
        KnownPropertyIndex::RichTextBlock_IsTextTrimmed, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.LineHeight
    {
        KnownPropertyIndex::RichTextBlock_LineHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.LineStackingStrategy
    {
        KnownPropertyIndex::RichTextBlock_LineStackingStrategy, // Index name
        KnownTypeIndex::LineStackingStrategy, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.MaxLines
    {
        KnownPropertyIndex::RichTextBlock_MaxLines, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.OpticalMarginAlignment
    {
        KnownPropertyIndex::RichTextBlock_OpticalMarginAlignment, // Index name
        KnownTypeIndex::OpticalMarginAlignment, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.OverflowContentTarget
    {
        KnownPropertyIndex::RichTextBlock_OverflowContentTarget, // Index name
        KnownTypeIndex::RichTextBlockOverflow, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.Padding
    {
        KnownPropertyIndex::RichTextBlock_Padding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.SelectedText
    {
        KnownPropertyIndex::RichTextBlock_SelectedText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionFlyout
    {
        KnownPropertyIndex::RichTextBlock_SelectionFlyout, // Index name
        KnownTypeIndex::FlyoutBase, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionHighlightColor
    {
        KnownPropertyIndex::RichTextBlock_SelectionHighlightColor, // Index name
        KnownTypeIndex::SolidColorBrush, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextAlignment
    {
        KnownPropertyIndex::RichTextBlock_TextAlignment, // Index name
        KnownTypeIndex::TextAlignment, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextDecorations
    {
        KnownPropertyIndex::RichTextBlock_TextDecorations, // Index name
        KnownTypeIndex::TextDecorations, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextHighlighters
    {
        KnownPropertyIndex::RichTextBlock_TextHighlighters, // Index name
        KnownTypeIndex::TextHighlighterCollection, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextIndent
    {
        KnownPropertyIndex::RichTextBlock_TextIndent, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextLineBounds
    {
        KnownPropertyIndex::RichTextBlock_TextLineBounds, // Index name
        KnownTypeIndex::TextLineBounds, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextReadingOrder
    {
        KnownPropertyIndex::RichTextBlock_TextReadingOrder, // Index name
        KnownTypeIndex::TextReadingOrder, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextTrimming
    {
        KnownPropertyIndex::RichTextBlock_TextTrimming, // Index name
        KnownTypeIndex::TextTrimming, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextWrapping
    {
        KnownPropertyIndex::RichTextBlock_TextWrapping, // Index name
        KnownTypeIndex::TextWrapping, // Property type
        KnownTypeIndex::RichTextBlock, // Declaring type
        KnownTypeIndex::RichTextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.HasOverflowContent
    {
        KnownPropertyIndex::RichTextBlockOverflow_HasOverflowContent, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichTextBlockOverflow, // Declaring type
        KnownTypeIndex::RichTextBlockOverflow, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.IsTextTrimmed
    {
        KnownPropertyIndex::RichTextBlockOverflow_IsTextTrimmed, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichTextBlockOverflow, // Declaring type
        KnownTypeIndex::RichTextBlockOverflow, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.MaxLines
    {
        KnownPropertyIndex::RichTextBlockOverflow_MaxLines, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::RichTextBlockOverflow, // Declaring type
        KnownTypeIndex::RichTextBlockOverflow, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.OverflowContentTarget
    {
        KnownPropertyIndex::RichTextBlockOverflow_OverflowContentTarget, // Index name
        KnownTypeIndex::RichTextBlockOverflow, // Property type
        KnownTypeIndex::RichTextBlockOverflow, // Declaring type
        KnownTypeIndex::RichTextBlockOverflow, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.Padding
    {
        KnownPropertyIndex::RichTextBlockOverflow_Padding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::RichTextBlockOverflow, // Declaring type
        KnownTypeIndex::RichTextBlockOverflow, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.RotateTransform.Angle
    {
        KnownPropertyIndex::RotateTransform_Angle, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RotateTransform, // Declaring type
        KnownTypeIndex::RotateTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.RotateTransform.AngleAnimation
    {
        KnownPropertyIndex::RotateTransform_AngleAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RotateTransform, // Declaring type
        KnownTypeIndex::RotateTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.RotateTransform.CenterX
    {
        KnownPropertyIndex::RotateTransform_CenterX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RotateTransform, // Declaring type
        KnownTypeIndex::RotateTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.RotateTransform.CenterXAnimation
    {
        KnownPropertyIndex::RotateTransform_CenterXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RotateTransform, // Declaring type
        KnownTypeIndex::RotateTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.RotateTransform.CenterY
    {
        KnownPropertyIndex::RotateTransform_CenterY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RotateTransform, // Declaring type
        KnownTypeIndex::RotateTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.RotateTransform.CenterYAnimation
    {
        KnownPropertyIndex::RotateTransform_CenterYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RotateTransform, // Declaring type
        KnownTypeIndex::RotateTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RowDefinitionCollection.ContentProperty
    {
        KnownPropertyIndex::RowDefinitionCollection_ContentProperty, // Index name
        KnownTypeIndex::RowDefinition, // Property type
        KnownTypeIndex::RowDefinitionCollection, // Declaring type
        KnownTypeIndex::RowDefinitionCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Run.FlowDirection
    {
        KnownPropertyIndex::Run_FlowDirection, // Index name
        KnownTypeIndex::FlowDirection, // Property type
        KnownTypeIndex::Run, // Declaring type
        KnownTypeIndex::Run, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Run.Text
    {
        KnownPropertyIndex::Run_Text, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::Run, // Declaring type
        KnownTypeIndex::Run, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.CenterX
    {
        KnownPropertyIndex::ScaleTransform_CenterX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScaleTransform, // Declaring type
        KnownTypeIndex::ScaleTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.CenterXAnimation
    {
        KnownPropertyIndex::ScaleTransform_CenterXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ScaleTransform, // Declaring type
        KnownTypeIndex::ScaleTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.CenterY
    {
        KnownPropertyIndex::ScaleTransform_CenterY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScaleTransform, // Declaring type
        KnownTypeIndex::ScaleTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.CenterYAnimation
    {
        KnownPropertyIndex::ScaleTransform_CenterYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ScaleTransform, // Declaring type
        KnownTypeIndex::ScaleTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.ScaleX
    {
        KnownPropertyIndex::ScaleTransform_ScaleX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScaleTransform, // Declaring type
        KnownTypeIndex::ScaleTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.ScaleXAnimation
    {
        KnownPropertyIndex::ScaleTransform_ScaleXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ScaleTransform, // Declaring type
        KnownTypeIndex::ScaleTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.ScaleY
    {
        KnownPropertyIndex::ScaleTransform_ScaleY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScaleTransform, // Declaring type
        KnownTypeIndex::ScaleTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.ScaleYAnimation
    {
        KnownPropertyIndex::ScaleTransform_ScaleYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ScaleTransform, // Declaring type
        KnownTypeIndex::ScaleTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.SetterBaseCollection.ContentProperty
    {
        KnownPropertyIndex::SetterBaseCollection_ContentProperty, // Index name
        KnownTypeIndex::SetterBase, // Property type
        KnownTypeIndex::SetterBaseCollection, // Declaring type
        KnownTypeIndex::SetterBaseCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.SetterBaseCollection.IsSealed
    {
        KnownPropertyIndex::SetterBaseCollection_IsSealed, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::SetterBaseCollection, // Declaring type
        KnownTypeIndex::SetterBaseCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Shape.Fill
    {
        KnownPropertyIndex::Shape_Fill, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::Shape, // Declaring type
        KnownTypeIndex::Shape, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Shape.GeometryTransform
    {
        KnownPropertyIndex::Shape_GeometryTransform, // Index name
        KnownTypeIndex::Transform, // Property type
        KnownTypeIndex::Shape, // Declaring type
        KnownTypeIndex::Shape, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Shape.Stretch
    {
        KnownPropertyIndex::Shape_Stretch, // Index name
        KnownTypeIndex::Stretch, // Property type
        KnownTypeIndex::Shape, // Declaring type
        KnownTypeIndex::Shape, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Shape.Stroke
    {
        KnownPropertyIndex::Shape_Stroke, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::Shape, // Declaring type
        KnownTypeIndex::Shape, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeDashArray
    {
        KnownPropertyIndex::Shape_StrokeDashArray, // Index name
        KnownTypeIndex::DoubleCollection, // Property type
        KnownTypeIndex::Shape, // Declaring type
        KnownTypeIndex::Shape, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeDashCap
    {
        KnownPropertyIndex::Shape_StrokeDashCap, // Index name
        KnownTypeIndex::PenLineCap, // Property type
        KnownTypeIndex::Shape, // Declaring type
        KnownTypeIndex::Shape, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeDashOffset
    {
        KnownPropertyIndex::Shape_StrokeDashOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Shape, // Declaring type
        KnownTypeIndex::Shape, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeEndLineCap
    {
        KnownPropertyIndex::Shape_StrokeEndLineCap, // Index name
        KnownTypeIndex::PenLineCap, // Property type
        KnownTypeIndex::Shape, // Declaring type
        KnownTypeIndex::Shape, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeLineJoin
    {
        KnownPropertyIndex::Shape_StrokeLineJoin, // Index name
        KnownTypeIndex::PenLineJoin, // Property type
        KnownTypeIndex::Shape, // Declaring type
        KnownTypeIndex::Shape, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeMiterLimit
    {
        KnownPropertyIndex::Shape_StrokeMiterLimit, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Shape, // Declaring type
        KnownTypeIndex::Shape, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeStartLineCap
    {
        KnownPropertyIndex::Shape_StrokeStartLineCap, // Index name
        KnownTypeIndex::PenLineCap, // Property type
        KnownTypeIndex::Shape, // Declaring type
        KnownTypeIndex::Shape, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeThickness
    {
        KnownPropertyIndex::Shape_StrokeThickness, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Shape, // Declaring type
        KnownTypeIndex::Shape, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.AngleX
    {
        KnownPropertyIndex::SkewTransform_AngleX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SkewTransform, // Declaring type
        KnownTypeIndex::SkewTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.AngleXAnimation
    {
        KnownPropertyIndex::SkewTransform_AngleXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::SkewTransform, // Declaring type
        KnownTypeIndex::SkewTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.AngleY
    {
        KnownPropertyIndex::SkewTransform_AngleY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SkewTransform, // Declaring type
        KnownTypeIndex::SkewTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.AngleYAnimation
    {
        KnownPropertyIndex::SkewTransform_AngleYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::SkewTransform, // Declaring type
        KnownTypeIndex::SkewTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.CenterX
    {
        KnownPropertyIndex::SkewTransform_CenterX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SkewTransform, // Declaring type
        KnownTypeIndex::SkewTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.CenterXAnimation
    {
        KnownPropertyIndex::SkewTransform_CenterXAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::SkewTransform, // Declaring type
        KnownTypeIndex::SkewTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.CenterY
    {
        KnownPropertyIndex::SkewTransform_CenterY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SkewTransform, // Declaring type
        KnownTypeIndex::SkewTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.CenterYAnimation
    {
        KnownPropertyIndex::SkewTransform_CenterYAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::SkewTransform, // Declaring type
        KnownTypeIndex::SkewTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Span.Inlines
    {
        KnownPropertyIndex::Span_Inlines, // Index name
        KnownTypeIndex::InlineCollection, // Property type
        KnownTypeIndex::Span, // Declaring type
        KnownTypeIndex::Span, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ClosedLength
    {
        KnownPropertyIndex::SplitCloseThemeAnimation_ClosedLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitCloseThemeAnimation, // Declaring type
        KnownTypeIndex::SplitCloseThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ClosedTarget
    {
        KnownPropertyIndex::SplitCloseThemeAnimation_ClosedTarget, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::SplitCloseThemeAnimation, // Declaring type
        KnownTypeIndex::SplitCloseThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ClosedTargetName
    {
        KnownPropertyIndex::SplitCloseThemeAnimation_ClosedTargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::SplitCloseThemeAnimation, // Declaring type
        KnownTypeIndex::SplitCloseThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTarget
    {
        KnownPropertyIndex::SplitCloseThemeAnimation_ContentTarget, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::SplitCloseThemeAnimation, // Declaring type
        KnownTypeIndex::SplitCloseThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTargetName
    {
        KnownPropertyIndex::SplitCloseThemeAnimation_ContentTargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::SplitCloseThemeAnimation, // Declaring type
        KnownTypeIndex::SplitCloseThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTranslationDirection
    {
        KnownPropertyIndex::SplitCloseThemeAnimation_ContentTranslationDirection, // Index name
        KnownTypeIndex::AnimationDirection, // Property type
        KnownTypeIndex::SplitCloseThemeAnimation, // Declaring type
        KnownTypeIndex::SplitCloseThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTranslationOffset
    {
        KnownPropertyIndex::SplitCloseThemeAnimation_ContentTranslationOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitCloseThemeAnimation, // Declaring type
        KnownTypeIndex::SplitCloseThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OffsetFromCenter
    {
        KnownPropertyIndex::SplitCloseThemeAnimation_OffsetFromCenter, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitCloseThemeAnimation, // Declaring type
        KnownTypeIndex::SplitCloseThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OpenedLength
    {
        KnownPropertyIndex::SplitCloseThemeAnimation_OpenedLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitCloseThemeAnimation, // Declaring type
        KnownTypeIndex::SplitCloseThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OpenedTarget
    {
        KnownPropertyIndex::SplitCloseThemeAnimation_OpenedTarget, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::SplitCloseThemeAnimation, // Declaring type
        KnownTypeIndex::SplitCloseThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OpenedTargetName
    {
        KnownPropertyIndex::SplitCloseThemeAnimation_OpenedTargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::SplitCloseThemeAnimation, // Declaring type
        KnownTypeIndex::SplitCloseThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ClosedLength
    {
        KnownPropertyIndex::SplitOpenThemeAnimation_ClosedLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitOpenThemeAnimation, // Declaring type
        KnownTypeIndex::SplitOpenThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ClosedTarget
    {
        KnownPropertyIndex::SplitOpenThemeAnimation_ClosedTarget, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::SplitOpenThemeAnimation, // Declaring type
        KnownTypeIndex::SplitOpenThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ClosedTargetName
    {
        KnownPropertyIndex::SplitOpenThemeAnimation_ClosedTargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::SplitOpenThemeAnimation, // Declaring type
        KnownTypeIndex::SplitOpenThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTarget
    {
        KnownPropertyIndex::SplitOpenThemeAnimation_ContentTarget, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::SplitOpenThemeAnimation, // Declaring type
        KnownTypeIndex::SplitOpenThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTargetName
    {
        KnownPropertyIndex::SplitOpenThemeAnimation_ContentTargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::SplitOpenThemeAnimation, // Declaring type
        KnownTypeIndex::SplitOpenThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTranslationDirection
    {
        KnownPropertyIndex::SplitOpenThemeAnimation_ContentTranslationDirection, // Index name
        KnownTypeIndex::AnimationDirection, // Property type
        KnownTypeIndex::SplitOpenThemeAnimation, // Declaring type
        KnownTypeIndex::SplitOpenThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTranslationOffset
    {
        KnownPropertyIndex::SplitOpenThemeAnimation_ContentTranslationOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitOpenThemeAnimation, // Declaring type
        KnownTypeIndex::SplitOpenThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OffsetFromCenter
    {
        KnownPropertyIndex::SplitOpenThemeAnimation_OffsetFromCenter, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitOpenThemeAnimation, // Declaring type
        KnownTypeIndex::SplitOpenThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OpenedLength
    {
        KnownPropertyIndex::SplitOpenThemeAnimation_OpenedLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitOpenThemeAnimation, // Declaring type
        KnownTypeIndex::SplitOpenThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OpenedTarget
    {
        KnownPropertyIndex::SplitOpenThemeAnimation_OpenedTarget, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::SplitOpenThemeAnimation, // Declaring type
        KnownTypeIndex::SplitOpenThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OpenedTargetName
    {
        KnownPropertyIndex::SplitOpenThemeAnimation_OpenedTargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::SplitOpenThemeAnimation, // Declaring type
        KnownTypeIndex::SplitOpenThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.StateTriggerCollection.ContentProperty
    {
        KnownPropertyIndex::StateTriggerCollection_ContentProperty, // Index name
        KnownTypeIndex::StateTriggerBase, // Property type
        KnownTypeIndex::StateTriggerCollection, // Declaring type
        KnownTypeIndex::StateTriggerCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard.Children
    {
        KnownPropertyIndex::Storyboard_Children, // Index name
        KnownTypeIndex::TimelineCollection, // Property type
        KnownTypeIndex::Storyboard, // Declaring type
        KnownTypeIndex::Storyboard, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard.IsEssential
    {
        KnownPropertyIndex::Storyboard_IsEssential, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Storyboard, // Declaring type
        KnownTypeIndex::Storyboard, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard.TargetName
    {
        KnownPropertyIndex::Storyboard_TargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::Storyboard, // Declaring type
        KnownTypeIndex::Timeline, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard.TargetProperty
    {
        KnownPropertyIndex::Storyboard_TargetProperty, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::Storyboard, // Declaring type
        KnownTypeIndex::Timeline, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.StoryboardCollection.ContentProperty
    {
        KnownPropertyIndex::StoryboardCollection_ContentProperty, // Index name
        KnownTypeIndex::Storyboard, // Property type
        KnownTypeIndex::StoryboardCollection, // Declaring type
        KnownTypeIndex::StoryboardCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.FromHorizontalOffset
    {
        KnownPropertyIndex::SwipeBackThemeAnimation_FromHorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SwipeBackThemeAnimation, // Declaring type
        KnownTypeIndex::SwipeBackThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.FromVerticalOffset
    {
        KnownPropertyIndex::SwipeBackThemeAnimation_FromVerticalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SwipeBackThemeAnimation, // Declaring type
        KnownTypeIndex::SwipeBackThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.TargetName
    {
        KnownPropertyIndex::SwipeBackThemeAnimation_TargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::SwipeBackThemeAnimation, // Declaring type
        KnownTypeIndex::SwipeBackThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.TargetName
    {
        KnownPropertyIndex::SwipeHintThemeAnimation_TargetName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::SwipeHintThemeAnimation, // Declaring type
        KnownTypeIndex::SwipeHintThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.ToHorizontalOffset
    {
        KnownPropertyIndex::SwipeHintThemeAnimation_ToHorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SwipeHintThemeAnimation, // Declaring type
        KnownTypeIndex::SwipeHintThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.ToVerticalOffset
    {
        KnownPropertyIndex::SwipeHintThemeAnimation_ToVerticalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SwipeHintThemeAnimation, // Declaring type
        KnownTypeIndex::SwipeHintThemeAnimation, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.CharacterSpacing
    {
        KnownPropertyIndex::TextBlock_CharacterSpacing, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.FontFamily
    {
        KnownPropertyIndex::TextBlock_FontFamily, // Index name
        KnownTypeIndex::FontFamily, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.FontSize
    {
        KnownPropertyIndex::TextBlock_FontSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.FontStretch
    {
        KnownPropertyIndex::TextBlock_FontStretch, // Index name
        KnownTypeIndex::FontStretch, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.FontStyle
    {
        KnownPropertyIndex::TextBlock_FontStyle, // Index name
        KnownTypeIndex::FontStyle, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.FontWeight
    {
        KnownPropertyIndex::TextBlock_FontWeight, // Index name
        KnownTypeIndex::FontWeight, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Foreground
    {
        KnownPropertyIndex::TextBlock_Foreground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.HorizontalTextAlignment
    {
        KnownPropertyIndex::TextBlock_HorizontalTextAlignment, // Index name
        KnownTypeIndex::TextAlignment, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Inlines
    {
        KnownPropertyIndex::TextBlock_Inlines, // Index name
        KnownTypeIndex::InlineCollection, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.IsColorFontEnabled
    {
        KnownPropertyIndex::TextBlock_IsColorFontEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.IsTextScaleFactorEnabled
    {
        KnownPropertyIndex::TextBlock_IsTextScaleFactorEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.IsTextSelectionEnabled
    {
        KnownPropertyIndex::TextBlock_IsTextSelectionEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.IsTextTrimmed
    {
        KnownPropertyIndex::TextBlock_IsTextTrimmed, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.LineHeight
    {
        KnownPropertyIndex::TextBlock_LineHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.LineStackingStrategy
    {
        KnownPropertyIndex::TextBlock_LineStackingStrategy, // Index name
        KnownTypeIndex::LineStackingStrategy, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.MaxLines
    {
        KnownPropertyIndex::TextBlock_MaxLines, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.OpticalMarginAlignment
    {
        KnownPropertyIndex::TextBlock_OpticalMarginAlignment, // Index name
        KnownTypeIndex::OpticalMarginAlignment, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Padding
    {
        KnownPropertyIndex::TextBlock_Padding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.SelectedText
    {
        KnownPropertyIndex::TextBlock_SelectedText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.SelectionFlyout
    {
        KnownPropertyIndex::TextBlock_SelectionFlyout, // Index name
        KnownTypeIndex::FlyoutBase, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.SelectionHighlightColor
    {
        KnownPropertyIndex::TextBlock_SelectionHighlightColor, // Index name
        KnownTypeIndex::SolidColorBrush, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::HadFieldInBlue) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Text
    {
        KnownPropertyIndex::TextBlock_Text, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextAlignment
    {
        KnownPropertyIndex::TextBlock_TextAlignment, // Index name
        KnownTypeIndex::TextAlignment, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextDecorations
    {
        KnownPropertyIndex::TextBlock_TextDecorations, // Index name
        KnownTypeIndex::TextDecorations, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextHighlighters
    {
        KnownPropertyIndex::TextBlock_TextHighlighters, // Index name
        KnownTypeIndex::TextHighlighterCollection, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextLineBounds
    {
        KnownPropertyIndex::TextBlock_TextLineBounds, // Index name
        KnownTypeIndex::TextLineBounds, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextReadingOrder
    {
        KnownPropertyIndex::TextBlock_TextReadingOrder, // Index name
        KnownTypeIndex::TextReadingOrder, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextTrimming
    {
        KnownPropertyIndex::TextBlock_TextTrimming, // Index name
        KnownTypeIndex::TextTrimming, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextWrapping
    {
        KnownPropertyIndex::TextBlock_TextWrapping, // Index name
        KnownTypeIndex::TextWrapping, // Property type
        KnownTypeIndex::TextBlock, // Declaring type
        KnownTypeIndex::TextBlock, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection.ContentProperty
    {
        KnownPropertyIndex::TextElementCollection_ContentProperty, // Index name
        KnownTypeIndex::TextElement, // Property type
        KnownTypeIndex::TextElementCollection, // Declaring type
        KnownTypeIndex::TextElementCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighterCollection.ContentProperty
    {
        KnownPropertyIndex::TextHighlighterCollection_ContentProperty, // Index name
        KnownTypeIndex::TextHighlighter, // Property type
        KnownTypeIndex::TextHighlighterCollection, // Declaring type
        KnownTypeIndex::TextHighlighterCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.TextRangeCollection.ContentProperty
    {
        KnownPropertyIndex::TextRangeCollection_ContentProperty, // Index name
        KnownTypeIndex::TextRange, // Property type
        KnownTypeIndex::TextRangeCollection, // Declaring type
        KnownTypeIndex::TextRangeCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.TimelineCollection.ContentProperty
    {
        KnownPropertyIndex::TimelineCollection_ContentProperty, // Index name
        KnownTypeIndex::Timeline, // Property type
        KnownTypeIndex::TimelineCollection, // Declaring type
        KnownTypeIndex::TimelineCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.TransformCollection.ContentProperty
    {
        KnownPropertyIndex::TransformCollection_ContentProperty, // Index name
        KnownTypeIndex::Transform, // Property type
        KnownTypeIndex::TransformCollection, // Declaring type
        KnownTypeIndex::TransformCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.TransformGroup.Children
    {
        KnownPropertyIndex::TransformGroup_Children, // Index name
        KnownTypeIndex::TransformCollection, // Property type
        KnownTypeIndex::TransformGroup, // Declaring type
        KnownTypeIndex::TransformGroup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.TransformGroup.Value
    {
        KnownPropertyIndex::TransformGroup_Value, // Index name
        KnownTypeIndex::Matrix, // Property type
        KnownTypeIndex::TransformGroup, // Declaring type
        KnownTypeIndex::TransformGroup, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionCollection.ContentProperty
    {
        KnownPropertyIndex::TransitionCollection_ContentProperty, // Index name
        KnownTypeIndex::Transition, // Property type
        KnownTypeIndex::TransitionCollection, // Declaring type
        KnownTypeIndex::TransitionCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.TranslateTransform.X
    {
        KnownPropertyIndex::TranslateTransform_X, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::TranslateTransform, // Declaring type
        KnownTypeIndex::TranslateTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.TranslateTransform.XAnimation
    {
        KnownPropertyIndex::TranslateTransform_XAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::TranslateTransform, // Declaring type
        KnownTypeIndex::TranslateTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.TranslateTransform.Y
    {
        KnownPropertyIndex::TranslateTransform_Y, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::TranslateTransform, // Declaring type
        KnownTypeIndex::TranslateTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.TranslateTransform.YAnimation
    {
        KnownPropertyIndex::TranslateTransform_YAnimation, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::TranslateTransform, // Declaring type
        KnownTypeIndex::TranslateTransform, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.TriggerActionCollection.ContentProperty
    {
        KnownPropertyIndex::TriggerActionCollection_ContentProperty, // Index name
        KnownTypeIndex::TriggerAction, // Property type
        KnownTypeIndex::TriggerActionCollection, // Declaring type
        KnownTypeIndex::TriggerActionCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.TriggerCollection.ContentProperty
    {
        KnownPropertyIndex::TriggerCollection_ContentProperty, // Index name
        KnownTypeIndex::TriggerBase, // Property type
        KnownTypeIndex::TriggerCollection, // Declaring type
        KnownTypeIndex::TriggerCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.UIElementCollection.ContentProperty
    {
        KnownPropertyIndex::UIElementCollection_ContentProperty, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::UIElementCollection, // Declaring type
        KnownTypeIndex::UIElementCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Viewbox.Child
    {
        KnownPropertyIndex::Viewbox_Child, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::Viewbox, // Declaring type
        KnownTypeIndex::Viewbox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Viewbox.Stretch
    {
        KnownPropertyIndex::Viewbox_Stretch, // Index name
        KnownTypeIndex::Stretch, // Property type
        KnownTypeIndex::Viewbox, // Declaring type
        KnownTypeIndex::Viewbox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Viewbox.StretchDirection
    {
        KnownPropertyIndex::Viewbox_StretchDirection, // Index name
        KnownTypeIndex::StretchDirection, // Property type
        KnownTypeIndex::Viewbox, // Declaring type
        KnownTypeIndex::Viewbox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.VisualStateCollection.ContentProperty
    {
        KnownPropertyIndex::VisualStateCollection_ContentProperty, // Index name
        KnownTypeIndex::VisualState, // Property type
        KnownTypeIndex::VisualStateCollection, // Declaring type
        KnownTypeIndex::VisualStateCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveStoryboards
    {
        KnownPropertyIndex::VisualStateGroupCollection_ActiveStoryboards, // Index name
        KnownTypeIndex::StoryboardCollection, // Property type
        KnownTypeIndex::VisualStateGroupCollection, // Declaring type
        KnownTypeIndex::VisualStateGroupCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveTransitions
    {
        KnownPropertyIndex::VisualStateGroupCollection_ActiveTransitions, // Index name
        KnownTypeIndex::VisualTransitionCollection, // Property type
        KnownTypeIndex::VisualStateGroupCollection, // Declaring type
        KnownTypeIndex::VisualStateGroupCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ContentProperty
    {
        KnownPropertyIndex::VisualStateGroupCollection_ContentProperty, // Index name
        KnownTypeIndex::VisualStateGroup, // Property type
        KnownTypeIndex::VisualStateGroupCollection, // Declaring type
        KnownTypeIndex::VisualStateGroupCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredSetters
    {
        KnownPropertyIndex::VisualStateGroupCollection_DeferredSetters, // Index name
        KnownTypeIndex::SetterBaseCollection, // Property type
        KnownTypeIndex::VisualStateGroupCollection, // Declaring type
        KnownTypeIndex::VisualStateGroupCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredStateTriggers
    {
        KnownPropertyIndex::VisualStateGroupCollection_DeferredStateTriggers, // Index name
        KnownTypeIndex::StateTriggerCollection, // Property type
        KnownTypeIndex::VisualStateGroupCollection, // Declaring type
        KnownTypeIndex::VisualStateGroupCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Internal.VisualTransitionCollection.ContentProperty
    {
        KnownPropertyIndex::VisualTransitionCollection_ContentProperty, // Index name
        KnownTypeIndex::VisualTransition, // Property type
        KnownTypeIndex::VisualTransitionCollection, // Declaring type
        KnownTypeIndex::VisualTransitionCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.XamlLightCollection.ContentProperty
    {
        KnownPropertyIndex::XamlLightCollection_ContentProperty, // Index name
        KnownTypeIndex::XamlLight, // Property type
        KnownTypeIndex::XamlLightCollection, // Declaring type
        KnownTypeIndex::XamlLightCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarSeparator.DynamicOverflowOrder
    {
        KnownPropertyIndex::AppBarSeparator_DynamicOverflowOrder, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::AppBarSeparator, // Declaring type
        KnownTypeIndex::AppBarSeparator, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarSeparator.IsCompact
    {
        KnownPropertyIndex::AppBarSeparator_IsCompact, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBarSeparator, // Declaring type
        KnownTypeIndex::AppBarSeparator, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarSeparator.IsInOverflow
    {
        KnownPropertyIndex::AppBarSeparator_IsInOverflow, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBarSeparator, // Declaring type
        KnownTypeIndex::AppBarSeparator, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarSeparator.UseOverflowStyle
    {
        KnownPropertyIndex::AppBarSeparator_UseOverflowStyle, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBarSeparator, // Declaring type
        KnownTypeIndex::AppBarSeparator, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.BitmapIcon.ShowAsMonochrome
    {
        KnownPropertyIndex::BitmapIcon_ShowAsMonochrome, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::BitmapIcon, // Declaring type
        KnownTypeIndex::BitmapIcon, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.BitmapIcon.UriSource
    {
        KnownPropertyIndex::BitmapIcon_UriSource, // Index name
        KnownTypeIndex::Uri, // Property type
        KnownTypeIndex::BitmapIcon, // Declaring type
        KnownTypeIndex::BitmapIcon, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.CalendarIdentifier
    {
        KnownPropertyIndex::CalendarDatePicker_CalendarIdentifier, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.CalendarViewStyle
    {
        KnownPropertyIndex::CalendarDatePicker_CalendarViewStyle, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.Date
    {
        KnownPropertyIndex::CalendarDatePicker_Date, // Index name
        KnownTypeIndex::DateTime, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.DateFormat
    {
        KnownPropertyIndex::CalendarDatePicker_DateFormat, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.DayOfWeekFormat
    {
        KnownPropertyIndex::CalendarDatePicker_DayOfWeekFormat, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.Description
    {
        KnownPropertyIndex::CalendarDatePicker_Description, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.DisplayMode
    {
        KnownPropertyIndex::CalendarDatePicker_DisplayMode, // Index name
        KnownTypeIndex::CalendarViewDisplayMode, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.FirstDayOfWeek
    {
        KnownPropertyIndex::CalendarDatePicker_FirstDayOfWeek, // Index name
        KnownTypeIndex::DayOfWeek, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.Header
    {
        KnownPropertyIndex::CalendarDatePicker_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.HeaderPlacement
    {
        KnownPropertyIndex::CalendarDatePicker_HeaderPlacement, // Index name
        KnownTypeIndex::ControlHeaderPlacement, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.HeaderTemplate
    {
        KnownPropertyIndex::CalendarDatePicker_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsCalendarOpen
    {
        KnownPropertyIndex::CalendarDatePicker_IsCalendarOpen, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsGroupLabelVisible
    {
        KnownPropertyIndex::CalendarDatePicker_IsGroupLabelVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsOutOfScopeEnabled
    {
        KnownPropertyIndex::CalendarDatePicker_IsOutOfScopeEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsTodayHighlighted
    {
        KnownPropertyIndex::CalendarDatePicker_IsTodayHighlighted, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.LightDismissOverlayMode
    {
        KnownPropertyIndex::CalendarDatePicker_LightDismissOverlayMode, // Index name
        KnownTypeIndex::LightDismissOverlayMode, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.MaxDate
    {
        KnownPropertyIndex::CalendarDatePicker_MaxDate, // Index name
        KnownTypeIndex::DateTime, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.MinDate
    {
        KnownPropertyIndex::CalendarDatePicker_MinDate, // Index name
        KnownTypeIndex::DateTime, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.PlaceholderText
    {
        KnownPropertyIndex::CalendarDatePicker_PlaceholderText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarDatePicker, // Declaring type
        KnownTypeIndex::CalendarDatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutBackground
    {
        KnownPropertyIndex::CalendarView_BlackoutBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutForeground
    {
        KnownPropertyIndex::CalendarView_BlackoutForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutStrikethroughBrush
    {
        KnownPropertyIndex::CalendarView_BlackoutStrikethroughBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarIdentifier
    {
        KnownPropertyIndex::CalendarView_CalendarIdentifier, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBackground
    {
        KnownPropertyIndex::CalendarView_CalendarItemBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderBrush
    {
        KnownPropertyIndex::CalendarView_CalendarItemBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderThickness
    {
        KnownPropertyIndex::CalendarView_CalendarItemBorderThickness, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemCornerRadius
    {
        KnownPropertyIndex::CalendarView_CalendarItemCornerRadius, // Index name
        KnownTypeIndex::CornerRadius, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemDisabledBackground
    {
        KnownPropertyIndex::CalendarView_CalendarItemDisabledBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemForeground
    {
        KnownPropertyIndex::CalendarView_CalendarItemForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemHoverBackground
    {
        KnownPropertyIndex::CalendarView_CalendarItemHoverBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemPressedBackground
    {
        KnownPropertyIndex::CalendarView_CalendarItemPressedBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarViewDayItemStyle
    {
        KnownPropertyIndex::CalendarView_CalendarViewDayItemStyle, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontFamily
    {
        KnownPropertyIndex::CalendarView_DayItemFontFamily, // Index name
        KnownTypeIndex::FontFamily, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontSize
    {
        KnownPropertyIndex::CalendarView_DayItemFontSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontStyle
    {
        KnownPropertyIndex::CalendarView_DayItemFontStyle, // Index name
        KnownTypeIndex::FontStyle, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontWeight
    {
        KnownPropertyIndex::CalendarView_DayItemFontWeight, // Index name
        KnownTypeIndex::FontWeight, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayItemMargin
    {
        KnownPropertyIndex::CalendarView_DayItemMargin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayOfWeekFormat
    {
        KnownPropertyIndex::CalendarView_DayOfWeekFormat, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DisabledForeground
    {
        KnownPropertyIndex::CalendarView_DisabledForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DisplayMode
    {
        KnownPropertyIndex::CalendarView_DisplayMode, // Index name
        KnownTypeIndex::CalendarViewDisplayMode, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstDayOfWeek
    {
        KnownPropertyIndex::CalendarView_FirstDayOfWeek, // Index name
        KnownTypeIndex::DayOfWeek, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontFamily
    {
        KnownPropertyIndex::CalendarView_FirstOfMonthLabelFontFamily, // Index name
        KnownTypeIndex::FontFamily, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontSize
    {
        KnownPropertyIndex::CalendarView_FirstOfMonthLabelFontSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontStyle
    {
        KnownPropertyIndex::CalendarView_FirstOfMonthLabelFontStyle, // Index name
        KnownTypeIndex::FontStyle, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontWeight
    {
        KnownPropertyIndex::CalendarView_FirstOfMonthLabelFontWeight, // Index name
        KnownTypeIndex::FontWeight, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelMargin
    {
        KnownPropertyIndex::CalendarView_FirstOfMonthLabelMargin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontFamily
    {
        KnownPropertyIndex::CalendarView_FirstOfYearDecadeLabelFontFamily, // Index name
        KnownTypeIndex::FontFamily, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontSize
    {
        KnownPropertyIndex::CalendarView_FirstOfYearDecadeLabelFontSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontStyle
    {
        KnownPropertyIndex::CalendarView_FirstOfYearDecadeLabelFontStyle, // Index name
        KnownTypeIndex::FontStyle, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontWeight
    {
        KnownPropertyIndex::CalendarView_FirstOfYearDecadeLabelFontWeight, // Index name
        KnownTypeIndex::FontWeight, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelMargin
    {
        KnownPropertyIndex::CalendarView_FirstOfYearDecadeLabelMargin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FocusBorderBrush
    {
        KnownPropertyIndex::CalendarView_FocusBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.HorizontalDayItemAlignment
    {
        KnownPropertyIndex::CalendarView_HorizontalDayItemAlignment, // Index name
        KnownTypeIndex::HorizontalAlignment, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.HorizontalFirstOfMonthLabelAlignment
    {
        KnownPropertyIndex::CalendarView_HorizontalFirstOfMonthLabelAlignment, // Index name
        KnownTypeIndex::HorizontalAlignment, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.HoverBorderBrush
    {
        KnownPropertyIndex::CalendarView_HoverBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.IsGroupLabelVisible
    {
        KnownPropertyIndex::CalendarView_IsGroupLabelVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.IsOutOfScopeEnabled
    {
        KnownPropertyIndex::CalendarView_IsOutOfScopeEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.IsTodayHighlighted
    {
        KnownPropertyIndex::CalendarView_IsTodayHighlighted, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MaxDate
    {
        KnownPropertyIndex::CalendarView_MaxDate, // Index name
        KnownTypeIndex::DateTime, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MinDate
    {
        KnownPropertyIndex::CalendarView_MinDate, // Index name
        KnownTypeIndex::DateTime, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontFamily
    {
        KnownPropertyIndex::CalendarView_MonthYearItemFontFamily, // Index name
        KnownTypeIndex::FontFamily, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontSize
    {
        KnownPropertyIndex::CalendarView_MonthYearItemFontSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontStyle
    {
        KnownPropertyIndex::CalendarView_MonthYearItemFontStyle, // Index name
        KnownTypeIndex::FontStyle, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontWeight
    {
        KnownPropertyIndex::CalendarView_MonthYearItemFontWeight, // Index name
        KnownTypeIndex::FontWeight, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemMargin
    {
        KnownPropertyIndex::CalendarView_MonthYearItemMargin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.NumberOfWeeksInView
    {
        KnownPropertyIndex::CalendarView_NumberOfWeeksInView, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeBackground
    {
        KnownPropertyIndex::CalendarView_OutOfScopeBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeForeground
    {
        KnownPropertyIndex::CalendarView_OutOfScopeForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeHoverForeground
    {
        KnownPropertyIndex::CalendarView_OutOfScopeHoverForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopePressedForeground
    {
        KnownPropertyIndex::CalendarView_OutOfScopePressedForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.PressedBorderBrush
    {
        KnownPropertyIndex::CalendarView_PressedBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.PressedForeground
    {
        KnownPropertyIndex::CalendarView_PressedForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedBorderBrush
    {
        KnownPropertyIndex::CalendarView_SelectedBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedDates
    {
        KnownPropertyIndex::CalendarView_SelectedDates, // Index name
        KnownTypeIndex::IVectorOfDateTime, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledBorderBrush
    {
        KnownPropertyIndex::CalendarView_SelectedDisabledBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledForeground
    {
        KnownPropertyIndex::CalendarView_SelectedDisabledForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedForeground
    {
        KnownPropertyIndex::CalendarView_SelectedForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverBorderBrush
    {
        KnownPropertyIndex::CalendarView_SelectedHoverBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverForeground
    {
        KnownPropertyIndex::CalendarView_SelectedHoverForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedBorderBrush
    {
        KnownPropertyIndex::CalendarView_SelectedPressedBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedForeground
    {
        KnownPropertyIndex::CalendarView_SelectedPressedForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectionMode
    {
        KnownPropertyIndex::CalendarView_SelectionMode, // Index name
        KnownTypeIndex::CalendarViewSelectionMode, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TemplateSettings
    {
        KnownPropertyIndex::CalendarView_TemplateSettings, // Index name
        KnownTypeIndex::CalendarViewTemplateSettings, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBackground
    {
        KnownPropertyIndex::CalendarView_TodayBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutBackground
    {
        KnownPropertyIndex::CalendarView_TodayBlackoutBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutForeground
    {
        KnownPropertyIndex::CalendarView_TodayBlackoutForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayDisabledBackground
    {
        KnownPropertyIndex::CalendarView_TodayDisabledBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayFontWeight
    {
        KnownPropertyIndex::CalendarView_TodayFontWeight, // Index name
        KnownTypeIndex::FontWeight, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayForeground
    {
        KnownPropertyIndex::CalendarView_TodayForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBackground
    {
        KnownPropertyIndex::CalendarView_TodayHoverBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBorderBrush
    {
        KnownPropertyIndex::CalendarView_TodayHoverBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBackground
    {
        KnownPropertyIndex::CalendarView_TodayPressedBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBorderBrush
    {
        KnownPropertyIndex::CalendarView_TodayPressedBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodaySelectedInnerBorderBrush
    {
        KnownPropertyIndex::CalendarView_TodaySelectedInnerBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.VerticalDayItemAlignment
    {
        KnownPropertyIndex::CalendarView_VerticalDayItemAlignment, // Index name
        KnownTypeIndex::VerticalAlignment, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.VerticalFirstOfMonthLabelAlignment
    {
        KnownPropertyIndex::CalendarView_VerticalFirstOfMonthLabelAlignment, // Index name
        KnownTypeIndex::VerticalAlignment, // Property type
        KnownTypeIndex::CalendarView, // Declaring type
        KnownTypeIndex::CalendarView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Canvas.Left
    {
        KnownPropertyIndex::Canvas_Left, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Canvas, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Canvas.Top
    {
        KnownPropertyIndex::Canvas_Top, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Canvas, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Canvas.ZIndex
    {
        KnownPropertyIndex::Canvas_ZIndex, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Canvas, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.Accent
    {
        KnownPropertyIndex::ColorPaletteResources_Accent, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.AltHigh
    {
        KnownPropertyIndex::ColorPaletteResources_AltHigh, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.AltLow
    {
        KnownPropertyIndex::ColorPaletteResources_AltLow, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.AltMedium
    {
        KnownPropertyIndex::ColorPaletteResources_AltMedium, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.AltMediumHigh
    {
        KnownPropertyIndex::ColorPaletteResources_AltMediumHigh, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.AltMediumLow
    {
        KnownPropertyIndex::ColorPaletteResources_AltMediumLow, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.BaseHigh
    {
        KnownPropertyIndex::ColorPaletteResources_BaseHigh, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.BaseLow
    {
        KnownPropertyIndex::ColorPaletteResources_BaseLow, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.BaseMedium
    {
        KnownPropertyIndex::ColorPaletteResources_BaseMedium, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.BaseMediumHigh
    {
        KnownPropertyIndex::ColorPaletteResources_BaseMediumHigh, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.BaseMediumLow
    {
        KnownPropertyIndex::ColorPaletteResources_BaseMediumLow, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeAltLow
    {
        KnownPropertyIndex::ColorPaletteResources_ChromeAltLow, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeBlackHigh
    {
        KnownPropertyIndex::ColorPaletteResources_ChromeBlackHigh, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeBlackLow
    {
        KnownPropertyIndex::ColorPaletteResources_ChromeBlackLow, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeBlackMedium
    {
        KnownPropertyIndex::ColorPaletteResources_ChromeBlackMedium, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeBlackMediumLow
    {
        KnownPropertyIndex::ColorPaletteResources_ChromeBlackMediumLow, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeDisabledHigh
    {
        KnownPropertyIndex::ColorPaletteResources_ChromeDisabledHigh, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeDisabledLow
    {
        KnownPropertyIndex::ColorPaletteResources_ChromeDisabledLow, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeGray
    {
        KnownPropertyIndex::ColorPaletteResources_ChromeGray, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeHigh
    {
        KnownPropertyIndex::ColorPaletteResources_ChromeHigh, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeLow
    {
        KnownPropertyIndex::ColorPaletteResources_ChromeLow, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeMedium
    {
        KnownPropertyIndex::ColorPaletteResources_ChromeMedium, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeMediumLow
    {
        KnownPropertyIndex::ColorPaletteResources_ChromeMediumLow, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeWhite
    {
        KnownPropertyIndex::ColorPaletteResources_ChromeWhite, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ErrorText
    {
        KnownPropertyIndex::ColorPaletteResources_ErrorText, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ListLow
    {
        KnownPropertyIndex::ColorPaletteResources_ListLow, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ListMedium
    {
        KnownPropertyIndex::ColorPaletteResources_ListMedium, // Index name
        KnownTypeIndex::Color, // Property type
        KnownTypeIndex::ColorPaletteResources, // Declaring type
        KnownTypeIndex::ColorPaletteResources, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBarElementCollection.ContentProperty
    {
        KnownPropertyIndex::CommandBarElementCollection_ContentProperty, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::CommandBarElementCollection, // Declaring type
        KnownTypeIndex::CommandBarElementCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CommandingContainer.CommandingContainer
    {
        KnownPropertyIndex::CommandingContainer_CommandingContainer, // Index name
        KnownTypeIndex::CommandingContainer, // Property type
        KnownTypeIndex::CommandingContainer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CommandingContainer.CommandingTarget
    {
        KnownPropertyIndex::CommandingContainer_CommandingTarget, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::CommandingContainer, // Declaring type
        KnownTypeIndex::CommandingContainer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.Content
    {
        KnownPropertyIndex::ContentControl_Content, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ContentControl, // Declaring type
        KnownTypeIndex::ContentControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
    {
        KnownPropertyIndex::ContentControl_ContentTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ContentControl, // Declaring type
        KnownTypeIndex::ContentControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplateSelector
    {
        KnownPropertyIndex::ContentControl_ContentTemplateSelector, // Index name
        KnownTypeIndex::DataTemplateSelector, // Property type
        KnownTypeIndex::ContentControl, // Declaring type
        KnownTypeIndex::ContentControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
    {
        KnownPropertyIndex::ContentControl_ContentTransitions, // Index name
        KnownTypeIndex::TransitionCollection, // Property type
        KnownTypeIndex::ContentControl, // Declaring type
        KnownTypeIndex::ContentControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.SelectedContentTemplate
    {
        KnownPropertyIndex::ContentControl_SelectedContentTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ContentControl, // Declaring type
        KnownTypeIndex::ContentControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.CalendarIdentifier
    {
        KnownPropertyIndex::DatePicker_CalendarIdentifier, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.Date
    {
        KnownPropertyIndex::DatePicker_Date, // Index name
        KnownTypeIndex::DateTime, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.DayFormat
    {
        KnownPropertyIndex::DatePicker_DayFormat, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.DayVisible
    {
        KnownPropertyIndex::DatePicker_DayVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.Header
    {
        KnownPropertyIndex::DatePicker_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.HeaderPlacement
    {
        KnownPropertyIndex::DatePicker_HeaderPlacement, // Index name
        KnownTypeIndex::ControlHeaderPlacement, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.HeaderTemplate
    {
        KnownPropertyIndex::DatePicker_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.LightDismissOverlayMode
    {
        KnownPropertyIndex::DatePicker_LightDismissOverlayMode, // Index name
        KnownTypeIndex::LightDismissOverlayMode, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.MaxYear
    {
        KnownPropertyIndex::DatePicker_MaxYear, // Index name
        KnownTypeIndex::DateTime, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.MinYear
    {
        KnownPropertyIndex::DatePicker_MinYear, // Index name
        KnownTypeIndex::DateTime, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.MonthFormat
    {
        KnownPropertyIndex::DatePicker_MonthFormat, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.MonthVisible
    {
        KnownPropertyIndex::DatePicker_MonthVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.Orientation
    {
        KnownPropertyIndex::DatePicker_Orientation, // Index name
        KnownTypeIndex::Orientation, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.SelectedDate
    {
        KnownPropertyIndex::DatePicker_SelectedDate, // Index name
        KnownTypeIndex::DateTime, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.YearFormat
    {
        KnownPropertyIndex::DatePicker_YearFormat, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.YearVisible
    {
        KnownPropertyIndex::DatePicker_YearVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::DatePicker, // Declaring type
        KnownTypeIndex::DatePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.DependencyObjectCollection.ContentProperty
    {
        KnownPropertyIndex::DependencyObjectCollection_ContentProperty, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::DependencyObjectCollection, // Declaring type
        KnownTypeIndex::DependencyObjectCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.FontFamily
    {
        KnownPropertyIndex::FontIcon_FontFamily, // Index name
        KnownTypeIndex::FontFamily, // Property type
        KnownTypeIndex::FontIcon, // Declaring type
        KnownTypeIndex::FontIcon, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.FontSize
    {
        KnownPropertyIndex::FontIcon_FontSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::FontIcon, // Declaring type
        KnownTypeIndex::FontIcon, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.FontStyle
    {
        KnownPropertyIndex::FontIcon_FontStyle, // Index name
        KnownTypeIndex::FontStyle, // Property type
        KnownTypeIndex::FontIcon, // Declaring type
        KnownTypeIndex::FontIcon, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.FontWeight
    {
        KnownPropertyIndex::FontIcon_FontWeight, // Index name
        KnownTypeIndex::FontWeight, // Property type
        KnownTypeIndex::FontIcon, // Declaring type
        KnownTypeIndex::FontIcon, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.Glyph
    {
        KnownPropertyIndex::FontIcon_Glyph, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::FontIcon, // Declaring type
        KnownTypeIndex::FontIcon, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.IsTextScaleFactorEnabled
    {
        KnownPropertyIndex::FontIcon_IsTextScaleFactorEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FontIcon, // Declaring type
        KnownTypeIndex::FontIcon, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.MirroredWhenRightToLeft
    {
        KnownPropertyIndex::FontIcon_MirroredWhenRightToLeft, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FontIcon, // Declaring type
        KnownTypeIndex::FontIcon, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Grid.BackgroundSizing
    {
        KnownPropertyIndex::Grid_BackgroundSizing, // Index name
        KnownTypeIndex::BackgroundSizing, // Property type
        KnownTypeIndex::Grid, // Declaring type
        KnownTypeIndex::Grid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Grid.BorderBrush
    {
        KnownPropertyIndex::Grid_BorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::Grid, // Declaring type
        KnownTypeIndex::Grid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Grid.BorderThickness
    {
        KnownPropertyIndex::Grid_BorderThickness, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::Grid, // Declaring type
        KnownTypeIndex::Grid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Grid.Column
    {
        KnownPropertyIndex::Grid_Column, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Grid, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
    {
        KnownPropertyIndex::Grid_ColumnDefinitions, // Index name
        KnownTypeIndex::ColumnDefinitionCollection, // Property type
        KnownTypeIndex::Grid, // Declaring type
        KnownTypeIndex::Grid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Grid.ColumnSpacing
    {
        KnownPropertyIndex::Grid_ColumnSpacing, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Grid, // Declaring type
        KnownTypeIndex::Grid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Grid.ColumnSpan
    {
        KnownPropertyIndex::Grid_ColumnSpan, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Grid, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Grid.CornerRadius
    {
        KnownPropertyIndex::Grid_CornerRadius, // Index name
        KnownTypeIndex::CornerRadius, // Property type
        KnownTypeIndex::Grid, // Declaring type
        KnownTypeIndex::Grid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Grid.Padding
    {
        KnownPropertyIndex::Grid_Padding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::Grid, // Declaring type
        KnownTypeIndex::Grid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Grid.Row
    {
        KnownPropertyIndex::Grid_Row, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Grid, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Grid.RowDefinitions
    {
        KnownPropertyIndex::Grid_RowDefinitions, // Index name
        KnownTypeIndex::RowDefinitionCollection, // Property type
        KnownTypeIndex::Grid, // Declaring type
        KnownTypeIndex::Grid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Grid.RowSpacing
    {
        KnownPropertyIndex::Grid_RowSpacing, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Grid, // Declaring type
        KnownTypeIndex::Grid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Grid.RowSpan
    {
        KnownPropertyIndex::Grid_RowSpan, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Grid, // Declaring type
        KnownTypeIndex::FrameworkElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStorageGroup)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Hub.DefaultSectionIndex
    {
        KnownPropertyIndex::Hub_DefaultSectionIndex, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Hub, // Declaring type
        KnownTypeIndex::Hub, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Hub.Header
    {
        KnownPropertyIndex::Hub_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::Hub, // Declaring type
        KnownTypeIndex::Hub, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Hub.HeaderTemplate
    {
        KnownPropertyIndex::Hub_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::Hub, // Declaring type
        KnownTypeIndex::Hub, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Hub.IsActiveView
    {
        KnownPropertyIndex::Hub_IsActiveView, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Hub, // Declaring type
        KnownTypeIndex::Hub, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Hub.IsZoomedInView
    {
        KnownPropertyIndex::Hub_IsZoomedInView, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Hub, // Declaring type
        KnownTypeIndex::Hub, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Hub.Orientation
    {
        KnownPropertyIndex::Hub_Orientation, // Index name
        KnownTypeIndex::Orientation, // Property type
        KnownTypeIndex::Hub, // Declaring type
        KnownTypeIndex::Hub, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Hub.SectionHeaders
    {
        KnownPropertyIndex::Hub_SectionHeaders, // Index name
        KnownTypeIndex::ItemCollection, // Property type
        KnownTypeIndex::Hub, // Declaring type
        KnownTypeIndex::Hub, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Hub.Sections
    {
        KnownPropertyIndex::Hub_Sections, // Index name
        KnownTypeIndex::HubSectionCollection, // Property type
        KnownTypeIndex::Hub, // Declaring type
        KnownTypeIndex::Hub, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Hub.SectionsInView
    {
        KnownPropertyIndex::Hub_SectionsInView, // Index name
        KnownTypeIndex::HubSectionCollection, // Property type
        KnownTypeIndex::Hub, // Declaring type
        KnownTypeIndex::Hub, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Hub.SemanticZoomOwner
    {
        KnownPropertyIndex::Hub_SemanticZoomOwner, // Index name
        KnownTypeIndex::SemanticZoom, // Property type
        KnownTypeIndex::Hub, // Declaring type
        KnownTypeIndex::Hub, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.HubSection.ContentTemplate
    {
        KnownPropertyIndex::HubSection_ContentTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::HubSection, // Declaring type
        KnownTypeIndex::HubSection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.HubSection.Header
    {
        KnownPropertyIndex::HubSection_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::HubSection, // Declaring type
        KnownTypeIndex::HubSection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.HubSection.HeaderTemplate
    {
        KnownPropertyIndex::HubSection_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::HubSection, // Declaring type
        KnownTypeIndex::HubSection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.HubSection.IsHeaderInteractive
    {
        KnownPropertyIndex::HubSection_IsHeaderInteractive, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::HubSection, // Declaring type
        KnownTypeIndex::HubSection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.ElementSoundMode
    {
        KnownPropertyIndex::Hyperlink_ElementSoundMode, // Index name
        KnownTypeIndex::ElementSoundMode, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.FocusState
    {
        KnownPropertyIndex::Hyperlink_FocusState, // Index name
        KnownTypeIndex::FocusState, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.IsTabStop
    {
        KnownPropertyIndex::Hyperlink_IsTabStop, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.NavigateUri
    {
        KnownPropertyIndex::Hyperlink_NavigateUri, // Index name
        KnownTypeIndex::Uri, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.TabIndex
    {
        KnownPropertyIndex::Hyperlink_TabIndex, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.UnderlineStyle
    {
        KnownPropertyIndex::Hyperlink_UnderlineStyle, // Index name
        KnownTypeIndex::UnderlineStyle, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusDown
    {
        KnownPropertyIndex::Hyperlink_XYFocusDown, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusDownNavigationStrategy
    {
        KnownPropertyIndex::Hyperlink_XYFocusDownNavigationStrategy, // Index name
        KnownTypeIndex::XYFocusNavigationStrategy, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusLeft
    {
        KnownPropertyIndex::Hyperlink_XYFocusLeft, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusLeftNavigationStrategy
    {
        KnownPropertyIndex::Hyperlink_XYFocusLeftNavigationStrategy, // Index name
        KnownTypeIndex::XYFocusNavigationStrategy, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusRight
    {
        KnownPropertyIndex::Hyperlink_XYFocusRight, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusRightNavigationStrategy
    {
        KnownPropertyIndex::Hyperlink_XYFocusRightNavigationStrategy, // Index name
        KnownTypeIndex::XYFocusNavigationStrategy, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusUp
    {
        KnownPropertyIndex::Hyperlink_XYFocusUp, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusUpNavigationStrategy
    {
        KnownPropertyIndex::Hyperlink_XYFocusUpNavigationStrategy, // Index name
        KnownTypeIndex::XYFocusNavigationStrategy, // Property type
        KnownTypeIndex::Hyperlink, // Declaring type
        KnownTypeIndex::Hyperlink, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsInheritedProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.IconSourceElement.IconSource
    {
        KnownPropertyIndex::IconSourceElement_IconSource, // Index name
        KnownTypeIndex::IconSource, // Property type
        KnownTypeIndex::IconSourceElement, // Declaring type
        KnownTypeIndex::IconSourceElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemCollection.ContentProperty
    {
        KnownPropertyIndex::ItemCollection_ContentProperty, // Index name
        KnownTypeIndex::DependencyObject, // Property type
        KnownTypeIndex::ItemCollection, // Declaring type
        KnownTypeIndex::ItemCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.DisplayMemberPath
    {
        KnownPropertyIndex::ItemsControl_DisplayMemberPath, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.GroupStyle
    {
        KnownPropertyIndex::ItemsControl_GroupStyle, // Index name
        KnownTypeIndex::IObservableVectorOfGroupStyle, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.GroupStyleSelector
    {
        KnownPropertyIndex::ItemsControl_GroupStyleSelector, // Index name
        KnownTypeIndex::GroupStyleSelector, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.IsGrouping
    {
        KnownPropertyIndex::ItemsControl_IsGrouping, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.IsItemsHostInvalid
    {
        KnownPropertyIndex::ItemsControl_IsItemsHostInvalid, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerStyle
    {
        KnownPropertyIndex::ItemsControl_ItemContainerStyle, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerStyleSelector
    {
        KnownPropertyIndex::ItemsControl_ItemContainerStyleSelector, // Index name
        KnownTypeIndex::StyleSelector, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
    {
        KnownPropertyIndex::ItemsControl_ItemContainerTransitions, // Index name
        KnownTypeIndex::TransitionCollection, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.Items
    {
        KnownPropertyIndex::ItemsControl_Items, // Index name
        KnownTypeIndex::ItemCollection, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemsHost
    {
        KnownPropertyIndex::ItemsControl_ItemsHost, // Index name
        KnownTypeIndex::Panel, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemsPanel
    {
        KnownPropertyIndex::ItemsControl_ItemsPanel, // Index name
        KnownTypeIndex::ItemsPanelTemplate, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSource
    {
        KnownPropertyIndex::ItemsControl_ItemsSource, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemTemplate
    {
        KnownPropertyIndex::ItemsControl_ItemTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemTemplateSelector
    {
        KnownPropertyIndex::ItemsControl_ItemTemplateSelector, // Index name
        KnownTypeIndex::DataTemplateSelector, // Property type
        KnownTypeIndex::ItemsControl, // Declaring type
        KnownTypeIndex::ItemsControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Line.X1
    {
        KnownPropertyIndex::Line_X1, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Line, // Declaring type
        KnownTypeIndex::Line, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Line.X2
    {
        KnownPropertyIndex::Line_X2, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Line, // Declaring type
        KnownTypeIndex::Line, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Line.Y1
    {
        KnownPropertyIndex::Line_Y1, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Line, // Declaring type
        KnownTypeIndex::Line, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Line.Y2
    {
        KnownPropertyIndex::Line_Y2, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Line, // Declaring type
        KnownTypeIndex::Line, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.AreTransportControlsEnabled
    {
        KnownPropertyIndex::MediaPlayerElement_AreTransportControlsEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaPlayerElement, // Declaring type
        KnownTypeIndex::MediaPlayerElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.AutoPlay
    {
        KnownPropertyIndex::MediaPlayerElement_AutoPlay, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaPlayerElement, // Declaring type
        KnownTypeIndex::MediaPlayerElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.IsFullWindow
    {
        KnownPropertyIndex::MediaPlayerElement_IsFullWindow, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaPlayerElement, // Declaring type
        KnownTypeIndex::MediaPlayerElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.MediaPlayer
    {
        KnownPropertyIndex::MediaPlayerElement_MediaPlayer, // Index name
        KnownTypeIndex::MediaPlayer, // Property type
        KnownTypeIndex::MediaPlayerElement, // Declaring type
        KnownTypeIndex::MediaPlayerElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.PosterSource
    {
        KnownPropertyIndex::MediaPlayerElement_PosterSource, // Index name
        KnownTypeIndex::ImageSource, // Property type
        KnownTypeIndex::MediaPlayerElement, // Declaring type
        KnownTypeIndex::MediaPlayerElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::NeedsInvoke) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.Source
    {
        KnownPropertyIndex::MediaPlayerElement_Source, // Index name
        KnownTypeIndex::IMediaPlaybackSource, // Property type
        KnownTypeIndex::MediaPlayerElement, // Declaring type
        KnownTypeIndex::MediaPlayerElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.Stretch
    {
        KnownPropertyIndex::MediaPlayerElement_Stretch, // Index name
        KnownTypeIndex::Stretch, // Property type
        KnownTypeIndex::MediaPlayerElement, // Declaring type
        KnownTypeIndex::MediaPlayerElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.TransportControls
    {
        KnownPropertyIndex::MediaPlayerElement_TransportControls, // Index name
        KnownTypeIndex::MediaTransportControls, // Property type
        KnownTypeIndex::MediaPlayerElement, // Declaring type
        KnownTypeIndex::MediaPlayerElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.FastPlayFallbackBehaviour
    {
        KnownPropertyIndex::MediaTransportControls_FastPlayFallbackBehaviour, // Index name
        KnownTypeIndex::FastPlayFallbackBehaviour, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsCompact
    {
        KnownPropertyIndex::MediaTransportControls_IsCompact, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastForwardButtonVisible
    {
        KnownPropertyIndex::MediaTransportControls_IsFastForwardButtonVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastForwardEnabled
    {
        KnownPropertyIndex::MediaTransportControls_IsFastForwardEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastRewindButtonVisible
    {
        KnownPropertyIndex::MediaTransportControls_IsFastRewindButtonVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastRewindEnabled
    {
        KnownPropertyIndex::MediaTransportControls_IsFastRewindEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsNextTrackButtonVisible
    {
        KnownPropertyIndex::MediaTransportControls_IsNextTrackButtonVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsPlaybackRateButtonVisible
    {
        KnownPropertyIndex::MediaTransportControls_IsPlaybackRateButtonVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsPlaybackRateEnabled
    {
        KnownPropertyIndex::MediaTransportControls_IsPlaybackRateEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsPreviousTrackButtonVisible
    {
        KnownPropertyIndex::MediaTransportControls_IsPreviousTrackButtonVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsRepeatButtonVisible
    {
        KnownPropertyIndex::MediaTransportControls_IsRepeatButtonVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsRepeatEnabled
    {
        KnownPropertyIndex::MediaTransportControls_IsRepeatEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSeekBarVisible
    {
        KnownPropertyIndex::MediaTransportControls_IsSeekBarVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSeekEnabled
    {
        KnownPropertyIndex::MediaTransportControls_IsSeekEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipBackwardButtonVisible
    {
        KnownPropertyIndex::MediaTransportControls_IsSkipBackwardButtonVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipBackwardEnabled
    {
        KnownPropertyIndex::MediaTransportControls_IsSkipBackwardEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipForwardButtonVisible
    {
        KnownPropertyIndex::MediaTransportControls_IsSkipForwardButtonVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipForwardEnabled
    {
        KnownPropertyIndex::MediaTransportControls_IsSkipForwardEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsStopButtonVisible
    {
        KnownPropertyIndex::MediaTransportControls_IsStopButtonVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsStopEnabled
    {
        KnownPropertyIndex::MediaTransportControls_IsStopEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsVolumeButtonVisible
    {
        KnownPropertyIndex::MediaTransportControls_IsVolumeButtonVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsVolumeEnabled
    {
        KnownPropertyIndex::MediaTransportControls_IsVolumeEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsZoomButtonVisible
    {
        KnownPropertyIndex::MediaTransportControls_IsZoomButtonVisible, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsZoomEnabled
    {
        KnownPropertyIndex::MediaTransportControls_IsZoomEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.ShowAndHideAutomatically
    {
        KnownPropertyIndex::MediaTransportControls_ShowAndHideAutomatically, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MediaTransportControls, // Declaring type
        KnownTypeIndex::MediaTransportControls, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ModernCollectionBasePanel.AreStickyGroupHeadersEnabledBase
    {
        KnownPropertyIndex::ModernCollectionBasePanel_AreStickyGroupHeadersEnabledBase, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ModernCollectionBasePanel, // Declaring type
        KnownTypeIndex::ModernCollectionBasePanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.CanPasteClipboardContent
    {
        KnownPropertyIndex::PasswordBox_CanPasteClipboardContent, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.Description
    {
        KnownPropertyIndex::PasswordBox_Description, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.ErrorTemplate
    {
        KnownPropertyIndex::PasswordBox_ErrorTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.HasValidationErrors
    {
        KnownPropertyIndex::PasswordBox_HasValidationErrors, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.Header
    {
        KnownPropertyIndex::PasswordBox_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.HeaderPlacement
    {
        KnownPropertyIndex::PasswordBox_HeaderPlacement, // Index name
        KnownTypeIndex::ControlHeaderPlacement, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.HeaderTemplate
    {
        KnownPropertyIndex::PasswordBox_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.InputScope
    {
        KnownPropertyIndex::PasswordBox_InputScope, // Index name
        KnownTypeIndex::InputScope, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.InputValidationKind
    {
        KnownPropertyIndex::PasswordBox_InputValidationKind, // Index name
        KnownTypeIndex::InputValidationKind, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.InputValidationMode
    {
        KnownPropertyIndex::PasswordBox_InputValidationMode, // Index name
        KnownTypeIndex::InputValidationMode, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.IsPasswordRevealButtonEnabled
    {
        KnownPropertyIndex::PasswordBox_IsPasswordRevealButtonEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.MaxLength
    {
        KnownPropertyIndex::PasswordBox_MaxLength, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.Password
    {
        KnownPropertyIndex::PasswordBox_Password, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.PasswordChar
    {
        KnownPropertyIndex::PasswordBox_PasswordChar, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.PasswordRevealMode
    {
        KnownPropertyIndex::PasswordBox_PasswordRevealMode, // Index name
        KnownTypeIndex::PasswordRevealMode, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.PlaceholderText
    {
        KnownPropertyIndex::PasswordBox_PlaceholderText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.PreventKeyboardDisplayOnProgrammaticFocus
    {
        KnownPropertyIndex::PasswordBox_PreventKeyboardDisplayOnProgrammaticFocus, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.SelectionFlyout
    {
        KnownPropertyIndex::PasswordBox_SelectionFlyout, // Index name
        KnownTypeIndex::FlyoutBase, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.SelectionHighlightColor
    {
        KnownPropertyIndex::PasswordBox_SelectionHighlightColor, // Index name
        KnownTypeIndex::SolidColorBrush, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.TextReadingOrder
    {
        KnownPropertyIndex::PasswordBox_TextReadingOrder, // Index name
        KnownTypeIndex::TextReadingOrder, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.ValidationCommand
    {
        KnownPropertyIndex::PasswordBox_ValidationCommand, // Index name
        KnownTypeIndex::InputValidationCommand, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.ValidationContext
    {
        KnownPropertyIndex::PasswordBox_ValidationContext, // Index name
        KnownTypeIndex::InputValidationContext, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.ValidationErrors
    {
        KnownPropertyIndex::PasswordBox_ValidationErrors, // Index name
        KnownTypeIndex::ValidationErrorsCollection, // Property type
        KnownTypeIndex::PasswordBox, // Declaring type
        KnownTypeIndex::PasswordBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Path.Data
    {
        KnownPropertyIndex::Path_Data, // Index name
        KnownTypeIndex::Geometry, // Property type
        KnownTypeIndex::Path, // Declaring type
        KnownTypeIndex::Path, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.PathIcon.Data
    {
        KnownPropertyIndex::PathIcon_Data, // Index name
        KnownTypeIndex::Geometry, // Property type
        KnownTypeIndex::PathIcon, // Declaring type
        KnownTypeIndex::PathIcon, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Polygon.FillRule
    {
        KnownPropertyIndex::Polygon_FillRule, // Index name
        KnownTypeIndex::FillRule, // Property type
        KnownTypeIndex::Polygon, // Declaring type
        KnownTypeIndex::Polygon, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Polygon.Points
    {
        KnownPropertyIndex::Polygon_Points, // Index name
        KnownTypeIndex::PointCollection, // Property type
        KnownTypeIndex::Polygon, // Declaring type
        KnownTypeIndex::Polygon, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Polyline.FillRule
    {
        KnownPropertyIndex::Polyline_FillRule, // Index name
        KnownTypeIndex::FillRule, // Property type
        KnownTypeIndex::Polyline, // Declaring type
        KnownTypeIndex::Polyline, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Polyline.Points
    {
        KnownPropertyIndex::Polyline_Points, // Index name
        KnownTypeIndex::PointCollection, // Property type
        KnownTypeIndex::Polyline, // Declaring type
        KnownTypeIndex::Polyline, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase.LargeChange
    {
        KnownPropertyIndex::RangeBase_LargeChange, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RangeBase, // Declaring type
        KnownTypeIndex::RangeBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase.Maximum
    {
        KnownPropertyIndex::RangeBase_Maximum, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RangeBase, // Declaring type
        KnownTypeIndex::RangeBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase.Minimum
    {
        KnownPropertyIndex::RangeBase_Minimum, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RangeBase, // Declaring type
        KnownTypeIndex::RangeBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase.SmallChange
    {
        KnownPropertyIndex::RangeBase_SmallChange, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RangeBase, // Declaring type
        KnownTypeIndex::RangeBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase.Value
    {
        KnownPropertyIndex::RangeBase_Value, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::RangeBase, // Declaring type
        KnownTypeIndex::RangeBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Rectangle.RadiusX
    {
        KnownPropertyIndex::Rectangle_RadiusX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Rectangle, // Declaring type
        KnownTypeIndex::Rectangle, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Shapes.Rectangle.RadiusY
    {
        KnownPropertyIndex::Rectangle_RadiusY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Rectangle, // Declaring type
        KnownTypeIndex::Rectangle, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.Above
    {
        KnownPropertyIndex::RelativePanel_Above, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignBottomWith
    {
        KnownPropertyIndex::RelativePanel_AlignBottomWith, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignBottomWithPanel
    {
        KnownPropertyIndex::RelativePanel_AlignBottomWithPanel, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignHorizontalCenterWith
    {
        KnownPropertyIndex::RelativePanel_AlignHorizontalCenterWith, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignHorizontalCenterWithPanel
    {
        KnownPropertyIndex::RelativePanel_AlignHorizontalCenterWithPanel, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignLeftWith
    {
        KnownPropertyIndex::RelativePanel_AlignLeftWith, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignLeftWithPanel
    {
        KnownPropertyIndex::RelativePanel_AlignLeftWithPanel, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignRightWith
    {
        KnownPropertyIndex::RelativePanel_AlignRightWith, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignRightWithPanel
    {
        KnownPropertyIndex::RelativePanel_AlignRightWithPanel, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignTopWith
    {
        KnownPropertyIndex::RelativePanel_AlignTopWith, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignTopWithPanel
    {
        KnownPropertyIndex::RelativePanel_AlignTopWithPanel, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignVerticalCenterWith
    {
        KnownPropertyIndex::RelativePanel_AlignVerticalCenterWith, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignVerticalCenterWithPanel
    {
        KnownPropertyIndex::RelativePanel_AlignVerticalCenterWithPanel, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.BackgroundSizing
    {
        KnownPropertyIndex::RelativePanel_BackgroundSizing, // Index name
        KnownTypeIndex::BackgroundSizing, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::RelativePanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.Below
    {
        KnownPropertyIndex::RelativePanel_Below, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.BorderBrush
    {
        KnownPropertyIndex::RelativePanel_BorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::RelativePanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.BorderThickness
    {
        KnownPropertyIndex::RelativePanel_BorderThickness, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::RelativePanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.CornerRadius
    {
        KnownPropertyIndex::RelativePanel_CornerRadius, // Index name
        KnownTypeIndex::CornerRadius, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::RelativePanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.LeftOf
    {
        KnownPropertyIndex::RelativePanel_LeftOf, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.Padding
    {
        KnownPropertyIndex::RelativePanel_Padding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::RelativePanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.RightOf
    {
        KnownPropertyIndex::RelativePanel_RightOf, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RelativePanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.AcceptsReturn
    {
        KnownPropertyIndex::RichEditBox_AcceptsReturn, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.CharacterCasing
    {
        KnownPropertyIndex::RichEditBox_CharacterCasing, // Index name
        KnownTypeIndex::CharacterCasing, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.ClipboardCopyFormat
    {
        KnownPropertyIndex::RichEditBox_ClipboardCopyFormat, // Index name
        KnownTypeIndex::RichEditClipboardFormat, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.Description
    {
        KnownPropertyIndex::RichEditBox_Description, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.DesiredCandidateWindowAlignment
    {
        KnownPropertyIndex::RichEditBox_DesiredCandidateWindowAlignment, // Index name
        KnownTypeIndex::CandidateWindowAlignment, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.DisabledFormattingAccelerators
    {
        KnownPropertyIndex::RichEditBox_DisabledFormattingAccelerators, // Index name
        KnownTypeIndex::DisabledFormattingAccelerators, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.Header
    {
        KnownPropertyIndex::RichEditBox_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.HeaderPlacement
    {
        KnownPropertyIndex::RichEditBox_HeaderPlacement, // Index name
        KnownTypeIndex::ControlHeaderPlacement, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.HeaderTemplate
    {
        KnownPropertyIndex::RichEditBox_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.HorizontalTextAlignment
    {
        KnownPropertyIndex::RichEditBox_HorizontalTextAlignment, // Index name
        KnownTypeIndex::TextAlignment, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.InputScope
    {
        KnownPropertyIndex::RichEditBox_InputScope, // Index name
        KnownTypeIndex::InputScope, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.IsColorFontEnabled
    {
        KnownPropertyIndex::RichEditBox_IsColorFontEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.IsReadOnly
    {
        KnownPropertyIndex::RichEditBox_IsReadOnly, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.IsSpellCheckEnabled
    {
        KnownPropertyIndex::RichEditBox_IsSpellCheckEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.IsTelemetryCollectionEnabled
    {
        KnownPropertyIndex::RichEditBox_IsTelemetryCollectionEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.IsTextPredictionEnabled
    {
        KnownPropertyIndex::RichEditBox_IsTextPredictionEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.MaxLength
    {
        KnownPropertyIndex::RichEditBox_MaxLength, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.PlaceholderText
    {
        KnownPropertyIndex::RichEditBox_PlaceholderText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.PreventKeyboardDisplayOnProgrammaticFocus
    {
        KnownPropertyIndex::RichEditBox_PreventKeyboardDisplayOnProgrammaticFocus, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.ProofingMenuFlyout
    {
        KnownPropertyIndex::RichEditBox_ProofingMenuFlyout, // Index name
        KnownTypeIndex::FlyoutBase, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.SelectionFlyout
    {
        KnownPropertyIndex::RichEditBox_SelectionFlyout, // Index name
        KnownTypeIndex::FlyoutBase, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColor
    {
        KnownPropertyIndex::RichEditBox_SelectionHighlightColor, // Index name
        KnownTypeIndex::SolidColorBrush, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColorWhenNotFocused
    {
        KnownPropertyIndex::RichEditBox_SelectionHighlightColorWhenNotFocused, // Index name
        KnownTypeIndex::SolidColorBrush, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.TextAlignment
    {
        KnownPropertyIndex::RichEditBox_TextAlignment, // Index name
        KnownTypeIndex::TextAlignment, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.TextReadingOrder
    {
        KnownPropertyIndex::RichEditBox_TextReadingOrder, // Index name
        KnownTypeIndex::TextReadingOrder, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.TextWrapping
    {
        KnownPropertyIndex::RichEditBox_TextWrapping, // Index name
        KnownTypeIndex::TextWrapping, // Property type
        KnownTypeIndex::RichEditBox, // Declaring type
        KnownTypeIndex::RichEditBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollContentPresenter.CanContentRenderOutsideBounds
    {
        KnownPropertyIndex::ScrollContentPresenter_CanContentRenderOutsideBounds, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ScrollContentPresenter, // Declaring type
        KnownTypeIndex::ScrollContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollContentPresenter.SizesContentToTemplatedParent
    {
        KnownPropertyIndex::ScrollContentPresenter_SizesContentToTemplatedParent, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ScrollContentPresenter, // Declaring type
        KnownTypeIndex::ScrollContentPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom.CanChangeViews
    {
        KnownPropertyIndex::SemanticZoom_CanChangeViews, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::SemanticZoom, // Declaring type
        KnownTypeIndex::SemanticZoom, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom.IsZoomedInViewActive
    {
        KnownPropertyIndex::SemanticZoom_IsZoomedInViewActive, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::SemanticZoom, // Declaring type
        KnownTypeIndex::SemanticZoom, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom.IsZoomOutButtonEnabled
    {
        KnownPropertyIndex::SemanticZoom_IsZoomOutButtonEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::SemanticZoom, // Declaring type
        KnownTypeIndex::SemanticZoom, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom.ZoomedInView
    {
        KnownPropertyIndex::SemanticZoom_ZoomedInView, // Index name
        KnownTypeIndex::ISemanticZoomInformation, // Property type
        KnownTypeIndex::SemanticZoom, // Declaring type
        KnownTypeIndex::SemanticZoom, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom.ZoomedOutView
    {
        KnownPropertyIndex::SemanticZoom_ZoomedOutView, // Index name
        KnownTypeIndex::ISemanticZoomInformation, // Property type
        KnownTypeIndex::SemanticZoom, // Declaring type
        KnownTypeIndex::SemanticZoom, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SplitView.CompactPaneLength
    {
        KnownPropertyIndex::SplitView_CompactPaneLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitView, // Declaring type
        KnownTypeIndex::SplitView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SplitView.Content
    {
        KnownPropertyIndex::SplitView_Content, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::SplitView, // Declaring type
        KnownTypeIndex::SplitView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SplitView.DisplayMode
    {
        KnownPropertyIndex::SplitView_DisplayMode, // Index name
        KnownTypeIndex::SplitViewDisplayMode, // Property type
        KnownTypeIndex::SplitView, // Declaring type
        KnownTypeIndex::SplitView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SplitView.IsPaneOpen
    {
        KnownPropertyIndex::SplitView_IsPaneOpen, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::SplitView, // Declaring type
        KnownTypeIndex::SplitView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SplitView.LightDismissOverlayMode
    {
        KnownPropertyIndex::SplitView_LightDismissOverlayMode, // Index name
        KnownTypeIndex::LightDismissOverlayMode, // Property type
        KnownTypeIndex::SplitView, // Declaring type
        KnownTypeIndex::SplitView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SplitView.OpenPaneLength
    {
        KnownPropertyIndex::SplitView_OpenPaneLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SplitView, // Declaring type
        KnownTypeIndex::SplitView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SplitView.Pane
    {
        KnownPropertyIndex::SplitView_Pane, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::SplitView, // Declaring type
        KnownTypeIndex::SplitView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SplitView.PaneBackground
    {
        KnownPropertyIndex::SplitView_PaneBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::SplitView, // Declaring type
        KnownTypeIndex::SplitView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SplitView.PanePlacement
    {
        KnownPropertyIndex::SplitView_PanePlacement, // Index name
        KnownTypeIndex::SplitViewPanePlacement, // Property type
        KnownTypeIndex::SplitView, // Declaring type
        KnownTypeIndex::SplitView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SplitView.TemplateSettings
    {
        KnownPropertyIndex::SplitView_TemplateSettings, // Index name
        KnownTypeIndex::SplitViewTemplateSettings, // Property type
        KnownTypeIndex::SplitView, // Declaring type
        KnownTypeIndex::SplitView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.AreScrollSnapPointsRegular
    {
        KnownPropertyIndex::StackPanel_AreScrollSnapPointsRegular, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::StackPanel, // Declaring type
        KnownTypeIndex::StackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.BackgroundSizing
    {
        KnownPropertyIndex::StackPanel_BackgroundSizing, // Index name
        KnownTypeIndex::BackgroundSizing, // Property type
        KnownTypeIndex::StackPanel, // Declaring type
        KnownTypeIndex::StackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.BorderBrush
    {
        KnownPropertyIndex::StackPanel_BorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::StackPanel, // Declaring type
        KnownTypeIndex::StackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.BorderThickness
    {
        KnownPropertyIndex::StackPanel_BorderThickness, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::StackPanel, // Declaring type
        KnownTypeIndex::StackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.CornerRadius
    {
        KnownPropertyIndex::StackPanel_CornerRadius, // Index name
        KnownTypeIndex::CornerRadius, // Property type
        KnownTypeIndex::StackPanel, // Declaring type
        KnownTypeIndex::StackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.Orientation
    {
        KnownPropertyIndex::StackPanel_Orientation, // Index name
        KnownTypeIndex::Orientation, // Property type
        KnownTypeIndex::StackPanel, // Declaring type
        KnownTypeIndex::StackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.Padding
    {
        KnownPropertyIndex::StackPanel_Padding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::StackPanel, // Declaring type
        KnownTypeIndex::StackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.Spacing
    {
        KnownPropertyIndex::StackPanel_Spacing, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::StackPanel, // Declaring type
        KnownTypeIndex::StackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SymbolIcon.Symbol
    {
        KnownPropertyIndex::SymbolIcon_Symbol, // Index name
        KnownTypeIndex::Symbol, // Property type
        KnownTypeIndex::SymbolIcon, // Declaring type
        KnownTypeIndex::SymbolIcon, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.AcceptsReturn
    {
        KnownPropertyIndex::TextBox_AcceptsReturn, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.CanPasteClipboardContent
    {
        KnownPropertyIndex::TextBox_CanPasteClipboardContent, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.CanRedo
    {
        KnownPropertyIndex::TextBox_CanRedo, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.CanUndo
    {
        KnownPropertyIndex::TextBox_CanUndo, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.CharacterCasing
    {
        KnownPropertyIndex::TextBox_CharacterCasing, // Index name
        KnownTypeIndex::CharacterCasing, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.Description
    {
        KnownPropertyIndex::TextBox_Description, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.DesiredCandidateWindowAlignment
    {
        KnownPropertyIndex::TextBox_DesiredCandidateWindowAlignment, // Index name
        KnownTypeIndex::CandidateWindowAlignment, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.ErrorTemplate
    {
        KnownPropertyIndex::TextBox_ErrorTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.HasValidationErrors
    {
        KnownPropertyIndex::TextBox_HasValidationErrors, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.Header
    {
        KnownPropertyIndex::TextBox_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.HeaderPlacement
    {
        KnownPropertyIndex::TextBox_HeaderPlacement, // Index name
        KnownTypeIndex::ControlHeaderPlacement, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.HeaderTemplate
    {
        KnownPropertyIndex::TextBox_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.HorizontalTextAlignment
    {
        KnownPropertyIndex::TextBox_HorizontalTextAlignment, // Index name
        KnownTypeIndex::TextAlignment, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.InputScope
    {
        KnownPropertyIndex::TextBox_InputScope, // Index name
        KnownTypeIndex::InputScope, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.InputValidationKind
    {
        KnownPropertyIndex::TextBox_InputValidationKind, // Index name
        KnownTypeIndex::InputValidationKind, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.InputValidationMode
    {
        KnownPropertyIndex::TextBox_InputValidationMode, // Index name
        KnownTypeIndex::InputValidationMode, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.IsColorFontEnabled
    {
        KnownPropertyIndex::TextBox_IsColorFontEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.IsCoreDesktopPopupMenuEnabled
    {
        KnownPropertyIndex::TextBox_IsCoreDesktopPopupMenuEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.IsReadOnly
    {
        KnownPropertyIndex::TextBox_IsReadOnly, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.IsSpellCheckEnabled
    {
        KnownPropertyIndex::TextBox_IsSpellCheckEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.IsTelemetryCollectionEnabled
    {
        KnownPropertyIndex::TextBox_IsTelemetryCollectionEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.IsTextPredictionEnabled
    {
        KnownPropertyIndex::TextBox_IsTextPredictionEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.MaxLength
    {
        KnownPropertyIndex::TextBox_MaxLength, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.PlaceholderForeground
    {
        KnownPropertyIndex::TextBox_PlaceholderForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.PlaceholderText
    {
        KnownPropertyIndex::TextBox_PlaceholderText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.PreventEditFocusLoss
    {
        KnownPropertyIndex::TextBox_PreventEditFocusLoss, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        MetaDataPropertyInfoFlags::None, // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.PreventKeyboardDisplayOnProgrammaticFocus
    {
        KnownPropertyIndex::TextBox_PreventKeyboardDisplayOnProgrammaticFocus, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.ProofingMenuFlyout
    {
        KnownPropertyIndex::TextBox_ProofingMenuFlyout, // Index name
        KnownTypeIndex::FlyoutBase, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectedText
    {
        KnownPropertyIndex::TextBox_SelectedText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionFlyout
    {
        KnownPropertyIndex::TextBox_SelectionFlyout, // Index name
        KnownTypeIndex::FlyoutBase, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColor
    {
        KnownPropertyIndex::TextBox_SelectionHighlightColor, // Index name
        KnownTypeIndex::SolidColorBrush, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColorWhenNotFocused
    {
        KnownPropertyIndex::TextBox_SelectionHighlightColorWhenNotFocused, // Index name
        KnownTypeIndex::SolidColorBrush, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionLength
    {
        KnownPropertyIndex::TextBox_SelectionLength, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionStart
    {
        KnownPropertyIndex::TextBox_SelectionStart, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.Text
    {
        KnownPropertyIndex::TextBox_Text, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.TextAlignment
    {
        KnownPropertyIndex::TextBox_TextAlignment, // Index name
        KnownTypeIndex::TextAlignment, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.TextReadingOrder
    {
        KnownPropertyIndex::TextBox_TextReadingOrder, // Index name
        KnownTypeIndex::TextReadingOrder, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.TextWrapping
    {
        KnownPropertyIndex::TextBox_TextWrapping, // Index name
        KnownTypeIndex::TextWrapping, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.ValidationCommand
    {
        KnownPropertyIndex::TextBox_ValidationCommand, // Index name
        KnownTypeIndex::InputValidationCommand, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.ValidationContext
    {
        KnownPropertyIndex::TextBox_ValidationContext, // Index name
        KnownTypeIndex::InputValidationContext, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TextBox.ValidationErrors
    {
        KnownPropertyIndex::TextBox_ValidationErrors, // Index name
        KnownTypeIndex::ValidationErrorsCollection, // Property type
        KnownTypeIndex::TextBox, // Declaring type
        KnownTypeIndex::TextBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Thumb.IsDragging
    {
        KnownPropertyIndex::Thumb_IsDragging, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Thumb, // Declaring type
        KnownTypeIndex::Thumb, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.TickBar.Fill
    {
        KnownPropertyIndex::TickBar_Fill, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::TickBar, // Declaring type
        KnownTypeIndex::TickBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.ClockIdentifier
    {
        KnownPropertyIndex::TimePicker_ClockIdentifier, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::TimePicker, // Declaring type
        KnownTypeIndex::TimePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.Header
    {
        KnownPropertyIndex::TimePicker_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::TimePicker, // Declaring type
        KnownTypeIndex::TimePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.HeaderPlacement
    {
        KnownPropertyIndex::TimePicker_HeaderPlacement, // Index name
        KnownTypeIndex::ControlHeaderPlacement, // Property type
        KnownTypeIndex::TimePicker, // Declaring type
        KnownTypeIndex::TimePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.HeaderTemplate
    {
        KnownPropertyIndex::TimePicker_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::TimePicker, // Declaring type
        KnownTypeIndex::TimePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.LightDismissOverlayMode
    {
        KnownPropertyIndex::TimePicker_LightDismissOverlayMode, // Index name
        KnownTypeIndex::LightDismissOverlayMode, // Property type
        KnownTypeIndex::TimePicker, // Declaring type
        KnownTypeIndex::TimePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.MinuteIncrement
    {
        KnownPropertyIndex::TimePicker_MinuteIncrement, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::TimePicker, // Declaring type
        KnownTypeIndex::TimePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.SelectedTime
    {
        KnownPropertyIndex::TimePicker_SelectedTime, // Index name
        KnownTypeIndex::TimeSpan, // Property type
        KnownTypeIndex::TimePicker, // Declaring type
        KnownTypeIndex::TimePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.Time
    {
        KnownPropertyIndex::TimePicker_Time, // Index name
        KnownTypeIndex::TimeSpan, // Property type
        KnownTypeIndex::TimePicker, // Declaring type
        KnownTypeIndex::TimePicker, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.Header
    {
        KnownPropertyIndex::ToggleSwitch_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ToggleSwitch, // Declaring type
        KnownTypeIndex::ToggleSwitch, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.HeaderPlacement
    {
        KnownPropertyIndex::ToggleSwitch_HeaderPlacement, // Index name
        KnownTypeIndex::ControlHeaderPlacement, // Property type
        KnownTypeIndex::ToggleSwitch, // Declaring type
        KnownTypeIndex::ToggleSwitch, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.HeaderTemplate
    {
        KnownPropertyIndex::ToggleSwitch_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ToggleSwitch, // Declaring type
        KnownTypeIndex::ToggleSwitch, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.IsOn
    {
        KnownPropertyIndex::ToggleSwitch_IsOn, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ToggleSwitch, // Declaring type
        KnownTypeIndex::ToggleSwitch, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.OffContent
    {
        KnownPropertyIndex::ToggleSwitch_OffContent, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ToggleSwitch, // Declaring type
        KnownTypeIndex::ToggleSwitch, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.OffContentTemplate
    {
        KnownPropertyIndex::ToggleSwitch_OffContentTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ToggleSwitch, // Declaring type
        KnownTypeIndex::ToggleSwitch, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.OnContent
    {
        KnownPropertyIndex::ToggleSwitch_OnContent, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ToggleSwitch, // Declaring type
        KnownTypeIndex::ToggleSwitch, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.OnContentTemplate
    {
        KnownPropertyIndex::ToggleSwitch_OnContentTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ToggleSwitch, // Declaring type
        KnownTypeIndex::ToggleSwitch, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.TemplateSettings
    {
        KnownPropertyIndex::ToggleSwitch_TemplateSettings, // Index name
        KnownTypeIndex::ToggleSwitchTemplateSettings, // Property type
        KnownTypeIndex::ToggleSwitch, // Declaring type
        KnownTypeIndex::ToggleSwitch, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.UserControl.Content
    {
        KnownPropertyIndex::UserControl_Content, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::UserControl, // Declaring type
        KnownTypeIndex::UserControl, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.ColumnSpan
    {
        KnownPropertyIndex::VariableSizedWrapGrid_ColumnSpan, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::VariableSizedWrapGrid, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.HorizontalChildrenAlignment
    {
        KnownPropertyIndex::VariableSizedWrapGrid_HorizontalChildrenAlignment, // Index name
        KnownTypeIndex::HorizontalAlignment, // Property type
        KnownTypeIndex::VariableSizedWrapGrid, // Declaring type
        KnownTypeIndex::VariableSizedWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.ItemHeight
    {
        KnownPropertyIndex::VariableSizedWrapGrid_ItemHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::VariableSizedWrapGrid, // Declaring type
        KnownTypeIndex::VariableSizedWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.ItemWidth
    {
        KnownPropertyIndex::VariableSizedWrapGrid_ItemWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::VariableSizedWrapGrid, // Declaring type
        KnownTypeIndex::VariableSizedWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.MaximumRowsOrColumns
    {
        KnownPropertyIndex::VariableSizedWrapGrid_MaximumRowsOrColumns, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::VariableSizedWrapGrid, // Declaring type
        KnownTypeIndex::VariableSizedWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.Orientation
    {
        KnownPropertyIndex::VariableSizedWrapGrid_Orientation, // Index name
        KnownTypeIndex::Orientation, // Property type
        KnownTypeIndex::VariableSizedWrapGrid, // Declaring type
        KnownTypeIndex::VariableSizedWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.RowSpan
    {
        KnownPropertyIndex::VariableSizedWrapGrid_RowSpan, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::VariableSizedWrapGrid, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.VerticalChildrenAlignment
    {
        KnownPropertyIndex::VariableSizedWrapGrid_VerticalChildrenAlignment, // Index name
        KnownTypeIndex::VerticalAlignment, // Property type
        KnownTypeIndex::VariableSizedWrapGrid, // Declaring type
        KnownTypeIndex::VariableSizedWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBar.ClosedDisplayMode
    {
        KnownPropertyIndex::AppBar_ClosedDisplayMode, // Index name
        KnownTypeIndex::AppBarClosedDisplayMode, // Property type
        KnownTypeIndex::AppBar, // Declaring type
        KnownTypeIndex::AppBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBar.IsOpen
    {
        KnownPropertyIndex::AppBar_IsOpen, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBar, // Declaring type
        KnownTypeIndex::AppBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBar.IsSticky
    {
        KnownPropertyIndex::AppBar_IsSticky, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBar, // Declaring type
        KnownTypeIndex::AppBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBar.LightDismissOverlayMode
    {
        KnownPropertyIndex::AppBar_LightDismissOverlayMode, // Index name
        KnownTypeIndex::LightDismissOverlayMode, // Property type
        KnownTypeIndex::AppBar, // Declaring type
        KnownTypeIndex::AppBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBar.TemplateSettings
    {
        KnownPropertyIndex::AppBar_TemplateSettings, // Index name
        KnownTypeIndex::AppBarTemplateSettings, // Property type
        KnownTypeIndex::AppBar, // Declaring type
        KnownTypeIndex::AppBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarElementContainer.DynamicOverflowOrder
    {
        KnownPropertyIndex::AppBarElementContainer_DynamicOverflowOrder, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::AppBarElementContainer, // Declaring type
        KnownTypeIndex::AppBarElementContainer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarElementContainer.IsCompact
    {
        KnownPropertyIndex::AppBarElementContainer_IsCompact, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBarElementContainer, // Declaring type
        KnownTypeIndex::AppBarElementContainer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarElementContainer.IsInOverflow
    {
        KnownPropertyIndex::AppBarElementContainer_IsInOverflow, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBarElementContainer, // Declaring type
        KnownTypeIndex::AppBarElementContainer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarElementContainer.UseOverflowStyle
    {
        KnownPropertyIndex::AppBarElementContainer_UseOverflowStyle, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBarElementContainer, // Declaring type
        KnownTypeIndex::AppBarElementContainer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.AutoMaximizeSuggestionArea
    {
        KnownPropertyIndex::AutoSuggestBox_AutoMaximizeSuggestionArea, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.Description
    {
        KnownPropertyIndex::AutoSuggestBox_Description, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.ErrorTemplate
    {
        KnownPropertyIndex::AutoSuggestBox_ErrorTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.HasValidationErrors
    {
        KnownPropertyIndex::AutoSuggestBox_HasValidationErrors, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.Header
    {
        KnownPropertyIndex::AutoSuggestBox_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.HeaderPlacement
    {
        KnownPropertyIndex::AutoSuggestBox_HeaderPlacement, // Index name
        KnownTypeIndex::ControlHeaderPlacement, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.InputValidationKind
    {
        KnownPropertyIndex::AutoSuggestBox_InputValidationKind, // Index name
        KnownTypeIndex::InputValidationKind, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.InputValidationMode
    {
        KnownPropertyIndex::AutoSuggestBox_InputValidationMode, // Index name
        KnownTypeIndex::InputValidationMode, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.IsSuggestionListOpen
    {
        KnownPropertyIndex::AutoSuggestBox_IsSuggestionListOpen, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.LightDismissOverlayMode
    {
        KnownPropertyIndex::AutoSuggestBox_LightDismissOverlayMode, // Index name
        KnownTypeIndex::LightDismissOverlayMode, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.MaxSuggestionListHeight
    {
        KnownPropertyIndex::AutoSuggestBox_MaxSuggestionListHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.PlaceholderText
    {
        KnownPropertyIndex::AutoSuggestBox_PlaceholderText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.QueryIcon
    {
        KnownPropertyIndex::AutoSuggestBox_QueryIcon, // Index name
        KnownTypeIndex::IconElement, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.Text
    {
        KnownPropertyIndex::AutoSuggestBox_Text, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.TextBoxStyle
    {
        KnownPropertyIndex::AutoSuggestBox_TextBoxStyle, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.TextMemberPath
    {
        KnownPropertyIndex::AutoSuggestBox_TextMemberPath, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.UpdateTextOnSelect
    {
        KnownPropertyIndex::AutoSuggestBox_UpdateTextOnSelect, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.ValidationCommand
    {
        KnownPropertyIndex::AutoSuggestBox_ValidationCommand, // Index name
        KnownTypeIndex::InputValidationCommand, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.ValidationContext
    {
        KnownPropertyIndex::AutoSuggestBox_ValidationContext, // Index name
        KnownTypeIndex::InputValidationContext, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.ValidationErrors
    {
        KnownPropertyIndex::AutoSuggestBox_ValidationErrors, // Index name
        KnownTypeIndex::ValidationErrorsCollection, // Property type
        KnownTypeIndex::AutoSuggestBox, // Declaring type
        KnownTypeIndex::AutoSuggestBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.BlockCollection.ContentProperty
    {
        KnownPropertyIndex::BlockCollection_ContentProperty, // Index name
        KnownTypeIndex::Block, // Property type
        KnownTypeIndex::BlockCollection, // Declaring type
        KnownTypeIndex::BlockCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.ClickMode
    {
        KnownPropertyIndex::ButtonBase_ClickMode, // Index name
        KnownTypeIndex::ClickMode, // Property type
        KnownTypeIndex::ButtonBase, // Declaring type
        KnownTypeIndex::ButtonBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.Command
    {
        KnownPropertyIndex::ButtonBase_Command, // Index name
        KnownTypeIndex::ICommand, // Property type
        KnownTypeIndex::ButtonBase, // Declaring type
        KnownTypeIndex::ButtonBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.CommandParameter
    {
        KnownPropertyIndex::ButtonBase_CommandParameter, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ButtonBase, // Declaring type
        KnownTypeIndex::ButtonBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.IsPointerOver
    {
        KnownPropertyIndex::ButtonBase_IsPointerOver, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ButtonBase, // Declaring type
        KnownTypeIndex::ButtonBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.IsPressed
    {
        KnownPropertyIndex::ButtonBase_IsPressed, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ButtonBase, // Declaring type
        KnownTypeIndex::ButtonBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.CacheLength
    {
        KnownPropertyIndex::CalendarPanel_CacheLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CalendarPanel, // Declaring type
        KnownTypeIndex::CalendarPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.Cols
    {
        KnownPropertyIndex::CalendarPanel_Cols, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::CalendarPanel, // Declaring type
        KnownTypeIndex::CalendarPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.ItemMinHeight
    {
        KnownPropertyIndex::CalendarPanel_ItemMinHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CalendarPanel, // Declaring type
        KnownTypeIndex::CalendarPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.ItemMinWidth
    {
        KnownPropertyIndex::CalendarPanel_ItemMinWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::CalendarPanel, // Declaring type
        KnownTypeIndex::CalendarPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.Orientation
    {
        KnownPropertyIndex::CalendarPanel_Orientation, // Index name
        KnownTypeIndex::Orientation, // Property type
        KnownTypeIndex::CalendarPanel, // Declaring type
        KnownTypeIndex::CalendarPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.Rows
    {
        KnownPropertyIndex::CalendarPanel_Rows, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::CalendarPanel, // Declaring type
        KnownTypeIndex::CalendarPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.StartIndex
    {
        KnownPropertyIndex::CalendarPanel_StartIndex, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::CalendarPanel, // Declaring type
        KnownTypeIndex::CalendarPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDayItem.Date
    {
        KnownPropertyIndex::CalendarViewDayItem_Date, // Index name
        KnownTypeIndex::DateTime, // Property type
        KnownTypeIndex::CalendarViewDayItem, // Declaring type
        KnownTypeIndex::CalendarViewDayItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDayItem.IsBlackout
    {
        KnownPropertyIndex::CalendarViewDayItem_IsBlackout, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::CalendarViewDayItem, // Declaring type
        KnownTypeIndex::CalendarViewDayItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewItem.Date
    {
        KnownPropertyIndex::CalendarViewItem_Date, // Index name
        KnownTypeIndex::DateTime, // Property type
        KnownTypeIndex::CalendarViewItem, // Declaring type
        KnownTypeIndex::CalendarViewItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonCommand
    {
        KnownPropertyIndex::ContentDialog_CloseButtonCommand, // Index name
        KnownTypeIndex::ICommand, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonCommandParameter
    {
        KnownPropertyIndex::ContentDialog_CloseButtonCommandParameter, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonStyle
    {
        KnownPropertyIndex::ContentDialog_CloseButtonStyle, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonText
    {
        KnownPropertyIndex::ContentDialog_CloseButtonText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.DefaultButton
    {
        KnownPropertyIndex::ContentDialog_DefaultButton, // Index name
        KnownTypeIndex::ContentDialogButton, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.FullSizeDesired
    {
        KnownPropertyIndex::ContentDialog_FullSizeDesired, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.IsPrimaryButtonEnabled
    {
        KnownPropertyIndex::ContentDialog_IsPrimaryButtonEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.IsSecondaryButtonEnabled
    {
        KnownPropertyIndex::ContentDialog_IsSecondaryButtonEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonCommand
    {
        KnownPropertyIndex::ContentDialog_PrimaryButtonCommand, // Index name
        KnownTypeIndex::ICommand, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonCommandParameter
    {
        KnownPropertyIndex::ContentDialog_PrimaryButtonCommandParameter, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonStyle
    {
        KnownPropertyIndex::ContentDialog_PrimaryButtonStyle, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonText
    {
        KnownPropertyIndex::ContentDialog_PrimaryButtonText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonCommand
    {
        KnownPropertyIndex::ContentDialog_SecondaryButtonCommand, // Index name
        KnownTypeIndex::ICommand, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonCommandParameter
    {
        KnownPropertyIndex::ContentDialog_SecondaryButtonCommandParameter, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonStyle
    {
        KnownPropertyIndex::ContentDialog_SecondaryButtonStyle, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonText
    {
        KnownPropertyIndex::ContentDialog_SecondaryButtonText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.Title
    {
        KnownPropertyIndex::ContentDialog_Title, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.TitleTemplate
    {
        KnownPropertyIndex::ContentDialog_TitleTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ContentDialog, // Declaring type
        KnownTypeIndex::ContentDialog, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FlyoutPresenter.IsDefaultShadowEnabled
    {
        KnownPropertyIndex::FlyoutPresenter_IsDefaultShadowEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FlyoutPresenter, // Declaring type
        KnownTypeIndex::FlyoutPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Frame.BackStack
    {
        KnownPropertyIndex::Frame_BackStack, // Index name
        KnownTypeIndex::IVectorOfPageStackEntry, // Property type
        KnownTypeIndex::Frame, // Declaring type
        KnownTypeIndex::Frame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Frame.BackStackDepth
    {
        KnownPropertyIndex::Frame_BackStackDepth, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Frame, // Declaring type
        KnownTypeIndex::Frame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Frame.CacheSize
    {
        KnownPropertyIndex::Frame_CacheSize, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Frame, // Declaring type
        KnownTypeIndex::Frame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Frame.CanGoBack
    {
        KnownPropertyIndex::Frame_CanGoBack, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Frame, // Declaring type
        KnownTypeIndex::Frame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Frame.CanGoForward
    {
        KnownPropertyIndex::Frame_CanGoForward, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Frame, // Declaring type
        KnownTypeIndex::Frame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Frame.CurrentSourcePageType
    {
        KnownPropertyIndex::Frame_CurrentSourcePageType, // Index name
        KnownTypeIndex::TypeName, // Property type
        KnownTypeIndex::Frame, // Declaring type
        KnownTypeIndex::Frame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Frame.ForwardStack
    {
        KnownPropertyIndex::Frame_ForwardStack, // Index name
        KnownTypeIndex::IVectorOfPageStackEntry, // Property type
        KnownTypeIndex::Frame, // Declaring type
        KnownTypeIndex::Frame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Frame.IsNavigationStackEnabled
    {
        KnownPropertyIndex::Frame_IsNavigationStackEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Frame, // Declaring type
        KnownTypeIndex::Frame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Frame.SourcePageType
    {
        KnownPropertyIndex::Frame_SourcePageType, // Index name
        KnownTypeIndex::TypeName, // Property type
        KnownTypeIndex::Frame, // Declaring type
        KnownTypeIndex::Frame, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckBrush
    {
        KnownPropertyIndex::GridViewItemPresenter_CheckBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckHintBrush
    {
        KnownPropertyIndex::GridViewItemPresenter_CheckHintBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckSelectingBrush
    {
        KnownPropertyIndex::GridViewItemPresenter_CheckSelectingBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.ContentMargin
    {
        KnownPropertyIndex::GridViewItemPresenter_ContentMargin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DisabledOpacity
    {
        KnownPropertyIndex::GridViewItemPresenter_DisabledOpacity, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragBackground
    {
        KnownPropertyIndex::GridViewItemPresenter_DragBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragForeground
    {
        KnownPropertyIndex::GridViewItemPresenter_DragForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragOpacity
    {
        KnownPropertyIndex::GridViewItemPresenter_DragOpacity, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.FocusBorderBrush
    {
        KnownPropertyIndex::GridViewItemPresenter_FocusBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterHorizontalContentAlignment
    {
        KnownPropertyIndex::GridViewItemPresenter_GridViewItemPresenterHorizontalContentAlignment, // Index name
        KnownTypeIndex::HorizontalAlignment, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterPadding
    {
        KnownPropertyIndex::GridViewItemPresenter_GridViewItemPresenterPadding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterVerticalContentAlignment
    {
        KnownPropertyIndex::GridViewItemPresenter_GridViewItemPresenterVerticalContentAlignment, // Index name
        KnownTypeIndex::VerticalAlignment, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PlaceholderBackground
    {
        KnownPropertyIndex::GridViewItemPresenter_PlaceholderBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackground
    {
        KnownPropertyIndex::GridViewItemPresenter_PointerOverBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackgroundMargin
    {
        KnownPropertyIndex::GridViewItemPresenter_PointerOverBackgroundMargin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.ReorderHintOffset
    {
        KnownPropertyIndex::GridViewItemPresenter_ReorderHintOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBackground
    {
        KnownPropertyIndex::GridViewItemPresenter_SelectedBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBorderThickness
    {
        KnownPropertyIndex::GridViewItemPresenter_SelectedBorderThickness, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedForeground
    {
        KnownPropertyIndex::GridViewItemPresenter_SelectedForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBackground
    {
        KnownPropertyIndex::GridViewItemPresenter_SelectedPointerOverBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBorderBrush
    {
        KnownPropertyIndex::GridViewItemPresenter_SelectedPointerOverBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectionCheckMarkVisualEnabled
    {
        KnownPropertyIndex::GridViewItemPresenter_SelectionCheckMarkVisualEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::GridViewItemPresenter, // Declaring type
        KnownTypeIndex::GridViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Documents.InlineCollection.ContentProperty
    {
        KnownPropertyIndex::InlineCollection_ContentProperty, // Index name
        KnownTypeIndex::Inline, // Property type
        KnownTypeIndex::InlineCollection, // Declaring type
        KnownTypeIndex::InlineCollection, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel.AreStickyGroupHeadersEnabled
    {
        KnownPropertyIndex::ItemsStackPanel_AreStickyGroupHeadersEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ItemsStackPanel, // Declaring type
        KnownTypeIndex::ItemsStackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel.CacheLength
    {
        KnownPropertyIndex::ItemsStackPanel_CacheLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ItemsStackPanel, // Declaring type
        KnownTypeIndex::ItemsStackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel.GroupHeaderPlacement
    {
        KnownPropertyIndex::ItemsStackPanel_GroupHeaderPlacement, // Index name
        KnownTypeIndex::GroupHeaderPlacement, // Property type
        KnownTypeIndex::ItemsStackPanel, // Declaring type
        KnownTypeIndex::ItemsStackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel.GroupPadding
    {
        KnownPropertyIndex::ItemsStackPanel_GroupPadding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::ItemsStackPanel, // Declaring type
        KnownTypeIndex::ItemsStackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel.ItemsUpdatingScrollMode
    {
        KnownPropertyIndex::ItemsStackPanel_ItemsUpdatingScrollMode, // Index name
        KnownTypeIndex::ItemsUpdatingScrollMode, // Property type
        KnownTypeIndex::ItemsStackPanel, // Declaring type
        KnownTypeIndex::ItemsStackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel.Orientation
    {
        KnownPropertyIndex::ItemsStackPanel_Orientation, // Index name
        KnownTypeIndex::Orientation, // Property type
        KnownTypeIndex::ItemsStackPanel, // Declaring type
        KnownTypeIndex::ItemsStackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.AreStickyGroupHeadersEnabled
    {
        KnownPropertyIndex::ItemsWrapGrid_AreStickyGroupHeadersEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ItemsWrapGrid, // Declaring type
        KnownTypeIndex::ItemsWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.CacheLength
    {
        KnownPropertyIndex::ItemsWrapGrid_CacheLength, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ItemsWrapGrid, // Declaring type
        KnownTypeIndex::ItemsWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.GroupHeaderPlacement
    {
        KnownPropertyIndex::ItemsWrapGrid_GroupHeaderPlacement, // Index name
        KnownTypeIndex::GroupHeaderPlacement, // Property type
        KnownTypeIndex::ItemsWrapGrid, // Declaring type
        KnownTypeIndex::ItemsWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.GroupPadding
    {
        KnownPropertyIndex::ItemsWrapGrid_GroupPadding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::ItemsWrapGrid, // Declaring type
        KnownTypeIndex::ItemsWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.ItemHeight
    {
        KnownPropertyIndex::ItemsWrapGrid_ItemHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ItemsWrapGrid, // Declaring type
        KnownTypeIndex::ItemsWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.ItemWidth
    {
        KnownPropertyIndex::ItemsWrapGrid_ItemWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ItemsWrapGrid, // Declaring type
        KnownTypeIndex::ItemsWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.MaximumRowsOrColumns
    {
        KnownPropertyIndex::ItemsWrapGrid_MaximumRowsOrColumns, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::ItemsWrapGrid, // Declaring type
        KnownTypeIndex::ItemsWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.Orientation
    {
        KnownPropertyIndex::ItemsWrapGrid_Orientation, // Index name
        KnownTypeIndex::Orientation, // Property type
        KnownTypeIndex::ItemsWrapGrid, // Declaring type
        KnownTypeIndex::ItemsWrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBorderBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxCornerRadius
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxCornerRadius, // Index name
        KnownTypeIndex::CornerRadius, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBorderBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxDisabledBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxDisabledBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBorderBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPointerOverBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPointerOverBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBorderBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPressedBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPressedBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedDisabledBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedDisabledBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPointerOverBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedPointerOverBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPressedBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedPressedBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckDisabledBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckDisabledBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckHintBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckHintBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckMode
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckMode, // Index name
        KnownTypeIndex::ListViewItemPresenterCheckMode, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckPressedBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckPressedBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckSelectingBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_CheckSelectingBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ContentMargin
    {
        KnownPropertyIndex::ListViewItemPresenter_ContentMargin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DisabledOpacity
    {
        KnownPropertyIndex::ListViewItemPresenter_DisabledOpacity, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragBackground
    {
        KnownPropertyIndex::ListViewItemPresenter_DragBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragForeground
    {
        KnownPropertyIndex::ListViewItemPresenter_DragForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragOpacity
    {
        KnownPropertyIndex::ListViewItemPresenter_DragOpacity, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusBorderBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_FocusBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusSecondaryBorderBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_FocusSecondaryBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterHorizontalContentAlignment
    {
        KnownPropertyIndex::ListViewItemPresenter_ListViewItemPresenterHorizontalContentAlignment, // Index name
        KnownTypeIndex::HorizontalAlignment, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterPadding
    {
        KnownPropertyIndex::ListViewItemPresenter_ListViewItemPresenterPadding, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterVerticalContentAlignment
    {
        KnownPropertyIndex::ListViewItemPresenter_ListViewItemPresenterVerticalContentAlignment, // Index name
        KnownTypeIndex::VerticalAlignment, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PlaceholderBackground
    {
        KnownPropertyIndex::ListViewItemPresenter_PlaceholderBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackground
    {
        KnownPropertyIndex::ListViewItemPresenter_PointerOverBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackgroundMargin
    {
        KnownPropertyIndex::ListViewItemPresenter_PointerOverBackgroundMargin, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBorderBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_PointerOverBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverForeground
    {
        KnownPropertyIndex::ListViewItemPresenter_PointerOverForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PressedBackground
    {
        KnownPropertyIndex::ListViewItemPresenter_PressedBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ReorderHintOffset
    {
        KnownPropertyIndex::ListViewItemPresenter_ReorderHintOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::StoreDoubleAsFloat)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBackground
    {
        KnownPropertyIndex::ListViewItemPresenter_RevealBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBackgroundShowsAboveContent
    {
        KnownPropertyIndex::ListViewItemPresenter_RevealBackgroundShowsAboveContent, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBorderBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_RevealBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBorderThickness
    {
        KnownPropertyIndex::ListViewItemPresenter_RevealBorderThickness, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBackground
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectedBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectedBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderThickness
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectedBorderThickness, // Index name
        KnownTypeIndex::Thickness, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBackground
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectedDisabledBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBorderBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectedDisabledBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedForeground
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectedForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedInnerBorderBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectedInnerBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBackground
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectedPointerOverBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBorderBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectedPointerOverBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBackground
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectedPressedBackground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBorderBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectedPressedBorderBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionCheckMarkVisualEnabled
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectionCheckMarkVisualEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorCornerRadius
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorCornerRadius, // Index name
        KnownTypeIndex::CornerRadius, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorDisabledBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorDisabledBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorMode
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorMode, // Index name
        KnownTypeIndex::ListViewItemPresenterSelectionIndicatorMode, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectArrange) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPointerOverBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorPointerOverBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPressedBrush
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorPressedBrush, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorVisualEnabled
    {
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorVisualEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListViewItemPresenter, // Declaring type
        KnownTypeIndex::ListViewItemPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::AffectMeasure) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.Command
    {
        KnownPropertyIndex::MenuFlyoutItem_Command, // Index name
        KnownTypeIndex::ICommand, // Property type
        KnownTypeIndex::MenuFlyoutItem, // Declaring type
        KnownTypeIndex::MenuFlyoutItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.CommandParameter
    {
        KnownPropertyIndex::MenuFlyoutItem_CommandParameter, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::MenuFlyoutItem, // Declaring type
        KnownTypeIndex::MenuFlyoutItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.Icon
    {
        KnownPropertyIndex::MenuFlyoutItem_Icon, // Index name
        KnownTypeIndex::IconElement, // Property type
        KnownTypeIndex::MenuFlyoutItem, // Declaring type
        KnownTypeIndex::MenuFlyoutItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.KeyboardAcceleratorTextOverride
    {
        KnownPropertyIndex::MenuFlyoutItem_KeyboardAcceleratorTextOverride, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::MenuFlyoutItem, // Declaring type
        KnownTypeIndex::MenuFlyoutItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.PreventDismissOnPointer
    {
        KnownPropertyIndex::MenuFlyoutItem_PreventDismissOnPointer, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MenuFlyoutItem, // Declaring type
        KnownTypeIndex::MenuFlyoutItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.TemplateSettings
    {
        KnownPropertyIndex::MenuFlyoutItem_TemplateSettings, // Index name
        KnownTypeIndex::MenuFlyoutItemTemplateSettings, // Property type
        KnownTypeIndex::MenuFlyoutItem, // Declaring type
        KnownTypeIndex::MenuFlyoutItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.Text
    {
        KnownPropertyIndex::MenuFlyoutItem_Text, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::MenuFlyoutItem, // Declaring type
        KnownTypeIndex::MenuFlyoutItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter.IsDefaultShadowEnabled
    {
        KnownPropertyIndex::MenuFlyoutPresenter_IsDefaultShadowEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::MenuFlyoutPresenter, // Declaring type
        KnownTypeIndex::MenuFlyoutPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter.SystemBackdrop
    {
        KnownPropertyIndex::MenuFlyoutPresenter_SystemBackdrop, // Index name
        KnownTypeIndex::SystemBackdrop, // Property type
        KnownTypeIndex::MenuFlyoutPresenter, // Declaring type
        KnownTypeIndex::MenuFlyoutPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::RequiresMultipleAssociationCheck) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter.TemplateSettings
    {
        KnownPropertyIndex::MenuFlyoutPresenter_TemplateSettings, // Index name
        KnownTypeIndex::MenuFlyoutPresenterTemplateSettings, // Property type
        KnownTypeIndex::MenuFlyoutPresenter, // Declaring type
        KnownTypeIndex::MenuFlyoutPresenter, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem.Icon
    {
        KnownPropertyIndex::MenuFlyoutSubItem_Icon, // Index name
        KnownTypeIndex::IconElement, // Property type
        KnownTypeIndex::MenuFlyoutSubItem, // Declaring type
        KnownTypeIndex::MenuFlyoutSubItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem.Items
    {
        KnownPropertyIndex::MenuFlyoutSubItem_Items, // Index name
        KnownTypeIndex::MenuFlyoutItemBaseCollection, // Property type
        KnownTypeIndex::MenuFlyoutSubItem, // Declaring type
        KnownTypeIndex::MenuFlyoutSubItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem.Text
    {
        KnownPropertyIndex::MenuFlyoutSubItem_Text, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::MenuFlyoutSubItem, // Declaring type
        KnownTypeIndex::MenuFlyoutSubItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.IsContainerGeneratedForInsert
    {
        KnownPropertyIndex::OrientedVirtualizingPanel_IsContainerGeneratedForInsert, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::OrientedVirtualizingPanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Page.BottomAppBar
    {
        KnownPropertyIndex::Page_BottomAppBar, // Index name
        KnownTypeIndex::AppBar, // Property type
        KnownTypeIndex::Page, // Declaring type
        KnownTypeIndex::Page, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Page.Frame
    {
        KnownPropertyIndex::Page_Frame, // Index name
        KnownTypeIndex::Frame, // Property type
        KnownTypeIndex::Page, // Declaring type
        KnownTypeIndex::Page, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Page.NavigationCacheMode
    {
        KnownPropertyIndex::Page_NavigationCacheMode, // Index name
        KnownTypeIndex::NavigationCacheMode, // Property type
        KnownTypeIndex::Page, // Declaring type
        KnownTypeIndex::Page, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Page.TopAppBar
    {
        KnownPropertyIndex::Page_TopAppBar, // Index name
        KnownTypeIndex::AppBar, // Property type
        KnownTypeIndex::Page, // Declaring type
        KnownTypeIndex::Page, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.IndicatorMode
    {
        KnownPropertyIndex::ScrollBar_IndicatorMode, // Index name
        KnownTypeIndex::ScrollingIndicatorMode, // Property type
        KnownTypeIndex::ScrollBar, // Declaring type
        KnownTypeIndex::ScrollBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.Orientation
    {
        KnownPropertyIndex::ScrollBar_Orientation, // Index name
        KnownTypeIndex::Orientation, // Property type
        KnownTypeIndex::ScrollBar, // Declaring type
        KnownTypeIndex::ScrollBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.ViewportSize
    {
        KnownPropertyIndex::ScrollBar_ViewportSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollBar, // Declaring type
        KnownTypeIndex::ScrollBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector.IsSelectionActive
    {
        KnownPropertyIndex::Selector_IsSelectionActive, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Selector, // Declaring type
        KnownTypeIndex::Selector, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem
    {
        KnownPropertyIndex::Selector_IsSynchronizedWithCurrentItem, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Selector, // Declaring type
        KnownTypeIndex::Selector, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedIndex
    {
        KnownPropertyIndex::Selector_SelectedIndex, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::Selector, // Declaring type
        KnownTypeIndex::Selector, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItem
    {
        KnownPropertyIndex::Selector_SelectedItem, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::Selector, // Declaring type
        KnownTypeIndex::Selector, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValue
    {
        KnownPropertyIndex::Selector_SelectedValue, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::Selector, // Declaring type
        KnownTypeIndex::Selector, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValuePath
    {
        KnownPropertyIndex::Selector_SelectedValuePath, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::Selector, // Declaring type
        KnownTypeIndex::Selector, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SelectorItem.IsSelected
    {
        KnownPropertyIndex::SelectorItem_IsSelected, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::SelectorItem, // Declaring type
        KnownTypeIndex::SelectorItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Slider.Header
    {
        KnownPropertyIndex::Slider_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::Slider, // Declaring type
        KnownTypeIndex::Slider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Slider.HeaderPlacement
    {
        KnownPropertyIndex::Slider_HeaderPlacement, // Index name
        KnownTypeIndex::ControlHeaderPlacement, // Property type
        KnownTypeIndex::Slider, // Declaring type
        KnownTypeIndex::Slider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Slider.HeaderTemplate
    {
        KnownPropertyIndex::Slider_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::Slider, // Declaring type
        KnownTypeIndex::Slider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Slider.IntermediateValue
    {
        KnownPropertyIndex::Slider_IntermediateValue, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Slider, // Declaring type
        KnownTypeIndex::Slider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Slider.IsDirectionReversed
    {
        KnownPropertyIndex::Slider_IsDirectionReversed, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Slider, // Declaring type
        KnownTypeIndex::Slider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Slider.IsThumbToolTipEnabled
    {
        KnownPropertyIndex::Slider_IsThumbToolTipEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::Slider, // Declaring type
        KnownTypeIndex::Slider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Slider.Orientation
    {
        KnownPropertyIndex::Slider_Orientation, // Index name
        KnownTypeIndex::Orientation, // Property type
        KnownTypeIndex::Slider, // Declaring type
        KnownTypeIndex::Slider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Slider.SnapsTo
    {
        KnownPropertyIndex::Slider_SnapsTo, // Index name
        KnownTypeIndex::SliderSnapsTo, // Property type
        KnownTypeIndex::Slider, // Declaring type
        KnownTypeIndex::Slider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Slider.StepFrequency
    {
        KnownPropertyIndex::Slider_StepFrequency, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Slider, // Declaring type
        KnownTypeIndex::Slider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Slider.ThumbToolTipValueConverter
    {
        KnownPropertyIndex::Slider_ThumbToolTipValueConverter, // Index name
        KnownTypeIndex::IValueConverter, // Property type
        KnownTypeIndex::Slider, // Declaring type
        KnownTypeIndex::Slider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Slider.TickFrequency
    {
        KnownPropertyIndex::Slider_TickFrequency, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::Slider, // Declaring type
        KnownTypeIndex::Slider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Slider.TickPlacement
    {
        KnownPropertyIndex::Slider_TickPlacement, // Index name
        KnownTypeIndex::TickPlacement, // Property type
        KnownTypeIndex::Slider, // Declaring type
        KnownTypeIndex::Slider, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SwapChainPanel.CompositionScaleX
    {
        KnownPropertyIndex::SwapChainPanel_CompositionScaleX, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SwapChainPanel, // Declaring type
        KnownTypeIndex::SwapChainPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.SwapChainPanel.CompositionScaleY
    {
        KnownPropertyIndex::SwapChainPanel_CompositionScaleY, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::SwapChainPanel, // Declaring type
        KnownTypeIndex::SwapChainPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPropMethodCall)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.HorizontalOffset
    {
        KnownPropertyIndex::ToolTip_HorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ToolTip, // Declaring type
        KnownTypeIndex::ToolTip, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.IsOpen
    {
        KnownPropertyIndex::ToolTip_IsOpen, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ToolTip, // Declaring type
        KnownTypeIndex::ToolTip, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.Placement
    {
        KnownPropertyIndex::ToolTip_Placement, // Index name
        KnownTypeIndex::PlacementMode, // Property type
        KnownTypeIndex::ToolTip, // Declaring type
        KnownTypeIndex::ToolTip, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.PlacementRect
    {
        KnownPropertyIndex::ToolTip_PlacementRect, // Index name
        KnownTypeIndex::Rect, // Property type
        KnownTypeIndex::ToolTip, // Declaring type
        KnownTypeIndex::ToolTip, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.PlacementTarget
    {
        KnownPropertyIndex::ToolTip_PlacementTarget, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::ToolTip, // Declaring type
        KnownTypeIndex::ToolTip, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.TemplateSettings
    {
        KnownPropertyIndex::ToolTip_TemplateSettings, // Index name
        KnownTypeIndex::ToolTipTemplateSettings, // Property type
        KnownTypeIndex::ToolTip, // Declaring type
        KnownTypeIndex::ToolTip, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.VerticalOffset
    {
        KnownPropertyIndex::ToolTip_VerticalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ToolTip, // Declaring type
        KnownTypeIndex::ToolTip, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.WindowChrome.CaptionVisibility
    {
        KnownPropertyIndex::WindowChrome_CaptionVisibility, // Index name
        KnownTypeIndex::Visibility, // Property type
        KnownTypeIndex::WindowChrome, // Declaring type
        KnownTypeIndex::WindowChrome, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Button.Flyout
    {
        KnownPropertyIndex::Button_Flyout, // Index name
        KnownTypeIndex::FlyoutBase, // Property type
        KnownTypeIndex::Button, // Declaring type
        KnownTypeIndex::Button, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.Description
    {
        KnownPropertyIndex::ComboBox_Description, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.ErrorTemplate
    {
        KnownPropertyIndex::ComboBox_ErrorTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.HasValidationErrors
    {
        KnownPropertyIndex::ComboBox_HasValidationErrors, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.Header
    {
        KnownPropertyIndex::ComboBox_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.HeaderPlacement
    {
        KnownPropertyIndex::ComboBox_HeaderPlacement, // Index name
        KnownTypeIndex::ControlHeaderPlacement, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.HeaderTemplate
    {
        KnownPropertyIndex::ComboBox_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.InputValidationKind
    {
        KnownPropertyIndex::ComboBox_InputValidationKind, // Index name
        KnownTypeIndex::InputValidationKind, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.InputValidationMode
    {
        KnownPropertyIndex::ComboBox_InputValidationMode, // Index name
        KnownTypeIndex::InputValidationMode, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.IsDropDownOpen
    {
        KnownPropertyIndex::ComboBox_IsDropDownOpen, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.IsEditable
    {
        KnownPropertyIndex::ComboBox_IsEditable, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.IsSelectionBoxHighlighted
    {
        KnownPropertyIndex::ComboBox_IsSelectionBoxHighlighted, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.IsTextSearchEnabled
    {
        KnownPropertyIndex::ComboBox_IsTextSearchEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.LightDismissOverlayMode
    {
        KnownPropertyIndex::ComboBox_LightDismissOverlayMode, // Index name
        KnownTypeIndex::LightDismissOverlayMode, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.MaxDropDownHeight
    {
        KnownPropertyIndex::ComboBox_MaxDropDownHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.PlaceholderForeground
    {
        KnownPropertyIndex::ComboBox_PlaceholderForeground, // Index name
        KnownTypeIndex::Brush, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.PlaceholderText
    {
        KnownPropertyIndex::ComboBox_PlaceholderText, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.SelectionBoxItem
    {
        KnownPropertyIndex::ComboBox_SelectionBoxItem, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.SelectionBoxItemTemplate
    {
        KnownPropertyIndex::ComboBox_SelectionBoxItemTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.SelectionChangedTrigger
    {
        KnownPropertyIndex::ComboBox_SelectionChangedTrigger, // Index name
        KnownTypeIndex::ComboBoxSelectionChangedTrigger, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.TemplateSettings
    {
        KnownPropertyIndex::ComboBox_TemplateSettings, // Index name
        KnownTypeIndex::ComboBoxTemplateSettings, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.Text
    {
        KnownPropertyIndex::ComboBox_Text, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.TextBoxStyle
    {
        KnownPropertyIndex::ComboBox_TextBoxStyle, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.ValidationCommand
    {
        KnownPropertyIndex::ComboBox_ValidationCommand, // Index name
        KnownTypeIndex::InputValidationCommand, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.ValidationContext
    {
        KnownPropertyIndex::ComboBox_ValidationContext, // Index name
        KnownTypeIndex::InputValidationContext, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.ValidationErrors
    {
        KnownPropertyIndex::ComboBox_ValidationErrors, // Index name
        KnownTypeIndex::ValidationErrorsCollection, // Property type
        KnownTypeIndex::ComboBox, // Declaring type
        KnownTypeIndex::ComboBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.CommandBarOverflowPresenterStyle
    {
        KnownPropertyIndex::CommandBar_CommandBarOverflowPresenterStyle, // Index name
        KnownTypeIndex::Style, // Property type
        KnownTypeIndex::CommandBar, // Declaring type
        KnownTypeIndex::CommandBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.CommandBarTemplateSettings
    {
        KnownPropertyIndex::CommandBar_CommandBarTemplateSettings, // Index name
        KnownTypeIndex::CommandBarTemplateSettings, // Property type
        KnownTypeIndex::CommandBar, // Declaring type
        KnownTypeIndex::CommandBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.DefaultLabelPosition
    {
        KnownPropertyIndex::CommandBar_DefaultLabelPosition, // Index name
        KnownTypeIndex::CommandBarDefaultLabelPosition, // Property type
        KnownTypeIndex::CommandBar, // Declaring type
        KnownTypeIndex::CommandBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.IsDynamicOverflowEnabled
    {
        KnownPropertyIndex::CommandBar_IsDynamicOverflowEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::CommandBar, // Declaring type
        KnownTypeIndex::CommandBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.OverflowButtonVisibility
    {
        KnownPropertyIndex::CommandBar_OverflowButtonVisibility, // Index name
        KnownTypeIndex::CommandBarOverflowButtonVisibility, // Property type
        KnownTypeIndex::CommandBar, // Declaring type
        KnownTypeIndex::CommandBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.PrimaryCommands
    {
        KnownPropertyIndex::CommandBar_PrimaryCommands, // Index name
        KnownTypeIndex::CommandBarElementCollection, // Property type
        KnownTypeIndex::CommandBar, // Declaring type
        KnownTypeIndex::CommandBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.SecondaryCommands
    {
        KnownPropertyIndex::CommandBar_SecondaryCommands, // Index name
        KnownTypeIndex::CommandBarElementCollection, // Property type
        KnownTypeIndex::CommandBar, // Declaring type
        KnownTypeIndex::CommandBar, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.FlipView.UseTouchAnimationsForAllNavigation
    {
        KnownPropertyIndex::FlipView_UseTouchAnimationsForAllNavigation, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::FlipView, // Declaring type
        KnownTypeIndex::FlipView, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.HyperlinkButton.NavigateUri
    {
        KnownPropertyIndex::HyperlinkButton_NavigateUri, // Index name
        KnownTypeIndex::Uri, // Property type
        KnownTypeIndex::HyperlinkButton, // Declaring type
        KnownTypeIndex::HyperlinkButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListBox.SelectedItems
    {
        KnownPropertyIndex::ListBox_SelectedItems, // Index name
        KnownTypeIndex::ItemCollection, // Property type
        KnownTypeIndex::ListBox, // Declaring type
        KnownTypeIndex::ListBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListBox.SelectionMode
    {
        KnownPropertyIndex::ListBox_SelectionMode, // Index name
        KnownTypeIndex::SelectionMode, // Property type
        KnownTypeIndex::ListBox, // Declaring type
        KnownTypeIndex::ListBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListBox.SingleSelectionFollowsFocus
    {
        KnownPropertyIndex::ListBox_SingleSelectionFollowsFocus, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListBox, // Declaring type
        KnownTypeIndex::ListBox, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.CanDragItems
    {
        KnownPropertyIndex::ListViewBase_CanDragItems, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.CanReorderItems
    {
        KnownPropertyIndex::ListViewBase_CanReorderItems, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.DataFetchSize
    {
        KnownPropertyIndex::ListViewBase_DataFetchSize, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.Footer
    {
        KnownPropertyIndex::ListViewBase_Footer, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.FooterTemplate
    {
        KnownPropertyIndex::ListViewBase_FooterTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.FooterTransitions
    {
        KnownPropertyIndex::ListViewBase_FooterTransitions, // Index name
        KnownTypeIndex::TransitionCollection, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.Header
    {
        KnownPropertyIndex::ListViewBase_Header, // Index name
        KnownTypeIndex::Object, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.HeaderTemplate
    {
        KnownPropertyIndex::ListViewBase_HeaderTemplate, // Index name
        KnownTypeIndex::DataTemplate, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.HeaderTransitions
    {
        KnownPropertyIndex::ListViewBase_HeaderTransitions, // Index name
        KnownTypeIndex::TransitionCollection, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsOnDemandProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IncrementalLoadingThreshold
    {
        KnownPropertyIndex::ListViewBase_IncrementalLoadingThreshold, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IncrementalLoadingTrigger
    {
        KnownPropertyIndex::ListViewBase_IncrementalLoadingTrigger, // Index name
        KnownTypeIndex::IncrementalLoadingTrigger, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IsActiveView
    {
        KnownPropertyIndex::ListViewBase_IsActiveView, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IsItemClickEnabled
    {
        KnownPropertyIndex::ListViewBase_IsItemClickEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IsMultiSelectCheckBoxEnabled
    {
        KnownPropertyIndex::ListViewBase_IsMultiSelectCheckBoxEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IsSwipeEnabled
    {
        KnownPropertyIndex::ListViewBase_IsSwipeEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IsZoomedInView
    {
        KnownPropertyIndex::ListViewBase_IsZoomedInView, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.ReorderMode
    {
        KnownPropertyIndex::ListViewBase_ReorderMode, // Index name
        KnownTypeIndex::ListViewReorderMode, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.SelectedItems
    {
        KnownPropertyIndex::ListViewBase_SelectedItems, // Index name
        KnownTypeIndex::ItemCollection, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.SelectedRanges
    {
        KnownPropertyIndex::ListViewBase_SelectedRanges, // Index name
        KnownTypeIndex::IVectorViewOfItemIndexRange, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.SelectionMode
    {
        KnownPropertyIndex::ListViewBase_SelectionMode, // Index name
        KnownTypeIndex::ListViewSelectionMode, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.SemanticZoomOwner
    {
        KnownPropertyIndex::ListViewBase_SemanticZoomOwner, // Index name
        KnownTypeIndex::SemanticZoom, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.ShowsScrollingPlaceholders
    {
        KnownPropertyIndex::ListViewBase_ShowsScrollingPlaceholders, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.SingleSelectionFollowsFocus
    {
        KnownPropertyIndex::ListViewBase_SingleSelectionFollowsFocus, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListViewBase, // Declaring type
        KnownTypeIndex::ListViewBase, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewBaseItem.IsDraggable
    {
        KnownPropertyIndex::ListViewBaseItem_IsDraggable, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ListViewBaseItem, // Declaring type
        KnownTypeIndex::ListViewBaseItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RepeatButton.Delay
    {
        KnownPropertyIndex::RepeatButton_Delay, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::RepeatButton, // Declaring type
        KnownTypeIndex::RepeatButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RepeatButton.Interval
    {
        KnownPropertyIndex::RepeatButton_Interval, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::RepeatButton, // Declaring type
        KnownTypeIndex::RepeatButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.BringIntoViewOnFocusChange
    {
        KnownPropertyIndex::ScrollViewer_BringIntoViewOnFocusChange, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.CanContentRenderOutsideBounds
    {
        KnownPropertyIndex::ScrollViewer_CanContentRenderOutsideBounds, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility
    {
        KnownPropertyIndex::ScrollViewer_ComputedHorizontalScrollBarVisibility, // Index name
        KnownTypeIndex::Visibility, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility
    {
        KnownPropertyIndex::ScrollViewer_ComputedVerticalScrollBarVisibility, // Index name
        KnownTypeIndex::Visibility, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ExtentHeight
    {
        KnownPropertyIndex::ScrollViewer_ExtentHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ExtentWidth
    {
        KnownPropertyIndex::ScrollViewer_ExtentWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalAnchorRatio
    {
        KnownPropertyIndex::ScrollViewer_HorizontalAnchorRatio, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalOffset
    {
        KnownPropertyIndex::ScrollViewer_HorizontalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollBarVisibility
    {
        KnownPropertyIndex::ScrollViewer_HorizontalScrollBarVisibility, // Index name
        KnownTypeIndex::ScrollBarVisibility, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollMode
    {
        KnownPropertyIndex::ScrollViewer_HorizontalScrollMode, // Index name
        KnownTypeIndex::ScrollMode, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalSnapPointsAlignment
    {
        KnownPropertyIndex::ScrollViewer_HorizontalSnapPointsAlignment, // Index name
        KnownTypeIndex::SnapPointsAlignment, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalSnapPointsType
    {
        KnownPropertyIndex::ScrollViewer_HorizontalSnapPointsType, // Index name
        KnownTypeIndex::SnapPointsType, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsDeferredScrollingEnabled
    {
        KnownPropertyIndex::ScrollViewer_IsDeferredScrollingEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsHorizontalRailEnabled
    {
        KnownPropertyIndex::ScrollViewer_IsHorizontalRailEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsHorizontalScrollChainingEnabled
    {
        KnownPropertyIndex::ScrollViewer_IsHorizontalScrollChainingEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsScrollInertiaEnabled
    {
        KnownPropertyIndex::ScrollViewer_IsScrollInertiaEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsVerticalRailEnabled
    {
        KnownPropertyIndex::ScrollViewer_IsVerticalRailEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsVerticalScrollChainingEnabled
    {
        KnownPropertyIndex::ScrollViewer_IsVerticalScrollChainingEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsZoomChainingEnabled
    {
        KnownPropertyIndex::ScrollViewer_IsZoomChainingEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsZoomInertiaEnabled
    {
        KnownPropertyIndex::ScrollViewer_IsZoomInertiaEnabled, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.LeftHeader
    {
        KnownPropertyIndex::ScrollViewer_LeftHeader, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.MaxZoomFactor
    {
        KnownPropertyIndex::ScrollViewer_MaxZoomFactor, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.MinZoomFactor
    {
        KnownPropertyIndex::ScrollViewer_MinZoomFactor, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ReduceViewportForCoreInputViewOcclusions
    {
        KnownPropertyIndex::ScrollViewer_ReduceViewportForCoreInputViewOcclusions, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollableHeight
    {
        KnownPropertyIndex::ScrollViewer_ScrollableHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollableWidth
    {
        KnownPropertyIndex::ScrollViewer_ScrollableWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.TopHeader
    {
        KnownPropertyIndex::ScrollViewer_TopHeader, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.TopLeftHeader
    {
        KnownPropertyIndex::ScrollViewer_TopLeftHeader, // Index name
        KnownTypeIndex::UIElement, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalAnchorRatio
    {
        KnownPropertyIndex::ScrollViewer_VerticalAnchorRatio, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalOffset
    {
        KnownPropertyIndex::ScrollViewer_VerticalOffset, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollBarVisibility
    {
        KnownPropertyIndex::ScrollViewer_VerticalScrollBarVisibility, // Index name
        KnownTypeIndex::ScrollBarVisibility, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollMode
    {
        KnownPropertyIndex::ScrollViewer_VerticalScrollMode, // Index name
        KnownTypeIndex::ScrollMode, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalSnapPointsAlignment
    {
        KnownPropertyIndex::ScrollViewer_VerticalSnapPointsAlignment, // Index name
        KnownTypeIndex::SnapPointsAlignment, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalSnapPointsType
    {
        KnownPropertyIndex::ScrollViewer_VerticalSnapPointsType, // Index name
        KnownTypeIndex::SnapPointsType, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ViewportHeight
    {
        KnownPropertyIndex::ScrollViewer_ViewportHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ViewportWidth
    {
        KnownPropertyIndex::ScrollViewer_ViewportWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomFactor
    {
        KnownPropertyIndex::ScrollViewer_ZoomFactor, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomMode
    {
        KnownPropertyIndex::ScrollViewer_ZoomMode, // Index name
        KnownTypeIndex::ZoomMode, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomSnapPoints
    {
        KnownPropertyIndex::ScrollViewer_ZoomSnapPoints, // Index name
        KnownTypeIndex::IVectorOfFloat, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomSnapPointsType
    {
        KnownPropertyIndex::ScrollViewer_ZoomSnapPointsType, // Index name
        KnownTypeIndex::SnapPointsType, // Property type
        KnownTypeIndex::ScrollViewer, // Declaring type
        KnownTypeIndex::ScrollViewer, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsChecked
    {
        KnownPropertyIndex::ToggleButton_IsChecked, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ToggleButton, // Declaring type
        KnownTypeIndex::ToggleButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsNullable)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsThreeState
    {
        KnownPropertyIndex::ToggleButton_IsThreeState, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ToggleButton, // Declaring type
        KnownTypeIndex::ToggleButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem.IsChecked
    {
        KnownPropertyIndex::ToggleMenuFlyoutItem_IsChecked, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::ToggleMenuFlyoutItem, // Declaring type
        KnownTypeIndex::ToggleMenuFlyoutItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.AreScrollSnapPointsRegular
    {
        KnownPropertyIndex::VirtualizingStackPanel_AreScrollSnapPointsRegular, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::VirtualizingStackPanel, // Declaring type
        KnownTypeIndex::VirtualizingStackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.IsContainerGeneratedForInsert
    {
        KnownPropertyIndex::VirtualizingStackPanel_IsContainerGeneratedForInsert, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::VirtualizingStackPanel, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.IsVirtualizing
    {
        KnownPropertyIndex::VirtualizingStackPanel_IsVirtualizing, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::VirtualizingStackPanel, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.Orientation
    {
        KnownPropertyIndex::VirtualizingStackPanel_Orientation, // Index name
        KnownTypeIndex::Orientation, // Property type
        KnownTypeIndex::VirtualizingStackPanel, // Declaring type
        KnownTypeIndex::VirtualizingStackPanel, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.VirtualizationMode
    {
        KnownPropertyIndex::VirtualizingStackPanel_VirtualizationMode, // Index name
        KnownTypeIndex::VirtualizationMode, // Property type
        KnownTypeIndex::VirtualizingStackPanel, // Declaring type
        KnownTypeIndex::DependencyObject, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsAttached) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid.HorizontalChildrenAlignment
    {
        KnownPropertyIndex::WrapGrid_HorizontalChildrenAlignment, // Index name
        KnownTypeIndex::HorizontalAlignment, // Property type
        KnownTypeIndex::WrapGrid, // Declaring type
        KnownTypeIndex::WrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid.ItemHeight
    {
        KnownPropertyIndex::WrapGrid_ItemHeight, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::WrapGrid, // Declaring type
        KnownTypeIndex::WrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid.ItemWidth
    {
        KnownPropertyIndex::WrapGrid_ItemWidth, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::WrapGrid, // Declaring type
        KnownTypeIndex::WrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid.MaximumRowsOrColumns
    {
        KnownPropertyIndex::WrapGrid_MaximumRowsOrColumns, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::WrapGrid, // Declaring type
        KnownTypeIndex::WrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid.Orientation
    {
        KnownPropertyIndex::WrapGrid_Orientation, // Index name
        KnownTypeIndex::Orientation, // Property type
        KnownTypeIndex::WrapGrid, // Declaring type
        KnownTypeIndex::WrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid.VerticalChildrenAlignment
    {
        KnownPropertyIndex::WrapGrid_VerticalChildrenAlignment, // Index name
        KnownTypeIndex::VerticalAlignment, // Property type
        KnownTypeIndex::WrapGrid, // Declaring type
        KnownTypeIndex::WrapGrid, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.DynamicOverflowOrder
    {
        KnownPropertyIndex::AppBarButton_DynamicOverflowOrder, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::AppBarButton, // Declaring type
        KnownTypeIndex::AppBarButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.Icon
    {
        KnownPropertyIndex::AppBarButton_Icon, // Index name
        KnownTypeIndex::IconElement, // Property type
        KnownTypeIndex::AppBarButton, // Declaring type
        KnownTypeIndex::AppBarButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.IsCompact
    {
        KnownPropertyIndex::AppBarButton_IsCompact, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBarButton, // Declaring type
        KnownTypeIndex::AppBarButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.IsInOverflow
    {
        KnownPropertyIndex::AppBarButton_IsInOverflow, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBarButton, // Declaring type
        KnownTypeIndex::AppBarButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.KeyboardAcceleratorTextOverride
    {
        KnownPropertyIndex::AppBarButton_KeyboardAcceleratorTextOverride, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AppBarButton, // Declaring type
        KnownTypeIndex::AppBarButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.Label
    {
        KnownPropertyIndex::AppBarButton_Label, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AppBarButton, // Declaring type
        KnownTypeIndex::AppBarButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.LabelPosition
    {
        KnownPropertyIndex::AppBarButton_LabelPosition, // Index name
        KnownTypeIndex::CommandBarLabelPosition, // Property type
        KnownTypeIndex::AppBarButton, // Declaring type
        KnownTypeIndex::AppBarButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.TemplateSettings
    {
        KnownPropertyIndex::AppBarButton_TemplateSettings, // Index name
        KnownTypeIndex::AppBarButtonTemplateSettings, // Property type
        KnownTypeIndex::AppBarButton, // Declaring type
        KnownTypeIndex::AppBarButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.UseOverflowStyle
    {
        KnownPropertyIndex::AppBarButton_UseOverflowStyle, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBarButton, // Declaring type
        KnownTypeIndex::AppBarButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.DynamicOverflowOrder
    {
        KnownPropertyIndex::AppBarToggleButton_DynamicOverflowOrder, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::AppBarToggleButton, // Declaring type
        KnownTypeIndex::AppBarToggleButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.Icon
    {
        KnownPropertyIndex::AppBarToggleButton_Icon, // Index name
        KnownTypeIndex::IconElement, // Property type
        KnownTypeIndex::AppBarToggleButton, // Declaring type
        KnownTypeIndex::AppBarToggleButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.IsCompact
    {
        KnownPropertyIndex::AppBarToggleButton_IsCompact, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBarToggleButton, // Declaring type
        KnownTypeIndex::AppBarToggleButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.IsInOverflow
    {
        KnownPropertyIndex::AppBarToggleButton_IsInOverflow, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBarToggleButton, // Declaring type
        KnownTypeIndex::AppBarToggleButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.KeyboardAcceleratorTextOverride
    {
        KnownPropertyIndex::AppBarToggleButton_KeyboardAcceleratorTextOverride, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AppBarToggleButton, // Declaring type
        KnownTypeIndex::AppBarToggleButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.Label
    {
        KnownPropertyIndex::AppBarToggleButton_Label, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::AppBarToggleButton, // Declaring type
        KnownTypeIndex::AppBarToggleButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.LabelPosition
    {
        KnownPropertyIndex::AppBarToggleButton_LabelPosition, // Index name
        KnownTypeIndex::CommandBarLabelPosition, // Property type
        KnownTypeIndex::AppBarToggleButton, // Declaring type
        KnownTypeIndex::AppBarToggleButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.TemplateSettings
    {
        KnownPropertyIndex::AppBarToggleButton_TemplateSettings, // Index name
        KnownTypeIndex::AppBarToggleButtonTemplateSettings, // Property type
        KnownTypeIndex::AppBarToggleButton, // Declaring type
        KnownTypeIndex::AppBarToggleButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.UseOverflowStyle
    {
        KnownPropertyIndex::AppBarToggleButton_UseOverflowStyle, // Index name
        KnownTypeIndex::Boolean, // Property type
        KnownTypeIndex::AppBarToggleButton, // Declaring type
        KnownTypeIndex::AppBarToggleButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.GridViewItem.TemplateSettings
    {
        KnownPropertyIndex::GridViewItem_TemplateSettings, // Index name
        KnownTypeIndex::GridViewItemTemplateSettings, // Property type
        KnownTypeIndex::GridViewItem, // Declaring type
        KnownTypeIndex::GridViewItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.ListViewItem.TemplateSettings
    {
        KnownPropertyIndex::ListViewItem_TemplateSettings, // Index name
        KnownTypeIndex::ListViewItemTemplateSettings, // Property type
        KnownTypeIndex::ListViewItem, // Declaring type
        KnownTypeIndex::ListViewItem, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Controls.RadioButton.GroupName
    {
        KnownPropertyIndex::RadioButton_GroupName, // Index name
        KnownTypeIndex::String, // Property type
        KnownTypeIndex::RadioButton, // Declaring type
        KnownTypeIndex::RadioButton, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSparse) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.BrushTransition.Duration
    {
        KnownPropertyIndex::BrushTransition_Duration, // Index name
        KnownTypeIndex::TimeSpan, // Property type
        KnownTypeIndex::BrushTransition, // Declaring type
        KnownTypeIndex::BrushTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.ScalarTransition.Duration
    {
        KnownPropertyIndex::ScalarTransition_Duration, // Index name
        KnownTypeIndex::TimeSpan, // Property type
        KnownTypeIndex::ScalarTransition, // Declaring type
        KnownTypeIndex::ScalarTransition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.AnimatedCenterPoint
    {
        KnownPropertyIndex::UIElement_AnimatedCenterPoint, // Index name
        KnownTypeIndex::Vector3, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.AnimatedRotation
    {
        KnownPropertyIndex::UIElement_AnimatedRotation, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.AnimatedRotationAxis
    {
        KnownPropertyIndex::UIElement_AnimatedRotationAxis, // Index name
        KnownTypeIndex::Vector3, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.AnimatedScale
    {
        KnownPropertyIndex::UIElement_AnimatedScale, // Index name
        KnownTypeIndex::Vector3, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.AnimatedTransformMatrix
    {
        KnownPropertyIndex::UIElement_AnimatedTransformMatrix, // Index name
        KnownTypeIndex::Matrix4x4, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.AnimatedTranslation
    {
        KnownPropertyIndex::UIElement_AnimatedTranslation, // Index name
        KnownTypeIndex::Vector3, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.CenterPoint
    {
        KnownPropertyIndex::UIElement_CenterPoint, // Index name
        KnownTypeIndex::Vector3, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.KeepAliveCount
    {
        KnownPropertyIndex::UIElement_KeepAliveCount, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.RasterizationScale
    {
        KnownPropertyIndex::UIElement_RasterizationScale, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.Rotation
    {
        KnownPropertyIndex::UIElement_Rotation, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.RotationAxis
    {
        KnownPropertyIndex::UIElement_RotationAxis, // Index name
        KnownTypeIndex::Vector3, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.Scale
    {
        KnownPropertyIndex::UIElement_Scale, // Index name
        KnownTypeIndex::Vector3, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.ThemeShadowReceiverCount
    {
        KnownPropertyIndex::UIElement_ThemeShadowReceiverCount, // Index name
        KnownTypeIndex::Int32, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.TransformMatrix
    {
        KnownPropertyIndex::UIElement_TransformMatrix, // Index name
        KnownTypeIndex::Matrix4x4, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.UIElement.Translation
    {
        KnownPropertyIndex::UIElement_Translation, // Index name
        KnownTypeIndex::Vector3, // Property type
        KnownTypeIndex::UIElement, // Declaring type
        KnownTypeIndex::UIElement, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Vector3Transition.Components
    {
        KnownPropertyIndex::Vector3Transition_Components, // Index name
        KnownTypeIndex::Vector3TransitionComponents, // Property type
        KnownTypeIndex::Vector3Transition, // Declaring type
        KnownTypeIndex::Vector3Transition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Vector3Transition.Duration
    {
        KnownPropertyIndex::Vector3Transition_Duration, // Index name
        KnownTypeIndex::TimeSpan, // Property type
        KnownTypeIndex::Vector3Transition, // Declaring type
        KnownTypeIndex::Vector3Transition, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsVisualTreeProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.AnimatedCenterPoint
    {
        KnownPropertyIndex::LinearGradientBrush_AnimatedCenterPoint, // Index name
        KnownTypeIndex::Vector2, // Property type
        KnownTypeIndex::LinearGradientBrush, // Declaring type
        KnownTypeIndex::LinearGradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.AnimatedRotation
    {
        KnownPropertyIndex::LinearGradientBrush_AnimatedRotation, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::LinearGradientBrush, // Declaring type
        KnownTypeIndex::LinearGradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.AnimatedScale
    {
        KnownPropertyIndex::LinearGradientBrush_AnimatedScale, // Index name
        KnownTypeIndex::Vector2, // Property type
        KnownTypeIndex::LinearGradientBrush, // Declaring type
        KnownTypeIndex::LinearGradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.AnimatedTransformMatrix
    {
        KnownPropertyIndex::LinearGradientBrush_AnimatedTransformMatrix, // Index name
        KnownTypeIndex::Matrix3x2, // Property type
        KnownTypeIndex::LinearGradientBrush, // Declaring type
        KnownTypeIndex::LinearGradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.AnimatedTranslation
    {
        KnownPropertyIndex::LinearGradientBrush_AnimatedTranslation, // Index name
        KnownTypeIndex::Vector2, // Property type
        KnownTypeIndex::LinearGradientBrush, // Declaring type
        KnownTypeIndex::LinearGradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsExternalReadOnlyProperty)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.CenterPoint
    {
        KnownPropertyIndex::LinearGradientBrush_CenterPoint, // Index name
        KnownTypeIndex::Vector2, // Property type
        KnownTypeIndex::LinearGradientBrush, // Declaring type
        KnownTypeIndex::LinearGradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.Rotation
    {
        KnownPropertyIndex::LinearGradientBrush_Rotation, // Index name
        KnownTypeIndex::Double, // Property type
        KnownTypeIndex::LinearGradientBrush, // Declaring type
        KnownTypeIndex::LinearGradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.Scale
    {
        KnownPropertyIndex::LinearGradientBrush_Scale, // Index name
        KnownTypeIndex::Vector2, // Property type
        KnownTypeIndex::LinearGradientBrush, // Declaring type
        KnownTypeIndex::LinearGradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.TransformMatrix
    {
        KnownPropertyIndex::LinearGradientBrush_TransformMatrix, // Index name
        KnownTypeIndex::Matrix3x2, // Property type
        KnownTypeIndex::LinearGradientBrush, // Declaring type
        KnownTypeIndex::LinearGradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.Translation
    {
        KnownPropertyIndex::LinearGradientBrush_Translation, // Index name
        KnownTypeIndex::Vector2, // Property type
        KnownTypeIndex::LinearGradientBrush, // Declaring type
        KnownTypeIndex::LinearGradientBrush, // Target type
        static_cast<MetaDataPropertyInfoFlags>(static_cast<UINT>(MetaDataPropertyInfoFlags::IsSimpleProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsStrictOnlyProperty) | static_cast<UINT>(MetaDataPropertyInfoFlags::IsPublic)), // Property flags
    },
};

// Property iteration.
extern const KnownPropertyIndex c_aNextProperty[KnownPropertyCount] =
{
    KnownPropertyIndex::UnknownType_UnknownProperty, // UnknownType_UnknownProperty
    KnownPropertyIndex::GeneratorPosition_Offset, // GeneratorPosition_Index
    KnownPropertyIndex::UnknownType_UnknownProperty, // GeneratorPosition_Offset
    KnownPropertyIndex::TypeName_Name, // TypeName_Kind
    KnownPropertyIndex::UnknownType_UnknownProperty, // TypeName_Name
    KnownPropertyIndex::AutomationProperties_AccessibilityView, // AutomationProperties_AcceleratorKey
    KnownPropertyIndex::AutomationProperties_AccessKey, // AutomationProperties_AccessibilityView
    KnownPropertyIndex::AutomationProperties_Annotations, // AutomationProperties_AccessKey
    KnownPropertyIndex::AutomationProperties_AutomationControlType, // AutomationProperties_Annotations
    KnownPropertyIndex::AutomationProperties_AutomationId, // AutomationProperties_AutomationControlType
    KnownPropertyIndex::AutomationProperties_ControlledPeers, // AutomationProperties_AutomationId
    KnownPropertyIndex::AutomationProperties_Culture, // AutomationProperties_ControlledPeers
    KnownPropertyIndex::AutomationProperties_DescribedBy, // AutomationProperties_Culture
    KnownPropertyIndex::AutomationProperties_FlowsFrom, // AutomationProperties_DescribedBy
    KnownPropertyIndex::AutomationProperties_FlowsTo, // AutomationProperties_FlowsFrom
    KnownPropertyIndex::AutomationProperties_FullDescription, // AutomationProperties_FlowsTo
    KnownPropertyIndex::AutomationProperties_HeadingLevel, // AutomationProperties_FullDescription
    KnownPropertyIndex::AutomationProperties_HelpText, // AutomationProperties_HeadingLevel
    KnownPropertyIndex::AutomationProperties_IsDataValidForForm, // AutomationProperties_HelpText
    KnownPropertyIndex::AutomationProperties_IsDialog, // AutomationProperties_IsDataValidForForm
    KnownPropertyIndex::AutomationProperties_IsPeripheral, // AutomationProperties_IsDialog
    KnownPropertyIndex::AutomationProperties_IsRequiredForForm, // AutomationProperties_IsPeripheral
    KnownPropertyIndex::AutomationProperties_ItemStatus, // AutomationProperties_IsRequiredForForm
    KnownPropertyIndex::AutomationProperties_ItemType, // AutomationProperties_ItemStatus
    KnownPropertyIndex::AutomationProperties_LabeledBy, // AutomationProperties_ItemType
    KnownPropertyIndex::AutomationProperties_LandmarkType, // AutomationProperties_LabeledBy
    KnownPropertyIndex::AutomationProperties_Level, // AutomationProperties_LandmarkType
    KnownPropertyIndex::AutomationProperties_LiveSetting, // AutomationProperties_Level
    KnownPropertyIndex::AutomationProperties_LocalizedControlType, // AutomationProperties_LiveSetting
    KnownPropertyIndex::AutomationProperties_LocalizedLandmarkType, // AutomationProperties_LocalizedControlType
    KnownPropertyIndex::AutomationProperties_Name, // AutomationProperties_LocalizedLandmarkType
    KnownPropertyIndex::AutomationProperties_PositionInSet, // AutomationProperties_Name
    KnownPropertyIndex::AutomationProperties_SizeOfSet, // AutomationProperties_PositionInSet
    KnownPropertyIndex::UnknownType_UnknownProperty, // AutomationProperties_SizeOfSet
    KnownPropertyIndex::DependencyObject_DeferredStorage, // DependencyObject_Column
    KnownPropertyIndex::DependencyObject_Line, // DependencyObject_DeferredStorage
    KnownPropertyIndex::DependencyObject_Name, // DependencyObject_Line
    KnownPropertyIndex::DependencyObject_ParseUri, // DependencyObject_Name
    KnownPropertyIndex::DependencyObject_RealizingProxy, // DependencyObject_ParseUri
    KnownPropertyIndex::DependencyObject_XbfHash, // DependencyObject_RealizingProxy
    KnownPropertyIndex::UnknownType_UnknownProperty, // DependencyObject_XbfHash
    KnownPropertyIndex::ItemContainerGenerator_IsRecycledContainer, // ItemContainerGenerator_DeferredUnlinkingPayload
    KnownPropertyIndex::ItemContainerGenerator_ItemForItemContainer, // ItemContainerGenerator_IsRecycledContainer
    KnownPropertyIndex::UnknownType_UnknownProperty, // ItemContainerGenerator_ItemForItemContainer
    KnownPropertyIndex::UnknownType_UnknownProperty, // MediaTransportControlsHelper_DropoutOrder
    KnownPropertyIndex::ParserServiceProvider_RootObject, // ParserServiceProvider_BaseUri
    KnownPropertyIndex::ParserServiceProvider_TargetObject, // ParserServiceProvider_RootObject
    KnownPropertyIndex::ParserServiceProvider_TargetProperty, // ParserServiceProvider_TargetObject
    KnownPropertyIndex::UnknownType_UnknownProperty, // ParserServiceProvider_TargetProperty
    KnownPropertyIndex::TextOptions_TextHintingMode, // TextOptions_TextFormattingMode
    KnownPropertyIndex::TextOptions_TextRenderingMode, // TextOptions_TextHintingMode
    KnownPropertyIndex::UnknownType_UnknownProperty, // TextOptions_TextRenderingMode
    KnownPropertyIndex::ToolTipService_KeyboardAcceleratorToolTipObject, // ToolTipService_KeyboardAcceleratorToolTip
    KnownPropertyIndex::ToolTipService_Placement, // ToolTipService_KeyboardAcceleratorToolTipObject
    KnownPropertyIndex::ToolTipService_PlacementTarget, // ToolTipService_Placement
    KnownPropertyIndex::ToolTipService_ToolTip, // ToolTipService_PlacementTarget
    KnownPropertyIndex::ToolTipService_ToolTipObject, // ToolTipService_ToolTip
    KnownPropertyIndex::UnknownType_UnknownProperty, // ToolTipService_ToolTipObject
    KnownPropertyIndex::Typography_Capitals, // Typography_AnnotationAlternates
    KnownPropertyIndex::Typography_CapitalSpacing, // Typography_Capitals
    KnownPropertyIndex::Typography_CaseSensitiveForms, // Typography_CapitalSpacing
    KnownPropertyIndex::Typography_ContextualAlternates, // Typography_CaseSensitiveForms
    KnownPropertyIndex::Typography_ContextualLigatures, // Typography_ContextualAlternates
    KnownPropertyIndex::Typography_ContextualSwashes, // Typography_ContextualLigatures
    KnownPropertyIndex::Typography_DiscretionaryLigatures, // Typography_ContextualSwashes
    KnownPropertyIndex::Typography_EastAsianExpertForms, // Typography_DiscretionaryLigatures
    KnownPropertyIndex::Typography_EastAsianLanguage, // Typography_EastAsianExpertForms
    KnownPropertyIndex::Typography_EastAsianWidths, // Typography_EastAsianLanguage
    KnownPropertyIndex::Typography_Fraction, // Typography_EastAsianWidths
    KnownPropertyIndex::Typography_HistoricalForms, // Typography_Fraction
    KnownPropertyIndex::Typography_HistoricalLigatures, // Typography_HistoricalForms
    KnownPropertyIndex::Typography_Kerning, // Typography_HistoricalLigatures
    KnownPropertyIndex::Typography_MathematicalGreek, // Typography_Kerning
    KnownPropertyIndex::Typography_NumeralAlignment, // Typography_MathematicalGreek
    KnownPropertyIndex::Typography_NumeralStyle, // Typography_NumeralAlignment
    KnownPropertyIndex::Typography_SlashedZero, // Typography_NumeralStyle
    KnownPropertyIndex::Typography_StandardLigatures, // Typography_SlashedZero
    KnownPropertyIndex::Typography_StandardSwashes, // Typography_StandardLigatures
    KnownPropertyIndex::Typography_StylisticAlternates, // Typography_StandardSwashes
    KnownPropertyIndex::Typography_StylisticSet1, // Typography_StylisticAlternates
    KnownPropertyIndex::Typography_StylisticSet10, // Typography_StylisticSet1
    KnownPropertyIndex::Typography_StylisticSet11, // Typography_StylisticSet10
    KnownPropertyIndex::Typography_StylisticSet12, // Typography_StylisticSet11
    KnownPropertyIndex::Typography_StylisticSet13, // Typography_StylisticSet12
    KnownPropertyIndex::Typography_StylisticSet14, // Typography_StylisticSet13
    KnownPropertyIndex::Typography_StylisticSet15, // Typography_StylisticSet14
    KnownPropertyIndex::Typography_StylisticSet16, // Typography_StylisticSet15
    KnownPropertyIndex::Typography_StylisticSet17, // Typography_StylisticSet16
    KnownPropertyIndex::Typography_StylisticSet18, // Typography_StylisticSet17
    KnownPropertyIndex::Typography_StylisticSet19, // Typography_StylisticSet18
    KnownPropertyIndex::Typography_StylisticSet2, // Typography_StylisticSet19
    KnownPropertyIndex::Typography_StylisticSet20, // Typography_StylisticSet2
    KnownPropertyIndex::Typography_StylisticSet3, // Typography_StylisticSet20
    KnownPropertyIndex::Typography_StylisticSet4, // Typography_StylisticSet3
    KnownPropertyIndex::Typography_StylisticSet5, // Typography_StylisticSet4
    KnownPropertyIndex::Typography_StylisticSet6, // Typography_StylisticSet5
    KnownPropertyIndex::Typography_StylisticSet7, // Typography_StylisticSet6
    KnownPropertyIndex::Typography_StylisticSet8, // Typography_StylisticSet7
    KnownPropertyIndex::Typography_StylisticSet9, // Typography_StylisticSet8
    KnownPropertyIndex::Typography_Variants, // Typography_StylisticSet9
    KnownPropertyIndex::UnknownType_UnknownProperty, // Typography_Variants
    KnownPropertyIndex::UnknownType_UnknownProperty, // XamlBindingHelper_DataTemplateComponent
    KnownPropertyIndex::DependencyObject_Column, // AppBarButtonTemplateSettings_KeyboardAcceleratorTextMinWidth
    KnownPropertyIndex::AppBarTemplateSettings_CompactRootMargin, // AppBarTemplateSettings_ClipRect
    KnownPropertyIndex::AppBarTemplateSettings_CompactVerticalDelta, // AppBarTemplateSettings_CompactRootMargin
    KnownPropertyIndex::AppBarTemplateSettings_HiddenRootMargin, // AppBarTemplateSettings_CompactVerticalDelta
    KnownPropertyIndex::AppBarTemplateSettings_HiddenVerticalDelta, // AppBarTemplateSettings_HiddenRootMargin
    KnownPropertyIndex::AppBarTemplateSettings_MinimalRootMargin, // AppBarTemplateSettings_HiddenVerticalDelta
    KnownPropertyIndex::AppBarTemplateSettings_MinimalVerticalDelta, // AppBarTemplateSettings_MinimalRootMargin
    KnownPropertyIndex::AppBarTemplateSettings_NegativeCompactVerticalDelta, // AppBarTemplateSettings_MinimalVerticalDelta
    KnownPropertyIndex::AppBarTemplateSettings_NegativeHiddenVerticalDelta, // AppBarTemplateSettings_NegativeCompactVerticalDelta
    KnownPropertyIndex::AppBarTemplateSettings_NegativeMinimalVerticalDelta, // AppBarTemplateSettings_NegativeHiddenVerticalDelta
    KnownPropertyIndex::DependencyObject_Column, // AppBarTemplateSettings_NegativeMinimalVerticalDelta
    KnownPropertyIndex::DependencyObject_Column, // AppBarToggleButtonTemplateSettings_KeyboardAcceleratorTextMinWidth
    KnownPropertyIndex::Application_HighContrastAdjustment, // Application_ApplicationStarted
    KnownPropertyIndex::Application_RequestedTheme, // Application_HighContrastAdjustment
    KnownPropertyIndex::Application_RequiresPointerMode, // Application_RequestedTheme
    KnownPropertyIndex::Application_Resources, // Application_RequiresPointerMode
    KnownPropertyIndex::Application_RootVisual, // Application_Resources
    KnownPropertyIndex::DependencyObject_Column, // Application_RootVisual
    KnownPropertyIndex::AutomationAnnotation_Type, // AutomationAnnotation_Element
    KnownPropertyIndex::DependencyObject_Column, // AutomationAnnotation_Type
    KnownPropertyIndex::DependencyObject_Column, // AutomationPeer_EventsSource
    KnownPropertyIndex::AutomationPeerAnnotation_Type, // AutomationPeerAnnotation_Peer
    KnownPropertyIndex::DependencyObject_Column, // AutomationPeerAnnotation_Type
    KnownPropertyIndex::AutoSuggestBoxQuerySubmittedEventArgs_QueryText, // AutoSuggestBoxQuerySubmittedEventArgs_ChosenSuggestion
    KnownPropertyIndex::DependencyObject_Column, // AutoSuggestBoxQuerySubmittedEventArgs_QueryText
    KnownPropertyIndex::DependencyObject_Column, // AutoSuggestBoxSuggestionChosenEventArgs_SelectedItem
    KnownPropertyIndex::DependencyObject_Column, // AutoSuggestBoxTextChangedEventArgs_Reason
    KnownPropertyIndex::Brush_RelativeTransform, // Brush_Opacity
    KnownPropertyIndex::Brush_Transform, // Brush_RelativeTransform
    KnownPropertyIndex::DependencyObject_Column, // Brush_Transform
    KnownPropertyIndex::CalendarViewTemplateSettings_CenterY, // CalendarViewTemplateSettings_CenterX
    KnownPropertyIndex::CalendarViewTemplateSettings_ClipRect, // CalendarViewTemplateSettings_CenterY
    KnownPropertyIndex::CalendarViewTemplateSettings_HasMoreContentAfter, // CalendarViewTemplateSettings_ClipRect
    KnownPropertyIndex::CalendarViewTemplateSettings_HasMoreContentBefore, // CalendarViewTemplateSettings_HasMoreContentAfter
    KnownPropertyIndex::CalendarViewTemplateSettings_HasMoreViews, // CalendarViewTemplateSettings_HasMoreContentBefore
    KnownPropertyIndex::CalendarViewTemplateSettings_HeaderText, // CalendarViewTemplateSettings_HasMoreViews
    KnownPropertyIndex::CalendarViewTemplateSettings_MinViewWidth, // CalendarViewTemplateSettings_HeaderText
    KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay1, // CalendarViewTemplateSettings_MinViewWidth
    KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay2, // CalendarViewTemplateSettings_WeekDay1
    KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay3, // CalendarViewTemplateSettings_WeekDay2
    KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay4, // CalendarViewTemplateSettings_WeekDay3
    KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay5, // CalendarViewTemplateSettings_WeekDay4
    KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay6, // CalendarViewTemplateSettings_WeekDay5
    KnownPropertyIndex::CalendarViewTemplateSettings_WeekDay7, // CalendarViewTemplateSettings_WeekDay6
    KnownPropertyIndex::DependencyObject_Column, // CalendarViewTemplateSettings_WeekDay7
    KnownPropertyIndex::CollectionViewSource_ItemsPath, // CollectionViewSource_IsSourceGrouped
    KnownPropertyIndex::CollectionViewSource_Source, // CollectionViewSource_ItemsPath
    KnownPropertyIndex::CollectionViewSource_View, // CollectionViewSource_Source
    KnownPropertyIndex::DependencyObject_Column, // CollectionViewSource_View
    KnownPropertyIndex::Color_B, // Color_A
    KnownPropertyIndex::Color_ContentProperty, // Color_B
    KnownPropertyIndex::Color_G, // Color_ContentProperty
    KnownPropertyIndex::Color_R, // Color_G
    KnownPropertyIndex::DependencyObject_Column, // Color_R
    KnownPropertyIndex::ColorKeyFrame_Value, // ColorKeyFrame_KeyTime
    KnownPropertyIndex::DependencyObject_Column, // ColorKeyFrame_Value
    KnownPropertyIndex::ColumnDefinition_MaxWidth, // ColumnDefinition_ActualWidth
    KnownPropertyIndex::ColumnDefinition_MinWidth, // ColumnDefinition_MaxWidth
    KnownPropertyIndex::ColumnDefinition_Width, // ColumnDefinition_MinWidth
    KnownPropertyIndex::DependencyObject_Column, // ColumnDefinition_Width
    KnownPropertyIndex::ComboBoxTemplateSettings_DropDownContentMinWidth, // ComboBoxTemplateSettings_DropDownClosedHeight
    KnownPropertyIndex::ComboBoxTemplateSettings_DropDownOffset, // ComboBoxTemplateSettings_DropDownContentMinWidth
    KnownPropertyIndex::ComboBoxTemplateSettings_DropDownOpenedHeight, // ComboBoxTemplateSettings_DropDownOffset
    KnownPropertyIndex::ComboBoxTemplateSettings_SelectedItemDirection, // ComboBoxTemplateSettings_DropDownOpenedHeight
    KnownPropertyIndex::DependencyObject_Column, // ComboBoxTemplateSettings_SelectedItemDirection
    KnownPropertyIndex::CommandBarTemplateSettings_EffectiveOverflowButtonVisibility, // CommandBarTemplateSettings_ContentHeight
    KnownPropertyIndex::CommandBarTemplateSettings_NegativeOverflowContentHeight, // CommandBarTemplateSettings_EffectiveOverflowButtonVisibility
    KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentClipRect, // CommandBarTemplateSettings_NegativeOverflowContentHeight
    KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentCompactYTranslation, // CommandBarTemplateSettings_OverflowContentClipRect
    KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentHeight, // CommandBarTemplateSettings_OverflowContentCompactYTranslation
    KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentHiddenYTranslation, // CommandBarTemplateSettings_OverflowContentHeight
    KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentHorizontalOffset, // CommandBarTemplateSettings_OverflowContentHiddenYTranslation
    KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentMaxHeight, // CommandBarTemplateSettings_OverflowContentHorizontalOffset
    KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentMaxWidth, // CommandBarTemplateSettings_OverflowContentMaxHeight
    KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentMinimalYTranslation, // CommandBarTemplateSettings_OverflowContentMaxWidth
    KnownPropertyIndex::CommandBarTemplateSettings_OverflowContentMinWidth, // CommandBarTemplateSettings_OverflowContentMinimalYTranslation
    KnownPropertyIndex::DependencyObject_Column, // CommandBarTemplateSettings_OverflowContentMinWidth
    KnownPropertyIndex::CornerRadius_BottomRight, // CornerRadius_BottomLeft
    KnownPropertyIndex::CornerRadius_TopLeft, // CornerRadius_BottomRight
    KnownPropertyIndex::CornerRadius_TopRight, // CornerRadius_TopLeft
    KnownPropertyIndex::DependencyObject_Column, // CornerRadius_TopRight
    KnownPropertyIndex::DependencyObject_Column, // DependencyPropertyProxy_PropertyId
    KnownPropertyIndex::DependencyObject_Column, // Double_ContentProperty
    KnownPropertyIndex::DoubleKeyFrame_Value, // DoubleKeyFrame_KeyTime
    KnownPropertyIndex::DependencyObject_Column, // DoubleKeyFrame_Value
    KnownPropertyIndex::DependencyObject_Column, // EasingFunctionBase_EasingMode
    KnownPropertyIndex::ExternalObjectReference_NativeValue, // ExternalObjectReference_MarkupExtensionType
    KnownPropertyIndex::DependencyObject_Column, // ExternalObjectReference_NativeValue
    KnownPropertyIndex::FlyoutBase_AllowFocusWhenDisabled, // FlyoutBase_AllowFocusOnInteraction
    KnownPropertyIndex::FlyoutBase_AreOpenCloseAnimationsEnabled, // FlyoutBase_AllowFocusWhenDisabled
    KnownPropertyIndex::FlyoutBase_AttachedFlyout, // FlyoutBase_AreOpenCloseAnimationsEnabled
    KnownPropertyIndex::FlyoutBase_ElementSoundMode, // FlyoutBase_AttachedFlyout
    KnownPropertyIndex::FlyoutBase_InputDevicePrefersPrimaryCommands, // FlyoutBase_ElementSoundMode
    KnownPropertyIndex::FlyoutBase_IsOpen, // FlyoutBase_InputDevicePrefersPrimaryCommands
    KnownPropertyIndex::FlyoutBase_LightDismissOverlayMode, // FlyoutBase_IsOpen
    KnownPropertyIndex::FlyoutBase_OverlayInputPassThroughElement, // FlyoutBase_LightDismissOverlayMode
    KnownPropertyIndex::FlyoutBase_Placement, // FlyoutBase_OverlayInputPassThroughElement
    KnownPropertyIndex::FlyoutBase_ShouldConstrainToRootBounds, // FlyoutBase_Placement
    KnownPropertyIndex::FlyoutBase_ShowMode, // FlyoutBase_ShouldConstrainToRootBounds
    KnownPropertyIndex::FlyoutBase_SystemBackdrop, // FlyoutBase_ShowMode
    KnownPropertyIndex::FlyoutBase_Target, // FlyoutBase_SystemBackdrop
    KnownPropertyIndex::DependencyObject_Column, // FlyoutBase_Target
    KnownPropertyIndex::DependencyObject_Column, // FontWeight_Weight
    KnownPropertyIndex::DependencyObject_Column, // FrameworkTemplate_Template
    KnownPropertyIndex::Geometry_Transform, // Geometry_Bounds
    KnownPropertyIndex::DependencyObject_Column, // Geometry_Transform
    KnownPropertyIndex::GradientStop_Offset, // GradientStop_Color
    KnownPropertyIndex::DependencyObject_Column, // GradientStop_Offset
    KnownPropertyIndex::GridLength_Value, // GridLength_GridUnitType
    KnownPropertyIndex::DependencyObject_Column, // GridLength_Value
    KnownPropertyIndex::GroupStyle_ContainerStyleSelector, // GroupStyle_ContainerStyle
    KnownPropertyIndex::GroupStyle_HeaderContainerStyle, // GroupStyle_ContainerStyleSelector
    KnownPropertyIndex::GroupStyle_HeaderTemplate, // GroupStyle_HeaderContainerStyle
    KnownPropertyIndex::GroupStyle_HeaderTemplateSelector, // GroupStyle_HeaderTemplate
    KnownPropertyIndex::GroupStyle_HidesIfEmpty, // GroupStyle_HeaderTemplateSelector
    KnownPropertyIndex::GroupStyle_Panel, // GroupStyle_HidesIfEmpty
    KnownPropertyIndex::DependencyObject_Column, // GroupStyle_Panel
    KnownPropertyIndex::DependencyObject_Column, // IconSource_Foreground
    KnownPropertyIndex::InertiaExpansionBehavior_DesiredExpansion, // InertiaExpansionBehavior_DesiredDeceleration
    KnownPropertyIndex::DependencyObject_Column, // InertiaExpansionBehavior_DesiredExpansion
    KnownPropertyIndex::InertiaRotationBehavior_DesiredRotation, // InertiaRotationBehavior_DesiredDeceleration
    KnownPropertyIndex::DependencyObject_Column, // InertiaRotationBehavior_DesiredRotation
    KnownPropertyIndex::InertiaTranslationBehavior_DesiredDisplacement, // InertiaTranslationBehavior_DesiredDeceleration
    KnownPropertyIndex::DependencyObject_Column, // InertiaTranslationBehavior_DesiredDisplacement
    KnownPropertyIndex::DependencyObject_Column, // InputScope_Names
    KnownPropertyIndex::DependencyObject_Column, // InputScopeName_NameValue
    KnownPropertyIndex::InputValidationCommand_InputValidationMode, // InputValidationCommand_InputValidationKind
    KnownPropertyIndex::DependencyObject_Column, // InputValidationCommand_InputValidationMode
    KnownPropertyIndex::DependencyObject_Column, // Int32_ContentProperty
    KnownPropertyIndex::KeyboardAccelerator_Key, // KeyboardAccelerator_IsEnabled
    KnownPropertyIndex::KeyboardAccelerator_Modifiers, // KeyboardAccelerator_Key
    KnownPropertyIndex::KeyboardAccelerator_ScopeOwner, // KeyboardAccelerator_Modifiers
    KnownPropertyIndex::DependencyObject_Column, // KeyboardAccelerator_ScopeOwner
    KnownPropertyIndex::KeySpline_ControlPoint2, // KeySpline_ControlPoint1
    KnownPropertyIndex::DependencyObject_Column, // KeySpline_ControlPoint2
    KnownPropertyIndex::LayoutTransitionStaggerItem_Element, // LayoutTransitionStaggerItem_Bounds
    KnownPropertyIndex::LayoutTransitionStaggerItem_Index, // LayoutTransitionStaggerItem_Element
    KnownPropertyIndex::LayoutTransitionStaggerItem_StaggerTime, // LayoutTransitionStaggerItem_Index
    KnownPropertyIndex::DependencyObject_Column, // LayoutTransitionStaggerItem_StaggerTime
    KnownPropertyIndex::LoadedImageSurface_DecodedSize, // LoadedImageSurface_DecodedPhysicalSize
    KnownPropertyIndex::LoadedImageSurface_NaturalSize, // LoadedImageSurface_DecodedSize
    KnownPropertyIndex::DependencyObject_Column, // LoadedImageSurface_NaturalSize
    KnownPropertyIndex::ManipulationPivot_Radius, // ManipulationPivot_Center
    KnownPropertyIndex::DependencyObject_Column, // ManipulationPivot_Radius
    KnownPropertyIndex::Matrix_M12, // Matrix_M11
    KnownPropertyIndex::Matrix_M21, // Matrix_M12
    KnownPropertyIndex::Matrix_M22, // Matrix_M21
    KnownPropertyIndex::Matrix_OffsetX, // Matrix_M22
    KnownPropertyIndex::Matrix_OffsetY, // Matrix_OffsetX
    KnownPropertyIndex::DependencyObject_Column, // Matrix_OffsetY
    KnownPropertyIndex::Matrix3D_M12, // Matrix3D_M11
    KnownPropertyIndex::Matrix3D_M13, // Matrix3D_M12
    KnownPropertyIndex::Matrix3D_M14, // Matrix3D_M13
    KnownPropertyIndex::Matrix3D_M21, // Matrix3D_M14
    KnownPropertyIndex::Matrix3D_M22, // Matrix3D_M21
    KnownPropertyIndex::Matrix3D_M23, // Matrix3D_M22
    KnownPropertyIndex::Matrix3D_M24, // Matrix3D_M23
    KnownPropertyIndex::Matrix3D_M31, // Matrix3D_M24
    KnownPropertyIndex::Matrix3D_M32, // Matrix3D_M31
    KnownPropertyIndex::Matrix3D_M33, // Matrix3D_M32
    KnownPropertyIndex::Matrix3D_M34, // Matrix3D_M33
    KnownPropertyIndex::Matrix3D_M44, // Matrix3D_M34
    KnownPropertyIndex::Matrix3D_OffsetX, // Matrix3D_M44
    KnownPropertyIndex::Matrix3D_OffsetY, // Matrix3D_OffsetX
    KnownPropertyIndex::Matrix3D_OffsetZ, // Matrix3D_OffsetY
    KnownPropertyIndex::DependencyObject_Column, // Matrix3D_OffsetZ
    KnownPropertyIndex::DependencyObject_Column, // MenuFlyoutItemTemplateSettings_KeyboardAcceleratorTextMinWidth
    KnownPropertyIndex::DependencyObject_Column, // MenuFlyoutPresenterTemplateSettings_FlyoutContentMinWidth
    KnownPropertyIndex::ObjectKeyFrame_Value, // ObjectKeyFrame_KeyTime
    KnownPropertyIndex::DependencyObject_Column, // ObjectKeyFrame_Value
    KnownPropertyIndex::DependencyObject_Column, // PageStackEntry_SourcePageType
    KnownPropertyIndex::DependencyObject_Column, // ParametricCurve_CurveSegments
    KnownPropertyIndex::ParametricCurveSegment_ConstantCoefficient, // ParametricCurveSegment_BeginOffset
    KnownPropertyIndex::ParametricCurveSegment_CubicCoefficient, // ParametricCurveSegment_ConstantCoefficient
    KnownPropertyIndex::ParametricCurveSegment_LinearCoefficient, // ParametricCurveSegment_CubicCoefficient
    KnownPropertyIndex::ParametricCurveSegment_QuadraticCoefficient, // ParametricCurveSegment_LinearCoefficient
    KnownPropertyIndex::DependencyObject_Column, // ParametricCurveSegment_QuadraticCoefficient
    KnownPropertyIndex::PathFigure_IsFilled, // PathFigure_IsClosed
    KnownPropertyIndex::PathFigure_Segments, // PathFigure_IsFilled
    KnownPropertyIndex::PathFigure_StartPoint, // PathFigure_Segments
    KnownPropertyIndex::DependencyObject_Column, // PathFigure_StartPoint
    KnownPropertyIndex::Point_X, // Point_ContentProperty
    KnownPropertyIndex::Point_Y, // Point_X
    KnownPropertyIndex::DependencyObject_Column, // Point_Y
    KnownPropertyIndex::Pointer_IsInRange, // Pointer_IsInContact
    KnownPropertyIndex::Pointer_PointerDeviceType, // Pointer_IsInRange
    KnownPropertyIndex::Pointer_PointerId, // Pointer_PointerDeviceType
    KnownPropertyIndex::DependencyObject_Column, // Pointer_PointerId
    KnownPropertyIndex::PointerKeyFrame_TargetValue, // PointerKeyFrame_PointerValue
    KnownPropertyIndex::DependencyObject_Column, // PointerKeyFrame_TargetValue
    KnownPropertyIndex::PointKeyFrame_Value, // PointKeyFrame_KeyTime
    KnownPropertyIndex::DependencyObject_Column, // PointKeyFrame_Value
    KnownPropertyIndex::DependencyObject_Column, // PresentationFrameworkCollection_Count
    KnownPropertyIndex::PrintDocument_DocumentSource, // PrintDocument_DesiredFormat
    KnownPropertyIndex::PrintDocument_PrintedPageCount, // PrintDocument_DocumentSource
    KnownPropertyIndex::DependencyObject_Column, // PrintDocument_PrintedPageCount
    KnownPropertyIndex::DependencyObject_Column, // PropertyPath_Path
    KnownPropertyIndex::Rect_Width, // Rect_Height
    KnownPropertyIndex::Rect_X, // Rect_Width
    KnownPropertyIndex::Rect_Y, // Rect_X
    KnownPropertyIndex::DependencyObject_Column, // Rect_Y
    KnownPropertyIndex::RowDefinition_Height, // RowDefinition_ActualHeight
    KnownPropertyIndex::RowDefinition_MaxHeight, // RowDefinition_Height
    KnownPropertyIndex::RowDefinition_MinHeight, // RowDefinition_MaxHeight
    KnownPropertyIndex::DependencyObject_Column, // RowDefinition_MinHeight
    KnownPropertyIndex::SecondaryContentRelationship_IsDescendant, // SecondaryContentRelationship_Curves
    KnownPropertyIndex::SecondaryContentRelationship_ShouldTargetClip, // SecondaryContentRelationship_IsDescendant
    KnownPropertyIndex::DependencyObject_Column, // SecondaryContentRelationship_ShouldTargetClip
    KnownPropertyIndex::DependencyObject_Column, // SetterBase_IsSealed
    KnownPropertyIndex::Size_Width, // Size_Height
    KnownPropertyIndex::DependencyObject_Column, // Size_Width
    KnownPropertyIndex::SplitViewTemplateSettings_NegativeOpenPaneLength, // SplitViewTemplateSettings_CompactPaneGridLength
    KnownPropertyIndex::SplitViewTemplateSettings_NegativeOpenPaneLengthMinusCompactLength, // SplitViewTemplateSettings_NegativeOpenPaneLength
    KnownPropertyIndex::SplitViewTemplateSettings_OpenPaneGridLength, // SplitViewTemplateSettings_NegativeOpenPaneLengthMinusCompactLength
    KnownPropertyIndex::SplitViewTemplateSettings_OpenPaneLength, // SplitViewTemplateSettings_OpenPaneGridLength
    KnownPropertyIndex::SplitViewTemplateSettings_OpenPaneLengthMinusCompactLength, // SplitViewTemplateSettings_OpenPaneLength
    KnownPropertyIndex::DependencyObject_Column, // SplitViewTemplateSettings_OpenPaneLengthMinusCompactLength
    KnownPropertyIndex::DependencyObject_Column, // StateTriggerBase_TriggerState
    KnownPropertyIndex::DependencyObject_Column, // String_ContentProperty
    KnownPropertyIndex::Style_IsSealed, // Style_BasedOn
    KnownPropertyIndex::Style_Setters, // Style_IsSealed
    KnownPropertyIndex::Style_TargetType, // Style_Setters
    KnownPropertyIndex::DependencyObject_Column, // Style_TargetType
    KnownPropertyIndex::TargetPropertyPath_Path, // TargetPropertyPath_CachedStyleSetterProperty
    KnownPropertyIndex::TargetPropertyPath_Target, // TargetPropertyPath_Path
    KnownPropertyIndex::DependencyObject_Column, // TargetPropertyPath_Target
    KnownPropertyIndex::DependencyObject_Column, // TextAdapter_Owner
    KnownPropertyIndex::TextElement_AccessKeyScopeOwner, // TextElement_AccessKey
    KnownPropertyIndex::TextElement_AllowFocusOnInteraction, // TextElement_AccessKeyScopeOwner
    KnownPropertyIndex::TextElement_CharacterSpacing, // TextElement_AllowFocusOnInteraction
    KnownPropertyIndex::TextElement_ExitDisplayModeOnAccessKeyInvoked, // TextElement_CharacterSpacing
    KnownPropertyIndex::TextElement_FontFamily, // TextElement_ExitDisplayModeOnAccessKeyInvoked
    KnownPropertyIndex::TextElement_FontSize, // TextElement_FontFamily
    KnownPropertyIndex::TextElement_FontStretch, // TextElement_FontSize
    KnownPropertyIndex::TextElement_FontStyle, // TextElement_FontStretch
    KnownPropertyIndex::TextElement_FontWeight, // TextElement_FontStyle
    KnownPropertyIndex::TextElement_Foreground, // TextElement_FontWeight
    KnownPropertyIndex::TextElement_IsAccessKeyScope, // TextElement_Foreground
    KnownPropertyIndex::TextElement_IsTextScaleFactorEnabled, // TextElement_IsAccessKeyScope
    KnownPropertyIndex::TextElement_KeyTipHorizontalOffset, // TextElement_IsTextScaleFactorEnabled
    KnownPropertyIndex::TextElement_KeyTipPlacementMode, // TextElement_KeyTipHorizontalOffset
    KnownPropertyIndex::TextElement_KeyTipVerticalOffset, // TextElement_KeyTipPlacementMode
    KnownPropertyIndex::TextElement_Language, // TextElement_KeyTipVerticalOffset
    KnownPropertyIndex::TextElement_TextDecorations, // TextElement_Language
    KnownPropertyIndex::DependencyObject_Column, // TextElement_TextDecorations
    KnownPropertyIndex::TextRange_StartIndex, // TextRange_Length
    KnownPropertyIndex::DependencyObject_Column, // TextRange_StartIndex
    KnownPropertyIndex::DependencyObject_Column, // TextRangeAdapter_Owner
    KnownPropertyIndex::Thickness_Left, // Thickness_Bottom
    KnownPropertyIndex::Thickness_Right, // Thickness_Left
    KnownPropertyIndex::Thickness_Top, // Thickness_Right
    KnownPropertyIndex::DependencyObject_Column, // Thickness_Top
    KnownPropertyIndex::Timeline_BeginTime, // Timeline_AutoReverse
    KnownPropertyIndex::Timeline_Duration, // Timeline_BeginTime
    KnownPropertyIndex::Timeline_FillBehavior, // Timeline_Duration
    KnownPropertyIndex::Timeline_RepeatBehavior, // Timeline_FillBehavior
    KnownPropertyIndex::Timeline_SpeedRatio, // Timeline_RepeatBehavior
    KnownPropertyIndex::DependencyObject_Column, // Timeline_SpeedRatio
    KnownPropertyIndex::DependencyObject_Column, // TimeSpan_Seconds
    KnownPropertyIndex::ToggleSwitchTemplateSettings_CurtainCurrentToOnOffset, // ToggleSwitchTemplateSettings_CurtainCurrentToOffOffset
    KnownPropertyIndex::ToggleSwitchTemplateSettings_CurtainOffToOnOffset, // ToggleSwitchTemplateSettings_CurtainCurrentToOnOffset
    KnownPropertyIndex::ToggleSwitchTemplateSettings_CurtainOnToOffOffset, // ToggleSwitchTemplateSettings_CurtainOffToOnOffset
    KnownPropertyIndex::ToggleSwitchTemplateSettings_KnobCurrentToOffOffset, // ToggleSwitchTemplateSettings_CurtainOnToOffOffset
    KnownPropertyIndex::ToggleSwitchTemplateSettings_KnobCurrentToOnOffset, // ToggleSwitchTemplateSettings_KnobCurrentToOffOffset
    KnownPropertyIndex::ToggleSwitchTemplateSettings_KnobOffToOnOffset, // ToggleSwitchTemplateSettings_KnobCurrentToOnOffset
    KnownPropertyIndex::ToggleSwitchTemplateSettings_KnobOnToOffOffset, // ToggleSwitchTemplateSettings_KnobOffToOnOffset
    KnownPropertyIndex::DependencyObject_Column, // ToggleSwitchTemplateSettings_KnobOnToOffOffset
    KnownPropertyIndex::ToolTipTemplateSettings_FromVerticalOffset, // ToolTipTemplateSettings_FromHorizontalOffset
    KnownPropertyIndex::DependencyObject_Column, // ToolTipTemplateSettings_FromVerticalOffset
    KnownPropertyIndex::DependencyObject_Column, // Transition_GeneratedStaggerFunction
    KnownPropertyIndex::TransitionTarget_ClipTransformOrigin, // TransitionTarget_ClipTransform
    KnownPropertyIndex::TransitionTarget_CompositeTransform, // TransitionTarget_ClipTransformOrigin
    KnownPropertyIndex::TransitionTarget_Opacity, // TransitionTarget_CompositeTransform
    KnownPropertyIndex::TransitionTarget_OpacityAnimation, // TransitionTarget_Opacity
    KnownPropertyIndex::TransitionTarget_TransformOrigin, // TransitionTarget_OpacityAnimation
    KnownPropertyIndex::DependencyObject_Column, // TransitionTarget_TransformOrigin
    KnownPropertyIndex::UIElement_AccessKeyScopeOwner, // UIElement_AccessKey
    KnownPropertyIndex::UIElement_ActualOffset, // UIElement_AccessKeyScopeOwner
    KnownPropertyIndex::UIElement_ActualSize, // UIElement_ActualOffset
    KnownPropertyIndex::UIElement_AllowDrop, // UIElement_ActualSize
    KnownPropertyIndex::UIElement_CacheMode, // UIElement_AllowDrop
    KnownPropertyIndex::UIElement_CanBeScrollAnchor, // UIElement_CacheMode
    KnownPropertyIndex::UIElement_CanDrag, // UIElement_CanBeScrollAnchor
    KnownPropertyIndex::UIElement_CanvasOffset, // UIElement_CanDrag
    KnownPropertyIndex::UIElement_ChildrenInternal, // UIElement_CanvasOffset
    KnownPropertyIndex::UIElement_Clip, // UIElement_ChildrenInternal
    KnownPropertyIndex::UIElement_CompositeMode, // UIElement_Clip
    KnownPropertyIndex::UIElement_ContextFlyout, // UIElement_CompositeMode
    KnownPropertyIndex::UIElement_DirectManipulationContainer, // UIElement_ContextFlyout
    KnownPropertyIndex::UIElement_ExitDisplayModeOnAccessKeyInvoked, // UIElement_DirectManipulationContainer
    KnownPropertyIndex::UIElement_FocusState, // UIElement_ExitDisplayModeOnAccessKeyInvoked
    KnownPropertyIndex::UIElement_GlobalScaleFactor, // UIElement_FocusState
    KnownPropertyIndex::UIElement_HandOffVisualClip, // UIElement_GlobalScaleFactor
    KnownPropertyIndex::UIElement_HandOffVisualTransform, // UIElement_HandOffVisualClip
    KnownPropertyIndex::UIElement_HandOffVisualTransformMatrix3D, // UIElement_HandOffVisualTransform
    KnownPropertyIndex::UIElement_HighContrastAdjustment, // UIElement_HandOffVisualTransformMatrix3D
    KnownPropertyIndex::UIElement_IsAccessKeyScope, // UIElement_HighContrastAdjustment
    KnownPropertyIndex::UIElement_IsDoubleTapEnabled, // UIElement_IsAccessKeyScope
    KnownPropertyIndex::UIElement_IsGamepadFocusCandidate, // UIElement_IsDoubleTapEnabled
    KnownPropertyIndex::UIElement_IsHitTestVisible, // UIElement_IsGamepadFocusCandidate
    KnownPropertyIndex::UIElement_IsHoldingEnabled, // UIElement_IsHitTestVisible
    KnownPropertyIndex::UIElement_IsRightTapEnabled, // UIElement_IsHoldingEnabled
    KnownPropertyIndex::UIElement_IsTabStop, // UIElement_IsRightTapEnabled
    KnownPropertyIndex::UIElement_IsTapEnabled, // UIElement_IsTabStop
    KnownPropertyIndex::UIElement_KeyboardAcceleratorPlacementMode, // UIElement_IsTapEnabled
    KnownPropertyIndex::UIElement_KeyboardAcceleratorPlacementTarget, // UIElement_KeyboardAcceleratorPlacementMode
    KnownPropertyIndex::UIElement_KeyboardAccelerators, // UIElement_KeyboardAcceleratorPlacementTarget
    KnownPropertyIndex::UIElement_KeyTipHorizontalOffset, // UIElement_KeyboardAccelerators
    KnownPropertyIndex::UIElement_KeyTipPlacementMode, // UIElement_KeyTipHorizontalOffset
    KnownPropertyIndex::UIElement_KeyTipTarget, // UIElement_KeyTipPlacementMode
    KnownPropertyIndex::UIElement_KeyTipVerticalOffset, // UIElement_KeyTipTarget
    KnownPropertyIndex::UIElement_Lights, // UIElement_KeyTipVerticalOffset
    KnownPropertyIndex::UIElement_ManipulationMode, // UIElement_Lights
    KnownPropertyIndex::UIElement_OffsetXAnimation, // UIElement_ManipulationMode
    KnownPropertyIndex::UIElement_OffsetYAnimation, // UIElement_OffsetXAnimation
    KnownPropertyIndex::UIElement_Opacity, // UIElement_OffsetYAnimation
    KnownPropertyIndex::UIElement_OpacityAnimation, // UIElement_Opacity
    KnownPropertyIndex::UIElement_OpacityExpression, // UIElement_OpacityAnimation
    KnownPropertyIndex::UIElement_OpacityTransition, // UIElement_OpacityExpression
    KnownPropertyIndex::UIElement_PointerCaptures, // UIElement_OpacityTransition
    KnownPropertyIndex::UIElement_Projection, // UIElement_PointerCaptures
    KnownPropertyIndex::UIElement_ProtectedCursor, // UIElement_Projection
    KnownPropertyIndex::UIElement_RenderSize, // UIElement_ProtectedCursor
    KnownPropertyIndex::UIElement_RenderTransform, // UIElement_RenderSize
    KnownPropertyIndex::UIElement_RenderTransformOrigin, // UIElement_RenderTransform
    KnownPropertyIndex::UIElement_RotationTransition, // UIElement_RenderTransformOrigin
    KnownPropertyIndex::UIElement_ScaleTransition, // UIElement_RotationTransition
    KnownPropertyIndex::UIElement_Shadow, // UIElement_ScaleTransition
    KnownPropertyIndex::UIElement_TabFocusNavigation, // UIElement_Shadow
    KnownPropertyIndex::UIElement_TabIndex, // UIElement_TabFocusNavigation
    KnownPropertyIndex::UIElement_Transform3D, // UIElement_TabIndex
    KnownPropertyIndex::UIElement_Transitions, // UIElement_Transform3D
    KnownPropertyIndex::UIElement_TransitionTarget, // UIElement_Transitions
    KnownPropertyIndex::UIElement_TranslationTransition, // UIElement_TransitionTarget
    KnownPropertyIndex::UIElement_UseLayoutRounding, // UIElement_TranslationTransition
    KnownPropertyIndex::UIElement_UseSystemFocusVisuals, // UIElement_UseLayoutRounding
    KnownPropertyIndex::UIElement_Visibility, // UIElement_UseSystemFocusVisuals
    KnownPropertyIndex::UIElement_XYFocusDown, // UIElement_Visibility
    KnownPropertyIndex::UIElement_XYFocusDownNavigationStrategy, // UIElement_XYFocusDown
    KnownPropertyIndex::UIElement_XYFocusKeyboardNavigation, // UIElement_XYFocusDownNavigationStrategy
    KnownPropertyIndex::UIElement_XYFocusLeft, // UIElement_XYFocusKeyboardNavigation
    KnownPropertyIndex::UIElement_XYFocusLeftNavigationStrategy, // UIElement_XYFocusLeft
    KnownPropertyIndex::UIElement_XYFocusRight, // UIElement_XYFocusLeftNavigationStrategy
    KnownPropertyIndex::UIElement_XYFocusRightNavigationStrategy, // UIElement_XYFocusRight
    KnownPropertyIndex::UIElement_XYFocusUp, // UIElement_XYFocusRightNavigationStrategy
    KnownPropertyIndex::UIElement_XYFocusUpNavigationStrategy, // UIElement_XYFocusUp
    KnownPropertyIndex::UIElement_CenterPoint, // UIElement_XYFocusUpNavigationStrategy
    KnownPropertyIndex::VisualState___DeferredStoryboard, // VisualState___DeferredSetters
    KnownPropertyIndex::VisualState_Setters, // VisualState___DeferredStoryboard
    KnownPropertyIndex::VisualState_StateTriggers, // VisualState_Setters
    KnownPropertyIndex::VisualState_Storyboard, // VisualState_StateTriggers
    KnownPropertyIndex::DependencyObject_Column, // VisualState_Storyboard
    KnownPropertyIndex::VisualStateGroup_Transitions, // VisualStateGroup_States
    KnownPropertyIndex::DependencyObject_Column, // VisualStateGroup_Transitions
    KnownPropertyIndex::VisualStateManager_VisualStateGroups, // VisualStateManager_CustomVisualStateManager
    KnownPropertyIndex::DependencyObject_Column, // VisualStateManager_VisualStateGroups
    KnownPropertyIndex::VisualTransition_GeneratedDuration, // VisualTransition_From
    KnownPropertyIndex::VisualTransition_GeneratedEasingFunction, // VisualTransition_GeneratedDuration
    KnownPropertyIndex::VisualTransition_Storyboard, // VisualTransition_GeneratedEasingFunction
    KnownPropertyIndex::VisualTransition_To, // VisualTransition_Storyboard
    KnownPropertyIndex::DependencyObject_Column, // VisualTransition_To
    KnownPropertyIndex::Window_SystemBackdrop, // Window_Content
    KnownPropertyIndex::Window_Title, // Window_SystemBackdrop
    KnownPropertyIndex::Window_TransparentBackground, // Window_Title
    KnownPropertyIndex::DependencyObject_Column, // Window_TransparentBackground
    KnownPropertyIndex::XamlUICommand_Command, // XamlUICommand_AccessKey
    KnownPropertyIndex::XamlUICommand_Description, // XamlUICommand_Command
    KnownPropertyIndex::XamlUICommand_IconSource, // XamlUICommand_Description
    KnownPropertyIndex::XamlUICommand_KeyboardAccelerators, // XamlUICommand_IconSource
    KnownPropertyIndex::XamlUICommand_Label, // XamlUICommand_KeyboardAccelerators
    KnownPropertyIndex::DependencyObject_Column, // XamlUICommand_Label
    KnownPropertyIndex::AdaptiveTrigger_MinWindowWidth, // AdaptiveTrigger_MinWindowHeight
    KnownPropertyIndex::StateTriggerBase_TriggerState, // AdaptiveTrigger_MinWindowWidth
    KnownPropertyIndex::ArcSegment_Point, // ArcSegment_IsLargeArc
    KnownPropertyIndex::ArcSegment_RotationAngle, // ArcSegment_Point
    KnownPropertyIndex::ArcSegment_Size, // ArcSegment_RotationAngle
    KnownPropertyIndex::ArcSegment_SweepDirection, // ArcSegment_Size
    KnownPropertyIndex::DependencyObject_Column, // ArcSegment_SweepDirection
    KnownPropertyIndex::EasingFunctionBase_EasingMode, // BackEase_Amplitude
    KnownPropertyIndex::DependencyObject_Column, // BeginStoryboard_Storyboard
    KnownPropertyIndex::BezierSegment_Point2, // BezierSegment_Point1
    KnownPropertyIndex::BezierSegment_Point3, // BezierSegment_Point2
    KnownPropertyIndex::DependencyObject_Column, // BezierSegment_Point3
    KnownPropertyIndex::BitmapIconSource_UriSource, // BitmapIconSource_ShowAsMonochrome
    KnownPropertyIndex::IconSource_Foreground, // BitmapIconSource_UriSource
    KnownPropertyIndex::BitmapSource_PixelWidth, // BitmapSource_PixelHeight
    KnownPropertyIndex::DependencyObject_Column, // BitmapSource_PixelWidth
    KnownPropertyIndex::Block_LineHeight, // Block_HorizontalTextAlignment
    KnownPropertyIndex::Block_LineStackingStrategy, // Block_LineHeight
    KnownPropertyIndex::Block_Margin, // Block_LineStackingStrategy
    KnownPropertyIndex::Block_TextAlignment, // Block_Margin
    KnownPropertyIndex::TextElement_AccessKey, // Block_TextAlignment
    KnownPropertyIndex::BounceEase_Bounciness, // BounceEase_Bounces
    KnownPropertyIndex::EasingFunctionBase_EasingMode, // BounceEase_Bounciness
    KnownPropertyIndex::ColorAnimation_EasingFunction, // ColorAnimation_By
    KnownPropertyIndex::ColorAnimation_EnableDependentAnimation, // ColorAnimation_EasingFunction
    KnownPropertyIndex::ColorAnimation_From, // ColorAnimation_EnableDependentAnimation
    KnownPropertyIndex::ColorAnimation_To, // ColorAnimation_From
    KnownPropertyIndex::Timeline_AutoReverse, // ColorAnimation_To
    KnownPropertyIndex::ColorAnimationUsingKeyFrames_KeyFrames, // ColorAnimationUsingKeyFrames_EnableDependentAnimation
    KnownPropertyIndex::Timeline_AutoReverse, // ColorAnimationUsingKeyFrames_KeyFrames
    KnownPropertyIndex::CompositeTransform3D_CenterXAnimation, // CompositeTransform3D_CenterX
    KnownPropertyIndex::CompositeTransform3D_CenterY, // CompositeTransform3D_CenterXAnimation
    KnownPropertyIndex::CompositeTransform3D_CenterYAnimation, // CompositeTransform3D_CenterY
    KnownPropertyIndex::CompositeTransform3D_CenterZ, // CompositeTransform3D_CenterYAnimation
    KnownPropertyIndex::CompositeTransform3D_CenterZAnimation, // CompositeTransform3D_CenterZ
    KnownPropertyIndex::CompositeTransform3D_RotationX, // CompositeTransform3D_CenterZAnimation
    KnownPropertyIndex::CompositeTransform3D_RotationXAnimation, // CompositeTransform3D_RotationX
    KnownPropertyIndex::CompositeTransform3D_RotationY, // CompositeTransform3D_RotationXAnimation
    KnownPropertyIndex::CompositeTransform3D_RotationYAnimation, // CompositeTransform3D_RotationY
    KnownPropertyIndex::CompositeTransform3D_RotationZ, // CompositeTransform3D_RotationYAnimation
    KnownPropertyIndex::CompositeTransform3D_RotationZAnimation, // CompositeTransform3D_RotationZ
    KnownPropertyIndex::CompositeTransform3D_ScaleX, // CompositeTransform3D_RotationZAnimation
    KnownPropertyIndex::CompositeTransform3D_ScaleXAnimation, // CompositeTransform3D_ScaleX
    KnownPropertyIndex::CompositeTransform3D_ScaleY, // CompositeTransform3D_ScaleXAnimation
    KnownPropertyIndex::CompositeTransform3D_ScaleYAnimation, // CompositeTransform3D_ScaleY
    KnownPropertyIndex::CompositeTransform3D_ScaleZ, // CompositeTransform3D_ScaleYAnimation
    KnownPropertyIndex::CompositeTransform3D_ScaleZAnimation, // CompositeTransform3D_ScaleZ
    KnownPropertyIndex::CompositeTransform3D_TranslateX, // CompositeTransform3D_ScaleZAnimation
    KnownPropertyIndex::CompositeTransform3D_TranslateXAnimation, // CompositeTransform3D_TranslateX
    KnownPropertyIndex::CompositeTransform3D_TranslateY, // CompositeTransform3D_TranslateXAnimation
    KnownPropertyIndex::CompositeTransform3D_TranslateYAnimation, // CompositeTransform3D_TranslateY
    KnownPropertyIndex::CompositeTransform3D_TranslateZ, // CompositeTransform3D_TranslateYAnimation
    KnownPropertyIndex::CompositeTransform3D_TranslateZAnimation, // CompositeTransform3D_TranslateZ
    KnownPropertyIndex::DependencyObject_Column, // CompositeTransform3D_TranslateZAnimation
    KnownPropertyIndex::ContentThemeTransition_VerticalOffset, // ContentThemeTransition_HorizontalOffset
    KnownPropertyIndex::Transition_GeneratedStaggerFunction, // ContentThemeTransition_VerticalOffset
    KnownPropertyIndex::FrameworkTemplate_Template, // ControlTemplate_TargetType
    KnownPropertyIndex::DependencyObject_Column, // CustomResource_ResourceKey
    KnownPropertyIndex::FrameworkTemplate_Template, // DataTemplate_ExtensionInstance
    KnownPropertyIndex::Timeline_AutoReverse, // DispatcherTimer_Interval
    KnownPropertyIndex::DoubleAnimation_EasingFunction, // DoubleAnimation_By
    KnownPropertyIndex::DoubleAnimation_EnableDependentAnimation, // DoubleAnimation_EasingFunction
    KnownPropertyIndex::DoubleAnimation_From, // DoubleAnimation_EnableDependentAnimation
    KnownPropertyIndex::DoubleAnimation_To, // DoubleAnimation_From
    KnownPropertyIndex::Timeline_AutoReverse, // DoubleAnimation_To
    KnownPropertyIndex::DoubleAnimationUsingKeyFrames_KeyFrames, // DoubleAnimationUsingKeyFrames_EnableDependentAnimation
    KnownPropertyIndex::Timeline_AutoReverse, // DoubleAnimationUsingKeyFrames_KeyFrames
    KnownPropertyIndex::TimeSpan_Seconds, // Duration_TimeSpan
    KnownPropertyIndex::Timeline_AutoReverse, // DynamicTimeline_Children
    KnownPropertyIndex::ColorKeyFrame_KeyTime, // EasingColorKeyFrame_EasingFunction
    KnownPropertyIndex::DoubleKeyFrame_KeyTime, // EasingDoubleKeyFrame_EasingFunction
    KnownPropertyIndex::PointKeyFrame_KeyTime, // EasingPointKeyFrame_EasingFunction
    KnownPropertyIndex::Transition_GeneratedStaggerFunction, // EdgeUIThemeTransition_Edge
    KnownPropertyIndex::ElasticEase_Springiness, // ElasticEase_Oscillations
    KnownPropertyIndex::EasingFunctionBase_EasingMode, // ElasticEase_Springiness
    KnownPropertyIndex::EllipseGeometry_RadiusX, // EllipseGeometry_Center
    KnownPropertyIndex::EllipseGeometry_RadiusY, // EllipseGeometry_RadiusX
    KnownPropertyIndex::Geometry_Bounds, // EllipseGeometry_RadiusY
    KnownPropertyIndex::EntranceThemeTransition_FromVerticalOffset, // EntranceThemeTransition_FromHorizontalOffset
    KnownPropertyIndex::EntranceThemeTransition_IsStaggeringEnabled, // EntranceThemeTransition_FromVerticalOffset
    KnownPropertyIndex::Transition_GeneratedStaggerFunction, // EntranceThemeTransition_IsStaggeringEnabled
    KnownPropertyIndex::EventTrigger_RoutedEvent, // EventTrigger_Actions
    KnownPropertyIndex::DependencyObject_Column, // EventTrigger_RoutedEvent
    KnownPropertyIndex::EasingFunctionBase_EasingMode, // ExponentialEase_Exponent
    KnownPropertyIndex::Flyout_FlyoutPresenterStyle, // Flyout_Content
    KnownPropertyIndex::FlyoutBase_AllowFocusOnInteraction, // Flyout_FlyoutPresenterStyle
    KnownPropertyIndex::FontIconSource_FontSize, // FontIconSource_FontFamily
    KnownPropertyIndex::FontIconSource_FontStyle, // FontIconSource_FontSize
    KnownPropertyIndex::FontIconSource_FontWeight, // FontIconSource_FontStyle
    KnownPropertyIndex::FontIconSource_Glyph, // FontIconSource_FontWeight
    KnownPropertyIndex::FontIconSource_IsTextScaleFactorEnabled, // FontIconSource_Glyph
    KnownPropertyIndex::FontIconSource_MirroredWhenRightToLeft, // FontIconSource_IsTextScaleFactorEnabled
    KnownPropertyIndex::IconSource_Foreground, // FontIconSource_MirroredWhenRightToLeft
    KnownPropertyIndex::FrameworkElement_ActualTheme, // FrameworkElement_ActualHeight
    KnownPropertyIndex::FrameworkElement_ActualWidth, // FrameworkElement_ActualTheme
    KnownPropertyIndex::FrameworkElement_AllowFocusOnInteraction, // FrameworkElement_ActualWidth
    KnownPropertyIndex::FrameworkElement_AllowFocusWhenDisabled, // FrameworkElement_AllowFocusOnInteraction
    KnownPropertyIndex::FrameworkElement_AutomationPeerFactoryIndex, // FrameworkElement_AllowFocusWhenDisabled
    KnownPropertyIndex::FrameworkElement_BringIntoViewDistanceX, // FrameworkElement_AutomationPeerFactoryIndex
    KnownPropertyIndex::FrameworkElement_BringIntoViewDistanceY, // FrameworkElement_BringIntoViewDistanceX
    KnownPropertyIndex::FrameworkElement_DataContext, // FrameworkElement_BringIntoViewDistanceY
    KnownPropertyIndex::FrameworkElement_EffectiveViewport, // FrameworkElement_DataContext
    KnownPropertyIndex::FrameworkElement_FlowDirection, // FrameworkElement_EffectiveViewport
    KnownPropertyIndex::FrameworkElement_FocusVisualMargin, // FrameworkElement_FlowDirection
    KnownPropertyIndex::FrameworkElement_FocusVisualPrimaryBrush, // FrameworkElement_FocusVisualMargin
    KnownPropertyIndex::FrameworkElement_FocusVisualPrimaryThickness, // FrameworkElement_FocusVisualPrimaryBrush
    KnownPropertyIndex::FrameworkElement_FocusVisualSecondaryBrush, // FrameworkElement_FocusVisualPrimaryThickness
    KnownPropertyIndex::FrameworkElement_FocusVisualSecondaryThickness, // FrameworkElement_FocusVisualSecondaryBrush
    KnownPropertyIndex::FrameworkElement_Height, // FrameworkElement_FocusVisualSecondaryThickness
    KnownPropertyIndex::FrameworkElement_HorizontalAlignment, // FrameworkElement_Height
    KnownPropertyIndex::FrameworkElement_IsTextScaleFactorEnabledInternal, // FrameworkElement_HorizontalAlignment
    KnownPropertyIndex::FrameworkElement_Language, // FrameworkElement_IsTextScaleFactorEnabledInternal
    KnownPropertyIndex::FrameworkElement_Margin, // FrameworkElement_Language
    KnownPropertyIndex::FrameworkElement_MaxHeight, // FrameworkElement_Margin
    KnownPropertyIndex::FrameworkElement_MaxViewport, // FrameworkElement_MaxHeight
    KnownPropertyIndex::FrameworkElement_MaxWidth, // FrameworkElement_MaxViewport
    KnownPropertyIndex::FrameworkElement_MinHeight, // FrameworkElement_MaxWidth
    KnownPropertyIndex::FrameworkElement_MinWidth, // FrameworkElement_MinHeight
    KnownPropertyIndex::FrameworkElement_Parent, // FrameworkElement_MinWidth
    KnownPropertyIndex::FrameworkElement_RequestedTheme, // FrameworkElement_Parent
    KnownPropertyIndex::FrameworkElement_Resources, // FrameworkElement_RequestedTheme
    KnownPropertyIndex::FrameworkElement_Style, // FrameworkElement_Resources
    KnownPropertyIndex::FrameworkElement_Tag, // FrameworkElement_Style
    KnownPropertyIndex::FrameworkElement_Triggers, // FrameworkElement_Tag
    KnownPropertyIndex::FrameworkElement_VerticalAlignment, // FrameworkElement_Triggers
    KnownPropertyIndex::FrameworkElement_Width, // FrameworkElement_VerticalAlignment
    KnownPropertyIndex::UIElement_AccessKey, // FrameworkElement_Width
    KnownPropertyIndex::AutomationPeer_EventsSource, // FrameworkElementAutomationPeer_Owner
    KnownPropertyIndex::FrameworkElementEx_ActualWidth, // FrameworkElementEx_ActualHeight
    KnownPropertyIndex::FrameworkElementEx_Children, // FrameworkElementEx_ActualWidth
    KnownPropertyIndex::FrameworkElementEx_Height, // FrameworkElementEx_Children
    KnownPropertyIndex::FrameworkElementEx_HorizontalAlignment, // FrameworkElementEx_Height
    KnownPropertyIndex::FrameworkElementEx_Margin, // FrameworkElementEx_HorizontalAlignment
    KnownPropertyIndex::FrameworkElementEx_MaxHeight, // FrameworkElementEx_Margin
    KnownPropertyIndex::FrameworkElementEx_MaxWidth, // FrameworkElementEx_MaxHeight
    KnownPropertyIndex::FrameworkElementEx_MinHeight, // FrameworkElementEx_MaxWidth
    KnownPropertyIndex::FrameworkElementEx_MinWidth, // FrameworkElementEx_MinHeight
    KnownPropertyIndex::FrameworkElementEx_VerticalAlignment, // FrameworkElementEx_MinWidth
    KnownPropertyIndex::FrameworkElementEx_Width, // FrameworkElementEx_VerticalAlignment
    KnownPropertyIndex::UIElement_AccessKey, // FrameworkElementEx_Width
    KnownPropertyIndex::GeometryGroup_FillRule, // GeometryGroup_Children
    KnownPropertyIndex::Geometry_Bounds, // GeometryGroup_FillRule
    KnownPropertyIndex::GradientBrush_GradientStops, // GradientBrush_ColorInterpolationMode
    KnownPropertyIndex::GradientBrush_MappingMode, // GradientBrush_GradientStops
    KnownPropertyIndex::GradientBrush_SpreadMethod, // GradientBrush_MappingMode
    KnownPropertyIndex::Brush_Opacity, // GradientBrush_SpreadMethod
    KnownPropertyIndex::DependencyObject_Column, // GridViewItemTemplateSettings_DragItemsCount
    KnownPropertyIndex::ItemAutomationPeer_ItemsControlAutomationPeer, // ItemAutomationPeer_Item
    KnownPropertyIndex::AutomationPeer_EventsSource, // ItemAutomationPeer_ItemsControlAutomationPeer
    KnownPropertyIndex::TimeSpan_Seconds, // KeyTime_TimeSpan
    KnownPropertyIndex::LineGeometry_StartPoint, // LineGeometry_EndPoint
    KnownPropertyIndex::Geometry_Bounds, // LineGeometry_StartPoint
    KnownPropertyIndex::DependencyObject_Column, // LineSegment_Point
    KnownPropertyIndex::DependencyObject_Column, // ListViewItemTemplateSettings_DragItemsCount
    KnownPropertyIndex::DependencyObject_Column, // Matrix3DProjection_ProjectionMatrix
    KnownPropertyIndex::MenuFlyout_MenuFlyoutPresenterStyle, // MenuFlyout_Items
    KnownPropertyIndex::FlyoutBase_AllowFocusOnInteraction, // MenuFlyout_MenuFlyoutPresenterStyle
    KnownPropertyIndex::MenuPopupThemeTransition_Direction, // MenuPopupThemeTransition_ClosedRatio
    KnownPropertyIndex::MenuPopupThemeTransition_OpenedLength, // MenuPopupThemeTransition_Direction
    KnownPropertyIndex::Transition_GeneratedStaggerFunction, // MenuPopupThemeTransition_OpenedLength
    KnownPropertyIndex::ObjectAnimationUsingKeyFrames_KeyFrames, // ObjectAnimationUsingKeyFrames_EnableDependentAnimation
    KnownPropertyIndex::Timeline_AutoReverse, // ObjectAnimationUsingKeyFrames_KeyFrames
    KnownPropertyIndex::PanelEx_ActualWidth, // PanelEx_ActualHeight
    KnownPropertyIndex::PanelEx_Children, // PanelEx_ActualWidth
    KnownPropertyIndex::PanelEx_Height, // PanelEx_Children
    KnownPropertyIndex::PanelEx_HorizontalAlignment, // PanelEx_Height
    KnownPropertyIndex::PanelEx_Margin, // PanelEx_HorizontalAlignment
    KnownPropertyIndex::PanelEx_MaxHeight, // PanelEx_Margin
    KnownPropertyIndex::PanelEx_MaxWidth, // PanelEx_MaxHeight
    KnownPropertyIndex::PanelEx_MinHeight, // PanelEx_MaxWidth
    KnownPropertyIndex::PanelEx_MinWidth, // PanelEx_MinHeight
    KnownPropertyIndex::PanelEx_VerticalAlignment, // PanelEx_MinWidth
    KnownPropertyIndex::PanelEx_Width, // PanelEx_VerticalAlignment
    KnownPropertyIndex::UIElement_AccessKey, // PanelEx_Width
    KnownPropertyIndex::Transition_GeneratedStaggerFunction, // PaneThemeTransition_Edge
    KnownPropertyIndex::PathGeometry_FillRule, // PathGeometry_Figures
    KnownPropertyIndex::Geometry_Bounds, // PathGeometry_FillRule
    KnownPropertyIndex::IconSource_Foreground, // PathIconSource_Data
    KnownPropertyIndex::PerspectiveTransform3D_OffsetX, // PerspectiveTransform3D_Depth
    KnownPropertyIndex::PerspectiveTransform3D_OffsetY, // PerspectiveTransform3D_OffsetX
    KnownPropertyIndex::DependencyObject_Column, // PerspectiveTransform3D_OffsetY
    KnownPropertyIndex::PickerFlyoutThemeTransition_OpenedLength, // PickerFlyoutThemeTransition_OffsetFromCenter
    KnownPropertyIndex::Transition_GeneratedStaggerFunction, // PickerFlyoutThemeTransition_OpenedLength
    KnownPropertyIndex::PlaneProjection_CenterOfRotationXAnimation, // PlaneProjection_CenterOfRotationX
    KnownPropertyIndex::PlaneProjection_CenterOfRotationY, // PlaneProjection_CenterOfRotationXAnimation
    KnownPropertyIndex::PlaneProjection_CenterOfRotationYAnimation, // PlaneProjection_CenterOfRotationY
    KnownPropertyIndex::PlaneProjection_CenterOfRotationZ, // PlaneProjection_CenterOfRotationYAnimation
    KnownPropertyIndex::PlaneProjection_CenterOfRotationZAnimation, // PlaneProjection_CenterOfRotationZ
    KnownPropertyIndex::PlaneProjection_GlobalOffsetX, // PlaneProjection_CenterOfRotationZAnimation
    KnownPropertyIndex::PlaneProjection_GlobalOffsetXAnimation, // PlaneProjection_GlobalOffsetX
    KnownPropertyIndex::PlaneProjection_GlobalOffsetY, // PlaneProjection_GlobalOffsetXAnimation
    KnownPropertyIndex::PlaneProjection_GlobalOffsetYAnimation, // PlaneProjection_GlobalOffsetY
    KnownPropertyIndex::PlaneProjection_GlobalOffsetZ, // PlaneProjection_GlobalOffsetYAnimation
    KnownPropertyIndex::PlaneProjection_GlobalOffsetZAnimation, // PlaneProjection_GlobalOffsetZ
    KnownPropertyIndex::PlaneProjection_LocalOffsetX, // PlaneProjection_GlobalOffsetZAnimation
    KnownPropertyIndex::PlaneProjection_LocalOffsetXAnimation, // PlaneProjection_LocalOffsetX
    KnownPropertyIndex::PlaneProjection_LocalOffsetY, // PlaneProjection_LocalOffsetXAnimation
    KnownPropertyIndex::PlaneProjection_LocalOffsetYAnimation, // PlaneProjection_LocalOffsetY
    KnownPropertyIndex::PlaneProjection_LocalOffsetZ, // PlaneProjection_LocalOffsetYAnimation
    KnownPropertyIndex::PlaneProjection_LocalOffsetZAnimation, // PlaneProjection_LocalOffsetZ
    KnownPropertyIndex::PlaneProjection_ProjectionMatrix, // PlaneProjection_LocalOffsetZAnimation
    KnownPropertyIndex::PlaneProjection_RotationX, // PlaneProjection_ProjectionMatrix
    KnownPropertyIndex::PlaneProjection_RotationXAnimation, // PlaneProjection_RotationX
    KnownPropertyIndex::PlaneProjection_RotationY, // PlaneProjection_RotationXAnimation
    KnownPropertyIndex::PlaneProjection_RotationYAnimation, // PlaneProjection_RotationY
    KnownPropertyIndex::PlaneProjection_RotationZ, // PlaneProjection_RotationYAnimation
    KnownPropertyIndex::PlaneProjection_RotationZAnimation, // PlaneProjection_RotationZ
    KnownPropertyIndex::DependencyObject_Column, // PlaneProjection_RotationZAnimation
    KnownPropertyIndex::PointAnimation_EasingFunction, // PointAnimation_By
    KnownPropertyIndex::PointAnimation_EnableDependentAnimation, // PointAnimation_EasingFunction
    KnownPropertyIndex::PointAnimation_From, // PointAnimation_EnableDependentAnimation
    KnownPropertyIndex::PointAnimation_To, // PointAnimation_From
    KnownPropertyIndex::Timeline_AutoReverse, // PointAnimation_To
    KnownPropertyIndex::PointAnimationUsingKeyFrames_KeyFrames, // PointAnimationUsingKeyFrames_EnableDependentAnimation
    KnownPropertyIndex::Timeline_AutoReverse, // PointAnimationUsingKeyFrames_KeyFrames
    KnownPropertyIndex::PointerAnimationUsingKeyFrames_PointerSource, // PointerAnimationUsingKeyFrames_KeyFrames
    KnownPropertyIndex::Timeline_AutoReverse, // PointerAnimationUsingKeyFrames_PointerSource
    KnownPropertyIndex::DependencyObject_Column, // PolyBezierSegment_Points
    KnownPropertyIndex::DependencyObject_Column, // PolyLineSegment_Points
    KnownPropertyIndex::DependencyObject_Column, // PolyQuadraticBezierSegment_Points
    KnownPropertyIndex::PopupThemeTransition_FromVerticalOffset, // PopupThemeTransition_FromHorizontalOffset
    KnownPropertyIndex::Transition_GeneratedStaggerFunction, // PopupThemeTransition_FromVerticalOffset
    KnownPropertyIndex::EasingFunctionBase_EasingMode, // PowerEase_Power
    KnownPropertyIndex::PVLStaggerFunction_DelayReduce, // PVLStaggerFunction_Delay
    KnownPropertyIndex::PVLStaggerFunction_Maximum, // PVLStaggerFunction_DelayReduce
    KnownPropertyIndex::PVLStaggerFunction_Reverse, // PVLStaggerFunction_Maximum
    KnownPropertyIndex::DependencyObject_Column, // PVLStaggerFunction_Reverse
    KnownPropertyIndex::QuadraticBezierSegment_Point2, // QuadraticBezierSegment_Point1
    KnownPropertyIndex::DependencyObject_Column, // QuadraticBezierSegment_Point2
    KnownPropertyIndex::RectangleGeometry_RadiusY, // RectangleGeometry_RadiusX
    KnownPropertyIndex::RectangleGeometry_Rect, // RectangleGeometry_RadiusY
    KnownPropertyIndex::Geometry_Bounds, // RectangleGeometry_Rect
    KnownPropertyIndex::DependencyObject_Column, // RelativeSource_Mode
    KnownPropertyIndex::RenderTargetBitmap_PixelWidth, // RenderTargetBitmap_PixelHeight
    KnownPropertyIndex::DependencyObject_Column, // RenderTargetBitmap_PixelWidth
    KnownPropertyIndex::Transition_GeneratedStaggerFunction, // RepositionThemeTransition_IsStaggeringEnabled
    KnownPropertyIndex::Setter_Target, // Setter_Property
    KnownPropertyIndex::Setter_Value, // Setter_Target
    KnownPropertyIndex::SetterBase_IsSealed, // Setter_Value
    KnownPropertyIndex::SolidColorBrush_ColorAAnimation, // SolidColorBrush_Color
    KnownPropertyIndex::SolidColorBrush_ColorAnimation, // SolidColorBrush_ColorAAnimation
    KnownPropertyIndex::SolidColorBrush_ColorBAnimation, // SolidColorBrush_ColorAnimation
    KnownPropertyIndex::SolidColorBrush_ColorGAnimation, // SolidColorBrush_ColorBAnimation
    KnownPropertyIndex::SolidColorBrush_ColorRAnimation, // SolidColorBrush_ColorGAnimation
    KnownPropertyIndex::Brush_Opacity, // SolidColorBrush_ColorRAnimation
    KnownPropertyIndex::ColorKeyFrame_KeyTime, // SplineColorKeyFrame_KeySpline
    KnownPropertyIndex::DoubleKeyFrame_KeyTime, // SplineDoubleKeyFrame_KeySpline
    KnownPropertyIndex::PointKeyFrame_KeyTime, // SplinePointKeyFrame_KeySpline
    KnownPropertyIndex::XamlUICommand_AccessKey, // StandardUICommand_Kind
    KnownPropertyIndex::StateTriggerBase_TriggerState, // StateTrigger_IsActive
    KnownPropertyIndex::DependencyObject_Column, // StaticResource_ResourceKey
    KnownPropertyIndex::SvgImageSource_RasterizePixelWidth, // SvgImageSource_RasterizePixelHeight
    KnownPropertyIndex::SvgImageSource_UriSource, // SvgImageSource_RasterizePixelWidth
    KnownPropertyIndex::DependencyObject_Column, // SvgImageSource_UriSource
    KnownPropertyIndex::IconSource_Foreground, // SymbolIconSource_Symbol
    KnownPropertyIndex::DependencyObject_Column, // TemplateBinding_Property
    KnownPropertyIndex::TextHighlighter_Foreground, // TextHighlighter_Background
    KnownPropertyIndex::TextHighlighter_Ranges, // TextHighlighter_Foreground
    KnownPropertyIndex::DependencyObject_Column, // TextHighlighter_Ranges
    KnownPropertyIndex::DependencyObject_Column, // ThemeResource_ResourceKey
    KnownPropertyIndex::DependencyObject_Column, // ThemeShadow_Receivers
    KnownPropertyIndex::TileBrush_AlignmentY, // TileBrush_AlignmentX
    KnownPropertyIndex::TileBrush_Stretch, // TileBrush_AlignmentY
    KnownPropertyIndex::Brush_Opacity, // TileBrush_Stretch
    KnownPropertyIndex::Brush_Opacity, // XamlCompositionBrushBase_FallbackColor
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // AutomationAnnotationCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // AutomationPeerAnnotationCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // AutomationPeerCollection_ContentProperty
    KnownPropertyIndex::Binding_ConverterLanguage, // Binding_Converter
    KnownPropertyIndex::Binding_ConverterParameter, // Binding_ConverterLanguage
    KnownPropertyIndex::Binding_ElementName, // Binding_ConverterParameter
    KnownPropertyIndex::Binding_FallbackValue, // Binding_ElementName
    KnownPropertyIndex::Binding_Mode, // Binding_FallbackValue
    KnownPropertyIndex::Binding_Path, // Binding_Mode
    KnownPropertyIndex::Binding_RelativeSource, // Binding_Path
    KnownPropertyIndex::Binding_Source, // Binding_RelativeSource
    KnownPropertyIndex::Binding_TargetNullValue, // Binding_Source
    KnownPropertyIndex::Binding_UpdateSourceTrigger, // Binding_TargetNullValue
    KnownPropertyIndex::DependencyObject_Column, // Binding_UpdateSourceTrigger
    KnownPropertyIndex::BitmapImage_CreateOptions, // BitmapImage_AutoPlay
    KnownPropertyIndex::BitmapImage_DecodePixelHeight, // BitmapImage_CreateOptions
    KnownPropertyIndex::BitmapImage_DecodePixelType, // BitmapImage_DecodePixelHeight
    KnownPropertyIndex::BitmapImage_DecodePixelWidth, // BitmapImage_DecodePixelType
    KnownPropertyIndex::BitmapImage_IsAnimatedBitmap, // BitmapImage_DecodePixelWidth
    KnownPropertyIndex::BitmapImage_IsPlaying, // BitmapImage_IsAnimatedBitmap
    KnownPropertyIndex::BitmapImage_UriSource, // BitmapImage_IsPlaying
    KnownPropertyIndex::BitmapSource_PixelHeight, // BitmapImage_UriSource
    KnownPropertyIndex::Border_BackgroundSizing, // Border_Background
    KnownPropertyIndex::Border_BackgroundTransition, // Border_BackgroundSizing
    KnownPropertyIndex::Border_BorderBrush, // Border_BackgroundTransition
    KnownPropertyIndex::Border_BorderThickness, // Border_BorderBrush
    KnownPropertyIndex::Border_Child, // Border_BorderThickness
    KnownPropertyIndex::Border_ChildTransitions, // Border_Child
    KnownPropertyIndex::Border_CornerRadius, // Border_ChildTransitions
    KnownPropertyIndex::Border_Padding, // Border_CornerRadius
    KnownPropertyIndex::FrameworkElement_ActualHeight, // Border_Padding
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // BrushCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // ColorKeyFrameCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // ColumnDefinitionCollection_ContentProperty
    KnownPropertyIndex::CompositeTransform_CenterXAnimation, // CompositeTransform_CenterX
    KnownPropertyIndex::CompositeTransform_CenterY, // CompositeTransform_CenterXAnimation
    KnownPropertyIndex::CompositeTransform_CenterYAnimation, // CompositeTransform_CenterY
    KnownPropertyIndex::CompositeTransform_RotateAnimation, // CompositeTransform_CenterYAnimation
    KnownPropertyIndex::CompositeTransform_Rotation, // CompositeTransform_RotateAnimation
    KnownPropertyIndex::CompositeTransform_ScaleX, // CompositeTransform_Rotation
    KnownPropertyIndex::CompositeTransform_ScaleXAnimation, // CompositeTransform_ScaleX
    KnownPropertyIndex::CompositeTransform_ScaleY, // CompositeTransform_ScaleXAnimation
    KnownPropertyIndex::CompositeTransform_ScaleYAnimation, // CompositeTransform_ScaleY
    KnownPropertyIndex::CompositeTransform_SkewX, // CompositeTransform_ScaleYAnimation
    KnownPropertyIndex::CompositeTransform_SkewXAnimation, // CompositeTransform_SkewX
    KnownPropertyIndex::CompositeTransform_SkewY, // CompositeTransform_SkewXAnimation
    KnownPropertyIndex::CompositeTransform_SkewYAnimation, // CompositeTransform_SkewY
    KnownPropertyIndex::CompositeTransform_TranslateX, // CompositeTransform_SkewYAnimation
    KnownPropertyIndex::CompositeTransform_TranslateXAnimation, // CompositeTransform_TranslateX
    KnownPropertyIndex::CompositeTransform_TranslateY, // CompositeTransform_TranslateXAnimation
    KnownPropertyIndex::CompositeTransform_TranslateYAnimation, // CompositeTransform_TranslateY
    KnownPropertyIndex::DependencyObject_Column, // CompositeTransform_TranslateYAnimation
    KnownPropertyIndex::ContentPresenter_BackgroundSizing, // ContentPresenter_Background
    KnownPropertyIndex::ContentPresenter_BackgroundTransition, // ContentPresenter_BackgroundSizing
    KnownPropertyIndex::ContentPresenter_BorderBrush, // ContentPresenter_BackgroundTransition
    KnownPropertyIndex::ContentPresenter_BorderThickness, // ContentPresenter_BorderBrush
    KnownPropertyIndex::ContentPresenter_CharacterSpacing, // ContentPresenter_BorderThickness
    KnownPropertyIndex::ContentPresenter_Content, // ContentPresenter_CharacterSpacing
    KnownPropertyIndex::ContentPresenter_ContentTemplate, // ContentPresenter_Content
    KnownPropertyIndex::ContentPresenter_ContentTemplateSelector, // ContentPresenter_ContentTemplate
    KnownPropertyIndex::ContentPresenter_ContentTransitions, // ContentPresenter_ContentTemplateSelector
    KnownPropertyIndex::ContentPresenter_CornerRadius, // ContentPresenter_ContentTransitions
    KnownPropertyIndex::ContentPresenter_FontFamily, // ContentPresenter_CornerRadius
    KnownPropertyIndex::ContentPresenter_FontSize, // ContentPresenter_FontFamily
    KnownPropertyIndex::ContentPresenter_FontStretch, // ContentPresenter_FontSize
    KnownPropertyIndex::ContentPresenter_FontStyle, // ContentPresenter_FontStretch
    KnownPropertyIndex::ContentPresenter_FontWeight, // ContentPresenter_FontStyle
    KnownPropertyIndex::ContentPresenter_Foreground, // ContentPresenter_FontWeight
    KnownPropertyIndex::ContentPresenter_HorizontalContentAlignment, // ContentPresenter_Foreground
    KnownPropertyIndex::ContentPresenter_IsTextScaleFactorEnabled, // ContentPresenter_HorizontalContentAlignment
    KnownPropertyIndex::ContentPresenter_LineHeight, // ContentPresenter_IsTextScaleFactorEnabled
    KnownPropertyIndex::ContentPresenter_LineStackingStrategy, // ContentPresenter_LineHeight
    KnownPropertyIndex::ContentPresenter_MaxLines, // ContentPresenter_LineStackingStrategy
    KnownPropertyIndex::ContentPresenter_OpticalMarginAlignment, // ContentPresenter_MaxLines
    KnownPropertyIndex::ContentPresenter_Padding, // ContentPresenter_OpticalMarginAlignment
    KnownPropertyIndex::ContentPresenter_SelectedContentTemplate, // ContentPresenter_Padding
    KnownPropertyIndex::ContentPresenter_TextLineBounds, // ContentPresenter_SelectedContentTemplate
    KnownPropertyIndex::ContentPresenter_TextWrapping, // ContentPresenter_TextLineBounds
    KnownPropertyIndex::ContentPresenter_VerticalContentAlignment, // ContentPresenter_TextWrapping
    KnownPropertyIndex::FrameworkElement_ActualHeight, // ContentPresenter_VerticalContentAlignment
    KnownPropertyIndex::Control_BackgroundSizing, // Control_Background
    KnownPropertyIndex::Control_BorderBrush, // Control_BackgroundSizing
    KnownPropertyIndex::Control_BorderThickness, // Control_BorderBrush
    KnownPropertyIndex::Control_CharacterSpacing, // Control_BorderThickness
    KnownPropertyIndex::Control_CornerRadius, // Control_CharacterSpacing
    KnownPropertyIndex::Control_DefaultStyleKey, // Control_CornerRadius
    KnownPropertyIndex::Control_DefaultStyleResourceUri, // Control_DefaultStyleKey
    KnownPropertyIndex::Control_ElementSoundMode, // Control_DefaultStyleResourceUri
    KnownPropertyIndex::Control_FocusTargetDescendant, // Control_ElementSoundMode
    KnownPropertyIndex::Control_FontFamily, // Control_FocusTargetDescendant
    KnownPropertyIndex::Control_FontSize, // Control_FontFamily
    KnownPropertyIndex::Control_FontStretch, // Control_FontSize
    KnownPropertyIndex::Control_FontStyle, // Control_FontStretch
    KnownPropertyIndex::Control_FontWeight, // Control_FontStyle
    KnownPropertyIndex::Control_Foreground, // Control_FontWeight
    KnownPropertyIndex::Control_HorizontalContentAlignment, // Control_Foreground
    KnownPropertyIndex::Control_IsEnabled, // Control_HorizontalContentAlignment
    KnownPropertyIndex::Control_IsFocusEngaged, // Control_IsEnabled
    KnownPropertyIndex::Control_IsFocusEngagementEnabled, // Control_IsFocusEngaged
    KnownPropertyIndex::Control_IsTemplateFocusTarget, // Control_IsFocusEngagementEnabled
    KnownPropertyIndex::Control_IsTemplateKeyTipTarget, // Control_IsTemplateFocusTarget
    KnownPropertyIndex::Control_IsTextScaleFactorEnabled, // Control_IsTemplateKeyTipTarget
    KnownPropertyIndex::Control_Padding, // Control_IsTextScaleFactorEnabled
    KnownPropertyIndex::Control_RequiresPointer, // Control_Padding
    KnownPropertyIndex::Control_TabNavigation, // Control_RequiresPointer
    KnownPropertyIndex::Control_Template, // Control_TabNavigation
    KnownPropertyIndex::Control_TemplateKeyTipTarget, // Control_Template
    KnownPropertyIndex::Control_VerticalContentAlignment, // Control_TemplateKeyTipTarget
    KnownPropertyIndex::FrameworkElement_ActualHeight, // Control_VerticalContentAlignment
    KnownPropertyIndex::DataTemplate_ExtensionInstance, // DisplayMemberTemplate_DisplayMemberPath
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // DoubleCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // DoubleKeyFrameCollection_ContentProperty
    KnownPropertyIndex::DynamicTimeline_Children, // DragItemThemeAnimation_TargetName
    KnownPropertyIndex::DragOverThemeAnimation_TargetName, // DragOverThemeAnimation_Direction
    KnownPropertyIndex::DragOverThemeAnimation_ToOffset, // DragOverThemeAnimation_TargetName
    KnownPropertyIndex::DynamicTimeline_Children, // DragOverThemeAnimation_ToOffset
    KnownPropertyIndex::DrillInThemeAnimation_EntranceTargetName, // DrillInThemeAnimation_EntranceTarget
    KnownPropertyIndex::DrillInThemeAnimation_ExitTarget, // DrillInThemeAnimation_EntranceTargetName
    KnownPropertyIndex::DrillInThemeAnimation_ExitTargetName, // DrillInThemeAnimation_ExitTarget
    KnownPropertyIndex::DynamicTimeline_Children, // DrillInThemeAnimation_ExitTargetName
    KnownPropertyIndex::DrillOutThemeAnimation_EntranceTargetName, // DrillOutThemeAnimation_EntranceTarget
    KnownPropertyIndex::DrillOutThemeAnimation_ExitTarget, // DrillOutThemeAnimation_EntranceTargetName
    KnownPropertyIndex::DrillOutThemeAnimation_ExitTargetName, // DrillOutThemeAnimation_ExitTarget
    KnownPropertyIndex::DynamicTimeline_Children, // DrillOutThemeAnimation_ExitTargetName
    KnownPropertyIndex::DynamicTimeline_Children, // DropTargetItemThemeAnimation_TargetName
    KnownPropertyIndex::DynamicTimeline_Children, // FadeInThemeAnimation_TargetName
    KnownPropertyIndex::DynamicTimeline_Children, // FadeOutThemeAnimation_TargetName
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // FloatCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // GeometryCollection_ContentProperty
    KnownPropertyIndex::Glyphs_Fill, // Glyphs_ColorFontPaletteIndex
    KnownPropertyIndex::Glyphs_FontRenderingEmSize, // Glyphs_Fill
    KnownPropertyIndex::Glyphs_FontUri, // Glyphs_FontRenderingEmSize
    KnownPropertyIndex::Glyphs_Indices, // Glyphs_FontUri
    KnownPropertyIndex::Glyphs_IsColorFontEnabled, // Glyphs_Indices
    KnownPropertyIndex::Glyphs_OriginX, // Glyphs_IsColorFontEnabled
    KnownPropertyIndex::Glyphs_OriginY, // Glyphs_OriginX
    KnownPropertyIndex::Glyphs_StyleSimulations, // Glyphs_OriginY
    KnownPropertyIndex::Glyphs_UnicodeString, // Glyphs_StyleSimulations
    KnownPropertyIndex::FrameworkElement_ActualHeight, // Glyphs_UnicodeString
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // GradientStopCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // HubSectionCollection_ContentProperty
    KnownPropertyIndex::FrameworkElement_ActualHeight, // IconElement_Foreground
    KnownPropertyIndex::Image_Source, // Image_NineGrid
    KnownPropertyIndex::Image_Stretch, // Image_Source
    KnownPropertyIndex::FrameworkElement_ActualHeight, // Image_Stretch
    KnownPropertyIndex::TileBrush_AlignmentX, // ImageBrush_ImageSource
    KnownPropertyIndex::TextElement_AccessKey, // InlineUIContainer_Child
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // InputScopeNameCollection_ContentProperty
    KnownPropertyIndex::ItemsPresenter_FooterTemplate, // ItemsPresenter_Footer
    KnownPropertyIndex::ItemsPresenter_FooterTransitions, // ItemsPresenter_FooterTemplate
    KnownPropertyIndex::ItemsPresenter_Header, // ItemsPresenter_FooterTransitions
    KnownPropertyIndex::ItemsPresenter_HeaderTemplate, // ItemsPresenter_Header
    KnownPropertyIndex::ItemsPresenter_HeaderTransitions, // ItemsPresenter_HeaderTemplate
    KnownPropertyIndex::ItemsPresenter_ItemsPanel, // ItemsPresenter_HeaderTransitions
    KnownPropertyIndex::ItemsPresenter_Padding, // ItemsPresenter_ItemsPanel
    KnownPropertyIndex::FrameworkElement_ActualHeight, // ItemsPresenter_Padding
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // KeyboardAcceleratorCollection_ContentProperty
    KnownPropertyIndex::LinearGradientBrush_StartPoint, // LinearGradientBrush_EndPoint
    KnownPropertyIndex::LinearGradientBrush_CenterPoint, // LinearGradientBrush_StartPoint
    KnownPropertyIndex::DependencyObject_Column, // MatrixTransform_Matrix
    KnownPropertyIndex::MediaPlayerPresenter_MediaPlayer, // MediaPlayerPresenter_IsFullWindow
    KnownPropertyIndex::MediaPlayerPresenter_Stretch, // MediaPlayerPresenter_MediaPlayer
    KnownPropertyIndex::FrameworkElement_ActualHeight, // MediaPlayerPresenter_Stretch
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // MenuFlyoutItemBaseCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // ObjectKeyFrameCollection_ContentProperty
    KnownPropertyIndex::Panel_BackgroundTransition, // Panel_Background
    KnownPropertyIndex::Panel_BorderBrushProtected, // Panel_BackgroundTransition
    KnownPropertyIndex::Panel_BorderThicknessProtected, // Panel_BorderBrushProtected
    KnownPropertyIndex::Panel_Children, // Panel_BorderThicknessProtected
    KnownPropertyIndex::Panel_ChildrenTransitions, // Panel_Children
    KnownPropertyIndex::Panel_CornerRadiusProtected, // Panel_ChildrenTransitions
    KnownPropertyIndex::Panel_IsIgnoringTransitions, // Panel_CornerRadiusProtected
    KnownPropertyIndex::Panel_IsItemsHost, // Panel_IsIgnoringTransitions
    KnownPropertyIndex::FrameworkElement_ActualHeight, // Panel_IsItemsHost
    KnownPropertyIndex::Paragraph_TextIndent, // Paragraph_Inlines
    KnownPropertyIndex::Block_HorizontalTextAlignment, // Paragraph_TextIndent
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // ParametricCurveCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // ParametricCurveSegmentCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // PathFigureCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // PathSegmentCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // PointCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // PointerCollection_ContentProperty
    KnownPropertyIndex::DynamicTimeline_Children, // PointerDownThemeAnimation_TargetName
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // PointerKeyFrameCollection_ContentProperty
    KnownPropertyIndex::DynamicTimeline_Children, // PointerUpThemeAnimation_TargetName
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // PointKeyFrameCollection_ContentProperty
    KnownPropertyIndex::PopInThemeAnimation_FromVerticalOffset, // PopInThemeAnimation_FromHorizontalOffset
    KnownPropertyIndex::PopInThemeAnimation_TargetName, // PopInThemeAnimation_FromVerticalOffset
    KnownPropertyIndex::DynamicTimeline_Children, // PopInThemeAnimation_TargetName
    KnownPropertyIndex::DynamicTimeline_Children, // PopOutThemeAnimation_TargetName
    KnownPropertyIndex::Popup_AssociatedFlyout, // Popup_ActualPlacement
    KnownPropertyIndex::Popup_Child, // Popup_AssociatedFlyout
    KnownPropertyIndex::Popup_ChildTransitions, // Popup_Child
    KnownPropertyIndex::Popup_DesiredPlacement, // Popup_ChildTransitions
    KnownPropertyIndex::Popup_DisableOverlayIsLightDismissCheck, // Popup_DesiredPlacement
    KnownPropertyIndex::Popup_HorizontalOffset, // Popup_DisableOverlayIsLightDismissCheck
    KnownPropertyIndex::Popup_IsApplicationBarService, // Popup_HorizontalOffset
    KnownPropertyIndex::Popup_IsContentDialog, // Popup_IsApplicationBarService
    KnownPropertyIndex::Popup_IsLightDismissEnabled, // Popup_IsContentDialog
    KnownPropertyIndex::Popup_IsOpen, // Popup_IsLightDismissEnabled
    KnownPropertyIndex::Popup_IsSubMenu, // Popup_IsOpen
    KnownPropertyIndex::Popup_LightDismissOverlayMode, // Popup_IsSubMenu
    KnownPropertyIndex::Popup_OverlayElement, // Popup_LightDismissOverlayMode
    KnownPropertyIndex::Popup_OverlayInputPassThroughElement, // Popup_OverlayElement
    KnownPropertyIndex::Popup_PlacementTarget, // Popup_OverlayInputPassThroughElement
    KnownPropertyIndex::Popup_ShouldConstrainToRootBounds, // Popup_PlacementTarget
    KnownPropertyIndex::Popup_SystemBackdrop, // Popup_ShouldConstrainToRootBounds
    KnownPropertyIndex::Popup_VerticalOffset, // Popup_SystemBackdrop
    KnownPropertyIndex::FrameworkElement_ActualHeight, // Popup_VerticalOffset
    KnownPropertyIndex::RepeatBehavior_Duration, // RepeatBehavior_Count
    KnownPropertyIndex::Duration_TimeSpan, // RepeatBehavior_Duration
    KnownPropertyIndex::RepositionThemeAnimation_FromVerticalOffset, // RepositionThemeAnimation_FromHorizontalOffset
    KnownPropertyIndex::RepositionThemeAnimation_TargetName, // RepositionThemeAnimation_FromVerticalOffset
    KnownPropertyIndex::DynamicTimeline_Children, // RepositionThemeAnimation_TargetName
    KnownPropertyIndex::ResourceDictionary_MergedDictionaries, // ResourceDictionary_ContentProperty
    KnownPropertyIndex::ResourceDictionary_Source, // ResourceDictionary_MergedDictionaries
    KnownPropertyIndex::ResourceDictionary_ThemeDictionaries, // ResourceDictionary_Source
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // ResourceDictionary_ThemeDictionaries
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // ResourceDictionaryCollection_ContentProperty
    KnownPropertyIndex::RichTextBlock_CharacterSpacing, // RichTextBlock_Blocks
    KnownPropertyIndex::RichTextBlock_FontFamily, // RichTextBlock_CharacterSpacing
    KnownPropertyIndex::RichTextBlock_FontSize, // RichTextBlock_FontFamily
    KnownPropertyIndex::RichTextBlock_FontStretch, // RichTextBlock_FontSize
    KnownPropertyIndex::RichTextBlock_FontStyle, // RichTextBlock_FontStretch
    KnownPropertyIndex::RichTextBlock_FontWeight, // RichTextBlock_FontStyle
    KnownPropertyIndex::RichTextBlock_Foreground, // RichTextBlock_FontWeight
    KnownPropertyIndex::RichTextBlock_HasOverflowContent, // RichTextBlock_Foreground
    KnownPropertyIndex::RichTextBlock_HorizontalTextAlignment, // RichTextBlock_HasOverflowContent
    KnownPropertyIndex::RichTextBlock_IsColorFontEnabled, // RichTextBlock_HorizontalTextAlignment
    KnownPropertyIndex::RichTextBlock_IsTextScaleFactorEnabled, // RichTextBlock_IsColorFontEnabled
    KnownPropertyIndex::RichTextBlock_IsTextSelectionEnabled, // RichTextBlock_IsTextScaleFactorEnabled
    KnownPropertyIndex::RichTextBlock_IsTextTrimmed, // RichTextBlock_IsTextSelectionEnabled
    KnownPropertyIndex::RichTextBlock_LineHeight, // RichTextBlock_IsTextTrimmed
    KnownPropertyIndex::RichTextBlock_LineStackingStrategy, // RichTextBlock_LineHeight
    KnownPropertyIndex::RichTextBlock_MaxLines, // RichTextBlock_LineStackingStrategy
    KnownPropertyIndex::RichTextBlock_OpticalMarginAlignment, // RichTextBlock_MaxLines
    KnownPropertyIndex::RichTextBlock_OverflowContentTarget, // RichTextBlock_OpticalMarginAlignment
    KnownPropertyIndex::RichTextBlock_Padding, // RichTextBlock_OverflowContentTarget
    KnownPropertyIndex::RichTextBlock_SelectedText, // RichTextBlock_Padding
    KnownPropertyIndex::RichTextBlock_SelectionFlyout, // RichTextBlock_SelectedText
    KnownPropertyIndex::RichTextBlock_SelectionHighlightColor, // RichTextBlock_SelectionFlyout
    KnownPropertyIndex::RichTextBlock_TextAlignment, // RichTextBlock_SelectionHighlightColor
    KnownPropertyIndex::RichTextBlock_TextDecorations, // RichTextBlock_TextAlignment
    KnownPropertyIndex::RichTextBlock_TextHighlighters, // RichTextBlock_TextDecorations
    KnownPropertyIndex::RichTextBlock_TextIndent, // RichTextBlock_TextHighlighters
    KnownPropertyIndex::RichTextBlock_TextLineBounds, // RichTextBlock_TextIndent
    KnownPropertyIndex::RichTextBlock_TextReadingOrder, // RichTextBlock_TextLineBounds
    KnownPropertyIndex::RichTextBlock_TextTrimming, // RichTextBlock_TextReadingOrder
    KnownPropertyIndex::RichTextBlock_TextWrapping, // RichTextBlock_TextTrimming
    KnownPropertyIndex::FrameworkElement_ActualHeight, // RichTextBlock_TextWrapping
    KnownPropertyIndex::RichTextBlockOverflow_IsTextTrimmed, // RichTextBlockOverflow_HasOverflowContent
    KnownPropertyIndex::RichTextBlockOverflow_MaxLines, // RichTextBlockOverflow_IsTextTrimmed
    KnownPropertyIndex::RichTextBlockOverflow_OverflowContentTarget, // RichTextBlockOverflow_MaxLines
    KnownPropertyIndex::RichTextBlockOverflow_Padding, // RichTextBlockOverflow_OverflowContentTarget
    KnownPropertyIndex::FrameworkElement_ActualHeight, // RichTextBlockOverflow_Padding
    KnownPropertyIndex::RotateTransform_AngleAnimation, // RotateTransform_Angle
    KnownPropertyIndex::RotateTransform_CenterX, // RotateTransform_AngleAnimation
    KnownPropertyIndex::RotateTransform_CenterXAnimation, // RotateTransform_CenterX
    KnownPropertyIndex::RotateTransform_CenterY, // RotateTransform_CenterXAnimation
    KnownPropertyIndex::RotateTransform_CenterYAnimation, // RotateTransform_CenterY
    KnownPropertyIndex::DependencyObject_Column, // RotateTransform_CenterYAnimation
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // RowDefinitionCollection_ContentProperty
    KnownPropertyIndex::Run_Text, // Run_FlowDirection
    KnownPropertyIndex::TextElement_AccessKey, // Run_Text
    KnownPropertyIndex::ScaleTransform_CenterXAnimation, // ScaleTransform_CenterX
    KnownPropertyIndex::ScaleTransform_CenterY, // ScaleTransform_CenterXAnimation
    KnownPropertyIndex::ScaleTransform_CenterYAnimation, // ScaleTransform_CenterY
    KnownPropertyIndex::ScaleTransform_ScaleX, // ScaleTransform_CenterYAnimation
    KnownPropertyIndex::ScaleTransform_ScaleXAnimation, // ScaleTransform_ScaleX
    KnownPropertyIndex::ScaleTransform_ScaleY, // ScaleTransform_ScaleXAnimation
    KnownPropertyIndex::ScaleTransform_ScaleYAnimation, // ScaleTransform_ScaleY
    KnownPropertyIndex::DependencyObject_Column, // ScaleTransform_ScaleYAnimation
    KnownPropertyIndex::SetterBaseCollection_IsSealed, // SetterBaseCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // SetterBaseCollection_IsSealed
    KnownPropertyIndex::Shape_GeometryTransform, // Shape_Fill
    KnownPropertyIndex::Shape_Stretch, // Shape_GeometryTransform
    KnownPropertyIndex::Shape_Stroke, // Shape_Stretch
    KnownPropertyIndex::Shape_StrokeDashArray, // Shape_Stroke
    KnownPropertyIndex::Shape_StrokeDashCap, // Shape_StrokeDashArray
    KnownPropertyIndex::Shape_StrokeDashOffset, // Shape_StrokeDashCap
    KnownPropertyIndex::Shape_StrokeEndLineCap, // Shape_StrokeDashOffset
    KnownPropertyIndex::Shape_StrokeLineJoin, // Shape_StrokeEndLineCap
    KnownPropertyIndex::Shape_StrokeMiterLimit, // Shape_StrokeLineJoin
    KnownPropertyIndex::Shape_StrokeStartLineCap, // Shape_StrokeMiterLimit
    KnownPropertyIndex::Shape_StrokeThickness, // Shape_StrokeStartLineCap
    KnownPropertyIndex::FrameworkElement_ActualHeight, // Shape_StrokeThickness
    KnownPropertyIndex::SkewTransform_AngleXAnimation, // SkewTransform_AngleX
    KnownPropertyIndex::SkewTransform_AngleY, // SkewTransform_AngleXAnimation
    KnownPropertyIndex::SkewTransform_AngleYAnimation, // SkewTransform_AngleY
    KnownPropertyIndex::SkewTransform_CenterX, // SkewTransform_AngleYAnimation
    KnownPropertyIndex::SkewTransform_CenterXAnimation, // SkewTransform_CenterX
    KnownPropertyIndex::SkewTransform_CenterY, // SkewTransform_CenterXAnimation
    KnownPropertyIndex::SkewTransform_CenterYAnimation, // SkewTransform_CenterY
    KnownPropertyIndex::DependencyObject_Column, // SkewTransform_CenterYAnimation
    KnownPropertyIndex::TextElement_AccessKey, // Span_Inlines
    KnownPropertyIndex::SplitCloseThemeAnimation_ClosedTarget, // SplitCloseThemeAnimation_ClosedLength
    KnownPropertyIndex::SplitCloseThemeAnimation_ClosedTargetName, // SplitCloseThemeAnimation_ClosedTarget
    KnownPropertyIndex::SplitCloseThemeAnimation_ContentTarget, // SplitCloseThemeAnimation_ClosedTargetName
    KnownPropertyIndex::SplitCloseThemeAnimation_ContentTargetName, // SplitCloseThemeAnimation_ContentTarget
    KnownPropertyIndex::SplitCloseThemeAnimation_ContentTranslationDirection, // SplitCloseThemeAnimation_ContentTargetName
    KnownPropertyIndex::SplitCloseThemeAnimation_ContentTranslationOffset, // SplitCloseThemeAnimation_ContentTranslationDirection
    KnownPropertyIndex::SplitCloseThemeAnimation_OffsetFromCenter, // SplitCloseThemeAnimation_ContentTranslationOffset
    KnownPropertyIndex::SplitCloseThemeAnimation_OpenedLength, // SplitCloseThemeAnimation_OffsetFromCenter
    KnownPropertyIndex::SplitCloseThemeAnimation_OpenedTarget, // SplitCloseThemeAnimation_OpenedLength
    KnownPropertyIndex::SplitCloseThemeAnimation_OpenedTargetName, // SplitCloseThemeAnimation_OpenedTarget
    KnownPropertyIndex::DynamicTimeline_Children, // SplitCloseThemeAnimation_OpenedTargetName
    KnownPropertyIndex::SplitOpenThemeAnimation_ClosedTarget, // SplitOpenThemeAnimation_ClosedLength
    KnownPropertyIndex::SplitOpenThemeAnimation_ClosedTargetName, // SplitOpenThemeAnimation_ClosedTarget
    KnownPropertyIndex::SplitOpenThemeAnimation_ContentTarget, // SplitOpenThemeAnimation_ClosedTargetName
    KnownPropertyIndex::SplitOpenThemeAnimation_ContentTargetName, // SplitOpenThemeAnimation_ContentTarget
    KnownPropertyIndex::SplitOpenThemeAnimation_ContentTranslationDirection, // SplitOpenThemeAnimation_ContentTargetName
    KnownPropertyIndex::SplitOpenThemeAnimation_ContentTranslationOffset, // SplitOpenThemeAnimation_ContentTranslationDirection
    KnownPropertyIndex::SplitOpenThemeAnimation_OffsetFromCenter, // SplitOpenThemeAnimation_ContentTranslationOffset
    KnownPropertyIndex::SplitOpenThemeAnimation_OpenedLength, // SplitOpenThemeAnimation_OffsetFromCenter
    KnownPropertyIndex::SplitOpenThemeAnimation_OpenedTarget, // SplitOpenThemeAnimation_OpenedLength
    KnownPropertyIndex::SplitOpenThemeAnimation_OpenedTargetName, // SplitOpenThemeAnimation_OpenedTarget
    KnownPropertyIndex::DynamicTimeline_Children, // SplitOpenThemeAnimation_OpenedTargetName
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // StateTriggerCollection_ContentProperty
    KnownPropertyIndex::Storyboard_IsEssential, // Storyboard_Children
    KnownPropertyIndex::Storyboard_TargetName, // Storyboard_IsEssential
    KnownPropertyIndex::Storyboard_TargetProperty, // Storyboard_TargetName
    KnownPropertyIndex::Timeline_AutoReverse, // Storyboard_TargetProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // StoryboardCollection_ContentProperty
    KnownPropertyIndex::SwipeBackThemeAnimation_FromVerticalOffset, // SwipeBackThemeAnimation_FromHorizontalOffset
    KnownPropertyIndex::SwipeBackThemeAnimation_TargetName, // SwipeBackThemeAnimation_FromVerticalOffset
    KnownPropertyIndex::DynamicTimeline_Children, // SwipeBackThemeAnimation_TargetName
    KnownPropertyIndex::SwipeHintThemeAnimation_ToHorizontalOffset, // SwipeHintThemeAnimation_TargetName
    KnownPropertyIndex::SwipeHintThemeAnimation_ToVerticalOffset, // SwipeHintThemeAnimation_ToHorizontalOffset
    KnownPropertyIndex::DynamicTimeline_Children, // SwipeHintThemeAnimation_ToVerticalOffset
    KnownPropertyIndex::TextBlock_FontFamily, // TextBlock_CharacterSpacing
    KnownPropertyIndex::TextBlock_FontSize, // TextBlock_FontFamily
    KnownPropertyIndex::TextBlock_FontStretch, // TextBlock_FontSize
    KnownPropertyIndex::TextBlock_FontStyle, // TextBlock_FontStretch
    KnownPropertyIndex::TextBlock_FontWeight, // TextBlock_FontStyle
    KnownPropertyIndex::TextBlock_Foreground, // TextBlock_FontWeight
    KnownPropertyIndex::TextBlock_HorizontalTextAlignment, // TextBlock_Foreground
    KnownPropertyIndex::TextBlock_Inlines, // TextBlock_HorizontalTextAlignment
    KnownPropertyIndex::TextBlock_IsColorFontEnabled, // TextBlock_Inlines
    KnownPropertyIndex::TextBlock_IsTextScaleFactorEnabled, // TextBlock_IsColorFontEnabled
    KnownPropertyIndex::TextBlock_IsTextSelectionEnabled, // TextBlock_IsTextScaleFactorEnabled
    KnownPropertyIndex::TextBlock_IsTextTrimmed, // TextBlock_IsTextSelectionEnabled
    KnownPropertyIndex::TextBlock_LineHeight, // TextBlock_IsTextTrimmed
    KnownPropertyIndex::TextBlock_LineStackingStrategy, // TextBlock_LineHeight
    KnownPropertyIndex::TextBlock_MaxLines, // TextBlock_LineStackingStrategy
    KnownPropertyIndex::TextBlock_OpticalMarginAlignment, // TextBlock_MaxLines
    KnownPropertyIndex::TextBlock_Padding, // TextBlock_OpticalMarginAlignment
    KnownPropertyIndex::TextBlock_SelectedText, // TextBlock_Padding
    KnownPropertyIndex::TextBlock_SelectionFlyout, // TextBlock_SelectedText
    KnownPropertyIndex::TextBlock_SelectionHighlightColor, // TextBlock_SelectionFlyout
    KnownPropertyIndex::TextBlock_Text, // TextBlock_SelectionHighlightColor
    KnownPropertyIndex::TextBlock_TextAlignment, // TextBlock_Text
    KnownPropertyIndex::TextBlock_TextDecorations, // TextBlock_TextAlignment
    KnownPropertyIndex::TextBlock_TextHighlighters, // TextBlock_TextDecorations
    KnownPropertyIndex::TextBlock_TextLineBounds, // TextBlock_TextHighlighters
    KnownPropertyIndex::TextBlock_TextReadingOrder, // TextBlock_TextLineBounds
    KnownPropertyIndex::TextBlock_TextTrimming, // TextBlock_TextReadingOrder
    KnownPropertyIndex::TextBlock_TextWrapping, // TextBlock_TextTrimming
    KnownPropertyIndex::FrameworkElement_ActualHeight, // TextBlock_TextWrapping
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // TextElementCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // TextHighlighterCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // TextRangeCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // TimelineCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // TransformCollection_ContentProperty
    KnownPropertyIndex::TransformGroup_Value, // TransformGroup_Children
    KnownPropertyIndex::DependencyObject_Column, // TransformGroup_Value
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // TransitionCollection_ContentProperty
    KnownPropertyIndex::TranslateTransform_XAnimation, // TranslateTransform_X
    KnownPropertyIndex::TranslateTransform_Y, // TranslateTransform_XAnimation
    KnownPropertyIndex::TranslateTransform_YAnimation, // TranslateTransform_Y
    KnownPropertyIndex::DependencyObject_Column, // TranslateTransform_YAnimation
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // TriggerActionCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // TriggerCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // UIElementCollection_ContentProperty
    KnownPropertyIndex::Viewbox_Stretch, // Viewbox_Child
    KnownPropertyIndex::Viewbox_StretchDirection, // Viewbox_Stretch
    KnownPropertyIndex::FrameworkElement_ActualHeight, // Viewbox_StretchDirection
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // VisualStateCollection_ContentProperty
    KnownPropertyIndex::VisualStateGroupCollection_ActiveTransitions, // VisualStateGroupCollection_ActiveStoryboards
    KnownPropertyIndex::VisualStateGroupCollection_ContentProperty, // VisualStateGroupCollection_ActiveTransitions
    KnownPropertyIndex::VisualStateGroupCollection_DeferredSetters, // VisualStateGroupCollection_ContentProperty
    KnownPropertyIndex::VisualStateGroupCollection_DeferredStateTriggers, // VisualStateGroupCollection_DeferredSetters
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // VisualStateGroupCollection_DeferredStateTriggers
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // VisualTransitionCollection_ContentProperty
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // XamlLightCollection_ContentProperty
    KnownPropertyIndex::AppBarSeparator_IsCompact, // AppBarSeparator_DynamicOverflowOrder
    KnownPropertyIndex::AppBarSeparator_IsInOverflow, // AppBarSeparator_IsCompact
    KnownPropertyIndex::AppBarSeparator_UseOverflowStyle, // AppBarSeparator_IsInOverflow
    KnownPropertyIndex::Control_Background, // AppBarSeparator_UseOverflowStyle
    KnownPropertyIndex::BitmapIcon_UriSource, // BitmapIcon_ShowAsMonochrome
    KnownPropertyIndex::IconElement_Foreground, // BitmapIcon_UriSource
    KnownPropertyIndex::CalendarDatePicker_CalendarViewStyle, // CalendarDatePicker_CalendarIdentifier
    KnownPropertyIndex::CalendarDatePicker_Date, // CalendarDatePicker_CalendarViewStyle
    KnownPropertyIndex::CalendarDatePicker_DateFormat, // CalendarDatePicker_Date
    KnownPropertyIndex::CalendarDatePicker_DayOfWeekFormat, // CalendarDatePicker_DateFormat
    KnownPropertyIndex::CalendarDatePicker_Description, // CalendarDatePicker_DayOfWeekFormat
    KnownPropertyIndex::CalendarDatePicker_DisplayMode, // CalendarDatePicker_Description
    KnownPropertyIndex::CalendarDatePicker_FirstDayOfWeek, // CalendarDatePicker_DisplayMode
    KnownPropertyIndex::CalendarDatePicker_Header, // CalendarDatePicker_FirstDayOfWeek
    KnownPropertyIndex::CalendarDatePicker_HeaderPlacement, // CalendarDatePicker_Header
    KnownPropertyIndex::CalendarDatePicker_HeaderTemplate, // CalendarDatePicker_HeaderPlacement
    KnownPropertyIndex::CalendarDatePicker_IsCalendarOpen, // CalendarDatePicker_HeaderTemplate
    KnownPropertyIndex::CalendarDatePicker_IsGroupLabelVisible, // CalendarDatePicker_IsCalendarOpen
    KnownPropertyIndex::CalendarDatePicker_IsOutOfScopeEnabled, // CalendarDatePicker_IsGroupLabelVisible
    KnownPropertyIndex::CalendarDatePicker_IsTodayHighlighted, // CalendarDatePicker_IsOutOfScopeEnabled
    KnownPropertyIndex::CalendarDatePicker_LightDismissOverlayMode, // CalendarDatePicker_IsTodayHighlighted
    KnownPropertyIndex::CalendarDatePicker_MaxDate, // CalendarDatePicker_LightDismissOverlayMode
    KnownPropertyIndex::CalendarDatePicker_MinDate, // CalendarDatePicker_MaxDate
    KnownPropertyIndex::CalendarDatePicker_PlaceholderText, // CalendarDatePicker_MinDate
    KnownPropertyIndex::Control_Background, // CalendarDatePicker_PlaceholderText
    KnownPropertyIndex::CalendarView_BlackoutForeground, // CalendarView_BlackoutBackground
    KnownPropertyIndex::CalendarView_BlackoutStrikethroughBrush, // CalendarView_BlackoutForeground
    KnownPropertyIndex::CalendarView_CalendarIdentifier, // CalendarView_BlackoutStrikethroughBrush
    KnownPropertyIndex::CalendarView_CalendarItemBackground, // CalendarView_CalendarIdentifier
    KnownPropertyIndex::CalendarView_CalendarItemBorderBrush, // CalendarView_CalendarItemBackground
    KnownPropertyIndex::CalendarView_CalendarItemBorderThickness, // CalendarView_CalendarItemBorderBrush
    KnownPropertyIndex::CalendarView_CalendarItemCornerRadius, // CalendarView_CalendarItemBorderThickness
    KnownPropertyIndex::CalendarView_CalendarItemDisabledBackground, // CalendarView_CalendarItemCornerRadius
    KnownPropertyIndex::CalendarView_CalendarItemForeground, // CalendarView_CalendarItemDisabledBackground
    KnownPropertyIndex::CalendarView_CalendarItemHoverBackground, // CalendarView_CalendarItemForeground
    KnownPropertyIndex::CalendarView_CalendarItemPressedBackground, // CalendarView_CalendarItemHoverBackground
    KnownPropertyIndex::CalendarView_CalendarViewDayItemStyle, // CalendarView_CalendarItemPressedBackground
    KnownPropertyIndex::CalendarView_DayItemFontFamily, // CalendarView_CalendarViewDayItemStyle
    KnownPropertyIndex::CalendarView_DayItemFontSize, // CalendarView_DayItemFontFamily
    KnownPropertyIndex::CalendarView_DayItemFontStyle, // CalendarView_DayItemFontSize
    KnownPropertyIndex::CalendarView_DayItemFontWeight, // CalendarView_DayItemFontStyle
    KnownPropertyIndex::CalendarView_DayItemMargin, // CalendarView_DayItemFontWeight
    KnownPropertyIndex::CalendarView_DayOfWeekFormat, // CalendarView_DayItemMargin
    KnownPropertyIndex::CalendarView_DisabledForeground, // CalendarView_DayOfWeekFormat
    KnownPropertyIndex::CalendarView_DisplayMode, // CalendarView_DisabledForeground
    KnownPropertyIndex::CalendarView_FirstDayOfWeek, // CalendarView_DisplayMode
    KnownPropertyIndex::CalendarView_FirstOfMonthLabelFontFamily, // CalendarView_FirstDayOfWeek
    KnownPropertyIndex::CalendarView_FirstOfMonthLabelFontSize, // CalendarView_FirstOfMonthLabelFontFamily
    KnownPropertyIndex::CalendarView_FirstOfMonthLabelFontStyle, // CalendarView_FirstOfMonthLabelFontSize
    KnownPropertyIndex::CalendarView_FirstOfMonthLabelFontWeight, // CalendarView_FirstOfMonthLabelFontStyle
    KnownPropertyIndex::CalendarView_FirstOfMonthLabelMargin, // CalendarView_FirstOfMonthLabelFontWeight
    KnownPropertyIndex::CalendarView_FirstOfYearDecadeLabelFontFamily, // CalendarView_FirstOfMonthLabelMargin
    KnownPropertyIndex::CalendarView_FirstOfYearDecadeLabelFontSize, // CalendarView_FirstOfYearDecadeLabelFontFamily
    KnownPropertyIndex::CalendarView_FirstOfYearDecadeLabelFontStyle, // CalendarView_FirstOfYearDecadeLabelFontSize
    KnownPropertyIndex::CalendarView_FirstOfYearDecadeLabelFontWeight, // CalendarView_FirstOfYearDecadeLabelFontStyle
    KnownPropertyIndex::CalendarView_FirstOfYearDecadeLabelMargin, // CalendarView_FirstOfYearDecadeLabelFontWeight
    KnownPropertyIndex::CalendarView_FocusBorderBrush, // CalendarView_FirstOfYearDecadeLabelMargin
    KnownPropertyIndex::CalendarView_HorizontalDayItemAlignment, // CalendarView_FocusBorderBrush
    KnownPropertyIndex::CalendarView_HorizontalFirstOfMonthLabelAlignment, // CalendarView_HorizontalDayItemAlignment
    KnownPropertyIndex::CalendarView_HoverBorderBrush, // CalendarView_HorizontalFirstOfMonthLabelAlignment
    KnownPropertyIndex::CalendarView_IsGroupLabelVisible, // CalendarView_HoverBorderBrush
    KnownPropertyIndex::CalendarView_IsOutOfScopeEnabled, // CalendarView_IsGroupLabelVisible
    KnownPropertyIndex::CalendarView_IsTodayHighlighted, // CalendarView_IsOutOfScopeEnabled
    KnownPropertyIndex::CalendarView_MaxDate, // CalendarView_IsTodayHighlighted
    KnownPropertyIndex::CalendarView_MinDate, // CalendarView_MaxDate
    KnownPropertyIndex::CalendarView_MonthYearItemFontFamily, // CalendarView_MinDate
    KnownPropertyIndex::CalendarView_MonthYearItemFontSize, // CalendarView_MonthYearItemFontFamily
    KnownPropertyIndex::CalendarView_MonthYearItemFontStyle, // CalendarView_MonthYearItemFontSize
    KnownPropertyIndex::CalendarView_MonthYearItemFontWeight, // CalendarView_MonthYearItemFontStyle
    KnownPropertyIndex::CalendarView_MonthYearItemMargin, // CalendarView_MonthYearItemFontWeight
    KnownPropertyIndex::CalendarView_NumberOfWeeksInView, // CalendarView_MonthYearItemMargin
    KnownPropertyIndex::CalendarView_OutOfScopeBackground, // CalendarView_NumberOfWeeksInView
    KnownPropertyIndex::CalendarView_OutOfScopeForeground, // CalendarView_OutOfScopeBackground
    KnownPropertyIndex::CalendarView_OutOfScopeHoverForeground, // CalendarView_OutOfScopeForeground
    KnownPropertyIndex::CalendarView_OutOfScopePressedForeground, // CalendarView_OutOfScopeHoverForeground
    KnownPropertyIndex::CalendarView_PressedBorderBrush, // CalendarView_OutOfScopePressedForeground
    KnownPropertyIndex::CalendarView_PressedForeground, // CalendarView_PressedBorderBrush
    KnownPropertyIndex::CalendarView_SelectedBorderBrush, // CalendarView_PressedForeground
    KnownPropertyIndex::CalendarView_SelectedDates, // CalendarView_SelectedBorderBrush
    KnownPropertyIndex::CalendarView_SelectedDisabledBorderBrush, // CalendarView_SelectedDates
    KnownPropertyIndex::CalendarView_SelectedDisabledForeground, // CalendarView_SelectedDisabledBorderBrush
    KnownPropertyIndex::CalendarView_SelectedForeground, // CalendarView_SelectedDisabledForeground
    KnownPropertyIndex::CalendarView_SelectedHoverBorderBrush, // CalendarView_SelectedForeground
    KnownPropertyIndex::CalendarView_SelectedHoverForeground, // CalendarView_SelectedHoverBorderBrush
    KnownPropertyIndex::CalendarView_SelectedPressedBorderBrush, // CalendarView_SelectedHoverForeground
    KnownPropertyIndex::CalendarView_SelectedPressedForeground, // CalendarView_SelectedPressedBorderBrush
    KnownPropertyIndex::CalendarView_SelectionMode, // CalendarView_SelectedPressedForeground
    KnownPropertyIndex::CalendarView_TemplateSettings, // CalendarView_SelectionMode
    KnownPropertyIndex::CalendarView_TodayBackground, // CalendarView_TemplateSettings
    KnownPropertyIndex::CalendarView_TodayBlackoutBackground, // CalendarView_TodayBackground
    KnownPropertyIndex::CalendarView_TodayBlackoutForeground, // CalendarView_TodayBlackoutBackground
    KnownPropertyIndex::CalendarView_TodayDisabledBackground, // CalendarView_TodayBlackoutForeground
    KnownPropertyIndex::CalendarView_TodayFontWeight, // CalendarView_TodayDisabledBackground
    KnownPropertyIndex::CalendarView_TodayForeground, // CalendarView_TodayFontWeight
    KnownPropertyIndex::CalendarView_TodayHoverBackground, // CalendarView_TodayForeground
    KnownPropertyIndex::CalendarView_TodayHoverBorderBrush, // CalendarView_TodayHoverBackground
    KnownPropertyIndex::CalendarView_TodayPressedBackground, // CalendarView_TodayHoverBorderBrush
    KnownPropertyIndex::CalendarView_TodayPressedBorderBrush, // CalendarView_TodayPressedBackground
    KnownPropertyIndex::CalendarView_TodaySelectedInnerBorderBrush, // CalendarView_TodayPressedBorderBrush
    KnownPropertyIndex::CalendarView_VerticalDayItemAlignment, // CalendarView_TodaySelectedInnerBorderBrush
    KnownPropertyIndex::CalendarView_VerticalFirstOfMonthLabelAlignment, // CalendarView_VerticalDayItemAlignment
    KnownPropertyIndex::Control_Background, // CalendarView_VerticalFirstOfMonthLabelAlignment
    KnownPropertyIndex::Canvas_Top, // Canvas_Left
    KnownPropertyIndex::Canvas_ZIndex, // Canvas_Top
    KnownPropertyIndex::Panel_Background, // Canvas_ZIndex
    KnownPropertyIndex::ColorPaletteResources_AltHigh, // ColorPaletteResources_Accent
    KnownPropertyIndex::ColorPaletteResources_AltLow, // ColorPaletteResources_AltHigh
    KnownPropertyIndex::ColorPaletteResources_AltMedium, // ColorPaletteResources_AltLow
    KnownPropertyIndex::ColorPaletteResources_AltMediumHigh, // ColorPaletteResources_AltMedium
    KnownPropertyIndex::ColorPaletteResources_AltMediumLow, // ColorPaletteResources_AltMediumHigh
    KnownPropertyIndex::ColorPaletteResources_BaseHigh, // ColorPaletteResources_AltMediumLow
    KnownPropertyIndex::ColorPaletteResources_BaseLow, // ColorPaletteResources_BaseHigh
    KnownPropertyIndex::ColorPaletteResources_BaseMedium, // ColorPaletteResources_BaseLow
    KnownPropertyIndex::ColorPaletteResources_BaseMediumHigh, // ColorPaletteResources_BaseMedium
    KnownPropertyIndex::ColorPaletteResources_BaseMediumLow, // ColorPaletteResources_BaseMediumHigh
    KnownPropertyIndex::ColorPaletteResources_ChromeAltLow, // ColorPaletteResources_BaseMediumLow
    KnownPropertyIndex::ColorPaletteResources_ChromeBlackHigh, // ColorPaletteResources_ChromeAltLow
    KnownPropertyIndex::ColorPaletteResources_ChromeBlackLow, // ColorPaletteResources_ChromeBlackHigh
    KnownPropertyIndex::ColorPaletteResources_ChromeBlackMedium, // ColorPaletteResources_ChromeBlackLow
    KnownPropertyIndex::ColorPaletteResources_ChromeBlackMediumLow, // ColorPaletteResources_ChromeBlackMedium
    KnownPropertyIndex::ColorPaletteResources_ChromeDisabledHigh, // ColorPaletteResources_ChromeBlackMediumLow
    KnownPropertyIndex::ColorPaletteResources_ChromeDisabledLow, // ColorPaletteResources_ChromeDisabledHigh
    KnownPropertyIndex::ColorPaletteResources_ChromeGray, // ColorPaletteResources_ChromeDisabledLow
    KnownPropertyIndex::ColorPaletteResources_ChromeHigh, // ColorPaletteResources_ChromeGray
    KnownPropertyIndex::ColorPaletteResources_ChromeLow, // ColorPaletteResources_ChromeHigh
    KnownPropertyIndex::ColorPaletteResources_ChromeMedium, // ColorPaletteResources_ChromeLow
    KnownPropertyIndex::ColorPaletteResources_ChromeMediumLow, // ColorPaletteResources_ChromeMedium
    KnownPropertyIndex::ColorPaletteResources_ChromeWhite, // ColorPaletteResources_ChromeMediumLow
    KnownPropertyIndex::ColorPaletteResources_ErrorText, // ColorPaletteResources_ChromeWhite
    KnownPropertyIndex::ColorPaletteResources_ListLow, // ColorPaletteResources_ErrorText
    KnownPropertyIndex::ColorPaletteResources_ListMedium, // ColorPaletteResources_ListLow
    KnownPropertyIndex::ResourceDictionary_ContentProperty, // ColorPaletteResources_ListMedium
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // CommandBarElementCollection_ContentProperty
    KnownPropertyIndex::CommandingContainer_CommandingTarget, // CommandingContainer_CommandingContainer
    KnownPropertyIndex::ContentPresenter_Background, // CommandingContainer_CommandingTarget
    KnownPropertyIndex::ContentControl_ContentTemplate, // ContentControl_Content
    KnownPropertyIndex::ContentControl_ContentTemplateSelector, // ContentControl_ContentTemplate
    KnownPropertyIndex::ContentControl_ContentTransitions, // ContentControl_ContentTemplateSelector
    KnownPropertyIndex::ContentControl_SelectedContentTemplate, // ContentControl_ContentTransitions
    KnownPropertyIndex::Control_Background, // ContentControl_SelectedContentTemplate
    KnownPropertyIndex::DatePicker_Date, // DatePicker_CalendarIdentifier
    KnownPropertyIndex::DatePicker_DayFormat, // DatePicker_Date
    KnownPropertyIndex::DatePicker_DayVisible, // DatePicker_DayFormat
    KnownPropertyIndex::DatePicker_Header, // DatePicker_DayVisible
    KnownPropertyIndex::DatePicker_HeaderPlacement, // DatePicker_Header
    KnownPropertyIndex::DatePicker_HeaderTemplate, // DatePicker_HeaderPlacement
    KnownPropertyIndex::DatePicker_LightDismissOverlayMode, // DatePicker_HeaderTemplate
    KnownPropertyIndex::DatePicker_MaxYear, // DatePicker_LightDismissOverlayMode
    KnownPropertyIndex::DatePicker_MinYear, // DatePicker_MaxYear
    KnownPropertyIndex::DatePicker_MonthFormat, // DatePicker_MinYear
    KnownPropertyIndex::DatePicker_MonthVisible, // DatePicker_MonthFormat
    KnownPropertyIndex::DatePicker_Orientation, // DatePicker_MonthVisible
    KnownPropertyIndex::DatePicker_SelectedDate, // DatePicker_Orientation
    KnownPropertyIndex::DatePicker_YearFormat, // DatePicker_SelectedDate
    KnownPropertyIndex::DatePicker_YearVisible, // DatePicker_YearFormat
    KnownPropertyIndex::Control_Background, // DatePicker_YearVisible
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // DependencyObjectCollection_ContentProperty
    KnownPropertyIndex::FontIcon_FontSize, // FontIcon_FontFamily
    KnownPropertyIndex::FontIcon_FontStyle, // FontIcon_FontSize
    KnownPropertyIndex::FontIcon_FontWeight, // FontIcon_FontStyle
    KnownPropertyIndex::FontIcon_Glyph, // FontIcon_FontWeight
    KnownPropertyIndex::FontIcon_IsTextScaleFactorEnabled, // FontIcon_Glyph
    KnownPropertyIndex::FontIcon_MirroredWhenRightToLeft, // FontIcon_IsTextScaleFactorEnabled
    KnownPropertyIndex::IconElement_Foreground, // FontIcon_MirroredWhenRightToLeft
    KnownPropertyIndex::Grid_BorderBrush, // Grid_BackgroundSizing
    KnownPropertyIndex::Grid_BorderThickness, // Grid_BorderBrush
    KnownPropertyIndex::Grid_Column, // Grid_BorderThickness
    KnownPropertyIndex::Grid_ColumnDefinitions, // Grid_Column
    KnownPropertyIndex::Grid_ColumnSpacing, // Grid_ColumnDefinitions
    KnownPropertyIndex::Grid_ColumnSpan, // Grid_ColumnSpacing
    KnownPropertyIndex::Grid_CornerRadius, // Grid_ColumnSpan
    KnownPropertyIndex::Grid_Padding, // Grid_CornerRadius
    KnownPropertyIndex::Grid_Row, // Grid_Padding
    KnownPropertyIndex::Grid_RowDefinitions, // Grid_Row
    KnownPropertyIndex::Grid_RowSpacing, // Grid_RowDefinitions
    KnownPropertyIndex::Grid_RowSpan, // Grid_RowSpacing
    KnownPropertyIndex::Panel_Background, // Grid_RowSpan
    KnownPropertyIndex::Hub_Header, // Hub_DefaultSectionIndex
    KnownPropertyIndex::Hub_HeaderTemplate, // Hub_Header
    KnownPropertyIndex::Hub_IsActiveView, // Hub_HeaderTemplate
    KnownPropertyIndex::Hub_IsZoomedInView, // Hub_IsActiveView
    KnownPropertyIndex::Hub_Orientation, // Hub_IsZoomedInView
    KnownPropertyIndex::Hub_SectionHeaders, // Hub_Orientation
    KnownPropertyIndex::Hub_Sections, // Hub_SectionHeaders
    KnownPropertyIndex::Hub_SectionsInView, // Hub_Sections
    KnownPropertyIndex::Hub_SemanticZoomOwner, // Hub_SectionsInView
    KnownPropertyIndex::Control_Background, // Hub_SemanticZoomOwner
    KnownPropertyIndex::HubSection_Header, // HubSection_ContentTemplate
    KnownPropertyIndex::HubSection_HeaderTemplate, // HubSection_Header
    KnownPropertyIndex::HubSection_IsHeaderInteractive, // HubSection_HeaderTemplate
    KnownPropertyIndex::Control_Background, // HubSection_IsHeaderInteractive
    KnownPropertyIndex::Hyperlink_FocusState, // Hyperlink_ElementSoundMode
    KnownPropertyIndex::Hyperlink_IsTabStop, // Hyperlink_FocusState
    KnownPropertyIndex::Hyperlink_NavigateUri, // Hyperlink_IsTabStop
    KnownPropertyIndex::Hyperlink_TabIndex, // Hyperlink_NavigateUri
    KnownPropertyIndex::Hyperlink_UnderlineStyle, // Hyperlink_TabIndex
    KnownPropertyIndex::Hyperlink_XYFocusDown, // Hyperlink_UnderlineStyle
    KnownPropertyIndex::Hyperlink_XYFocusDownNavigationStrategy, // Hyperlink_XYFocusDown
    KnownPropertyIndex::Hyperlink_XYFocusLeft, // Hyperlink_XYFocusDownNavigationStrategy
    KnownPropertyIndex::Hyperlink_XYFocusLeftNavigationStrategy, // Hyperlink_XYFocusLeft
    KnownPropertyIndex::Hyperlink_XYFocusRight, // Hyperlink_XYFocusLeftNavigationStrategy
    KnownPropertyIndex::Hyperlink_XYFocusRightNavigationStrategy, // Hyperlink_XYFocusRight
    KnownPropertyIndex::Hyperlink_XYFocusUp, // Hyperlink_XYFocusRightNavigationStrategy
    KnownPropertyIndex::Hyperlink_XYFocusUpNavigationStrategy, // Hyperlink_XYFocusUp
    KnownPropertyIndex::Span_Inlines, // Hyperlink_XYFocusUpNavigationStrategy
    KnownPropertyIndex::IconElement_Foreground, // IconSourceElement_IconSource
    KnownPropertyIndex::PresentationFrameworkCollection_Count, // ItemCollection_ContentProperty
    KnownPropertyIndex::ItemsControl_GroupStyle, // ItemsControl_DisplayMemberPath
    KnownPropertyIndex::ItemsControl_GroupStyleSelector, // ItemsControl_GroupStyle
    KnownPropertyIndex::ItemsControl_IsGrouping, // ItemsControl_GroupStyleSelector
    KnownPropertyIndex::ItemsControl_IsItemsHostInvalid, // ItemsControl_IsGrouping
    KnownPropertyIndex::ItemsControl_ItemContainerStyle, // ItemsControl_IsItemsHostInvalid
    KnownPropertyIndex::ItemsControl_ItemContainerStyleSelector, // ItemsControl_ItemContainerStyle
    KnownPropertyIndex::ItemsControl_ItemContainerTransitions, // ItemsControl_ItemContainerStyleSelector
    KnownPropertyIndex::ItemsControl_Items, // ItemsControl_ItemContainerTransitions
    KnownPropertyIndex::ItemsControl_ItemsHost, // ItemsControl_Items
    KnownPropertyIndex::ItemsControl_ItemsPanel, // ItemsControl_ItemsHost
    KnownPropertyIndex::ItemsControl_ItemsSource, // ItemsControl_ItemsPanel
    KnownPropertyIndex::ItemsControl_ItemTemplate, // ItemsControl_ItemsSource
    KnownPropertyIndex::ItemsControl_ItemTemplateSelector, // ItemsControl_ItemTemplate
    KnownPropertyIndex::Control_Background, // ItemsControl_ItemTemplateSelector
    KnownPropertyIndex::Line_X2, // Line_X1
    KnownPropertyIndex::Line_Y1, // Line_X2
    KnownPropertyIndex::Line_Y2, // Line_Y1
    KnownPropertyIndex::Shape_Fill, // Line_Y2
    KnownPropertyIndex::MediaPlayerElement_AutoPlay, // MediaPlayerElement_AreTransportControlsEnabled
    KnownPropertyIndex::MediaPlayerElement_IsFullWindow, // MediaPlayerElement_AutoPlay
    KnownPropertyIndex::MediaPlayerElement_MediaPlayer, // MediaPlayerElement_IsFullWindow
    KnownPropertyIndex::MediaPlayerElement_PosterSource, // MediaPlayerElement_MediaPlayer
    KnownPropertyIndex::MediaPlayerElement_Source, // MediaPlayerElement_PosterSource
    KnownPropertyIndex::MediaPlayerElement_Stretch, // MediaPlayerElement_Source
    KnownPropertyIndex::MediaPlayerElement_TransportControls, // MediaPlayerElement_Stretch
    KnownPropertyIndex::Control_Background, // MediaPlayerElement_TransportControls
    KnownPropertyIndex::MediaTransportControls_IsCompact, // MediaTransportControls_FastPlayFallbackBehaviour
    KnownPropertyIndex::MediaTransportControls_IsFastForwardButtonVisible, // MediaTransportControls_IsCompact
    KnownPropertyIndex::MediaTransportControls_IsFastForwardEnabled, // MediaTransportControls_IsFastForwardButtonVisible
    KnownPropertyIndex::MediaTransportControls_IsFastRewindButtonVisible, // MediaTransportControls_IsFastForwardEnabled
    KnownPropertyIndex::MediaTransportControls_IsFastRewindEnabled, // MediaTransportControls_IsFastRewindButtonVisible
    KnownPropertyIndex::MediaTransportControls_IsNextTrackButtonVisible, // MediaTransportControls_IsFastRewindEnabled
    KnownPropertyIndex::MediaTransportControls_IsPlaybackRateButtonVisible, // MediaTransportControls_IsNextTrackButtonVisible
    KnownPropertyIndex::MediaTransportControls_IsPlaybackRateEnabled, // MediaTransportControls_IsPlaybackRateButtonVisible
    KnownPropertyIndex::MediaTransportControls_IsPreviousTrackButtonVisible, // MediaTransportControls_IsPlaybackRateEnabled
    KnownPropertyIndex::MediaTransportControls_IsRepeatButtonVisible, // MediaTransportControls_IsPreviousTrackButtonVisible
    KnownPropertyIndex::MediaTransportControls_IsRepeatEnabled, // MediaTransportControls_IsRepeatButtonVisible
    KnownPropertyIndex::MediaTransportControls_IsSeekBarVisible, // MediaTransportControls_IsRepeatEnabled
    KnownPropertyIndex::MediaTransportControls_IsSeekEnabled, // MediaTransportControls_IsSeekBarVisible
    KnownPropertyIndex::MediaTransportControls_IsSkipBackwardButtonVisible, // MediaTransportControls_IsSeekEnabled
    KnownPropertyIndex::MediaTransportControls_IsSkipBackwardEnabled, // MediaTransportControls_IsSkipBackwardButtonVisible
    KnownPropertyIndex::MediaTransportControls_IsSkipForwardButtonVisible, // MediaTransportControls_IsSkipBackwardEnabled
    KnownPropertyIndex::MediaTransportControls_IsSkipForwardEnabled, // MediaTransportControls_IsSkipForwardButtonVisible
    KnownPropertyIndex::MediaTransportControls_IsStopButtonVisible, // MediaTransportControls_IsSkipForwardEnabled
    KnownPropertyIndex::MediaTransportControls_IsStopEnabled, // MediaTransportControls_IsStopButtonVisible
    KnownPropertyIndex::MediaTransportControls_IsVolumeButtonVisible, // MediaTransportControls_IsStopEnabled
    KnownPropertyIndex::MediaTransportControls_IsVolumeEnabled, // MediaTransportControls_IsVolumeButtonVisible
    KnownPropertyIndex::MediaTransportControls_IsZoomButtonVisible, // MediaTransportControls_IsVolumeEnabled
    KnownPropertyIndex::MediaTransportControls_IsZoomEnabled, // MediaTransportControls_IsZoomButtonVisible
    KnownPropertyIndex::MediaTransportControls_ShowAndHideAutomatically, // MediaTransportControls_IsZoomEnabled
    KnownPropertyIndex::Control_Background, // MediaTransportControls_ShowAndHideAutomatically
    KnownPropertyIndex::Panel_Background, // ModernCollectionBasePanel_AreStickyGroupHeadersEnabledBase
    KnownPropertyIndex::PasswordBox_Description, // PasswordBox_CanPasteClipboardContent
    KnownPropertyIndex::PasswordBox_ErrorTemplate, // PasswordBox_Description
    KnownPropertyIndex::PasswordBox_HasValidationErrors, // PasswordBox_ErrorTemplate
    KnownPropertyIndex::PasswordBox_Header, // PasswordBox_HasValidationErrors
    KnownPropertyIndex::PasswordBox_HeaderPlacement, // PasswordBox_Header
    KnownPropertyIndex::PasswordBox_HeaderTemplate, // PasswordBox_HeaderPlacement
    KnownPropertyIndex::PasswordBox_InputScope, // PasswordBox_HeaderTemplate
    KnownPropertyIndex::PasswordBox_InputValidationKind, // PasswordBox_InputScope
    KnownPropertyIndex::PasswordBox_InputValidationMode, // PasswordBox_InputValidationKind
    KnownPropertyIndex::PasswordBox_IsPasswordRevealButtonEnabled, // PasswordBox_InputValidationMode
    KnownPropertyIndex::PasswordBox_MaxLength, // PasswordBox_IsPasswordRevealButtonEnabled
    KnownPropertyIndex::PasswordBox_Password, // PasswordBox_MaxLength
    KnownPropertyIndex::PasswordBox_PasswordChar, // PasswordBox_Password
    KnownPropertyIndex::PasswordBox_PasswordRevealMode, // PasswordBox_PasswordChar
    KnownPropertyIndex::PasswordBox_PlaceholderText, // PasswordBox_PasswordRevealMode
    KnownPropertyIndex::PasswordBox_PreventKeyboardDisplayOnProgrammaticFocus, // PasswordBox_PlaceholderText
    KnownPropertyIndex::PasswordBox_SelectionFlyout, // PasswordBox_PreventKeyboardDisplayOnProgrammaticFocus
    KnownPropertyIndex::PasswordBox_SelectionHighlightColor, // PasswordBox_SelectionFlyout
    KnownPropertyIndex::PasswordBox_TextReadingOrder, // PasswordBox_SelectionHighlightColor
    KnownPropertyIndex::PasswordBox_ValidationCommand, // PasswordBox_TextReadingOrder
    KnownPropertyIndex::PasswordBox_ValidationContext, // PasswordBox_ValidationCommand
    KnownPropertyIndex::PasswordBox_ValidationErrors, // PasswordBox_ValidationContext
    KnownPropertyIndex::Control_Background, // PasswordBox_ValidationErrors
    KnownPropertyIndex::Shape_Fill, // Path_Data
    KnownPropertyIndex::IconElement_Foreground, // PathIcon_Data
    KnownPropertyIndex::Polygon_Points, // Polygon_FillRule
    KnownPropertyIndex::Shape_Fill, // Polygon_Points
    KnownPropertyIndex::Polyline_Points, // Polyline_FillRule
    KnownPropertyIndex::Shape_Fill, // Polyline_Points
    KnownPropertyIndex::RangeBase_Maximum, // RangeBase_LargeChange
    KnownPropertyIndex::RangeBase_Minimum, // RangeBase_Maximum
    KnownPropertyIndex::RangeBase_SmallChange, // RangeBase_Minimum
    KnownPropertyIndex::RangeBase_Value, // RangeBase_SmallChange
    KnownPropertyIndex::Control_Background, // RangeBase_Value
    KnownPropertyIndex::Rectangle_RadiusY, // Rectangle_RadiusX
    KnownPropertyIndex::Shape_Fill, // Rectangle_RadiusY
    KnownPropertyIndex::RelativePanel_AlignBottomWith, // RelativePanel_Above
    KnownPropertyIndex::RelativePanel_AlignBottomWithPanel, // RelativePanel_AlignBottomWith
    KnownPropertyIndex::RelativePanel_AlignHorizontalCenterWith, // RelativePanel_AlignBottomWithPanel
    KnownPropertyIndex::RelativePanel_AlignHorizontalCenterWithPanel, // RelativePanel_AlignHorizontalCenterWith
    KnownPropertyIndex::RelativePanel_AlignLeftWith, // RelativePanel_AlignHorizontalCenterWithPanel
    KnownPropertyIndex::RelativePanel_AlignLeftWithPanel, // RelativePanel_AlignLeftWith
    KnownPropertyIndex::RelativePanel_AlignRightWith, // RelativePanel_AlignLeftWithPanel
    KnownPropertyIndex::RelativePanel_AlignRightWithPanel, // RelativePanel_AlignRightWith
    KnownPropertyIndex::RelativePanel_AlignTopWith, // RelativePanel_AlignRightWithPanel
    KnownPropertyIndex::RelativePanel_AlignTopWithPanel, // RelativePanel_AlignTopWith
    KnownPropertyIndex::RelativePanel_AlignVerticalCenterWith, // RelativePanel_AlignTopWithPanel
    KnownPropertyIndex::RelativePanel_AlignVerticalCenterWithPanel, // RelativePanel_AlignVerticalCenterWith
    KnownPropertyIndex::RelativePanel_BackgroundSizing, // RelativePanel_AlignVerticalCenterWithPanel
    KnownPropertyIndex::RelativePanel_Below, // RelativePanel_BackgroundSizing
    KnownPropertyIndex::RelativePanel_BorderBrush, // RelativePanel_Below
    KnownPropertyIndex::RelativePanel_BorderThickness, // RelativePanel_BorderBrush
    KnownPropertyIndex::RelativePanel_CornerRadius, // RelativePanel_BorderThickness
    KnownPropertyIndex::RelativePanel_LeftOf, // RelativePanel_CornerRadius
    KnownPropertyIndex::RelativePanel_Padding, // RelativePanel_LeftOf
    KnownPropertyIndex::RelativePanel_RightOf, // RelativePanel_Padding
    KnownPropertyIndex::Panel_Background, // RelativePanel_RightOf
    KnownPropertyIndex::RichEditBox_CharacterCasing, // RichEditBox_AcceptsReturn
    KnownPropertyIndex::RichEditBox_ClipboardCopyFormat, // RichEditBox_CharacterCasing
    KnownPropertyIndex::RichEditBox_Description, // RichEditBox_ClipboardCopyFormat
    KnownPropertyIndex::RichEditBox_DesiredCandidateWindowAlignment, // RichEditBox_Description
    KnownPropertyIndex::RichEditBox_DisabledFormattingAccelerators, // RichEditBox_DesiredCandidateWindowAlignment
    KnownPropertyIndex::RichEditBox_Header, // RichEditBox_DisabledFormattingAccelerators
    KnownPropertyIndex::RichEditBox_HeaderPlacement, // RichEditBox_Header
    KnownPropertyIndex::RichEditBox_HeaderTemplate, // RichEditBox_HeaderPlacement
    KnownPropertyIndex::RichEditBox_HorizontalTextAlignment, // RichEditBox_HeaderTemplate
    KnownPropertyIndex::RichEditBox_InputScope, // RichEditBox_HorizontalTextAlignment
    KnownPropertyIndex::RichEditBox_IsColorFontEnabled, // RichEditBox_InputScope
    KnownPropertyIndex::RichEditBox_IsReadOnly, // RichEditBox_IsColorFontEnabled
    KnownPropertyIndex::RichEditBox_IsSpellCheckEnabled, // RichEditBox_IsReadOnly
    KnownPropertyIndex::RichEditBox_IsTelemetryCollectionEnabled, // RichEditBox_IsSpellCheckEnabled
    KnownPropertyIndex::RichEditBox_IsTextPredictionEnabled, // RichEditBox_IsTelemetryCollectionEnabled
    KnownPropertyIndex::RichEditBox_MaxLength, // RichEditBox_IsTextPredictionEnabled
    KnownPropertyIndex::RichEditBox_PlaceholderText, // RichEditBox_MaxLength
    KnownPropertyIndex::RichEditBox_PreventKeyboardDisplayOnProgrammaticFocus, // RichEditBox_PlaceholderText
    KnownPropertyIndex::RichEditBox_ProofingMenuFlyout, // RichEditBox_PreventKeyboardDisplayOnProgrammaticFocus
    KnownPropertyIndex::RichEditBox_SelectionFlyout, // RichEditBox_ProofingMenuFlyout
    KnownPropertyIndex::RichEditBox_SelectionHighlightColor, // RichEditBox_SelectionFlyout
    KnownPropertyIndex::RichEditBox_SelectionHighlightColorWhenNotFocused, // RichEditBox_SelectionHighlightColor
    KnownPropertyIndex::RichEditBox_TextAlignment, // RichEditBox_SelectionHighlightColorWhenNotFocused
    KnownPropertyIndex::RichEditBox_TextReadingOrder, // RichEditBox_TextAlignment
    KnownPropertyIndex::RichEditBox_TextWrapping, // RichEditBox_TextReadingOrder
    KnownPropertyIndex::Control_Background, // RichEditBox_TextWrapping
    KnownPropertyIndex::ScrollContentPresenter_SizesContentToTemplatedParent, // ScrollContentPresenter_CanContentRenderOutsideBounds
    KnownPropertyIndex::ContentPresenter_Background, // ScrollContentPresenter_SizesContentToTemplatedParent
    KnownPropertyIndex::SemanticZoom_IsZoomedInViewActive, // SemanticZoom_CanChangeViews
    KnownPropertyIndex::SemanticZoom_IsZoomOutButtonEnabled, // SemanticZoom_IsZoomedInViewActive
    KnownPropertyIndex::SemanticZoom_ZoomedInView, // SemanticZoom_IsZoomOutButtonEnabled
    KnownPropertyIndex::SemanticZoom_ZoomedOutView, // SemanticZoom_ZoomedInView
    KnownPropertyIndex::Control_Background, // SemanticZoom_ZoomedOutView
    KnownPropertyIndex::SplitView_Content, // SplitView_CompactPaneLength
    KnownPropertyIndex::SplitView_DisplayMode, // SplitView_Content
    KnownPropertyIndex::SplitView_IsPaneOpen, // SplitView_DisplayMode
    KnownPropertyIndex::SplitView_LightDismissOverlayMode, // SplitView_IsPaneOpen
    KnownPropertyIndex::SplitView_OpenPaneLength, // SplitView_LightDismissOverlayMode
    KnownPropertyIndex::SplitView_Pane, // SplitView_OpenPaneLength
    KnownPropertyIndex::SplitView_PaneBackground, // SplitView_Pane
    KnownPropertyIndex::SplitView_PanePlacement, // SplitView_PaneBackground
    KnownPropertyIndex::SplitView_TemplateSettings, // SplitView_PanePlacement
    KnownPropertyIndex::Control_Background, // SplitView_TemplateSettings
    KnownPropertyIndex::StackPanel_BackgroundSizing, // StackPanel_AreScrollSnapPointsRegular
    KnownPropertyIndex::StackPanel_BorderBrush, // StackPanel_BackgroundSizing
    KnownPropertyIndex::StackPanel_BorderThickness, // StackPanel_BorderBrush
    KnownPropertyIndex::StackPanel_CornerRadius, // StackPanel_BorderThickness
    KnownPropertyIndex::StackPanel_Orientation, // StackPanel_CornerRadius
    KnownPropertyIndex::StackPanel_Padding, // StackPanel_Orientation
    KnownPropertyIndex::StackPanel_Spacing, // StackPanel_Padding
    KnownPropertyIndex::Panel_Background, // StackPanel_Spacing
    KnownPropertyIndex::IconElement_Foreground, // SymbolIcon_Symbol
    KnownPropertyIndex::TextBox_CanPasteClipboardContent, // TextBox_AcceptsReturn
    KnownPropertyIndex::TextBox_CanRedo, // TextBox_CanPasteClipboardContent
    KnownPropertyIndex::TextBox_CanUndo, // TextBox_CanRedo
    KnownPropertyIndex::TextBox_CharacterCasing, // TextBox_CanUndo
    KnownPropertyIndex::TextBox_Description, // TextBox_CharacterCasing
    KnownPropertyIndex::TextBox_DesiredCandidateWindowAlignment, // TextBox_Description
    KnownPropertyIndex::TextBox_ErrorTemplate, // TextBox_DesiredCandidateWindowAlignment
    KnownPropertyIndex::TextBox_HasValidationErrors, // TextBox_ErrorTemplate
    KnownPropertyIndex::TextBox_Header, // TextBox_HasValidationErrors
    KnownPropertyIndex::TextBox_HeaderPlacement, // TextBox_Header
    KnownPropertyIndex::TextBox_HeaderTemplate, // TextBox_HeaderPlacement
    KnownPropertyIndex::TextBox_HorizontalTextAlignment, // TextBox_HeaderTemplate
    KnownPropertyIndex::TextBox_InputScope, // TextBox_HorizontalTextAlignment
    KnownPropertyIndex::TextBox_InputValidationKind, // TextBox_InputScope
    KnownPropertyIndex::TextBox_InputValidationMode, // TextBox_InputValidationKind
    KnownPropertyIndex::TextBox_IsColorFontEnabled, // TextBox_InputValidationMode
    KnownPropertyIndex::TextBox_IsCoreDesktopPopupMenuEnabled, // TextBox_IsColorFontEnabled
    KnownPropertyIndex::TextBox_IsReadOnly, // TextBox_IsCoreDesktopPopupMenuEnabled
    KnownPropertyIndex::TextBox_IsSpellCheckEnabled, // TextBox_IsReadOnly
    KnownPropertyIndex::TextBox_IsTelemetryCollectionEnabled, // TextBox_IsSpellCheckEnabled
    KnownPropertyIndex::TextBox_IsTextPredictionEnabled, // TextBox_IsTelemetryCollectionEnabled
    KnownPropertyIndex::TextBox_MaxLength, // TextBox_IsTextPredictionEnabled
    KnownPropertyIndex::TextBox_PlaceholderForeground, // TextBox_MaxLength
    KnownPropertyIndex::TextBox_PlaceholderText, // TextBox_PlaceholderForeground
    KnownPropertyIndex::TextBox_PreventEditFocusLoss, // TextBox_PlaceholderText
    KnownPropertyIndex::TextBox_PreventKeyboardDisplayOnProgrammaticFocus, // TextBox_PreventEditFocusLoss
    KnownPropertyIndex::TextBox_ProofingMenuFlyout, // TextBox_PreventKeyboardDisplayOnProgrammaticFocus
    KnownPropertyIndex::TextBox_SelectedText, // TextBox_ProofingMenuFlyout
    KnownPropertyIndex::TextBox_SelectionFlyout, // TextBox_SelectedText
    KnownPropertyIndex::TextBox_SelectionHighlightColor, // TextBox_SelectionFlyout
    KnownPropertyIndex::TextBox_SelectionHighlightColorWhenNotFocused, // TextBox_SelectionHighlightColor
    KnownPropertyIndex::TextBox_SelectionLength, // TextBox_SelectionHighlightColorWhenNotFocused
    KnownPropertyIndex::TextBox_SelectionStart, // TextBox_SelectionLength
    KnownPropertyIndex::TextBox_Text, // TextBox_SelectionStart
    KnownPropertyIndex::TextBox_TextAlignment, // TextBox_Text
    KnownPropertyIndex::TextBox_TextReadingOrder, // TextBox_TextAlignment
    KnownPropertyIndex::TextBox_TextWrapping, // TextBox_TextReadingOrder
    KnownPropertyIndex::TextBox_ValidationCommand, // TextBox_TextWrapping
    KnownPropertyIndex::TextBox_ValidationContext, // TextBox_ValidationCommand
    KnownPropertyIndex::TextBox_ValidationErrors, // TextBox_ValidationContext
    KnownPropertyIndex::Control_Background, // TextBox_ValidationErrors
    KnownPropertyIndex::Control_Background, // Thumb_IsDragging
    KnownPropertyIndex::Panel_Background, // TickBar_Fill
    KnownPropertyIndex::TimePicker_Header, // TimePicker_ClockIdentifier
    KnownPropertyIndex::TimePicker_HeaderPlacement, // TimePicker_Header
    KnownPropertyIndex::TimePicker_HeaderTemplate, // TimePicker_HeaderPlacement
    KnownPropertyIndex::TimePicker_LightDismissOverlayMode, // TimePicker_HeaderTemplate
    KnownPropertyIndex::TimePicker_MinuteIncrement, // TimePicker_LightDismissOverlayMode
    KnownPropertyIndex::TimePicker_SelectedTime, // TimePicker_MinuteIncrement
    KnownPropertyIndex::TimePicker_Time, // TimePicker_SelectedTime
    KnownPropertyIndex::Control_Background, // TimePicker_Time
    KnownPropertyIndex::ToggleSwitch_HeaderPlacement, // ToggleSwitch_Header
    KnownPropertyIndex::ToggleSwitch_HeaderTemplate, // ToggleSwitch_HeaderPlacement
    KnownPropertyIndex::ToggleSwitch_IsOn, // ToggleSwitch_HeaderTemplate
    KnownPropertyIndex::ToggleSwitch_OffContent, // ToggleSwitch_IsOn
    KnownPropertyIndex::ToggleSwitch_OffContentTemplate, // ToggleSwitch_OffContent
    KnownPropertyIndex::ToggleSwitch_OnContent, // ToggleSwitch_OffContentTemplate
    KnownPropertyIndex::ToggleSwitch_OnContentTemplate, // ToggleSwitch_OnContent
    KnownPropertyIndex::ToggleSwitch_TemplateSettings, // ToggleSwitch_OnContentTemplate
    KnownPropertyIndex::Control_Background, // ToggleSwitch_TemplateSettings
    KnownPropertyIndex::Control_Background, // UserControl_Content
    KnownPropertyIndex::VariableSizedWrapGrid_HorizontalChildrenAlignment, // VariableSizedWrapGrid_ColumnSpan
    KnownPropertyIndex::VariableSizedWrapGrid_ItemHeight, // VariableSizedWrapGrid_HorizontalChildrenAlignment
    KnownPropertyIndex::VariableSizedWrapGrid_ItemWidth, // VariableSizedWrapGrid_ItemHeight
    KnownPropertyIndex::VariableSizedWrapGrid_MaximumRowsOrColumns, // VariableSizedWrapGrid_ItemWidth
    KnownPropertyIndex::VariableSizedWrapGrid_Orientation, // VariableSizedWrapGrid_MaximumRowsOrColumns
    KnownPropertyIndex::VariableSizedWrapGrid_RowSpan, // VariableSizedWrapGrid_Orientation
    KnownPropertyIndex::VariableSizedWrapGrid_VerticalChildrenAlignment, // VariableSizedWrapGrid_RowSpan
    KnownPropertyIndex::Panel_Background, // VariableSizedWrapGrid_VerticalChildrenAlignment
    KnownPropertyIndex::AppBar_IsOpen, // AppBar_ClosedDisplayMode
    KnownPropertyIndex::AppBar_IsSticky, // AppBar_IsOpen
    KnownPropertyIndex::AppBar_LightDismissOverlayMode, // AppBar_IsSticky
    KnownPropertyIndex::AppBar_TemplateSettings, // AppBar_LightDismissOverlayMode
    KnownPropertyIndex::ContentControl_Content, // AppBar_TemplateSettings
    KnownPropertyIndex::AppBarElementContainer_IsCompact, // AppBarElementContainer_DynamicOverflowOrder
    KnownPropertyIndex::AppBarElementContainer_IsInOverflow, // AppBarElementContainer_IsCompact
    KnownPropertyIndex::AppBarElementContainer_UseOverflowStyle, // AppBarElementContainer_IsInOverflow
    KnownPropertyIndex::ContentControl_Content, // AppBarElementContainer_UseOverflowStyle
    KnownPropertyIndex::AutoSuggestBox_Description, // AutoSuggestBox_AutoMaximizeSuggestionArea
    KnownPropertyIndex::AutoSuggestBox_ErrorTemplate, // AutoSuggestBox_Description
    KnownPropertyIndex::AutoSuggestBox_HasValidationErrors, // AutoSuggestBox_ErrorTemplate
    KnownPropertyIndex::AutoSuggestBox_Header, // AutoSuggestBox_HasValidationErrors
    KnownPropertyIndex::AutoSuggestBox_HeaderPlacement, // AutoSuggestBox_Header
    KnownPropertyIndex::AutoSuggestBox_InputValidationKind, // AutoSuggestBox_HeaderPlacement
    KnownPropertyIndex::AutoSuggestBox_InputValidationMode, // AutoSuggestBox_InputValidationKind
    KnownPropertyIndex::AutoSuggestBox_IsSuggestionListOpen, // AutoSuggestBox_InputValidationMode
    KnownPropertyIndex::AutoSuggestBox_LightDismissOverlayMode, // AutoSuggestBox_IsSuggestionListOpen
    KnownPropertyIndex::AutoSuggestBox_MaxSuggestionListHeight, // AutoSuggestBox_LightDismissOverlayMode
    KnownPropertyIndex::AutoSuggestBox_PlaceholderText, // AutoSuggestBox_MaxSuggestionListHeight
    KnownPropertyIndex::AutoSuggestBox_QueryIcon, // AutoSuggestBox_PlaceholderText
    KnownPropertyIndex::AutoSuggestBox_Text, // AutoSuggestBox_QueryIcon
    KnownPropertyIndex::AutoSuggestBox_TextBoxStyle, // AutoSuggestBox_Text
    KnownPropertyIndex::AutoSuggestBox_TextMemberPath, // AutoSuggestBox_TextBoxStyle
    KnownPropertyIndex::AutoSuggestBox_UpdateTextOnSelect, // AutoSuggestBox_TextMemberPath
    KnownPropertyIndex::AutoSuggestBox_ValidationCommand, // AutoSuggestBox_UpdateTextOnSelect
    KnownPropertyIndex::AutoSuggestBox_ValidationContext, // AutoSuggestBox_ValidationCommand
    KnownPropertyIndex::AutoSuggestBox_ValidationErrors, // AutoSuggestBox_ValidationContext
    KnownPropertyIndex::ItemsControl_DisplayMemberPath, // AutoSuggestBox_ValidationErrors
    KnownPropertyIndex::TextElementCollection_ContentProperty, // BlockCollection_ContentProperty
    KnownPropertyIndex::ButtonBase_Command, // ButtonBase_ClickMode
    KnownPropertyIndex::ButtonBase_CommandParameter, // ButtonBase_Command
    KnownPropertyIndex::ButtonBase_IsPointerOver, // ButtonBase_CommandParameter
    KnownPropertyIndex::ButtonBase_IsPressed, // ButtonBase_IsPointerOver
    KnownPropertyIndex::ContentControl_Content, // ButtonBase_IsPressed
    KnownPropertyIndex::CalendarPanel_Cols, // CalendarPanel_CacheLength
    KnownPropertyIndex::CalendarPanel_ItemMinHeight, // CalendarPanel_Cols
    KnownPropertyIndex::CalendarPanel_ItemMinWidth, // CalendarPanel_ItemMinHeight
    KnownPropertyIndex::CalendarPanel_Orientation, // CalendarPanel_ItemMinWidth
    KnownPropertyIndex::CalendarPanel_Rows, // CalendarPanel_Orientation
    KnownPropertyIndex::CalendarPanel_StartIndex, // CalendarPanel_Rows
    KnownPropertyIndex::ModernCollectionBasePanel_AreStickyGroupHeadersEnabledBase, // CalendarPanel_StartIndex
    KnownPropertyIndex::CalendarViewDayItem_IsBlackout, // CalendarViewDayItem_Date
    KnownPropertyIndex::Control_Background, // CalendarViewDayItem_IsBlackout
    KnownPropertyIndex::Control_Background, // CalendarViewItem_Date
    KnownPropertyIndex::ContentDialog_CloseButtonCommandParameter, // ContentDialog_CloseButtonCommand
    KnownPropertyIndex::ContentDialog_CloseButtonStyle, // ContentDialog_CloseButtonCommandParameter
    KnownPropertyIndex::ContentDialog_CloseButtonText, // ContentDialog_CloseButtonStyle
    KnownPropertyIndex::ContentDialog_DefaultButton, // ContentDialog_CloseButtonText
    KnownPropertyIndex::ContentDialog_FullSizeDesired, // ContentDialog_DefaultButton
    KnownPropertyIndex::ContentDialog_IsPrimaryButtonEnabled, // ContentDialog_FullSizeDesired
    KnownPropertyIndex::ContentDialog_IsSecondaryButtonEnabled, // ContentDialog_IsPrimaryButtonEnabled
    KnownPropertyIndex::ContentDialog_PrimaryButtonCommand, // ContentDialog_IsSecondaryButtonEnabled
    KnownPropertyIndex::ContentDialog_PrimaryButtonCommandParameter, // ContentDialog_PrimaryButtonCommand
    KnownPropertyIndex::ContentDialog_PrimaryButtonStyle, // ContentDialog_PrimaryButtonCommandParameter
    KnownPropertyIndex::ContentDialog_PrimaryButtonText, // ContentDialog_PrimaryButtonStyle
    KnownPropertyIndex::ContentDialog_SecondaryButtonCommand, // ContentDialog_PrimaryButtonText
    KnownPropertyIndex::ContentDialog_SecondaryButtonCommandParameter, // ContentDialog_SecondaryButtonCommand
    KnownPropertyIndex::ContentDialog_SecondaryButtonStyle, // ContentDialog_SecondaryButtonCommandParameter
    KnownPropertyIndex::ContentDialog_SecondaryButtonText, // ContentDialog_SecondaryButtonStyle
    KnownPropertyIndex::ContentDialog_Title, // ContentDialog_SecondaryButtonText
    KnownPropertyIndex::ContentDialog_TitleTemplate, // ContentDialog_Title
    KnownPropertyIndex::ContentControl_Content, // ContentDialog_TitleTemplate
    KnownPropertyIndex::ContentControl_Content, // FlyoutPresenter_IsDefaultShadowEnabled
    KnownPropertyIndex::Frame_BackStackDepth, // Frame_BackStack
    KnownPropertyIndex::Frame_CacheSize, // Frame_BackStackDepth
    KnownPropertyIndex::Frame_CanGoBack, // Frame_CacheSize
    KnownPropertyIndex::Frame_CanGoForward, // Frame_CanGoBack
    KnownPropertyIndex::Frame_CurrentSourcePageType, // Frame_CanGoForward
    KnownPropertyIndex::Frame_ForwardStack, // Frame_CurrentSourcePageType
    KnownPropertyIndex::Frame_IsNavigationStackEnabled, // Frame_ForwardStack
    KnownPropertyIndex::Frame_SourcePageType, // Frame_IsNavigationStackEnabled
    KnownPropertyIndex::ContentControl_Content, // Frame_SourcePageType
    KnownPropertyIndex::GridViewItemPresenter_CheckHintBrush, // GridViewItemPresenter_CheckBrush
    KnownPropertyIndex::GridViewItemPresenter_CheckSelectingBrush, // GridViewItemPresenter_CheckHintBrush
    KnownPropertyIndex::GridViewItemPresenter_ContentMargin, // GridViewItemPresenter_CheckSelectingBrush
    KnownPropertyIndex::GridViewItemPresenter_DisabledOpacity, // GridViewItemPresenter_ContentMargin
    KnownPropertyIndex::GridViewItemPresenter_DragBackground, // GridViewItemPresenter_DisabledOpacity
    KnownPropertyIndex::GridViewItemPresenter_DragForeground, // GridViewItemPresenter_DragBackground
    KnownPropertyIndex::GridViewItemPresenter_DragOpacity, // GridViewItemPresenter_DragForeground
    KnownPropertyIndex::GridViewItemPresenter_FocusBorderBrush, // GridViewItemPresenter_DragOpacity
    KnownPropertyIndex::GridViewItemPresenter_GridViewItemPresenterHorizontalContentAlignment, // GridViewItemPresenter_FocusBorderBrush
    KnownPropertyIndex::GridViewItemPresenter_GridViewItemPresenterPadding, // GridViewItemPresenter_GridViewItemPresenterHorizontalContentAlignment
    KnownPropertyIndex::GridViewItemPresenter_GridViewItemPresenterVerticalContentAlignment, // GridViewItemPresenter_GridViewItemPresenterPadding
    KnownPropertyIndex::GridViewItemPresenter_PlaceholderBackground, // GridViewItemPresenter_GridViewItemPresenterVerticalContentAlignment
    KnownPropertyIndex::GridViewItemPresenter_PointerOverBackground, // GridViewItemPresenter_PlaceholderBackground
    KnownPropertyIndex::GridViewItemPresenter_PointerOverBackgroundMargin, // GridViewItemPresenter_PointerOverBackground
    KnownPropertyIndex::GridViewItemPresenter_ReorderHintOffset, // GridViewItemPresenter_PointerOverBackgroundMargin
    KnownPropertyIndex::GridViewItemPresenter_SelectedBackground, // GridViewItemPresenter_ReorderHintOffset
    KnownPropertyIndex::GridViewItemPresenter_SelectedBorderThickness, // GridViewItemPresenter_SelectedBackground
    KnownPropertyIndex::GridViewItemPresenter_SelectedForeground, // GridViewItemPresenter_SelectedBorderThickness
    KnownPropertyIndex::GridViewItemPresenter_SelectedPointerOverBackground, // GridViewItemPresenter_SelectedForeground
    KnownPropertyIndex::GridViewItemPresenter_SelectedPointerOverBorderBrush, // GridViewItemPresenter_SelectedPointerOverBackground
    KnownPropertyIndex::GridViewItemPresenter_SelectionCheckMarkVisualEnabled, // GridViewItemPresenter_SelectedPointerOverBorderBrush
    KnownPropertyIndex::ContentPresenter_Background, // GridViewItemPresenter_SelectionCheckMarkVisualEnabled
    KnownPropertyIndex::TextElementCollection_ContentProperty, // InlineCollection_ContentProperty
    KnownPropertyIndex::ItemsStackPanel_CacheLength, // ItemsStackPanel_AreStickyGroupHeadersEnabled
    KnownPropertyIndex::ItemsStackPanel_GroupHeaderPlacement, // ItemsStackPanel_CacheLength
    KnownPropertyIndex::ItemsStackPanel_GroupPadding, // ItemsStackPanel_GroupHeaderPlacement
    KnownPropertyIndex::ItemsStackPanel_ItemsUpdatingScrollMode, // ItemsStackPanel_GroupPadding
    KnownPropertyIndex::ItemsStackPanel_Orientation, // ItemsStackPanel_ItemsUpdatingScrollMode
    KnownPropertyIndex::ModernCollectionBasePanel_AreStickyGroupHeadersEnabledBase, // ItemsStackPanel_Orientation
    KnownPropertyIndex::ItemsWrapGrid_CacheLength, // ItemsWrapGrid_AreStickyGroupHeadersEnabled
    KnownPropertyIndex::ItemsWrapGrid_GroupHeaderPlacement, // ItemsWrapGrid_CacheLength
    KnownPropertyIndex::ItemsWrapGrid_GroupPadding, // ItemsWrapGrid_GroupHeaderPlacement
    KnownPropertyIndex::ItemsWrapGrid_ItemHeight, // ItemsWrapGrid_GroupPadding
    KnownPropertyIndex::ItemsWrapGrid_ItemWidth, // ItemsWrapGrid_ItemHeight
    KnownPropertyIndex::ItemsWrapGrid_MaximumRowsOrColumns, // ItemsWrapGrid_ItemWidth
    KnownPropertyIndex::ItemsWrapGrid_Orientation, // ItemsWrapGrid_MaximumRowsOrColumns
    KnownPropertyIndex::ModernCollectionBasePanel_AreStickyGroupHeadersEnabledBase, // ItemsWrapGrid_Orientation
    KnownPropertyIndex::ListViewItemPresenter_CheckBoxBrush, // ListViewItemPresenter_CheckBoxBorderBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckBoxCornerRadius, // ListViewItemPresenter_CheckBoxBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckBoxDisabledBorderBrush, // ListViewItemPresenter_CheckBoxCornerRadius
    KnownPropertyIndex::ListViewItemPresenter_CheckBoxDisabledBrush, // ListViewItemPresenter_CheckBoxDisabledBorderBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckBoxPointerOverBorderBrush, // ListViewItemPresenter_CheckBoxDisabledBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckBoxPointerOverBrush, // ListViewItemPresenter_CheckBoxPointerOverBorderBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckBoxPressedBorderBrush, // ListViewItemPresenter_CheckBoxPointerOverBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckBoxPressedBrush, // ListViewItemPresenter_CheckBoxPressedBorderBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedBrush, // ListViewItemPresenter_CheckBoxPressedBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedDisabledBrush, // ListViewItemPresenter_CheckBoxSelectedBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedPointerOverBrush, // ListViewItemPresenter_CheckBoxSelectedDisabledBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedPressedBrush, // ListViewItemPresenter_CheckBoxSelectedPointerOverBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckBrush, // ListViewItemPresenter_CheckBoxSelectedPressedBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckDisabledBrush, // ListViewItemPresenter_CheckBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckHintBrush, // ListViewItemPresenter_CheckDisabledBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckMode, // ListViewItemPresenter_CheckHintBrush
    KnownPropertyIndex::ListViewItemPresenter_CheckPressedBrush, // ListViewItemPresenter_CheckMode
    KnownPropertyIndex::ListViewItemPresenter_CheckSelectingBrush, // ListViewItemPresenter_CheckPressedBrush
    KnownPropertyIndex::ListViewItemPresenter_ContentMargin, // ListViewItemPresenter_CheckSelectingBrush
    KnownPropertyIndex::ListViewItemPresenter_DisabledOpacity, // ListViewItemPresenter_ContentMargin
    KnownPropertyIndex::ListViewItemPresenter_DragBackground, // ListViewItemPresenter_DisabledOpacity
    KnownPropertyIndex::ListViewItemPresenter_DragForeground, // ListViewItemPresenter_DragBackground
    KnownPropertyIndex::ListViewItemPresenter_DragOpacity, // ListViewItemPresenter_DragForeground
    KnownPropertyIndex::ListViewItemPresenter_FocusBorderBrush, // ListViewItemPresenter_DragOpacity
    KnownPropertyIndex::ListViewItemPresenter_FocusSecondaryBorderBrush, // ListViewItemPresenter_FocusBorderBrush
    KnownPropertyIndex::ListViewItemPresenter_ListViewItemPresenterHorizontalContentAlignment, // ListViewItemPresenter_FocusSecondaryBorderBrush
    KnownPropertyIndex::ListViewItemPresenter_ListViewItemPresenterPadding, // ListViewItemPresenter_ListViewItemPresenterHorizontalContentAlignment
    KnownPropertyIndex::ListViewItemPresenter_ListViewItemPresenterVerticalContentAlignment, // ListViewItemPresenter_ListViewItemPresenterPadding
    KnownPropertyIndex::ListViewItemPresenter_PlaceholderBackground, // ListViewItemPresenter_ListViewItemPresenterVerticalContentAlignment
    KnownPropertyIndex::ListViewItemPresenter_PointerOverBackground, // ListViewItemPresenter_PlaceholderBackground
    KnownPropertyIndex::ListViewItemPresenter_PointerOverBackgroundMargin, // ListViewItemPresenter_PointerOverBackground
    KnownPropertyIndex::ListViewItemPresenter_PointerOverBorderBrush, // ListViewItemPresenter_PointerOverBackgroundMargin
    KnownPropertyIndex::ListViewItemPresenter_PointerOverForeground, // ListViewItemPresenter_PointerOverBorderBrush
    KnownPropertyIndex::ListViewItemPresenter_PressedBackground, // ListViewItemPresenter_PointerOverForeground
    KnownPropertyIndex::ListViewItemPresenter_ReorderHintOffset, // ListViewItemPresenter_PressedBackground
    KnownPropertyIndex::ListViewItemPresenter_RevealBackground, // ListViewItemPresenter_ReorderHintOffset
    KnownPropertyIndex::ListViewItemPresenter_RevealBackgroundShowsAboveContent, // ListViewItemPresenter_RevealBackground
    KnownPropertyIndex::ListViewItemPresenter_RevealBorderBrush, // ListViewItemPresenter_RevealBackgroundShowsAboveContent
    KnownPropertyIndex::ListViewItemPresenter_RevealBorderThickness, // ListViewItemPresenter_RevealBorderBrush
    KnownPropertyIndex::ListViewItemPresenter_SelectedBackground, // ListViewItemPresenter_RevealBorderThickness
    KnownPropertyIndex::ListViewItemPresenter_SelectedBorderBrush, // ListViewItemPresenter_SelectedBackground
    KnownPropertyIndex::ListViewItemPresenter_SelectedBorderThickness, // ListViewItemPresenter_SelectedBorderBrush
    KnownPropertyIndex::ListViewItemPresenter_SelectedDisabledBackground, // ListViewItemPresenter_SelectedBorderThickness
    KnownPropertyIndex::ListViewItemPresenter_SelectedDisabledBorderBrush, // ListViewItemPresenter_SelectedDisabledBackground
    KnownPropertyIndex::ListViewItemPresenter_SelectedForeground, // ListViewItemPresenter_SelectedDisabledBorderBrush
    KnownPropertyIndex::ListViewItemPresenter_SelectedInnerBorderBrush, // ListViewItemPresenter_SelectedForeground
    KnownPropertyIndex::ListViewItemPresenter_SelectedPointerOverBackground, // ListViewItemPresenter_SelectedInnerBorderBrush
    KnownPropertyIndex::ListViewItemPresenter_SelectedPointerOverBorderBrush, // ListViewItemPresenter_SelectedPointerOverBackground
    KnownPropertyIndex::ListViewItemPresenter_SelectedPressedBackground, // ListViewItemPresenter_SelectedPointerOverBorderBrush
    KnownPropertyIndex::ListViewItemPresenter_SelectedPressedBorderBrush, // ListViewItemPresenter_SelectedPressedBackground
    KnownPropertyIndex::ListViewItemPresenter_SelectionCheckMarkVisualEnabled, // ListViewItemPresenter_SelectedPressedBorderBrush
    KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorBrush, // ListViewItemPresenter_SelectionCheckMarkVisualEnabled
    KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorCornerRadius, // ListViewItemPresenter_SelectionIndicatorBrush
    KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorDisabledBrush, // ListViewItemPresenter_SelectionIndicatorCornerRadius
    KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorMode, // ListViewItemPresenter_SelectionIndicatorDisabledBrush
    KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorPointerOverBrush, // ListViewItemPresenter_SelectionIndicatorMode
    KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorPressedBrush, // ListViewItemPresenter_SelectionIndicatorPointerOverBrush
    KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorVisualEnabled, // ListViewItemPresenter_SelectionIndicatorPressedBrush
    KnownPropertyIndex::ContentPresenter_Background, // ListViewItemPresenter_SelectionIndicatorVisualEnabled
    KnownPropertyIndex::MenuFlyoutItem_CommandParameter, // MenuFlyoutItem_Command
    KnownPropertyIndex::MenuFlyoutItem_Icon, // MenuFlyoutItem_CommandParameter
    KnownPropertyIndex::MenuFlyoutItem_KeyboardAcceleratorTextOverride, // MenuFlyoutItem_Icon
    KnownPropertyIndex::MenuFlyoutItem_PreventDismissOnPointer, // MenuFlyoutItem_KeyboardAcceleratorTextOverride
    KnownPropertyIndex::MenuFlyoutItem_TemplateSettings, // MenuFlyoutItem_PreventDismissOnPointer
    KnownPropertyIndex::MenuFlyoutItem_Text, // MenuFlyoutItem_TemplateSettings
    KnownPropertyIndex::Control_Background, // MenuFlyoutItem_Text
    KnownPropertyIndex::MenuFlyoutPresenter_SystemBackdrop, // MenuFlyoutPresenter_IsDefaultShadowEnabled
    KnownPropertyIndex::MenuFlyoutPresenter_TemplateSettings, // MenuFlyoutPresenter_SystemBackdrop
    KnownPropertyIndex::ItemsControl_DisplayMemberPath, // MenuFlyoutPresenter_TemplateSettings
    KnownPropertyIndex::MenuFlyoutSubItem_Items, // MenuFlyoutSubItem_Icon
    KnownPropertyIndex::MenuFlyoutSubItem_Text, // MenuFlyoutSubItem_Items
    KnownPropertyIndex::Control_Background, // MenuFlyoutSubItem_Text
    KnownPropertyIndex::Panel_Background, // OrientedVirtualizingPanel_IsContainerGeneratedForInsert
    KnownPropertyIndex::Page_Frame, // Page_BottomAppBar
    KnownPropertyIndex::Page_NavigationCacheMode, // Page_Frame
    KnownPropertyIndex::Page_TopAppBar, // Page_NavigationCacheMode
    KnownPropertyIndex::UserControl_Content, // Page_TopAppBar
    KnownPropertyIndex::ScrollBar_Orientation, // ScrollBar_IndicatorMode
    KnownPropertyIndex::ScrollBar_ViewportSize, // ScrollBar_Orientation
    KnownPropertyIndex::RangeBase_LargeChange, // ScrollBar_ViewportSize
    KnownPropertyIndex::Selector_IsSynchronizedWithCurrentItem, // Selector_IsSelectionActive
    KnownPropertyIndex::Selector_SelectedIndex, // Selector_IsSynchronizedWithCurrentItem
    KnownPropertyIndex::Selector_SelectedItem, // Selector_SelectedIndex
    KnownPropertyIndex::Selector_SelectedValue, // Selector_SelectedItem
    KnownPropertyIndex::Selector_SelectedValuePath, // Selector_SelectedValue
    KnownPropertyIndex::ItemsControl_DisplayMemberPath, // Selector_SelectedValuePath
    KnownPropertyIndex::ContentControl_Content, // SelectorItem_IsSelected
    KnownPropertyIndex::Slider_HeaderPlacement, // Slider_Header
    KnownPropertyIndex::Slider_HeaderTemplate, // Slider_HeaderPlacement
    KnownPropertyIndex::Slider_IntermediateValue, // Slider_HeaderTemplate
    KnownPropertyIndex::Slider_IsDirectionReversed, // Slider_IntermediateValue
    KnownPropertyIndex::Slider_IsThumbToolTipEnabled, // Slider_IsDirectionReversed
    KnownPropertyIndex::Slider_Orientation, // Slider_IsThumbToolTipEnabled
    KnownPropertyIndex::Slider_SnapsTo, // Slider_Orientation
    KnownPropertyIndex::Slider_StepFrequency, // Slider_SnapsTo
    KnownPropertyIndex::Slider_ThumbToolTipValueConverter, // Slider_StepFrequency
    KnownPropertyIndex::Slider_TickFrequency, // Slider_ThumbToolTipValueConverter
    KnownPropertyIndex::Slider_TickPlacement, // Slider_TickFrequency
    KnownPropertyIndex::RangeBase_LargeChange, // Slider_TickPlacement
    KnownPropertyIndex::SwapChainPanel_CompositionScaleY, // SwapChainPanel_CompositionScaleX
    KnownPropertyIndex::Grid_BackgroundSizing, // SwapChainPanel_CompositionScaleY
    KnownPropertyIndex::ToolTip_IsOpen, // ToolTip_HorizontalOffset
    KnownPropertyIndex::ToolTip_Placement, // ToolTip_IsOpen
    KnownPropertyIndex::ToolTip_PlacementRect, // ToolTip_Placement
    KnownPropertyIndex::ToolTip_PlacementTarget, // ToolTip_PlacementRect
    KnownPropertyIndex::ToolTip_TemplateSettings, // ToolTip_PlacementTarget
    KnownPropertyIndex::ToolTip_VerticalOffset, // ToolTip_TemplateSettings
    KnownPropertyIndex::ContentControl_Content, // ToolTip_VerticalOffset
    KnownPropertyIndex::ContentControl_Content, // WindowChrome_CaptionVisibility
    KnownPropertyIndex::ButtonBase_ClickMode, // Button_Flyout
    KnownPropertyIndex::ComboBox_ErrorTemplate, // ComboBox_Description
    KnownPropertyIndex::ComboBox_HasValidationErrors, // ComboBox_ErrorTemplate
    KnownPropertyIndex::ComboBox_Header, // ComboBox_HasValidationErrors
    KnownPropertyIndex::ComboBox_HeaderPlacement, // ComboBox_Header
    KnownPropertyIndex::ComboBox_HeaderTemplate, // ComboBox_HeaderPlacement
    KnownPropertyIndex::ComboBox_InputValidationKind, // ComboBox_HeaderTemplate
    KnownPropertyIndex::ComboBox_InputValidationMode, // ComboBox_InputValidationKind
    KnownPropertyIndex::ComboBox_IsDropDownOpen, // ComboBox_InputValidationMode
    KnownPropertyIndex::ComboBox_IsEditable, // ComboBox_IsDropDownOpen
    KnownPropertyIndex::ComboBox_IsSelectionBoxHighlighted, // ComboBox_IsEditable
    KnownPropertyIndex::ComboBox_IsTextSearchEnabled, // ComboBox_IsSelectionBoxHighlighted
    KnownPropertyIndex::ComboBox_LightDismissOverlayMode, // ComboBox_IsTextSearchEnabled
    KnownPropertyIndex::ComboBox_MaxDropDownHeight, // ComboBox_LightDismissOverlayMode
    KnownPropertyIndex::ComboBox_PlaceholderForeground, // ComboBox_MaxDropDownHeight
    KnownPropertyIndex::ComboBox_PlaceholderText, // ComboBox_PlaceholderForeground
    KnownPropertyIndex::ComboBox_SelectionBoxItem, // ComboBox_PlaceholderText
    KnownPropertyIndex::ComboBox_SelectionBoxItemTemplate, // ComboBox_SelectionBoxItem
    KnownPropertyIndex::ComboBox_SelectionChangedTrigger, // ComboBox_SelectionBoxItemTemplate
    KnownPropertyIndex::ComboBox_TemplateSettings, // ComboBox_SelectionChangedTrigger
    KnownPropertyIndex::ComboBox_Text, // ComboBox_TemplateSettings
    KnownPropertyIndex::ComboBox_TextBoxStyle, // ComboBox_Text
    KnownPropertyIndex::ComboBox_ValidationCommand, // ComboBox_TextBoxStyle
    KnownPropertyIndex::ComboBox_ValidationContext, // ComboBox_ValidationCommand
    KnownPropertyIndex::ComboBox_ValidationErrors, // ComboBox_ValidationContext
    KnownPropertyIndex::Selector_IsSelectionActive, // ComboBox_ValidationErrors
    KnownPropertyIndex::CommandBar_CommandBarTemplateSettings, // CommandBar_CommandBarOverflowPresenterStyle
    KnownPropertyIndex::CommandBar_DefaultLabelPosition, // CommandBar_CommandBarTemplateSettings
    KnownPropertyIndex::CommandBar_IsDynamicOverflowEnabled, // CommandBar_DefaultLabelPosition
    KnownPropertyIndex::CommandBar_OverflowButtonVisibility, // CommandBar_IsDynamicOverflowEnabled
    KnownPropertyIndex::CommandBar_PrimaryCommands, // CommandBar_OverflowButtonVisibility
    KnownPropertyIndex::CommandBar_SecondaryCommands, // CommandBar_PrimaryCommands
    KnownPropertyIndex::AppBar_ClosedDisplayMode, // CommandBar_SecondaryCommands
    KnownPropertyIndex::Selector_IsSelectionActive, // FlipView_UseTouchAnimationsForAllNavigation
    KnownPropertyIndex::ButtonBase_ClickMode, // HyperlinkButton_NavigateUri
    KnownPropertyIndex::ListBox_SelectionMode, // ListBox_SelectedItems
    KnownPropertyIndex::ListBox_SingleSelectionFollowsFocus, // ListBox_SelectionMode
    KnownPropertyIndex::Selector_IsSelectionActive, // ListBox_SingleSelectionFollowsFocus
    KnownPropertyIndex::ListViewBase_CanReorderItems, // ListViewBase_CanDragItems
    KnownPropertyIndex::ListViewBase_DataFetchSize, // ListViewBase_CanReorderItems
    KnownPropertyIndex::ListViewBase_Footer, // ListViewBase_DataFetchSize
    KnownPropertyIndex::ListViewBase_FooterTemplate, // ListViewBase_Footer
    KnownPropertyIndex::ListViewBase_FooterTransitions, // ListViewBase_FooterTemplate
    KnownPropertyIndex::ListViewBase_Header, // ListViewBase_FooterTransitions
    KnownPropertyIndex::ListViewBase_HeaderTemplate, // ListViewBase_Header
    KnownPropertyIndex::ListViewBase_HeaderTransitions, // ListViewBase_HeaderTemplate
    KnownPropertyIndex::ListViewBase_IncrementalLoadingThreshold, // ListViewBase_HeaderTransitions
    KnownPropertyIndex::ListViewBase_IncrementalLoadingTrigger, // ListViewBase_IncrementalLoadingThreshold
    KnownPropertyIndex::ListViewBase_IsActiveView, // ListViewBase_IncrementalLoadingTrigger
    KnownPropertyIndex::ListViewBase_IsItemClickEnabled, // ListViewBase_IsActiveView
    KnownPropertyIndex::ListViewBase_IsMultiSelectCheckBoxEnabled, // ListViewBase_IsItemClickEnabled
    KnownPropertyIndex::ListViewBase_IsSwipeEnabled, // ListViewBase_IsMultiSelectCheckBoxEnabled
    KnownPropertyIndex::ListViewBase_IsZoomedInView, // ListViewBase_IsSwipeEnabled
    KnownPropertyIndex::ListViewBase_ReorderMode, // ListViewBase_IsZoomedInView
    KnownPropertyIndex::ListViewBase_SelectedItems, // ListViewBase_ReorderMode
    KnownPropertyIndex::ListViewBase_SelectedRanges, // ListViewBase_SelectedItems
    KnownPropertyIndex::ListViewBase_SelectionMode, // ListViewBase_SelectedRanges
    KnownPropertyIndex::ListViewBase_SemanticZoomOwner, // ListViewBase_SelectionMode
    KnownPropertyIndex::ListViewBase_ShowsScrollingPlaceholders, // ListViewBase_SemanticZoomOwner
    KnownPropertyIndex::ListViewBase_SingleSelectionFollowsFocus, // ListViewBase_ShowsScrollingPlaceholders
    KnownPropertyIndex::Selector_IsSelectionActive, // ListViewBase_SingleSelectionFollowsFocus
    KnownPropertyIndex::SelectorItem_IsSelected, // ListViewBaseItem_IsDraggable
    KnownPropertyIndex::RepeatButton_Interval, // RepeatButton_Delay
    KnownPropertyIndex::ButtonBase_ClickMode, // RepeatButton_Interval
    KnownPropertyIndex::ScrollViewer_CanContentRenderOutsideBounds, // ScrollViewer_BringIntoViewOnFocusChange
    KnownPropertyIndex::ScrollViewer_ComputedHorizontalScrollBarVisibility, // ScrollViewer_CanContentRenderOutsideBounds
    KnownPropertyIndex::ScrollViewer_ComputedVerticalScrollBarVisibility, // ScrollViewer_ComputedHorizontalScrollBarVisibility
    KnownPropertyIndex::ScrollViewer_ExtentHeight, // ScrollViewer_ComputedVerticalScrollBarVisibility
    KnownPropertyIndex::ScrollViewer_ExtentWidth, // ScrollViewer_ExtentHeight
    KnownPropertyIndex::ScrollViewer_HorizontalAnchorRatio, // ScrollViewer_ExtentWidth
    KnownPropertyIndex::ScrollViewer_HorizontalOffset, // ScrollViewer_HorizontalAnchorRatio
    KnownPropertyIndex::ScrollViewer_HorizontalScrollBarVisibility, // ScrollViewer_HorizontalOffset
    KnownPropertyIndex::ScrollViewer_HorizontalScrollMode, // ScrollViewer_HorizontalScrollBarVisibility
    KnownPropertyIndex::ScrollViewer_HorizontalSnapPointsAlignment, // ScrollViewer_HorizontalScrollMode
    KnownPropertyIndex::ScrollViewer_HorizontalSnapPointsType, // ScrollViewer_HorizontalSnapPointsAlignment
    KnownPropertyIndex::ScrollViewer_IsDeferredScrollingEnabled, // ScrollViewer_HorizontalSnapPointsType
    KnownPropertyIndex::ScrollViewer_IsHorizontalRailEnabled, // ScrollViewer_IsDeferredScrollingEnabled
    KnownPropertyIndex::ScrollViewer_IsHorizontalScrollChainingEnabled, // ScrollViewer_IsHorizontalRailEnabled
    KnownPropertyIndex::ScrollViewer_IsScrollInertiaEnabled, // ScrollViewer_IsHorizontalScrollChainingEnabled
    KnownPropertyIndex::ScrollViewer_IsVerticalRailEnabled, // ScrollViewer_IsScrollInertiaEnabled
    KnownPropertyIndex::ScrollViewer_IsVerticalScrollChainingEnabled, // ScrollViewer_IsVerticalRailEnabled
    KnownPropertyIndex::ScrollViewer_IsZoomChainingEnabled, // ScrollViewer_IsVerticalScrollChainingEnabled
    KnownPropertyIndex::ScrollViewer_IsZoomInertiaEnabled, // ScrollViewer_IsZoomChainingEnabled
    KnownPropertyIndex::ScrollViewer_LeftHeader, // ScrollViewer_IsZoomInertiaEnabled
    KnownPropertyIndex::ScrollViewer_MaxZoomFactor, // ScrollViewer_LeftHeader
    KnownPropertyIndex::ScrollViewer_MinZoomFactor, // ScrollViewer_MaxZoomFactor
    KnownPropertyIndex::ScrollViewer_ReduceViewportForCoreInputViewOcclusions, // ScrollViewer_MinZoomFactor
    KnownPropertyIndex::ScrollViewer_ScrollableHeight, // ScrollViewer_ReduceViewportForCoreInputViewOcclusions
    KnownPropertyIndex::ScrollViewer_ScrollableWidth, // ScrollViewer_ScrollableHeight
    KnownPropertyIndex::ScrollViewer_TopHeader, // ScrollViewer_ScrollableWidth
    KnownPropertyIndex::ScrollViewer_TopLeftHeader, // ScrollViewer_TopHeader
    KnownPropertyIndex::ScrollViewer_VerticalAnchorRatio, // ScrollViewer_TopLeftHeader
    KnownPropertyIndex::ScrollViewer_VerticalOffset, // ScrollViewer_VerticalAnchorRatio
    KnownPropertyIndex::ScrollViewer_VerticalScrollBarVisibility, // ScrollViewer_VerticalOffset
    KnownPropertyIndex::ScrollViewer_VerticalScrollMode, // ScrollViewer_VerticalScrollBarVisibility
    KnownPropertyIndex::ScrollViewer_VerticalSnapPointsAlignment, // ScrollViewer_VerticalScrollMode
    KnownPropertyIndex::ScrollViewer_VerticalSnapPointsType, // ScrollViewer_VerticalSnapPointsAlignment
    KnownPropertyIndex::ScrollViewer_ViewportHeight, // ScrollViewer_VerticalSnapPointsType
    KnownPropertyIndex::ScrollViewer_ViewportWidth, // ScrollViewer_ViewportHeight
    KnownPropertyIndex::ScrollViewer_ZoomFactor, // ScrollViewer_ViewportWidth
    KnownPropertyIndex::ScrollViewer_ZoomMode, // ScrollViewer_ZoomFactor
    KnownPropertyIndex::ScrollViewer_ZoomSnapPoints, // ScrollViewer_ZoomMode
    KnownPropertyIndex::ScrollViewer_ZoomSnapPointsType, // ScrollViewer_ZoomSnapPoints
    KnownPropertyIndex::ContentControl_Content, // ScrollViewer_ZoomSnapPointsType
    KnownPropertyIndex::ToggleButton_IsThreeState, // ToggleButton_IsChecked
    KnownPropertyIndex::ButtonBase_ClickMode, // ToggleButton_IsThreeState
    KnownPropertyIndex::MenuFlyoutItem_Command, // ToggleMenuFlyoutItem_IsChecked
    KnownPropertyIndex::VirtualizingStackPanel_IsContainerGeneratedForInsert, // VirtualizingStackPanel_AreScrollSnapPointsRegular
    KnownPropertyIndex::VirtualizingStackPanel_IsVirtualizing, // VirtualizingStackPanel_IsContainerGeneratedForInsert
    KnownPropertyIndex::VirtualizingStackPanel_Orientation, // VirtualizingStackPanel_IsVirtualizing
    KnownPropertyIndex::VirtualizingStackPanel_VirtualizationMode, // VirtualizingStackPanel_Orientation
    KnownPropertyIndex::OrientedVirtualizingPanel_IsContainerGeneratedForInsert, // VirtualizingStackPanel_VirtualizationMode
    KnownPropertyIndex::WrapGrid_ItemHeight, // WrapGrid_HorizontalChildrenAlignment
    KnownPropertyIndex::WrapGrid_ItemWidth, // WrapGrid_ItemHeight
    KnownPropertyIndex::WrapGrid_MaximumRowsOrColumns, // WrapGrid_ItemWidth
    KnownPropertyIndex::WrapGrid_Orientation, // WrapGrid_MaximumRowsOrColumns
    KnownPropertyIndex::WrapGrid_VerticalChildrenAlignment, // WrapGrid_Orientation
    KnownPropertyIndex::OrientedVirtualizingPanel_IsContainerGeneratedForInsert, // WrapGrid_VerticalChildrenAlignment
    KnownPropertyIndex::AppBarButton_Icon, // AppBarButton_DynamicOverflowOrder
    KnownPropertyIndex::AppBarButton_IsCompact, // AppBarButton_Icon
    KnownPropertyIndex::AppBarButton_IsInOverflow, // AppBarButton_IsCompact
    KnownPropertyIndex::AppBarButton_KeyboardAcceleratorTextOverride, // AppBarButton_IsInOverflow
    KnownPropertyIndex::AppBarButton_Label, // AppBarButton_KeyboardAcceleratorTextOverride
    KnownPropertyIndex::AppBarButton_LabelPosition, // AppBarButton_Label
    KnownPropertyIndex::AppBarButton_TemplateSettings, // AppBarButton_LabelPosition
    KnownPropertyIndex::AppBarButton_UseOverflowStyle, // AppBarButton_TemplateSettings
    KnownPropertyIndex::Button_Flyout, // AppBarButton_UseOverflowStyle
    KnownPropertyIndex::AppBarToggleButton_Icon, // AppBarToggleButton_DynamicOverflowOrder
    KnownPropertyIndex::AppBarToggleButton_IsCompact, // AppBarToggleButton_Icon
    KnownPropertyIndex::AppBarToggleButton_IsInOverflow, // AppBarToggleButton_IsCompact
    KnownPropertyIndex::AppBarToggleButton_KeyboardAcceleratorTextOverride, // AppBarToggleButton_IsInOverflow
    KnownPropertyIndex::AppBarToggleButton_Label, // AppBarToggleButton_KeyboardAcceleratorTextOverride
    KnownPropertyIndex::AppBarToggleButton_LabelPosition, // AppBarToggleButton_Label
    KnownPropertyIndex::AppBarToggleButton_TemplateSettings, // AppBarToggleButton_LabelPosition
    KnownPropertyIndex::AppBarToggleButton_UseOverflowStyle, // AppBarToggleButton_TemplateSettings
    KnownPropertyIndex::ToggleButton_IsChecked, // AppBarToggleButton_UseOverflowStyle
    KnownPropertyIndex::ListViewBaseItem_IsDraggable, // GridViewItem_TemplateSettings
    KnownPropertyIndex::ListViewBaseItem_IsDraggable, // ListViewItem_TemplateSettings
    KnownPropertyIndex::ToggleButton_IsChecked, // RadioButton_GroupName
    KnownPropertyIndex::DependencyObject_Column, // BrushTransition_Duration
    KnownPropertyIndex::DependencyObject_Column, // ScalarTransition_Duration
    KnownPropertyIndex::UnknownType_UnknownProperty, // UIElement_AnimatedCenterPoint
    KnownPropertyIndex::UnknownType_UnknownProperty, // UIElement_AnimatedRotation
    KnownPropertyIndex::UnknownType_UnknownProperty, // UIElement_AnimatedRotationAxis
    KnownPropertyIndex::UnknownType_UnknownProperty, // UIElement_AnimatedScale
    KnownPropertyIndex::UnknownType_UnknownProperty, // UIElement_AnimatedTransformMatrix
    KnownPropertyIndex::UnknownType_UnknownProperty, // UIElement_AnimatedTranslation
    KnownPropertyIndex::UIElement_KeepAliveCount, // UIElement_CenterPoint
    KnownPropertyIndex::UIElement_RasterizationScale, // UIElement_KeepAliveCount
    KnownPropertyIndex::UIElement_Rotation, // UIElement_RasterizationScale
    KnownPropertyIndex::UIElement_RotationAxis, // UIElement_Rotation
    KnownPropertyIndex::UIElement_Scale, // UIElement_RotationAxis
    KnownPropertyIndex::UIElement_ThemeShadowReceiverCount, // UIElement_Scale
    KnownPropertyIndex::UIElement_TransformMatrix, // UIElement_ThemeShadowReceiverCount
    KnownPropertyIndex::UIElement_Translation, // UIElement_TransformMatrix
    KnownPropertyIndex::DependencyObject_Column, // UIElement_Translation
    KnownPropertyIndex::Vector3Transition_Duration, // Vector3Transition_Components
    KnownPropertyIndex::DependencyObject_Column, // Vector3Transition_Duration
    KnownPropertyIndex::UnknownType_UnknownProperty, // LinearGradientBrush_AnimatedCenterPoint
    KnownPropertyIndex::UnknownType_UnknownProperty, // LinearGradientBrush_AnimatedRotation
    KnownPropertyIndex::UnknownType_UnknownProperty, // LinearGradientBrush_AnimatedScale
    KnownPropertyIndex::UnknownType_UnknownProperty, // LinearGradientBrush_AnimatedTransformMatrix
    KnownPropertyIndex::UnknownType_UnknownProperty, // LinearGradientBrush_AnimatedTranslation
    KnownPropertyIndex::LinearGradientBrush_Rotation, // LinearGradientBrush_CenterPoint
    KnownPropertyIndex::LinearGradientBrush_Scale, // LinearGradientBrush_Rotation
    KnownPropertyIndex::LinearGradientBrush_TransformMatrix, // LinearGradientBrush_Scale
    KnownPropertyIndex::LinearGradientBrush_Translation, // LinearGradientBrush_TransformMatrix
    KnownPropertyIndex::GradientBrush_ColorInterpolationMode, // LinearGradientBrush_Translation
};

// Property slots.
extern const UINT8 c_aPropertySlot[KnownPropertyCount] =
{
    0, // UnknownType_UnknownProperty
    0, // GeneratorPosition_Index
    1, // GeneratorPosition_Offset
    0, // TypeName_Kind
    1, // TypeName_Name
    0, // AutomationProperties_AcceleratorKey
    0, // AutomationProperties_AccessibilityView
    0, // AutomationProperties_AccessKey
    7, // AutomationProperties_Annotations
    0, // AutomationProperties_AutomationControlType
    0, // AutomationProperties_AutomationId
    0, // AutomationProperties_ControlledPeers
    0, // AutomationProperties_Culture
    0, // AutomationProperties_DescribedBy
    0, // AutomationProperties_FlowsFrom
    0, // AutomationProperties_FlowsTo
    0, // AutomationProperties_FullDescription
    0, // AutomationProperties_HeadingLevel
    0, // AutomationProperties_HelpText
    0, // AutomationProperties_IsDataValidForForm
    0, // AutomationProperties_IsDialog
    0, // AutomationProperties_IsPeripheral
    0, // AutomationProperties_IsRequiredForForm
    0, // AutomationProperties_ItemStatus
    0, // AutomationProperties_ItemType
    0, // AutomationProperties_LabeledBy
    0, // AutomationProperties_LandmarkType
    0, // AutomationProperties_Level
    0, // AutomationProperties_LiveSetting
    0, // AutomationProperties_LocalizedControlType
    0, // AutomationProperties_LocalizedLandmarkType
    0, // AutomationProperties_Name
    0, // AutomationProperties_PositionInSet
    0, // AutomationProperties_SizeOfSet
    0, // DependencyObject_Column
    1, // DependencyObject_DeferredStorage
    2, // DependencyObject_Line
    3, // DependencyObject_Name
    4, // DependencyObject_ParseUri
    5, // DependencyObject_RealizingProxy
    6, // DependencyObject_XbfHash
    0, // ItemContainerGenerator_DeferredUnlinkingPayload
    0, // ItemContainerGenerator_IsRecycledContainer
    0, // ItemContainerGenerator_ItemForItemContainer
    0, // MediaTransportControlsHelper_DropoutOrder
    0, // ParserServiceProvider_BaseUri
    1, // ParserServiceProvider_RootObject
    2, // ParserServiceProvider_TargetObject
    3, // ParserServiceProvider_TargetProperty
    0, // TextOptions_TextFormattingMode
    0, // TextOptions_TextHintingMode
    0, // TextOptions_TextRenderingMode
    0, // ToolTipService_KeyboardAcceleratorToolTip
    0, // ToolTipService_KeyboardAcceleratorToolTipObject
    0, // ToolTipService_Placement
    0, // ToolTipService_PlacementTarget
    0, // ToolTipService_ToolTip
    0, // ToolTipService_ToolTipObject
    0, // Typography_AnnotationAlternates
    0, // Typography_Capitals
    0, // Typography_CapitalSpacing
    0, // Typography_CaseSensitiveForms
    0, // Typography_ContextualAlternates
    0, // Typography_ContextualLigatures
    0, // Typography_ContextualSwashes
    0, // Typography_DiscretionaryLigatures
    0, // Typography_EastAsianExpertForms
    0, // Typography_EastAsianLanguage
    0, // Typography_EastAsianWidths
    0, // Typography_Fraction
    0, // Typography_HistoricalForms
    0, // Typography_HistoricalLigatures
    0, // Typography_Kerning
    0, // Typography_MathematicalGreek
    0, // Typography_NumeralAlignment
    0, // Typography_NumeralStyle
    0, // Typography_SlashedZero
    0, // Typography_StandardLigatures
    0, // Typography_StandardSwashes
    0, // Typography_StylisticAlternates
    0, // Typography_StylisticSet1
    0, // Typography_StylisticSet10
    0, // Typography_StylisticSet11
    0, // Typography_StylisticSet12
    0, // Typography_StylisticSet13
    0, // Typography_StylisticSet14
    0, // Typography_StylisticSet15
    0, // Typography_StylisticSet16
    0, // Typography_StylisticSet17
    0, // Typography_StylisticSet18
    0, // Typography_StylisticSet19
    0, // Typography_StylisticSet2
    0, // Typography_StylisticSet20
    0, // Typography_StylisticSet3
    0, // Typography_StylisticSet4
    0, // Typography_StylisticSet5
    0, // Typography_StylisticSet6
    0, // Typography_StylisticSet7
    0, // Typography_StylisticSet8
    0, // Typography_StylisticSet9
    0, // Typography_Variants
    0, // XamlBindingHelper_DataTemplateComponent
    8, // AppBarButtonTemplateSettings_KeyboardAcceleratorTextMinWidth
    8, // AppBarTemplateSettings_ClipRect
    9, // AppBarTemplateSettings_CompactRootMargin
    10, // AppBarTemplateSettings_CompactVerticalDelta
    11, // AppBarTemplateSettings_HiddenRootMargin
    12, // AppBarTemplateSettings_HiddenVerticalDelta
    13, // AppBarTemplateSettings_MinimalRootMargin
    14, // AppBarTemplateSettings_MinimalVerticalDelta
    15, // AppBarTemplateSettings_NegativeCompactVerticalDelta
    16, // AppBarTemplateSettings_NegativeHiddenVerticalDelta
    17, // AppBarTemplateSettings_NegativeMinimalVerticalDelta
    8, // AppBarToggleButtonTemplateSettings_KeyboardAcceleratorTextMinWidth
    8, // Application_ApplicationStarted
    9, // Application_HighContrastAdjustment
    10, // Application_RequestedTheme
    11, // Application_RequiresPointerMode
    12, // Application_Resources
    13, // Application_RootVisual
    8, // AutomationAnnotation_Element
    9, // AutomationAnnotation_Type
    8, // AutomationPeer_EventsSource
    8, // AutomationPeerAnnotation_Peer
    9, // AutomationPeerAnnotation_Type
    8, // AutoSuggestBoxQuerySubmittedEventArgs_ChosenSuggestion
    9, // AutoSuggestBoxQuerySubmittedEventArgs_QueryText
    8, // AutoSuggestBoxSuggestionChosenEventArgs_SelectedItem
    8, // AutoSuggestBoxTextChangedEventArgs_Reason
    8, // Brush_Opacity
    9, // Brush_RelativeTransform
    10, // Brush_Transform
    8, // CalendarViewTemplateSettings_CenterX
    9, // CalendarViewTemplateSettings_CenterY
    10, // CalendarViewTemplateSettings_ClipRect
    11, // CalendarViewTemplateSettings_HasMoreContentAfter
    12, // CalendarViewTemplateSettings_HasMoreContentBefore
    13, // CalendarViewTemplateSettings_HasMoreViews
    14, // CalendarViewTemplateSettings_HeaderText
    15, // CalendarViewTemplateSettings_MinViewWidth
    16, // CalendarViewTemplateSettings_WeekDay1
    17, // CalendarViewTemplateSettings_WeekDay2
    18, // CalendarViewTemplateSettings_WeekDay3
    19, // CalendarViewTemplateSettings_WeekDay4
    20, // CalendarViewTemplateSettings_WeekDay5
    21, // CalendarViewTemplateSettings_WeekDay6
    22, // CalendarViewTemplateSettings_WeekDay7
    8, // CollectionViewSource_IsSourceGrouped
    9, // CollectionViewSource_ItemsPath
    10, // CollectionViewSource_Source
    11, // CollectionViewSource_View
    8, // Color_A
    9, // Color_B
    10, // Color_ContentProperty
    11, // Color_G
    12, // Color_R
    8, // ColorKeyFrame_KeyTime
    9, // ColorKeyFrame_Value
    8, // ColumnDefinition_ActualWidth
    9, // ColumnDefinition_MaxWidth
    10, // ColumnDefinition_MinWidth
    11, // ColumnDefinition_Width
    8, // ComboBoxTemplateSettings_DropDownClosedHeight
    9, // ComboBoxTemplateSettings_DropDownContentMinWidth
    10, // ComboBoxTemplateSettings_DropDownOffset
    11, // ComboBoxTemplateSettings_DropDownOpenedHeight
    12, // ComboBoxTemplateSettings_SelectedItemDirection
    8, // CommandBarTemplateSettings_ContentHeight
    9, // CommandBarTemplateSettings_EffectiveOverflowButtonVisibility
    10, // CommandBarTemplateSettings_NegativeOverflowContentHeight
    11, // CommandBarTemplateSettings_OverflowContentClipRect
    12, // CommandBarTemplateSettings_OverflowContentCompactYTranslation
    13, // CommandBarTemplateSettings_OverflowContentHeight
    14, // CommandBarTemplateSettings_OverflowContentHiddenYTranslation
    15, // CommandBarTemplateSettings_OverflowContentHorizontalOffset
    16, // CommandBarTemplateSettings_OverflowContentMaxHeight
    17, // CommandBarTemplateSettings_OverflowContentMaxWidth
    18, // CommandBarTemplateSettings_OverflowContentMinimalYTranslation
    19, // CommandBarTemplateSettings_OverflowContentMinWidth
    8, // CornerRadius_BottomLeft
    9, // CornerRadius_BottomRight
    10, // CornerRadius_TopLeft
    11, // CornerRadius_TopRight
    8, // DependencyPropertyProxy_PropertyId
    8, // Double_ContentProperty
    8, // DoubleKeyFrame_KeyTime
    9, // DoubleKeyFrame_Value
    8, // EasingFunctionBase_EasingMode
    8, // ExternalObjectReference_MarkupExtensionType
    9, // ExternalObjectReference_NativeValue
    8, // FlyoutBase_AllowFocusOnInteraction
    9, // FlyoutBase_AllowFocusWhenDisabled
    10, // FlyoutBase_AreOpenCloseAnimationsEnabled
    0, // FlyoutBase_AttachedFlyout
    11, // FlyoutBase_ElementSoundMode
    12, // FlyoutBase_InputDevicePrefersPrimaryCommands
    13, // FlyoutBase_IsOpen
    14, // FlyoutBase_LightDismissOverlayMode
    15, // FlyoutBase_OverlayInputPassThroughElement
    16, // FlyoutBase_Placement
    17, // FlyoutBase_ShouldConstrainToRootBounds
    18, // FlyoutBase_ShowMode
    19, // FlyoutBase_SystemBackdrop
    20, // FlyoutBase_Target
    8, // FontWeight_Weight
    8, // FrameworkTemplate_Template
    8, // Geometry_Bounds
    9, // Geometry_Transform
    8, // GradientStop_Color
    9, // GradientStop_Offset
    8, // GridLength_GridUnitType
    9, // GridLength_Value
    8, // GroupStyle_ContainerStyle
    9, // GroupStyle_ContainerStyleSelector
    10, // GroupStyle_HeaderContainerStyle
    11, // GroupStyle_HeaderTemplate
    12, // GroupStyle_HeaderTemplateSelector
    13, // GroupStyle_HidesIfEmpty
    14, // GroupStyle_Panel
    8, // IconSource_Foreground
    8, // InertiaExpansionBehavior_DesiredDeceleration
    9, // InertiaExpansionBehavior_DesiredExpansion
    8, // InertiaRotationBehavior_DesiredDeceleration
    9, // InertiaRotationBehavior_DesiredRotation
    8, // InertiaTranslationBehavior_DesiredDeceleration
    9, // InertiaTranslationBehavior_DesiredDisplacement
    8, // InputScope_Names
    8, // InputScopeName_NameValue
    8, // InputValidationCommand_InputValidationKind
    9, // InputValidationCommand_InputValidationMode
    8, // Int32_ContentProperty
    8, // KeyboardAccelerator_IsEnabled
    9, // KeyboardAccelerator_Key
    10, // KeyboardAccelerator_Modifiers
    11, // KeyboardAccelerator_ScopeOwner
    8, // KeySpline_ControlPoint1
    9, // KeySpline_ControlPoint2
    8, // LayoutTransitionStaggerItem_Bounds
    9, // LayoutTransitionStaggerItem_Element
    10, // LayoutTransitionStaggerItem_Index
    11, // LayoutTransitionStaggerItem_StaggerTime
    8, // LoadedImageSurface_DecodedPhysicalSize
    9, // LoadedImageSurface_DecodedSize
    10, // LoadedImageSurface_NaturalSize
    8, // ManipulationPivot_Center
    9, // ManipulationPivot_Radius
    8, // Matrix_M11
    9, // Matrix_M12
    10, // Matrix_M21
    11, // Matrix_M22
    12, // Matrix_OffsetX
    13, // Matrix_OffsetY
    8, // Matrix3D_M11
    9, // Matrix3D_M12
    10, // Matrix3D_M13
    11, // Matrix3D_M14
    12, // Matrix3D_M21
    13, // Matrix3D_M22
    14, // Matrix3D_M23
    15, // Matrix3D_M24
    16, // Matrix3D_M31
    17, // Matrix3D_M32
    18, // Matrix3D_M33
    19, // Matrix3D_M34
    20, // Matrix3D_M44
    21, // Matrix3D_OffsetX
    22, // Matrix3D_OffsetY
    23, // Matrix3D_OffsetZ
    8, // MenuFlyoutItemTemplateSettings_KeyboardAcceleratorTextMinWidth
    8, // MenuFlyoutPresenterTemplateSettings_FlyoutContentMinWidth
    8, // ObjectKeyFrame_KeyTime
    9, // ObjectKeyFrame_Value
    8, // PageStackEntry_SourcePageType
    8, // ParametricCurve_CurveSegments
    8, // ParametricCurveSegment_BeginOffset
    9, // ParametricCurveSegment_ConstantCoefficient
    10, // ParametricCurveSegment_CubicCoefficient
    11, // ParametricCurveSegment_LinearCoefficient
    12, // ParametricCurveSegment_QuadraticCoefficient
    8, // PathFigure_IsClosed
    9, // PathFigure_IsFilled
    10, // PathFigure_Segments
    11, // PathFigure_StartPoint
    8, // Point_ContentProperty
    9, // Point_X
    10, // Point_Y
    8, // Pointer_IsInContact
    9, // Pointer_IsInRange
    10, // Pointer_PointerDeviceType
    11, // Pointer_PointerId
    8, // PointerKeyFrame_PointerValue
    9, // PointerKeyFrame_TargetValue
    8, // PointKeyFrame_KeyTime
    9, // PointKeyFrame_Value
    8, // PresentationFrameworkCollection_Count
    8, // PrintDocument_DesiredFormat
    9, // PrintDocument_DocumentSource
    10, // PrintDocument_PrintedPageCount
    8, // PropertyPath_Path
    8, // Rect_Height
    9, // Rect_Width
    10, // Rect_X
    11, // Rect_Y
    8, // RowDefinition_ActualHeight
    9, // RowDefinition_Height
    10, // RowDefinition_MaxHeight
    11, // RowDefinition_MinHeight
    8, // SecondaryContentRelationship_Curves
    9, // SecondaryContentRelationship_IsDescendant
    10, // SecondaryContentRelationship_ShouldTargetClip
    8, // SetterBase_IsSealed
    8, // Size_Height
    9, // Size_Width
    8, // SplitViewTemplateSettings_CompactPaneGridLength
    9, // SplitViewTemplateSettings_NegativeOpenPaneLength
    10, // SplitViewTemplateSettings_NegativeOpenPaneLengthMinusCompactLength
    11, // SplitViewTemplateSettings_OpenPaneGridLength
    12, // SplitViewTemplateSettings_OpenPaneLength
    13, // SplitViewTemplateSettings_OpenPaneLengthMinusCompactLength
    8, // StateTriggerBase_TriggerState
    8, // String_ContentProperty
    8, // Style_BasedOn
    9, // Style_IsSealed
    10, // Style_Setters
    11, // Style_TargetType
    8, // TargetPropertyPath_CachedStyleSetterProperty
    9, // TargetPropertyPath_Path
    10, // TargetPropertyPath_Target
    8, // TextAdapter_Owner
    8, // TextElement_AccessKey
    9, // TextElement_AccessKeyScopeOwner
    10, // TextElement_AllowFocusOnInteraction
    11, // TextElement_CharacterSpacing
    12, // TextElement_ExitDisplayModeOnAccessKeyInvoked
    13, // TextElement_FontFamily
    14, // TextElement_FontSize
    15, // TextElement_FontStretch
    16, // TextElement_FontStyle
    17, // TextElement_FontWeight
    18, // TextElement_Foreground
    19, // TextElement_IsAccessKeyScope
    20, // TextElement_IsTextScaleFactorEnabled
    21, // TextElement_KeyTipHorizontalOffset
    22, // TextElement_KeyTipPlacementMode
    23, // TextElement_KeyTipVerticalOffset
    24, // TextElement_Language
    25, // TextElement_TextDecorations
    8, // TextRange_Length
    9, // TextRange_StartIndex
    8, // TextRangeAdapter_Owner
    8, // Thickness_Bottom
    9, // Thickness_Left
    10, // Thickness_Right
    11, // Thickness_Top
    8, // Timeline_AutoReverse
    9, // Timeline_BeginTime
    10, // Timeline_Duration
    11, // Timeline_FillBehavior
    12, // Timeline_RepeatBehavior
    13, // Timeline_SpeedRatio
    8, // TimeSpan_Seconds
    8, // ToggleSwitchTemplateSettings_CurtainCurrentToOffOffset
    9, // ToggleSwitchTemplateSettings_CurtainCurrentToOnOffset
    10, // ToggleSwitchTemplateSettings_CurtainOffToOnOffset
    11, // ToggleSwitchTemplateSettings_CurtainOnToOffOffset
    12, // ToggleSwitchTemplateSettings_KnobCurrentToOffOffset
    13, // ToggleSwitchTemplateSettings_KnobCurrentToOnOffset
    14, // ToggleSwitchTemplateSettings_KnobOffToOnOffset
    15, // ToggleSwitchTemplateSettings_KnobOnToOffOffset
    8, // ToolTipTemplateSettings_FromHorizontalOffset
    9, // ToolTipTemplateSettings_FromVerticalOffset
    8, // Transition_GeneratedStaggerFunction
    8, // TransitionTarget_ClipTransform
    9, // TransitionTarget_ClipTransformOrigin
    10, // TransitionTarget_CompositeTransform
    11, // TransitionTarget_Opacity
    12, // TransitionTarget_OpacityAnimation
    13, // TransitionTarget_TransformOrigin
    8, // UIElement_AccessKey
    9, // UIElement_AccessKeyScopeOwner
    10, // UIElement_ActualOffset
    11, // UIElement_ActualSize
    12, // UIElement_AllowDrop
    13, // UIElement_CacheMode
    14, // UIElement_CanBeScrollAnchor
    15, // UIElement_CanDrag
    16, // UIElement_CanvasOffset
    17, // UIElement_ChildrenInternal
    18, // UIElement_Clip
    19, // UIElement_CompositeMode
    20, // UIElement_ContextFlyout
    21, // UIElement_DirectManipulationContainer
    22, // UIElement_ExitDisplayModeOnAccessKeyInvoked
    23, // UIElement_FocusState
    24, // UIElement_GlobalScaleFactor
    25, // UIElement_HandOffVisualClip
    26, // UIElement_HandOffVisualTransform
    27, // UIElement_HandOffVisualTransformMatrix3D
    28, // UIElement_HighContrastAdjustment
    29, // UIElement_IsAccessKeyScope
    30, // UIElement_IsDoubleTapEnabled
    31, // UIElement_IsGamepadFocusCandidate
    32, // UIElement_IsHitTestVisible
    33, // UIElement_IsHoldingEnabled
    34, // UIElement_IsRightTapEnabled
    35, // UIElement_IsTabStop
    36, // UIElement_IsTapEnabled
    37, // UIElement_KeyboardAcceleratorPlacementMode
    38, // UIElement_KeyboardAcceleratorPlacementTarget
    39, // UIElement_KeyboardAccelerators
    40, // UIElement_KeyTipHorizontalOffset
    41, // UIElement_KeyTipPlacementMode
    42, // UIElement_KeyTipTarget
    43, // UIElement_KeyTipVerticalOffset
    44, // UIElement_Lights
    45, // UIElement_ManipulationMode
    46, // UIElement_OffsetXAnimation
    47, // UIElement_OffsetYAnimation
    48, // UIElement_Opacity
    49, // UIElement_OpacityAnimation
    50, // UIElement_OpacityExpression
    51, // UIElement_OpacityTransition
    52, // UIElement_PointerCaptures
    53, // UIElement_Projection
    54, // UIElement_ProtectedCursor
    55, // UIElement_RenderSize
    56, // UIElement_RenderTransform
    57, // UIElement_RenderTransformOrigin
    58, // UIElement_RotationTransition
    59, // UIElement_ScaleTransition
    60, // UIElement_Shadow
    61, // UIElement_TabFocusNavigation
    62, // UIElement_TabIndex
    63, // UIElement_Transform3D
    64, // UIElement_Transitions
    65, // UIElement_TransitionTarget
    66, // UIElement_TranslationTransition
    67, // UIElement_UseLayoutRounding
    68, // UIElement_UseSystemFocusVisuals
    69, // UIElement_Visibility
    70, // UIElement_XYFocusDown
    71, // UIElement_XYFocusDownNavigationStrategy
    72, // UIElement_XYFocusKeyboardNavigation
    73, // UIElement_XYFocusLeft
    74, // UIElement_XYFocusLeftNavigationStrategy
    75, // UIElement_XYFocusRight
    76, // UIElement_XYFocusRightNavigationStrategy
    77, // UIElement_XYFocusUp
    78, // UIElement_XYFocusUpNavigationStrategy
    8, // VisualState___DeferredSetters
    9, // VisualState___DeferredStoryboard
    10, // VisualState_Setters
    11, // VisualState_StateTriggers
    12, // VisualState_Storyboard
    8, // VisualStateGroup_States
    9, // VisualStateGroup_Transitions
    0, // VisualStateManager_CustomVisualStateManager
    0, // VisualStateManager_VisualStateGroups
    8, // VisualTransition_From
    9, // VisualTransition_GeneratedDuration
    10, // VisualTransition_GeneratedEasingFunction
    11, // VisualTransition_Storyboard
    12, // VisualTransition_To
    8, // Window_Content
    9, // Window_SystemBackdrop
    10, // Window_Title
    11, // Window_TransparentBackground
    8, // XamlUICommand_AccessKey
    9, // XamlUICommand_Command
    10, // XamlUICommand_Description
    11, // XamlUICommand_IconSource
    12, // XamlUICommand_KeyboardAccelerators
    13, // XamlUICommand_Label
    9, // AdaptiveTrigger_MinWindowHeight
    10, // AdaptiveTrigger_MinWindowWidth
    8, // ArcSegment_IsLargeArc
    9, // ArcSegment_Point
    10, // ArcSegment_RotationAngle
    11, // ArcSegment_Size
    12, // ArcSegment_SweepDirection
    9, // BackEase_Amplitude
    8, // BeginStoryboard_Storyboard
    8, // BezierSegment_Point1
    9, // BezierSegment_Point2
    10, // BezierSegment_Point3
    9, // BitmapIconSource_ShowAsMonochrome
    10, // BitmapIconSource_UriSource
    8, // BitmapSource_PixelHeight
    9, // BitmapSource_PixelWidth
    26, // Block_HorizontalTextAlignment
    27, // Block_LineHeight
    28, // Block_LineStackingStrategy
    29, // Block_Margin
    30, // Block_TextAlignment
    9, // BounceEase_Bounces
    10, // BounceEase_Bounciness
    16, // ColorAnimation_By
    17, // ColorAnimation_EasingFunction
    18, // ColorAnimation_EnableDependentAnimation
    19, // ColorAnimation_From
    20, // ColorAnimation_To
    16, // ColorAnimationUsingKeyFrames_EnableDependentAnimation
    17, // ColorAnimationUsingKeyFrames_KeyFrames
    8, // CompositeTransform3D_CenterX
    9, // CompositeTransform3D_CenterXAnimation
    10, // CompositeTransform3D_CenterY
    11, // CompositeTransform3D_CenterYAnimation
    12, // CompositeTransform3D_CenterZ
    13, // CompositeTransform3D_CenterZAnimation
    14, // CompositeTransform3D_RotationX
    15, // CompositeTransform3D_RotationXAnimation
    16, // CompositeTransform3D_RotationY
    17, // CompositeTransform3D_RotationYAnimation
    18, // CompositeTransform3D_RotationZ
    19, // CompositeTransform3D_RotationZAnimation
    20, // CompositeTransform3D_ScaleX
    21, // CompositeTransform3D_ScaleXAnimation
    22, // CompositeTransform3D_ScaleY
    23, // CompositeTransform3D_ScaleYAnimation
    24, // CompositeTransform3D_ScaleZ
    25, // CompositeTransform3D_ScaleZAnimation
    26, // CompositeTransform3D_TranslateX
    27, // CompositeTransform3D_TranslateXAnimation
    28, // CompositeTransform3D_TranslateY
    29, // CompositeTransform3D_TranslateYAnimation
    30, // CompositeTransform3D_TranslateZ
    31, // CompositeTransform3D_TranslateZAnimation
    9, // ContentThemeTransition_HorizontalOffset
    10, // ContentThemeTransition_VerticalOffset
    9, // ControlTemplate_TargetType
    8, // CustomResource_ResourceKey
    0, // DataTemplate_ExtensionInstance
    16, // DispatcherTimer_Interval
    16, // DoubleAnimation_By
    17, // DoubleAnimation_EasingFunction
    18, // DoubleAnimation_EnableDependentAnimation
    19, // DoubleAnimation_From
    20, // DoubleAnimation_To
    16, // DoubleAnimationUsingKeyFrames_EnableDependentAnimation
    17, // DoubleAnimationUsingKeyFrames_KeyFrames
    9, // Duration_TimeSpan
    16, // DynamicTimeline_Children
    10, // EasingColorKeyFrame_EasingFunction
    10, // EasingDoubleKeyFrame_EasingFunction
    10, // EasingPointKeyFrame_EasingFunction
    9, // EdgeUIThemeTransition_Edge
    9, // ElasticEase_Oscillations
    10, // ElasticEase_Springiness
    10, // EllipseGeometry_Center
    11, // EllipseGeometry_RadiusX
    12, // EllipseGeometry_RadiusY
    9, // EntranceThemeTransition_FromHorizontalOffset
    10, // EntranceThemeTransition_FromVerticalOffset
    11, // EntranceThemeTransition_IsStaggeringEnabled
    8, // EventTrigger_Actions
    9, // EventTrigger_RoutedEvent
    9, // ExponentialEase_Exponent
    21, // Flyout_Content
    22, // Flyout_FlyoutPresenterStyle
    9, // FontIconSource_FontFamily
    10, // FontIconSource_FontSize
    11, // FontIconSource_FontStyle
    12, // FontIconSource_FontWeight
    13, // FontIconSource_Glyph
    14, // FontIconSource_IsTextScaleFactorEnabled
    15, // FontIconSource_MirroredWhenRightToLeft
    95, // FrameworkElement_ActualHeight
    96, // FrameworkElement_ActualTheme
    97, // FrameworkElement_ActualWidth
    98, // FrameworkElement_AllowFocusOnInteraction
    99, // FrameworkElement_AllowFocusWhenDisabled
    100, // FrameworkElement_AutomationPeerFactoryIndex
    101, // FrameworkElement_BringIntoViewDistanceX
    102, // FrameworkElement_BringIntoViewDistanceY
    103, // FrameworkElement_DataContext
    104, // FrameworkElement_EffectiveViewport
    105, // FrameworkElement_FlowDirection
    106, // FrameworkElement_FocusVisualMargin
    107, // FrameworkElement_FocusVisualPrimaryBrush
    108, // FrameworkElement_FocusVisualPrimaryThickness
    109, // FrameworkElement_FocusVisualSecondaryBrush
    110, // FrameworkElement_FocusVisualSecondaryThickness
    111, // FrameworkElement_Height
    112, // FrameworkElement_HorizontalAlignment
    113, // FrameworkElement_IsTextScaleFactorEnabledInternal
    114, // FrameworkElement_Language
    115, // FrameworkElement_Margin
    116, // FrameworkElement_MaxHeight
    117, // FrameworkElement_MaxViewport
    118, // FrameworkElement_MaxWidth
    119, // FrameworkElement_MinHeight
    120, // FrameworkElement_MinWidth
    121, // FrameworkElement_Parent
    122, // FrameworkElement_RequestedTheme
    123, // FrameworkElement_Resources
    124, // FrameworkElement_Style
    125, // FrameworkElement_Tag
    126, // FrameworkElement_Triggers
    127, // FrameworkElement_VerticalAlignment
    128, // FrameworkElement_Width
    9, // FrameworkElementAutomationPeer_Owner
    95, // FrameworkElementEx_ActualHeight
    96, // FrameworkElementEx_ActualWidth
    97, // FrameworkElementEx_Children
    98, // FrameworkElementEx_Height
    99, // FrameworkElementEx_HorizontalAlignment
    100, // FrameworkElementEx_Margin
    101, // FrameworkElementEx_MaxHeight
    102, // FrameworkElementEx_MaxWidth
    103, // FrameworkElementEx_MinHeight
    104, // FrameworkElementEx_MinWidth
    105, // FrameworkElementEx_VerticalAlignment
    106, // FrameworkElementEx_Width
    10, // GeometryGroup_Children
    11, // GeometryGroup_FillRule
    11, // GradientBrush_ColorInterpolationMode
    12, // GradientBrush_GradientStops
    13, // GradientBrush_MappingMode
    14, // GradientBrush_SpreadMethod
    8, // GridViewItemTemplateSettings_DragItemsCount
    9, // ItemAutomationPeer_Item
    10, // ItemAutomationPeer_ItemsControlAutomationPeer
    9, // KeyTime_TimeSpan
    10, // LineGeometry_EndPoint
    11, // LineGeometry_StartPoint
    8, // LineSegment_Point
    8, // ListViewItemTemplateSettings_DragItemsCount
    8, // Matrix3DProjection_ProjectionMatrix
    21, // MenuFlyout_Items
    22, // MenuFlyout_MenuFlyoutPresenterStyle
    9, // MenuPopupThemeTransition_ClosedRatio
    10, // MenuPopupThemeTransition_Direction
    11, // MenuPopupThemeTransition_OpenedLength
    16, // ObjectAnimationUsingKeyFrames_EnableDependentAnimation
    17, // ObjectAnimationUsingKeyFrames_KeyFrames
    95, // PanelEx_ActualHeight
    96, // PanelEx_ActualWidth
    97, // PanelEx_Children
    98, // PanelEx_Height
    99, // PanelEx_HorizontalAlignment
    100, // PanelEx_Margin
    101, // PanelEx_MaxHeight
    102, // PanelEx_MaxWidth
    103, // PanelEx_MinHeight
    104, // PanelEx_MinWidth
    105, // PanelEx_VerticalAlignment
    106, // PanelEx_Width
    9, // PaneThemeTransition_Edge
    10, // PathGeometry_Figures
    11, // PathGeometry_FillRule
    9, // PathIconSource_Data
    8, // PerspectiveTransform3D_Depth
    9, // PerspectiveTransform3D_OffsetX
    10, // PerspectiveTransform3D_OffsetY
    9, // PickerFlyoutThemeTransition_OffsetFromCenter
    10, // PickerFlyoutThemeTransition_OpenedLength
    8, // PlaneProjection_CenterOfRotationX
    9, // PlaneProjection_CenterOfRotationXAnimation
    10, // PlaneProjection_CenterOfRotationY
    11, // PlaneProjection_CenterOfRotationYAnimation
    12, // PlaneProjection_CenterOfRotationZ
    13, // PlaneProjection_CenterOfRotationZAnimation
    14, // PlaneProjection_GlobalOffsetX
    15, // PlaneProjection_GlobalOffsetXAnimation
    16, // PlaneProjection_GlobalOffsetY
    17, // PlaneProjection_GlobalOffsetYAnimation
    18, // PlaneProjection_GlobalOffsetZ
    19, // PlaneProjection_GlobalOffsetZAnimation
    20, // PlaneProjection_LocalOffsetX
    21, // PlaneProjection_LocalOffsetXAnimation
    22, // PlaneProjection_LocalOffsetY
    23, // PlaneProjection_LocalOffsetYAnimation
    24, // PlaneProjection_LocalOffsetZ
    25, // PlaneProjection_LocalOffsetZAnimation
    26, // PlaneProjection_ProjectionMatrix
    27, // PlaneProjection_RotationX
    28, // PlaneProjection_RotationXAnimation
    29, // PlaneProjection_RotationY
    30, // PlaneProjection_RotationYAnimation
    31, // PlaneProjection_RotationZ
    32, // PlaneProjection_RotationZAnimation
    16, // PointAnimation_By
    17, // PointAnimation_EasingFunction
    18, // PointAnimation_EnableDependentAnimation
    19, // PointAnimation_From
    20, // PointAnimation_To
    16, // PointAnimationUsingKeyFrames_EnableDependentAnimation
    17, // PointAnimationUsingKeyFrames_KeyFrames
    16, // PointerAnimationUsingKeyFrames_KeyFrames
    17, // PointerAnimationUsingKeyFrames_PointerSource
    8, // PolyBezierSegment_Points
    8, // PolyLineSegment_Points
    8, // PolyQuadraticBezierSegment_Points
    9, // PopupThemeTransition_FromHorizontalOffset
    10, // PopupThemeTransition_FromVerticalOffset
    9, // PowerEase_Power
    8, // PVLStaggerFunction_Delay
    9, // PVLStaggerFunction_DelayReduce
    10, // PVLStaggerFunction_Maximum
    11, // PVLStaggerFunction_Reverse
    8, // QuadraticBezierSegment_Point1
    9, // QuadraticBezierSegment_Point2
    10, // RectangleGeometry_RadiusX
    11, // RectangleGeometry_RadiusY
    12, // RectangleGeometry_Rect
    8, // RelativeSource_Mode
    8, // RenderTargetBitmap_PixelHeight
    9, // RenderTargetBitmap_PixelWidth
    9, // RepositionThemeTransition_IsStaggeringEnabled
    9, // Setter_Property
    10, // Setter_Target
    11, // Setter_Value
    11, // SolidColorBrush_Color
    12, // SolidColorBrush_ColorAAnimation
    13, // SolidColorBrush_ColorAnimation
    14, // SolidColorBrush_ColorBAnimation
    15, // SolidColorBrush_ColorGAnimation
    16, // SolidColorBrush_ColorRAnimation
    10, // SplineColorKeyFrame_KeySpline
    10, // SplineDoubleKeyFrame_KeySpline
    10, // SplinePointKeyFrame_KeySpline
    14, // StandardUICommand_Kind
    9, // StateTrigger_IsActive
    8, // StaticResource_ResourceKey
    8, // SvgImageSource_RasterizePixelHeight
    9, // SvgImageSource_RasterizePixelWidth
    10, // SvgImageSource_UriSource
    9, // SymbolIconSource_Symbol
    8, // TemplateBinding_Property
    8, // TextHighlighter_Background
    9, // TextHighlighter_Foreground
    10, // TextHighlighter_Ranges
    8, // ThemeResource_ResourceKey
    8, // ThemeShadow_Receivers
    11, // TileBrush_AlignmentX
    12, // TileBrush_AlignmentY
    13, // TileBrush_Stretch
    11, // XamlCompositionBrushBase_FallbackColor
    9, // AutomationAnnotationCollection_ContentProperty
    9, // AutomationPeerAnnotationCollection_ContentProperty
    9, // AutomationPeerCollection_ContentProperty
    8, // Binding_Converter
    9, // Binding_ConverterLanguage
    10, // Binding_ConverterParameter
    11, // Binding_ElementName
    12, // Binding_FallbackValue
    13, // Binding_Mode
    14, // Binding_Path
    15, // Binding_RelativeSource
    16, // Binding_Source
    17, // Binding_TargetNullValue
    18, // Binding_UpdateSourceTrigger
    10, // BitmapImage_AutoPlay
    11, // BitmapImage_CreateOptions
    12, // BitmapImage_DecodePixelHeight
    13, // BitmapImage_DecodePixelType
    14, // BitmapImage_DecodePixelWidth
    15, // BitmapImage_IsAnimatedBitmap
    16, // BitmapImage_IsPlaying
    17, // BitmapImage_UriSource
    133, // Border_Background
    134, // Border_BackgroundSizing
    135, // Border_BackgroundTransition
    136, // Border_BorderBrush
    137, // Border_BorderThickness
    138, // Border_Child
    139, // Border_ChildTransitions
    140, // Border_CornerRadius
    141, // Border_Padding
    9, // BrushCollection_ContentProperty
    9, // ColorKeyFrameCollection_ContentProperty
    9, // ColumnDefinitionCollection_ContentProperty
    8, // CompositeTransform_CenterX
    9, // CompositeTransform_CenterXAnimation
    10, // CompositeTransform_CenterY
    11, // CompositeTransform_CenterYAnimation
    12, // CompositeTransform_RotateAnimation
    13, // CompositeTransform_Rotation
    14, // CompositeTransform_ScaleX
    15, // CompositeTransform_ScaleXAnimation
    16, // CompositeTransform_ScaleY
    17, // CompositeTransform_ScaleYAnimation
    18, // CompositeTransform_SkewX
    19, // CompositeTransform_SkewXAnimation
    20, // CompositeTransform_SkewY
    21, // CompositeTransform_SkewYAnimation
    22, // CompositeTransform_TranslateX
    23, // CompositeTransform_TranslateXAnimation
    24, // CompositeTransform_TranslateY
    25, // CompositeTransform_TranslateYAnimation
    133, // ContentPresenter_Background
    134, // ContentPresenter_BackgroundSizing
    135, // ContentPresenter_BackgroundTransition
    136, // ContentPresenter_BorderBrush
    137, // ContentPresenter_BorderThickness
    138, // ContentPresenter_CharacterSpacing
    139, // ContentPresenter_Content
    140, // ContentPresenter_ContentTemplate
    141, // ContentPresenter_ContentTemplateSelector
    142, // ContentPresenter_ContentTransitions
    143, // ContentPresenter_CornerRadius
    144, // ContentPresenter_FontFamily
    145, // ContentPresenter_FontSize
    146, // ContentPresenter_FontStretch
    147, // ContentPresenter_FontStyle
    148, // ContentPresenter_FontWeight
    149, // ContentPresenter_Foreground
    150, // ContentPresenter_HorizontalContentAlignment
    151, // ContentPresenter_IsTextScaleFactorEnabled
    152, // ContentPresenter_LineHeight
    153, // ContentPresenter_LineStackingStrategy
    154, // ContentPresenter_MaxLines
    155, // ContentPresenter_OpticalMarginAlignment
    156, // ContentPresenter_Padding
    157, // ContentPresenter_SelectedContentTemplate
    158, // ContentPresenter_TextLineBounds
    159, // ContentPresenter_TextWrapping
    160, // ContentPresenter_VerticalContentAlignment
    133, // Control_Background
    134, // Control_BackgroundSizing
    135, // Control_BorderBrush
    136, // Control_BorderThickness
    137, // Control_CharacterSpacing
    138, // Control_CornerRadius
    139, // Control_DefaultStyleKey
    140, // Control_DefaultStyleResourceUri
    141, // Control_ElementSoundMode
    142, // Control_FocusTargetDescendant
    143, // Control_FontFamily
    144, // Control_FontSize
    145, // Control_FontStretch
    146, // Control_FontStyle
    147, // Control_FontWeight
    148, // Control_Foreground
    149, // Control_HorizontalContentAlignment
    150, // Control_IsEnabled
    151, // Control_IsFocusEngaged
    152, // Control_IsFocusEngagementEnabled
    0, // Control_IsTemplateFocusTarget
    0, // Control_IsTemplateKeyTipTarget
    153, // Control_IsTextScaleFactorEnabled
    154, // Control_Padding
    155, // Control_RequiresPointer
    156, // Control_TabNavigation
    157, // Control_Template
    158, // Control_TemplateKeyTipTarget
    159, // Control_VerticalContentAlignment
    9, // DisplayMemberTemplate_DisplayMemberPath
    9, // DoubleCollection_ContentProperty
    9, // DoubleKeyFrameCollection_ContentProperty
    17, // DragItemThemeAnimation_TargetName
    17, // DragOverThemeAnimation_Direction
    18, // DragOverThemeAnimation_TargetName
    19, // DragOverThemeAnimation_ToOffset
    17, // DrillInThemeAnimation_EntranceTarget
    18, // DrillInThemeAnimation_EntranceTargetName
    19, // DrillInThemeAnimation_ExitTarget
    20, // DrillInThemeAnimation_ExitTargetName
    17, // DrillOutThemeAnimation_EntranceTarget
    18, // DrillOutThemeAnimation_EntranceTargetName
    19, // DrillOutThemeAnimation_ExitTarget
    20, // DrillOutThemeAnimation_ExitTargetName
    17, // DropTargetItemThemeAnimation_TargetName
    17, // FadeInThemeAnimation_TargetName
    17, // FadeOutThemeAnimation_TargetName
    9, // FloatCollection_ContentProperty
    9, // GeometryCollection_ContentProperty
    133, // Glyphs_ColorFontPaletteIndex
    134, // Glyphs_Fill
    135, // Glyphs_FontRenderingEmSize
    136, // Glyphs_FontUri
    137, // Glyphs_Indices
    138, // Glyphs_IsColorFontEnabled
    139, // Glyphs_OriginX
    140, // Glyphs_OriginY
    141, // Glyphs_StyleSimulations
    142, // Glyphs_UnicodeString
    9, // GradientStopCollection_ContentProperty
    9, // HubSectionCollection_ContentProperty
    133, // IconElement_Foreground
    133, // Image_NineGrid
    134, // Image_Source
    135, // Image_Stretch
    14, // ImageBrush_ImageSource
    26, // InlineUIContainer_Child
    9, // InputScopeNameCollection_ContentProperty
    133, // ItemsPresenter_Footer
    134, // ItemsPresenter_FooterTemplate
    135, // ItemsPresenter_FooterTransitions
    136, // ItemsPresenter_Header
    137, // ItemsPresenter_HeaderTemplate
    138, // ItemsPresenter_HeaderTransitions
    139, // ItemsPresenter_ItemsPanel
    140, // ItemsPresenter_Padding
    9, // KeyboardAcceleratorCollection_ContentProperty
    15, // LinearGradientBrush_EndPoint
    16, // LinearGradientBrush_StartPoint
    8, // MatrixTransform_Matrix
    133, // MediaPlayerPresenter_IsFullWindow
    134, // MediaPlayerPresenter_MediaPlayer
    135, // MediaPlayerPresenter_Stretch
    9, // MenuFlyoutItemBaseCollection_ContentProperty
    9, // ObjectKeyFrameCollection_ContentProperty
    133, // Panel_Background
    134, // Panel_BackgroundTransition
    135, // Panel_BorderBrushProtected
    136, // Panel_BorderThicknessProtected
    137, // Panel_Children
    138, // Panel_ChildrenTransitions
    139, // Panel_CornerRadiusProtected
    140, // Panel_IsIgnoringTransitions
    141, // Panel_IsItemsHost
    31, // Paragraph_Inlines
    32, // Paragraph_TextIndent
    9, // ParametricCurveCollection_ContentProperty
    9, // ParametricCurveSegmentCollection_ContentProperty
    9, // PathFigureCollection_ContentProperty
    9, // PathSegmentCollection_ContentProperty
    9, // PointCollection_ContentProperty
    9, // PointerCollection_ContentProperty
    17, // PointerDownThemeAnimation_TargetName
    9, // PointerKeyFrameCollection_ContentProperty
    17, // PointerUpThemeAnimation_TargetName
    9, // PointKeyFrameCollection_ContentProperty
    17, // PopInThemeAnimation_FromHorizontalOffset
    18, // PopInThemeAnimation_FromVerticalOffset
    19, // PopInThemeAnimation_TargetName
    17, // PopOutThemeAnimation_TargetName
    133, // Popup_ActualPlacement
    134, // Popup_AssociatedFlyout
    135, // Popup_Child
    136, // Popup_ChildTransitions
    137, // Popup_DesiredPlacement
    138, // Popup_DisableOverlayIsLightDismissCheck
    139, // Popup_HorizontalOffset
    140, // Popup_IsApplicationBarService
    141, // Popup_IsContentDialog
    142, // Popup_IsLightDismissEnabled
    143, // Popup_IsOpen
    144, // Popup_IsSubMenu
    145, // Popup_LightDismissOverlayMode
    146, // Popup_OverlayElement
    147, // Popup_OverlayInputPassThroughElement
    148, // Popup_PlacementTarget
    149, // Popup_ShouldConstrainToRootBounds
    150, // Popup_SystemBackdrop
    151, // Popup_VerticalOffset
    10, // RepeatBehavior_Count
    11, // RepeatBehavior_Duration
    17, // RepositionThemeAnimation_FromHorizontalOffset
    18, // RepositionThemeAnimation_FromVerticalOffset
    19, // RepositionThemeAnimation_TargetName
    9, // ResourceDictionary_ContentProperty
    10, // ResourceDictionary_MergedDictionaries
    11, // ResourceDictionary_Source
    12, // ResourceDictionary_ThemeDictionaries
    9, // ResourceDictionaryCollection_ContentProperty
    133, // RichTextBlock_Blocks
    134, // RichTextBlock_CharacterSpacing
    135, // RichTextBlock_FontFamily
    136, // RichTextBlock_FontSize
    137, // RichTextBlock_FontStretch
    138, // RichTextBlock_FontStyle
    139, // RichTextBlock_FontWeight
    140, // RichTextBlock_Foreground
    141, // RichTextBlock_HasOverflowContent
    142, // RichTextBlock_HorizontalTextAlignment
    143, // RichTextBlock_IsColorFontEnabled
    144, // RichTextBlock_IsTextScaleFactorEnabled
    145, // RichTextBlock_IsTextSelectionEnabled
    146, // RichTextBlock_IsTextTrimmed
    147, // RichTextBlock_LineHeight
    148, // RichTextBlock_LineStackingStrategy
    149, // RichTextBlock_MaxLines
    150, // RichTextBlock_OpticalMarginAlignment
    151, // RichTextBlock_OverflowContentTarget
    152, // RichTextBlock_Padding
    153, // RichTextBlock_SelectedText
    154, // RichTextBlock_SelectionFlyout
    155, // RichTextBlock_SelectionHighlightColor
    156, // RichTextBlock_TextAlignment
    157, // RichTextBlock_TextDecorations
    158, // RichTextBlock_TextHighlighters
    159, // RichTextBlock_TextIndent
    160, // RichTextBlock_TextLineBounds
    161, // RichTextBlock_TextReadingOrder
    162, // RichTextBlock_TextTrimming
    163, // RichTextBlock_TextWrapping
    133, // RichTextBlockOverflow_HasOverflowContent
    134, // RichTextBlockOverflow_IsTextTrimmed
    135, // RichTextBlockOverflow_MaxLines
    136, // RichTextBlockOverflow_OverflowContentTarget
    137, // RichTextBlockOverflow_Padding
    8, // RotateTransform_Angle
    9, // RotateTransform_AngleAnimation
    10, // RotateTransform_CenterX
    11, // RotateTransform_CenterXAnimation
    12, // RotateTransform_CenterY
    13, // RotateTransform_CenterYAnimation
    9, // RowDefinitionCollection_ContentProperty
    26, // Run_FlowDirection
    27, // Run_Text
    8, // ScaleTransform_CenterX
    9, // ScaleTransform_CenterXAnimation
    10, // ScaleTransform_CenterY
    11, // ScaleTransform_CenterYAnimation
    12, // ScaleTransform_ScaleX
    13, // ScaleTransform_ScaleXAnimation
    14, // ScaleTransform_ScaleY
    15, // ScaleTransform_ScaleYAnimation
    9, // SetterBaseCollection_ContentProperty
    10, // SetterBaseCollection_IsSealed
    133, // Shape_Fill
    134, // Shape_GeometryTransform
    135, // Shape_Stretch
    136, // Shape_Stroke
    137, // Shape_StrokeDashArray
    138, // Shape_StrokeDashCap
    139, // Shape_StrokeDashOffset
    140, // Shape_StrokeEndLineCap
    141, // Shape_StrokeLineJoin
    142, // Shape_StrokeMiterLimit
    143, // Shape_StrokeStartLineCap
    144, // Shape_StrokeThickness
    8, // SkewTransform_AngleX
    9, // SkewTransform_AngleXAnimation
    10, // SkewTransform_AngleY
    11, // SkewTransform_AngleYAnimation
    12, // SkewTransform_CenterX
    13, // SkewTransform_CenterXAnimation
    14, // SkewTransform_CenterY
    15, // SkewTransform_CenterYAnimation
    26, // Span_Inlines
    17, // SplitCloseThemeAnimation_ClosedLength
    18, // SplitCloseThemeAnimation_ClosedTarget
    19, // SplitCloseThemeAnimation_ClosedTargetName
    20, // SplitCloseThemeAnimation_ContentTarget
    21, // SplitCloseThemeAnimation_ContentTargetName
    22, // SplitCloseThemeAnimation_ContentTranslationDirection
    23, // SplitCloseThemeAnimation_ContentTranslationOffset
    24, // SplitCloseThemeAnimation_OffsetFromCenter
    25, // SplitCloseThemeAnimation_OpenedLength
    26, // SplitCloseThemeAnimation_OpenedTarget
    27, // SplitCloseThemeAnimation_OpenedTargetName
    17, // SplitOpenThemeAnimation_ClosedLength
    18, // SplitOpenThemeAnimation_ClosedTarget
    19, // SplitOpenThemeAnimation_ClosedTargetName
    20, // SplitOpenThemeAnimation_ContentTarget
    21, // SplitOpenThemeAnimation_ContentTargetName
    22, // SplitOpenThemeAnimation_ContentTranslationDirection
    23, // SplitOpenThemeAnimation_ContentTranslationOffset
    24, // SplitOpenThemeAnimation_OffsetFromCenter
    25, // SplitOpenThemeAnimation_OpenedLength
    26, // SplitOpenThemeAnimation_OpenedTarget
    27, // SplitOpenThemeAnimation_OpenedTargetName
    9, // StateTriggerCollection_ContentProperty
    16, // Storyboard_Children
    17, // Storyboard_IsEssential
    15, // Storyboard_TargetName
    14, // Storyboard_TargetProperty
    9, // StoryboardCollection_ContentProperty
    17, // SwipeBackThemeAnimation_FromHorizontalOffset
    18, // SwipeBackThemeAnimation_FromVerticalOffset
    19, // SwipeBackThemeAnimation_TargetName
    17, // SwipeHintThemeAnimation_TargetName
    18, // SwipeHintThemeAnimation_ToHorizontalOffset
    19, // SwipeHintThemeAnimation_ToVerticalOffset
    133, // TextBlock_CharacterSpacing
    134, // TextBlock_FontFamily
    135, // TextBlock_FontSize
    136, // TextBlock_FontStretch
    137, // TextBlock_FontStyle
    138, // TextBlock_FontWeight
    139, // TextBlock_Foreground
    140, // TextBlock_HorizontalTextAlignment
    141, // TextBlock_Inlines
    142, // TextBlock_IsColorFontEnabled
    143, // TextBlock_IsTextScaleFactorEnabled
    144, // TextBlock_IsTextSelectionEnabled
    145, // TextBlock_IsTextTrimmed
    146, // TextBlock_LineHeight
    147, // TextBlock_LineStackingStrategy
    148, // TextBlock_MaxLines
    149, // TextBlock_OpticalMarginAlignment
    150, // TextBlock_Padding
    151, // TextBlock_SelectedText
    152, // TextBlock_SelectionFlyout
    153, // TextBlock_SelectionHighlightColor
    154, // TextBlock_Text
    155, // TextBlock_TextAlignment
    156, // TextBlock_TextDecorations
    157, // TextBlock_TextHighlighters
    158, // TextBlock_TextLineBounds
    159, // TextBlock_TextReadingOrder
    160, // TextBlock_TextTrimming
    161, // TextBlock_TextWrapping
    9, // TextElementCollection_ContentProperty
    9, // TextHighlighterCollection_ContentProperty
    9, // TextRangeCollection_ContentProperty
    9, // TimelineCollection_ContentProperty
    9, // TransformCollection_ContentProperty
    8, // TransformGroup_Children
    9, // TransformGroup_Value
    9, // TransitionCollection_ContentProperty
    8, // TranslateTransform_X
    9, // TranslateTransform_XAnimation
    10, // TranslateTransform_Y
    11, // TranslateTransform_YAnimation
    9, // TriggerActionCollection_ContentProperty
    9, // TriggerCollection_ContentProperty
    9, // UIElementCollection_ContentProperty
    133, // Viewbox_Child
    134, // Viewbox_Stretch
    135, // Viewbox_StretchDirection
    9, // VisualStateCollection_ContentProperty
    9, // VisualStateGroupCollection_ActiveStoryboards
    10, // VisualStateGroupCollection_ActiveTransitions
    11, // VisualStateGroupCollection_ContentProperty
    12, // VisualStateGroupCollection_DeferredSetters
    13, // VisualStateGroupCollection_DeferredStateTriggers
    9, // VisualTransitionCollection_ContentProperty
    9, // XamlLightCollection_ContentProperty
    160, // AppBarSeparator_DynamicOverflowOrder
    161, // AppBarSeparator_IsCompact
    162, // AppBarSeparator_IsInOverflow
    163, // AppBarSeparator_UseOverflowStyle
    134, // BitmapIcon_ShowAsMonochrome
    135, // BitmapIcon_UriSource
    160, // CalendarDatePicker_CalendarIdentifier
    161, // CalendarDatePicker_CalendarViewStyle
    162, // CalendarDatePicker_Date
    163, // CalendarDatePicker_DateFormat
    164, // CalendarDatePicker_DayOfWeekFormat
    165, // CalendarDatePicker_Description
    166, // CalendarDatePicker_DisplayMode
    167, // CalendarDatePicker_FirstDayOfWeek
    168, // CalendarDatePicker_Header
    169, // CalendarDatePicker_HeaderPlacement
    170, // CalendarDatePicker_HeaderTemplate
    171, // CalendarDatePicker_IsCalendarOpen
    172, // CalendarDatePicker_IsGroupLabelVisible
    173, // CalendarDatePicker_IsOutOfScopeEnabled
    174, // CalendarDatePicker_IsTodayHighlighted
    175, // CalendarDatePicker_LightDismissOverlayMode
    176, // CalendarDatePicker_MaxDate
    177, // CalendarDatePicker_MinDate
    178, // CalendarDatePicker_PlaceholderText
    160, // CalendarView_BlackoutBackground
    161, // CalendarView_BlackoutForeground
    162, // CalendarView_BlackoutStrikethroughBrush
    163, // CalendarView_CalendarIdentifier
    164, // CalendarView_CalendarItemBackground
    165, // CalendarView_CalendarItemBorderBrush
    166, // CalendarView_CalendarItemBorderThickness
    167, // CalendarView_CalendarItemCornerRadius
    168, // CalendarView_CalendarItemDisabledBackground
    169, // CalendarView_CalendarItemForeground
    170, // CalendarView_CalendarItemHoverBackground
    171, // CalendarView_CalendarItemPressedBackground
    172, // CalendarView_CalendarViewDayItemStyle
    173, // CalendarView_DayItemFontFamily
    174, // CalendarView_DayItemFontSize
    175, // CalendarView_DayItemFontStyle
    176, // CalendarView_DayItemFontWeight
    177, // CalendarView_DayItemMargin
    178, // CalendarView_DayOfWeekFormat
    179, // CalendarView_DisabledForeground
    180, // CalendarView_DisplayMode
    181, // CalendarView_FirstDayOfWeek
    182, // CalendarView_FirstOfMonthLabelFontFamily
    183, // CalendarView_FirstOfMonthLabelFontSize
    184, // CalendarView_FirstOfMonthLabelFontStyle
    185, // CalendarView_FirstOfMonthLabelFontWeight
    186, // CalendarView_FirstOfMonthLabelMargin
    187, // CalendarView_FirstOfYearDecadeLabelFontFamily
    188, // CalendarView_FirstOfYearDecadeLabelFontSize
    189, // CalendarView_FirstOfYearDecadeLabelFontStyle
    190, // CalendarView_FirstOfYearDecadeLabelFontWeight
    191, // CalendarView_FirstOfYearDecadeLabelMargin
    192, // CalendarView_FocusBorderBrush
    193, // CalendarView_HorizontalDayItemAlignment
    194, // CalendarView_HorizontalFirstOfMonthLabelAlignment
    195, // CalendarView_HoverBorderBrush
    196, // CalendarView_IsGroupLabelVisible
    197, // CalendarView_IsOutOfScopeEnabled
    198, // CalendarView_IsTodayHighlighted
    199, // CalendarView_MaxDate
    200, // CalendarView_MinDate
    201, // CalendarView_MonthYearItemFontFamily
    202, // CalendarView_MonthYearItemFontSize
    203, // CalendarView_MonthYearItemFontStyle
    204, // CalendarView_MonthYearItemFontWeight
    205, // CalendarView_MonthYearItemMargin
    206, // CalendarView_NumberOfWeeksInView
    207, // CalendarView_OutOfScopeBackground
    208, // CalendarView_OutOfScopeForeground
    209, // CalendarView_OutOfScopeHoverForeground
    210, // CalendarView_OutOfScopePressedForeground
    211, // CalendarView_PressedBorderBrush
    212, // CalendarView_PressedForeground
    213, // CalendarView_SelectedBorderBrush
    214, // CalendarView_SelectedDates
    215, // CalendarView_SelectedDisabledBorderBrush
    216, // CalendarView_SelectedDisabledForeground
    217, // CalendarView_SelectedForeground
    218, // CalendarView_SelectedHoverBorderBrush
    219, // CalendarView_SelectedHoverForeground
    220, // CalendarView_SelectedPressedBorderBrush
    221, // CalendarView_SelectedPressedForeground
    222, // CalendarView_SelectionMode
    223, // CalendarView_TemplateSettings
    224, // CalendarView_TodayBackground
    225, // CalendarView_TodayBlackoutBackground
    226, // CalendarView_TodayBlackoutForeground
    227, // CalendarView_TodayDisabledBackground
    228, // CalendarView_TodayFontWeight
    229, // CalendarView_TodayForeground
    230, // CalendarView_TodayHoverBackground
    231, // CalendarView_TodayHoverBorderBrush
    232, // CalendarView_TodayPressedBackground
    233, // CalendarView_TodayPressedBorderBrush
    234, // CalendarView_TodaySelectedInnerBorderBrush
    235, // CalendarView_VerticalDayItemAlignment
    236, // CalendarView_VerticalFirstOfMonthLabelAlignment
    0, // Canvas_Left
    0, // Canvas_Top
    94, // Canvas_ZIndex
    13, // ColorPaletteResources_Accent
    14, // ColorPaletteResources_AltHigh
    15, // ColorPaletteResources_AltLow
    16, // ColorPaletteResources_AltMedium
    17, // ColorPaletteResources_AltMediumHigh
    18, // ColorPaletteResources_AltMediumLow
    19, // ColorPaletteResources_BaseHigh
    20, // ColorPaletteResources_BaseLow
    21, // ColorPaletteResources_BaseMedium
    22, // ColorPaletteResources_BaseMediumHigh
    23, // ColorPaletteResources_BaseMediumLow
    24, // ColorPaletteResources_ChromeAltLow
    25, // ColorPaletteResources_ChromeBlackHigh
    26, // ColorPaletteResources_ChromeBlackLow
    27, // ColorPaletteResources_ChromeBlackMedium
    28, // ColorPaletteResources_ChromeBlackMediumLow
    29, // ColorPaletteResources_ChromeDisabledHigh
    30, // ColorPaletteResources_ChromeDisabledLow
    31, // ColorPaletteResources_ChromeGray
    32, // ColorPaletteResources_ChromeHigh
    33, // ColorPaletteResources_ChromeLow
    34, // ColorPaletteResources_ChromeMedium
    35, // ColorPaletteResources_ChromeMediumLow
    36, // ColorPaletteResources_ChromeWhite
    37, // ColorPaletteResources_ErrorText
    38, // ColorPaletteResources_ListLow
    39, // ColorPaletteResources_ListMedium
    9, // CommandBarElementCollection_ContentProperty
    0, // CommandingContainer_CommandingContainer
    161, // CommandingContainer_CommandingTarget
    160, // ContentControl_Content
    161, // ContentControl_ContentTemplate
    162, // ContentControl_ContentTemplateSelector
    163, // ContentControl_ContentTransitions
    164, // ContentControl_SelectedContentTemplate
    160, // DatePicker_CalendarIdentifier
    161, // DatePicker_Date
    162, // DatePicker_DayFormat
    163, // DatePicker_DayVisible
    164, // DatePicker_Header
    165, // DatePicker_HeaderPlacement
    166, // DatePicker_HeaderTemplate
    167, // DatePicker_LightDismissOverlayMode
    168, // DatePicker_MaxYear
    169, // DatePicker_MinYear
    170, // DatePicker_MonthFormat
    171, // DatePicker_MonthVisible
    172, // DatePicker_Orientation
    173, // DatePicker_SelectedDate
    174, // DatePicker_YearFormat
    175, // DatePicker_YearVisible
    9, // DependencyObjectCollection_ContentProperty
    134, // FontIcon_FontFamily
    135, // FontIcon_FontSize
    136, // FontIcon_FontStyle
    137, // FontIcon_FontWeight
    138, // FontIcon_Glyph
    139, // FontIcon_IsTextScaleFactorEnabled
    140, // FontIcon_MirroredWhenRightToLeft
    142, // Grid_BackgroundSizing
    143, // Grid_BorderBrush
    144, // Grid_BorderThickness
    130, // Grid_Column
    145, // Grid_ColumnDefinitions
    146, // Grid_ColumnSpacing
    132, // Grid_ColumnSpan
    147, // Grid_CornerRadius
    148, // Grid_Padding
    129, // Grid_Row
    149, // Grid_RowDefinitions
    150, // Grid_RowSpacing
    131, // Grid_RowSpan
    160, // Hub_DefaultSectionIndex
    161, // Hub_Header
    162, // Hub_HeaderTemplate
    163, // Hub_IsActiveView
    164, // Hub_IsZoomedInView
    165, // Hub_Orientation
    166, // Hub_SectionHeaders
    167, // Hub_Sections
    168, // Hub_SectionsInView
    169, // Hub_SemanticZoomOwner
    160, // HubSection_ContentTemplate
    161, // HubSection_Header
    162, // HubSection_HeaderTemplate
    163, // HubSection_IsHeaderInteractive
    27, // Hyperlink_ElementSoundMode
    28, // Hyperlink_FocusState
    29, // Hyperlink_IsTabStop
    30, // Hyperlink_NavigateUri
    31, // Hyperlink_TabIndex
    32, // Hyperlink_UnderlineStyle
    33, // Hyperlink_XYFocusDown
    34, // Hyperlink_XYFocusDownNavigationStrategy
    35, // Hyperlink_XYFocusLeft
    36, // Hyperlink_XYFocusLeftNavigationStrategy
    37, // Hyperlink_XYFocusRight
    38, // Hyperlink_XYFocusRightNavigationStrategy
    39, // Hyperlink_XYFocusUp
    40, // Hyperlink_XYFocusUpNavigationStrategy
    134, // IconSourceElement_IconSource
    9, // ItemCollection_ContentProperty
    160, // ItemsControl_DisplayMemberPath
    161, // ItemsControl_GroupStyle
    162, // ItemsControl_GroupStyleSelector
    163, // ItemsControl_IsGrouping
    164, // ItemsControl_IsItemsHostInvalid
    165, // ItemsControl_ItemContainerStyle
    166, // ItemsControl_ItemContainerStyleSelector
    167, // ItemsControl_ItemContainerTransitions
    168, // ItemsControl_Items
    169, // ItemsControl_ItemsHost
    170, // ItemsControl_ItemsPanel
    171, // ItemsControl_ItemsSource
    172, // ItemsControl_ItemTemplate
    173, // ItemsControl_ItemTemplateSelector
    145, // Line_X1
    146, // Line_X2
    147, // Line_Y1
    148, // Line_Y2
    160, // MediaPlayerElement_AreTransportControlsEnabled
    161, // MediaPlayerElement_AutoPlay
    162, // MediaPlayerElement_IsFullWindow
    163, // MediaPlayerElement_MediaPlayer
    164, // MediaPlayerElement_PosterSource
    165, // MediaPlayerElement_Source
    166, // MediaPlayerElement_Stretch
    167, // MediaPlayerElement_TransportControls
    160, // MediaTransportControls_FastPlayFallbackBehaviour
    161, // MediaTransportControls_IsCompact
    162, // MediaTransportControls_IsFastForwardButtonVisible
    163, // MediaTransportControls_IsFastForwardEnabled
    164, // MediaTransportControls_IsFastRewindButtonVisible
    165, // MediaTransportControls_IsFastRewindEnabled
    166, // MediaTransportControls_IsNextTrackButtonVisible
    167, // MediaTransportControls_IsPlaybackRateButtonVisible
    168, // MediaTransportControls_IsPlaybackRateEnabled
    169, // MediaTransportControls_IsPreviousTrackButtonVisible
    170, // MediaTransportControls_IsRepeatButtonVisible
    171, // MediaTransportControls_IsRepeatEnabled
    172, // MediaTransportControls_IsSeekBarVisible
    173, // MediaTransportControls_IsSeekEnabled
    174, // MediaTransportControls_IsSkipBackwardButtonVisible
    175, // MediaTransportControls_IsSkipBackwardEnabled
    176, // MediaTransportControls_IsSkipForwardButtonVisible
    177, // MediaTransportControls_IsSkipForwardEnabled
    178, // MediaTransportControls_IsStopButtonVisible
    179, // MediaTransportControls_IsStopEnabled
    180, // MediaTransportControls_IsVolumeButtonVisible
    181, // MediaTransportControls_IsVolumeEnabled
    182, // MediaTransportControls_IsZoomButtonVisible
    183, // MediaTransportControls_IsZoomEnabled
    184, // MediaTransportControls_ShowAndHideAutomatically
    142, // ModernCollectionBasePanel_AreStickyGroupHeadersEnabledBase
    160, // PasswordBox_CanPasteClipboardContent
    161, // PasswordBox_Description
    162, // PasswordBox_ErrorTemplate
    163, // PasswordBox_HasValidationErrors
    164, // PasswordBox_Header
    165, // PasswordBox_HeaderPlacement
    166, // PasswordBox_HeaderTemplate
    167, // PasswordBox_InputScope
    168, // PasswordBox_InputValidationKind
    169, // PasswordBox_InputValidationMode
    170, // PasswordBox_IsPasswordRevealButtonEnabled
    171, // PasswordBox_MaxLength
    172, // PasswordBox_Password
    173, // PasswordBox_PasswordChar
    174, // PasswordBox_PasswordRevealMode
    175, // PasswordBox_PlaceholderText
    176, // PasswordBox_PreventKeyboardDisplayOnProgrammaticFocus
    177, // PasswordBox_SelectionFlyout
    178, // PasswordBox_SelectionHighlightColor
    179, // PasswordBox_TextReadingOrder
    180, // PasswordBox_ValidationCommand
    181, // PasswordBox_ValidationContext
    182, // PasswordBox_ValidationErrors
    145, // Path_Data
    134, // PathIcon_Data
    145, // Polygon_FillRule
    146, // Polygon_Points
    145, // Polyline_FillRule
    146, // Polyline_Points
    160, // RangeBase_LargeChange
    161, // RangeBase_Maximum
    162, // RangeBase_Minimum
    163, // RangeBase_SmallChange
    164, // RangeBase_Value
    145, // Rectangle_RadiusX
    146, // Rectangle_RadiusY
    0, // RelativePanel_Above
    0, // RelativePanel_AlignBottomWith
    0, // RelativePanel_AlignBottomWithPanel
    0, // RelativePanel_AlignHorizontalCenterWith
    0, // RelativePanel_AlignHorizontalCenterWithPanel
    0, // RelativePanel_AlignLeftWith
    0, // RelativePanel_AlignLeftWithPanel
    0, // RelativePanel_AlignRightWith
    0, // RelativePanel_AlignRightWithPanel
    0, // RelativePanel_AlignTopWith
    0, // RelativePanel_AlignTopWithPanel
    0, // RelativePanel_AlignVerticalCenterWith
    0, // RelativePanel_AlignVerticalCenterWithPanel
    142, // RelativePanel_BackgroundSizing
    0, // RelativePanel_Below
    143, // RelativePanel_BorderBrush
    144, // RelativePanel_BorderThickness
    145, // RelativePanel_CornerRadius
    0, // RelativePanel_LeftOf
    146, // RelativePanel_Padding
    0, // RelativePanel_RightOf
    160, // RichEditBox_AcceptsReturn
    161, // RichEditBox_CharacterCasing
    162, // RichEditBox_ClipboardCopyFormat
    163, // RichEditBox_Description
    164, // RichEditBox_DesiredCandidateWindowAlignment
    165, // RichEditBox_DisabledFormattingAccelerators
    166, // RichEditBox_Header
    167, // RichEditBox_HeaderPlacement
    168, // RichEditBox_HeaderTemplate
    169, // RichEditBox_HorizontalTextAlignment
    170, // RichEditBox_InputScope
    171, // RichEditBox_IsColorFontEnabled
    172, // RichEditBox_IsReadOnly
    173, // RichEditBox_IsSpellCheckEnabled
    174, // RichEditBox_IsTelemetryCollectionEnabled
    175, // RichEditBox_IsTextPredictionEnabled
    176, // RichEditBox_MaxLength
    177, // RichEditBox_PlaceholderText
    178, // RichEditBox_PreventKeyboardDisplayOnProgrammaticFocus
    179, // RichEditBox_ProofingMenuFlyout
    180, // RichEditBox_SelectionFlyout
    181, // RichEditBox_SelectionHighlightColor
    182, // RichEditBox_SelectionHighlightColorWhenNotFocused
    183, // RichEditBox_TextAlignment
    184, // RichEditBox_TextReadingOrder
    185, // RichEditBox_TextWrapping
    161, // ScrollContentPresenter_CanContentRenderOutsideBounds
    162, // ScrollContentPresenter_SizesContentToTemplatedParent
    160, // SemanticZoom_CanChangeViews
    161, // SemanticZoom_IsZoomedInViewActive
    162, // SemanticZoom_IsZoomOutButtonEnabled
    163, // SemanticZoom_ZoomedInView
    164, // SemanticZoom_ZoomedOutView
    160, // SplitView_CompactPaneLength
    161, // SplitView_Content
    162, // SplitView_DisplayMode
    163, // SplitView_IsPaneOpen
    164, // SplitView_LightDismissOverlayMode
    165, // SplitView_OpenPaneLength
    166, // SplitView_Pane
    167, // SplitView_PaneBackground
    168, // SplitView_PanePlacement
    169, // SplitView_TemplateSettings
    142, // StackPanel_AreScrollSnapPointsRegular
    143, // StackPanel_BackgroundSizing
    144, // StackPanel_BorderBrush
    145, // StackPanel_BorderThickness
    146, // StackPanel_CornerRadius
    147, // StackPanel_Orientation
    148, // StackPanel_Padding
    149, // StackPanel_Spacing
    134, // SymbolIcon_Symbol
    160, // TextBox_AcceptsReturn
    161, // TextBox_CanPasteClipboardContent
    162, // TextBox_CanRedo
    163, // TextBox_CanUndo
    164, // TextBox_CharacterCasing
    165, // TextBox_Description
    166, // TextBox_DesiredCandidateWindowAlignment
    167, // TextBox_ErrorTemplate
    168, // TextBox_HasValidationErrors
    169, // TextBox_Header
    170, // TextBox_HeaderPlacement
    171, // TextBox_HeaderTemplate
    172, // TextBox_HorizontalTextAlignment
    173, // TextBox_InputScope
    174, // TextBox_InputValidationKind
    175, // TextBox_InputValidationMode
    176, // TextBox_IsColorFontEnabled
    177, // TextBox_IsCoreDesktopPopupMenuEnabled
    178, // TextBox_IsReadOnly
    179, // TextBox_IsSpellCheckEnabled
    180, // TextBox_IsTelemetryCollectionEnabled
    181, // TextBox_IsTextPredictionEnabled
    182, // TextBox_MaxLength
    183, // TextBox_PlaceholderForeground
    184, // TextBox_PlaceholderText
    185, // TextBox_PreventEditFocusLoss
    186, // TextBox_PreventKeyboardDisplayOnProgrammaticFocus
    187, // TextBox_ProofingMenuFlyout
    188, // TextBox_SelectedText
    189, // TextBox_SelectionFlyout
    190, // TextBox_SelectionHighlightColor
    191, // TextBox_SelectionHighlightColorWhenNotFocused
    192, // TextBox_SelectionLength
    193, // TextBox_SelectionStart
    194, // TextBox_Text
    195, // TextBox_TextAlignment
    196, // TextBox_TextReadingOrder
    197, // TextBox_TextWrapping
    198, // TextBox_ValidationCommand
    199, // TextBox_ValidationContext
    200, // TextBox_ValidationErrors
    160, // Thumb_IsDragging
    142, // TickBar_Fill
    160, // TimePicker_ClockIdentifier
    161, // TimePicker_Header
    162, // TimePicker_HeaderPlacement
    163, // TimePicker_HeaderTemplate
    164, // TimePicker_LightDismissOverlayMode
    165, // TimePicker_MinuteIncrement
    166, // TimePicker_SelectedTime
    167, // TimePicker_Time
    160, // ToggleSwitch_Header
    161, // ToggleSwitch_HeaderPlacement
    162, // ToggleSwitch_HeaderTemplate
    163, // ToggleSwitch_IsOn
    164, // ToggleSwitch_OffContent
    165, // ToggleSwitch_OffContentTemplate
    166, // ToggleSwitch_OnContent
    167, // ToggleSwitch_OnContentTemplate
    168, // ToggleSwitch_TemplateSettings
    160, // UserControl_Content
    0, // VariableSizedWrapGrid_ColumnSpan
    142, // VariableSizedWrapGrid_HorizontalChildrenAlignment
    143, // VariableSizedWrapGrid_ItemHeight
    144, // VariableSizedWrapGrid_ItemWidth
    145, // VariableSizedWrapGrid_MaximumRowsOrColumns
    146, // VariableSizedWrapGrid_Orientation
    0, // VariableSizedWrapGrid_RowSpan
    147, // VariableSizedWrapGrid_VerticalChildrenAlignment
    165, // AppBar_ClosedDisplayMode
    166, // AppBar_IsOpen
    167, // AppBar_IsSticky
    168, // AppBar_LightDismissOverlayMode
    169, // AppBar_TemplateSettings
    165, // AppBarElementContainer_DynamicOverflowOrder
    166, // AppBarElementContainer_IsCompact
    167, // AppBarElementContainer_IsInOverflow
    168, // AppBarElementContainer_UseOverflowStyle
    174, // AutoSuggestBox_AutoMaximizeSuggestionArea
    175, // AutoSuggestBox_Description
    176, // AutoSuggestBox_ErrorTemplate
    177, // AutoSuggestBox_HasValidationErrors
    178, // AutoSuggestBox_Header
    179, // AutoSuggestBox_HeaderPlacement
    180, // AutoSuggestBox_InputValidationKind
    181, // AutoSuggestBox_InputValidationMode
    182, // AutoSuggestBox_IsSuggestionListOpen
    183, // AutoSuggestBox_LightDismissOverlayMode
    184, // AutoSuggestBox_MaxSuggestionListHeight
    185, // AutoSuggestBox_PlaceholderText
    186, // AutoSuggestBox_QueryIcon
    187, // AutoSuggestBox_Text
    188, // AutoSuggestBox_TextBoxStyle
    189, // AutoSuggestBox_TextMemberPath
    190, // AutoSuggestBox_UpdateTextOnSelect
    191, // AutoSuggestBox_ValidationCommand
    192, // AutoSuggestBox_ValidationContext
    193, // AutoSuggestBox_ValidationErrors
    10, // BlockCollection_ContentProperty
    165, // ButtonBase_ClickMode
    166, // ButtonBase_Command
    167, // ButtonBase_CommandParameter
    168, // ButtonBase_IsPointerOver
    169, // ButtonBase_IsPressed
    143, // CalendarPanel_CacheLength
    144, // CalendarPanel_Cols
    145, // CalendarPanel_ItemMinHeight
    146, // CalendarPanel_ItemMinWidth
    147, // CalendarPanel_Orientation
    148, // CalendarPanel_Rows
    149, // CalendarPanel_StartIndex
    160, // CalendarViewDayItem_Date
    161, // CalendarViewDayItem_IsBlackout
    160, // CalendarViewItem_Date
    165, // ContentDialog_CloseButtonCommand
    166, // ContentDialog_CloseButtonCommandParameter
    167, // ContentDialog_CloseButtonStyle
    168, // ContentDialog_CloseButtonText
    169, // ContentDialog_DefaultButton
    170, // ContentDialog_FullSizeDesired
    171, // ContentDialog_IsPrimaryButtonEnabled
    172, // ContentDialog_IsSecondaryButtonEnabled
    173, // ContentDialog_PrimaryButtonCommand
    174, // ContentDialog_PrimaryButtonCommandParameter
    175, // ContentDialog_PrimaryButtonStyle
    176, // ContentDialog_PrimaryButtonText
    177, // ContentDialog_SecondaryButtonCommand
    178, // ContentDialog_SecondaryButtonCommandParameter
    179, // ContentDialog_SecondaryButtonStyle
    180, // ContentDialog_SecondaryButtonText
    181, // ContentDialog_Title
    182, // ContentDialog_TitleTemplate
    165, // FlyoutPresenter_IsDefaultShadowEnabled
    165, // Frame_BackStack
    166, // Frame_BackStackDepth
    167, // Frame_CacheSize
    168, // Frame_CanGoBack
    169, // Frame_CanGoForward
    170, // Frame_CurrentSourcePageType
    171, // Frame_ForwardStack
    172, // Frame_IsNavigationStackEnabled
    173, // Frame_SourcePageType
    161, // GridViewItemPresenter_CheckBrush
    162, // GridViewItemPresenter_CheckHintBrush
    163, // GridViewItemPresenter_CheckSelectingBrush
    164, // GridViewItemPresenter_ContentMargin
    165, // GridViewItemPresenter_DisabledOpacity
    166, // GridViewItemPresenter_DragBackground
    167, // GridViewItemPresenter_DragForeground
    168, // GridViewItemPresenter_DragOpacity
    169, // GridViewItemPresenter_FocusBorderBrush
    170, // GridViewItemPresenter_GridViewItemPresenterHorizontalContentAlignment
    171, // GridViewItemPresenter_GridViewItemPresenterPadding
    172, // GridViewItemPresenter_GridViewItemPresenterVerticalContentAlignment
    173, // GridViewItemPresenter_PlaceholderBackground
    174, // GridViewItemPresenter_PointerOverBackground
    175, // GridViewItemPresenter_PointerOverBackgroundMargin
    176, // GridViewItemPresenter_ReorderHintOffset
    177, // GridViewItemPresenter_SelectedBackground
    178, // GridViewItemPresenter_SelectedBorderThickness
    179, // GridViewItemPresenter_SelectedForeground
    180, // GridViewItemPresenter_SelectedPointerOverBackground
    181, // GridViewItemPresenter_SelectedPointerOverBorderBrush
    182, // GridViewItemPresenter_SelectionCheckMarkVisualEnabled
    10, // InlineCollection_ContentProperty
    143, // ItemsStackPanel_AreStickyGroupHeadersEnabled
    144, // ItemsStackPanel_CacheLength
    145, // ItemsStackPanel_GroupHeaderPlacement
    146, // ItemsStackPanel_GroupPadding
    147, // ItemsStackPanel_ItemsUpdatingScrollMode
    148, // ItemsStackPanel_Orientation
    143, // ItemsWrapGrid_AreStickyGroupHeadersEnabled
    144, // ItemsWrapGrid_CacheLength
    145, // ItemsWrapGrid_GroupHeaderPlacement
    146, // ItemsWrapGrid_GroupPadding
    147, // ItemsWrapGrid_ItemHeight
    148, // ItemsWrapGrid_ItemWidth
    149, // ItemsWrapGrid_MaximumRowsOrColumns
    150, // ItemsWrapGrid_Orientation
    161, // ListViewItemPresenter_CheckBoxBorderBrush
    162, // ListViewItemPresenter_CheckBoxBrush
    163, // ListViewItemPresenter_CheckBoxCornerRadius
    164, // ListViewItemPresenter_CheckBoxDisabledBorderBrush
    165, // ListViewItemPresenter_CheckBoxDisabledBrush
    166, // ListViewItemPresenter_CheckBoxPointerOverBorderBrush
    167, // ListViewItemPresenter_CheckBoxPointerOverBrush
    168, // ListViewItemPresenter_CheckBoxPressedBorderBrush
    169, // ListViewItemPresenter_CheckBoxPressedBrush
    170, // ListViewItemPresenter_CheckBoxSelectedBrush
    171, // ListViewItemPresenter_CheckBoxSelectedDisabledBrush
    172, // ListViewItemPresenter_CheckBoxSelectedPointerOverBrush
    173, // ListViewItemPresenter_CheckBoxSelectedPressedBrush
    174, // ListViewItemPresenter_CheckBrush
    175, // ListViewItemPresenter_CheckDisabledBrush
    176, // ListViewItemPresenter_CheckHintBrush
    177, // ListViewItemPresenter_CheckMode
    178, // ListViewItemPresenter_CheckPressedBrush
    179, // ListViewItemPresenter_CheckSelectingBrush
    180, // ListViewItemPresenter_ContentMargin
    181, // ListViewItemPresenter_DisabledOpacity
    182, // ListViewItemPresenter_DragBackground
    183, // ListViewItemPresenter_DragForeground
    184, // ListViewItemPresenter_DragOpacity
    185, // ListViewItemPresenter_FocusBorderBrush
    186, // ListViewItemPresenter_FocusSecondaryBorderBrush
    187, // ListViewItemPresenter_ListViewItemPresenterHorizontalContentAlignment
    188, // ListViewItemPresenter_ListViewItemPresenterPadding
    189, // ListViewItemPresenter_ListViewItemPresenterVerticalContentAlignment
    190, // ListViewItemPresenter_PlaceholderBackground
    191, // ListViewItemPresenter_PointerOverBackground
    192, // ListViewItemPresenter_PointerOverBackgroundMargin
    193, // ListViewItemPresenter_PointerOverBorderBrush
    194, // ListViewItemPresenter_PointerOverForeground
    195, // ListViewItemPresenter_PressedBackground
    196, // ListViewItemPresenter_ReorderHintOffset
    197, // ListViewItemPresenter_RevealBackground
    198, // ListViewItemPresenter_RevealBackgroundShowsAboveContent
    199, // ListViewItemPresenter_RevealBorderBrush
    200, // ListViewItemPresenter_RevealBorderThickness
    201, // ListViewItemPresenter_SelectedBackground
    202, // ListViewItemPresenter_SelectedBorderBrush
    203, // ListViewItemPresenter_SelectedBorderThickness
    204, // ListViewItemPresenter_SelectedDisabledBackground
    205, // ListViewItemPresenter_SelectedDisabledBorderBrush
    206, // ListViewItemPresenter_SelectedForeground
    207, // ListViewItemPresenter_SelectedInnerBorderBrush
    208, // ListViewItemPresenter_SelectedPointerOverBackground
    209, // ListViewItemPresenter_SelectedPointerOverBorderBrush
    210, // ListViewItemPresenter_SelectedPressedBackground
    211, // ListViewItemPresenter_SelectedPressedBorderBrush
    212, // ListViewItemPresenter_SelectionCheckMarkVisualEnabled
    213, // ListViewItemPresenter_SelectionIndicatorBrush
    214, // ListViewItemPresenter_SelectionIndicatorCornerRadius
    215, // ListViewItemPresenter_SelectionIndicatorDisabledBrush
    216, // ListViewItemPresenter_SelectionIndicatorMode
    217, // ListViewItemPresenter_SelectionIndicatorPointerOverBrush
    218, // ListViewItemPresenter_SelectionIndicatorPressedBrush
    219, // ListViewItemPresenter_SelectionIndicatorVisualEnabled
    160, // MenuFlyoutItem_Command
    161, // MenuFlyoutItem_CommandParameter
    162, // MenuFlyoutItem_Icon
    163, // MenuFlyoutItem_KeyboardAcceleratorTextOverride
    164, // MenuFlyoutItem_PreventDismissOnPointer
    165, // MenuFlyoutItem_TemplateSettings
    166, // MenuFlyoutItem_Text
    174, // MenuFlyoutPresenter_IsDefaultShadowEnabled
    175, // MenuFlyoutPresenter_SystemBackdrop
    176, // MenuFlyoutPresenter_TemplateSettings
    160, // MenuFlyoutSubItem_Icon
    161, // MenuFlyoutSubItem_Items
    162, // MenuFlyoutSubItem_Text
    0, // OrientedVirtualizingPanel_IsContainerGeneratedForInsert
    161, // Page_BottomAppBar
    162, // Page_Frame
    163, // Page_NavigationCacheMode
    164, // Page_TopAppBar
    165, // ScrollBar_IndicatorMode
    166, // ScrollBar_Orientation
    167, // ScrollBar_ViewportSize
    174, // Selector_IsSelectionActive
    175, // Selector_IsSynchronizedWithCurrentItem
    176, // Selector_SelectedIndex
    177, // Selector_SelectedItem
    178, // Selector_SelectedValue
    179, // Selector_SelectedValuePath
    165, // SelectorItem_IsSelected
    165, // Slider_Header
    166, // Slider_HeaderPlacement
    167, // Slider_HeaderTemplate
    168, // Slider_IntermediateValue
    169, // Slider_IsDirectionReversed
    170, // Slider_IsThumbToolTipEnabled
    171, // Slider_Orientation
    172, // Slider_SnapsTo
    173, // Slider_StepFrequency
    174, // Slider_ThumbToolTipValueConverter
    175, // Slider_TickFrequency
    176, // Slider_TickPlacement
    151, // SwapChainPanel_CompositionScaleX
    152, // SwapChainPanel_CompositionScaleY
    165, // ToolTip_HorizontalOffset
    166, // ToolTip_IsOpen
    167, // ToolTip_Placement
    168, // ToolTip_PlacementRect
    169, // ToolTip_PlacementTarget
    170, // ToolTip_TemplateSettings
    171, // ToolTip_VerticalOffset
    165, // WindowChrome_CaptionVisibility
    170, // Button_Flyout
    180, // ComboBox_Description
    181, // ComboBox_ErrorTemplate
    182, // ComboBox_HasValidationErrors
    183, // ComboBox_Header
    184, // ComboBox_HeaderPlacement
    185, // ComboBox_HeaderTemplate
    186, // ComboBox_InputValidationKind
    187, // ComboBox_InputValidationMode
    188, // ComboBox_IsDropDownOpen
    189, // ComboBox_IsEditable
    190, // ComboBox_IsSelectionBoxHighlighted
    191, // ComboBox_IsTextSearchEnabled
    192, // ComboBox_LightDismissOverlayMode
    193, // ComboBox_MaxDropDownHeight
    194, // ComboBox_PlaceholderForeground
    195, // ComboBox_PlaceholderText
    196, // ComboBox_SelectionBoxItem
    197, // ComboBox_SelectionBoxItemTemplate
    198, // ComboBox_SelectionChangedTrigger
    199, // ComboBox_TemplateSettings
    200, // ComboBox_Text
    201, // ComboBox_TextBoxStyle
    202, // ComboBox_ValidationCommand
    203, // ComboBox_ValidationContext
    204, // ComboBox_ValidationErrors
    170, // CommandBar_CommandBarOverflowPresenterStyle
    171, // CommandBar_CommandBarTemplateSettings
    172, // CommandBar_DefaultLabelPosition
    173, // CommandBar_IsDynamicOverflowEnabled
    174, // CommandBar_OverflowButtonVisibility
    175, // CommandBar_PrimaryCommands
    176, // CommandBar_SecondaryCommands
    180, // FlipView_UseTouchAnimationsForAllNavigation
    170, // HyperlinkButton_NavigateUri
    180, // ListBox_SelectedItems
    181, // ListBox_SelectionMode
    182, // ListBox_SingleSelectionFollowsFocus
    180, // ListViewBase_CanDragItems
    181, // ListViewBase_CanReorderItems
    182, // ListViewBase_DataFetchSize
    183, // ListViewBase_Footer
    184, // ListViewBase_FooterTemplate
    185, // ListViewBase_FooterTransitions
    186, // ListViewBase_Header
    187, // ListViewBase_HeaderTemplate
    188, // ListViewBase_HeaderTransitions
    189, // ListViewBase_IncrementalLoadingThreshold
    190, // ListViewBase_IncrementalLoadingTrigger
    191, // ListViewBase_IsActiveView
    192, // ListViewBase_IsItemClickEnabled
    193, // ListViewBase_IsMultiSelectCheckBoxEnabled
    194, // ListViewBase_IsSwipeEnabled
    195, // ListViewBase_IsZoomedInView
    196, // ListViewBase_ReorderMode
    197, // ListViewBase_SelectedItems
    198, // ListViewBase_SelectedRanges
    199, // ListViewBase_SelectionMode
    200, // ListViewBase_SemanticZoomOwner
    201, // ListViewBase_ShowsScrollingPlaceholders
    202, // ListViewBase_SingleSelectionFollowsFocus
    166, // ListViewBaseItem_IsDraggable
    170, // RepeatButton_Delay
    171, // RepeatButton_Interval
    0, // ScrollViewer_BringIntoViewOnFocusChange
    0, // ScrollViewer_CanContentRenderOutsideBounds
    165, // ScrollViewer_ComputedHorizontalScrollBarVisibility
    166, // ScrollViewer_ComputedVerticalScrollBarVisibility
    167, // ScrollViewer_ExtentHeight
    168, // ScrollViewer_ExtentWidth
    169, // ScrollViewer_HorizontalAnchorRatio
    170, // ScrollViewer_HorizontalOffset
    0, // ScrollViewer_HorizontalScrollBarVisibility
    0, // ScrollViewer_HorizontalScrollMode
    171, // ScrollViewer_HorizontalSnapPointsAlignment
    172, // ScrollViewer_HorizontalSnapPointsType
    0, // ScrollViewer_IsDeferredScrollingEnabled
    0, // ScrollViewer_IsHorizontalRailEnabled
    0, // ScrollViewer_IsHorizontalScrollChainingEnabled
    0, // ScrollViewer_IsScrollInertiaEnabled
    0, // ScrollViewer_IsVerticalRailEnabled
    0, // ScrollViewer_IsVerticalScrollChainingEnabled
    0, // ScrollViewer_IsZoomChainingEnabled
    0, // ScrollViewer_IsZoomInertiaEnabled
    173, // ScrollViewer_LeftHeader
    174, // ScrollViewer_MaxZoomFactor
    175, // ScrollViewer_MinZoomFactor
    176, // ScrollViewer_ReduceViewportForCoreInputViewOcclusions
    177, // ScrollViewer_ScrollableHeight
    178, // ScrollViewer_ScrollableWidth
    179, // ScrollViewer_TopHeader
    180, // ScrollViewer_TopLeftHeader
    181, // ScrollViewer_VerticalAnchorRatio
    182, // ScrollViewer_VerticalOffset
    0, // ScrollViewer_VerticalScrollBarVisibility
    0, // ScrollViewer_VerticalScrollMode
    183, // ScrollViewer_VerticalSnapPointsAlignment
    184, // ScrollViewer_VerticalSnapPointsType
    185, // ScrollViewer_ViewportHeight
    186, // ScrollViewer_ViewportWidth
    187, // ScrollViewer_ZoomFactor
    0, // ScrollViewer_ZoomMode
    188, // ScrollViewer_ZoomSnapPoints
    189, // ScrollViewer_ZoomSnapPointsType
    170, // ToggleButton_IsChecked
    171, // ToggleButton_IsThreeState
    167, // ToggleMenuFlyoutItem_IsChecked
    142, // VirtualizingStackPanel_AreScrollSnapPointsRegular
    0, // VirtualizingStackPanel_IsContainerGeneratedForInsert
    0, // VirtualizingStackPanel_IsVirtualizing
    143, // VirtualizingStackPanel_Orientation
    0, // VirtualizingStackPanel_VirtualizationMode
    142, // WrapGrid_HorizontalChildrenAlignment
    143, // WrapGrid_ItemHeight
    144, // WrapGrid_ItemWidth
    145, // WrapGrid_MaximumRowsOrColumns
    146, // WrapGrid_Orientation
    147, // WrapGrid_VerticalChildrenAlignment
    171, // AppBarButton_DynamicOverflowOrder
    172, // AppBarButton_Icon
    173, // AppBarButton_IsCompact
    174, // AppBarButton_IsInOverflow
    175, // AppBarButton_KeyboardAcceleratorTextOverride
    176, // AppBarButton_Label
    177, // AppBarButton_LabelPosition
    178, // AppBarButton_TemplateSettings
    179, // AppBarButton_UseOverflowStyle
    172, // AppBarToggleButton_DynamicOverflowOrder
    173, // AppBarToggleButton_Icon
    174, // AppBarToggleButton_IsCompact
    175, // AppBarToggleButton_IsInOverflow
    176, // AppBarToggleButton_KeyboardAcceleratorTextOverride
    177, // AppBarToggleButton_Label
    178, // AppBarToggleButton_LabelPosition
    179, // AppBarToggleButton_TemplateSettings
    180, // AppBarToggleButton_UseOverflowStyle
    167, // GridViewItem_TemplateSettings
    167, // ListViewItem_TemplateSettings
    172, // RadioButton_GroupName
    8, // BrushTransition_Duration
    8, // ScalarTransition_Duration
    79, // UIElement_AnimatedCenterPoint
    80, // UIElement_AnimatedRotation
    81, // UIElement_AnimatedRotationAxis
    82, // UIElement_AnimatedScale
    83, // UIElement_AnimatedTransformMatrix
    84, // UIElement_AnimatedTranslation
    85, // UIElement_CenterPoint
    86, // UIElement_KeepAliveCount
    87, // UIElement_RasterizationScale
    88, // UIElement_Rotation
    89, // UIElement_RotationAxis
    90, // UIElement_Scale
    91, // UIElement_ThemeShadowReceiverCount
    92, // UIElement_TransformMatrix
    93, // UIElement_Translation
    8, // Vector3Transition_Components
    9, // Vector3Transition_Duration
    17, // LinearGradientBrush_AnimatedCenterPoint
    18, // LinearGradientBrush_AnimatedRotation
    19, // LinearGradientBrush_AnimatedScale
    20, // LinearGradientBrush_AnimatedTransformMatrix
    21, // LinearGradientBrush_AnimatedTranslation
    22, // LinearGradientBrush_CenterPoint
    23, // LinearGradientBrush_Rotation
    24, // LinearGradientBrush_Scale
    25, // LinearGradientBrush_TransformMatrix
    26, // LinearGradientBrush_Translation
};

// Property names.
extern const xstring_ptr_storage c_aPropertyNames[KnownPropertyCount] =
{
    { /* empty string */ },
    XSTRING_PTR_STORAGE(L"Index"),
    XSTRING_PTR_STORAGE(L"Offset"),
    XSTRING_PTR_STORAGE(L"Kind"),
    XSTRING_PTR_STORAGE(L"Name"),
    XSTRING_PTR_STORAGE(L"AcceleratorKey"),
    XSTRING_PTR_STORAGE(L"AccessibilityView"),
    XSTRING_PTR_STORAGE(L"AccessKey"),
    XSTRING_PTR_STORAGE(L"Annotations"),
    XSTRING_PTR_STORAGE(L"AutomationControlType"),
    XSTRING_PTR_STORAGE(L"AutomationId"),
    XSTRING_PTR_STORAGE(L"ControlledPeers"),
    XSTRING_PTR_STORAGE(L"Culture"),
    XSTRING_PTR_STORAGE(L"DescribedBy"),
    XSTRING_PTR_STORAGE(L"FlowsFrom"),
    XSTRING_PTR_STORAGE(L"FlowsTo"),
    XSTRING_PTR_STORAGE(L"FullDescription"),
    XSTRING_PTR_STORAGE(L"HeadingLevel"),
    XSTRING_PTR_STORAGE(L"HelpText"),
    XSTRING_PTR_STORAGE(L"IsDataValidForForm"),
    XSTRING_PTR_STORAGE(L"IsDialog"),
    XSTRING_PTR_STORAGE(L"IsPeripheral"),
    XSTRING_PTR_STORAGE(L"IsRequiredForForm"),
    XSTRING_PTR_STORAGE(L"ItemStatus"),
    XSTRING_PTR_STORAGE(L"ItemType"),
    XSTRING_PTR_STORAGE(L"LabeledBy"),
    XSTRING_PTR_STORAGE(L"LandmarkType"),
    XSTRING_PTR_STORAGE(L"Level"),
    XSTRING_PTR_STORAGE(L"LiveSetting"),
    XSTRING_PTR_STORAGE(L"LocalizedControlType"),
    XSTRING_PTR_STORAGE(L"LocalizedLandmarkType"),
    XSTRING_PTR_STORAGE(L"Name"),
    XSTRING_PTR_STORAGE(L"PositionInSet"),
    XSTRING_PTR_STORAGE(L"SizeOfSet"),
    XSTRING_PTR_STORAGE(L"Column"),
    XSTRING_PTR_STORAGE(L"DeferredStorage"),
    XSTRING_PTR_STORAGE(L"Line"),
    XSTRING_PTR_STORAGE(L"Name"),
    XSTRING_PTR_STORAGE(L"ParseUri"),
    XSTRING_PTR_STORAGE(L"RealizingProxy"),
    XSTRING_PTR_STORAGE(L"XbfHash"),
    XSTRING_PTR_STORAGE(L"DeferredUnlinkingPayload"),
    XSTRING_PTR_STORAGE(L"IsRecycledContainer"),
    XSTRING_PTR_STORAGE(L"ItemForItemContainer"),
    XSTRING_PTR_STORAGE(L"DropoutOrder"),
    XSTRING_PTR_STORAGE(L"BaseUri"),
    XSTRING_PTR_STORAGE(L"RootObject"),
    XSTRING_PTR_STORAGE(L"TargetObject"),
    XSTRING_PTR_STORAGE(L"TargetProperty"),
    XSTRING_PTR_STORAGE(L"TextFormattingMode"),
    XSTRING_PTR_STORAGE(L"TextHintingMode"),
    XSTRING_PTR_STORAGE(L"TextRenderingMode"),
    XSTRING_PTR_STORAGE(L"KeyboardAcceleratorToolTip"),
    XSTRING_PTR_STORAGE(L"KeyboardAcceleratorToolTipObject"),
    XSTRING_PTR_STORAGE(L"Placement"),
    XSTRING_PTR_STORAGE(L"PlacementTarget"),
    XSTRING_PTR_STORAGE(L"ToolTip"),
    XSTRING_PTR_STORAGE(L"ToolTipObject"),
    XSTRING_PTR_STORAGE(L"AnnotationAlternates"),
    XSTRING_PTR_STORAGE(L"Capitals"),
    XSTRING_PTR_STORAGE(L"CapitalSpacing"),
    XSTRING_PTR_STORAGE(L"CaseSensitiveForms"),
    XSTRING_PTR_STORAGE(L"ContextualAlternates"),
    XSTRING_PTR_STORAGE(L"ContextualLigatures"),
    XSTRING_PTR_STORAGE(L"ContextualSwashes"),
    XSTRING_PTR_STORAGE(L"DiscretionaryLigatures"),
    XSTRING_PTR_STORAGE(L"EastAsianExpertForms"),
    XSTRING_PTR_STORAGE(L"EastAsianLanguage"),
    XSTRING_PTR_STORAGE(L"EastAsianWidths"),
    XSTRING_PTR_STORAGE(L"Fraction"),
    XSTRING_PTR_STORAGE(L"HistoricalForms"),
    XSTRING_PTR_STORAGE(L"HistoricalLigatures"),
    XSTRING_PTR_STORAGE(L"Kerning"),
    XSTRING_PTR_STORAGE(L"MathematicalGreek"),
    XSTRING_PTR_STORAGE(L"NumeralAlignment"),
    XSTRING_PTR_STORAGE(L"NumeralStyle"),
    XSTRING_PTR_STORAGE(L"SlashedZero"),
    XSTRING_PTR_STORAGE(L"StandardLigatures"),
    XSTRING_PTR_STORAGE(L"StandardSwashes"),
    XSTRING_PTR_STORAGE(L"StylisticAlternates"),
    XSTRING_PTR_STORAGE(L"StylisticSet1"),
    XSTRING_PTR_STORAGE(L"StylisticSet10"),
    XSTRING_PTR_STORAGE(L"StylisticSet11"),
    XSTRING_PTR_STORAGE(L"StylisticSet12"),
    XSTRING_PTR_STORAGE(L"StylisticSet13"),
    XSTRING_PTR_STORAGE(L"StylisticSet14"),
    XSTRING_PTR_STORAGE(L"StylisticSet15"),
    XSTRING_PTR_STORAGE(L"StylisticSet16"),
    XSTRING_PTR_STORAGE(L"StylisticSet17"),
    XSTRING_PTR_STORAGE(L"StylisticSet18"),
    XSTRING_PTR_STORAGE(L"StylisticSet19"),
    XSTRING_PTR_STORAGE(L"StylisticSet2"),
    XSTRING_PTR_STORAGE(L"StylisticSet20"),
    XSTRING_PTR_STORAGE(L"StylisticSet3"),
    XSTRING_PTR_STORAGE(L"StylisticSet4"),
    XSTRING_PTR_STORAGE(L"StylisticSet5"),
    XSTRING_PTR_STORAGE(L"StylisticSet6"),
    XSTRING_PTR_STORAGE(L"StylisticSet7"),
    XSTRING_PTR_STORAGE(L"StylisticSet8"),
    XSTRING_PTR_STORAGE(L"StylisticSet9"),
    XSTRING_PTR_STORAGE(L"Variants"),
    XSTRING_PTR_STORAGE(L"DataTemplateComponent"),
    XSTRING_PTR_STORAGE(L"KeyboardAcceleratorTextMinWidth"),
    XSTRING_PTR_STORAGE(L"ClipRect"),
    XSTRING_PTR_STORAGE(L"CompactRootMargin"),
    XSTRING_PTR_STORAGE(L"CompactVerticalDelta"),
    XSTRING_PTR_STORAGE(L"HiddenRootMargin"),
    XSTRING_PTR_STORAGE(L"HiddenVerticalDelta"),
    XSTRING_PTR_STORAGE(L"MinimalRootMargin"),
    XSTRING_PTR_STORAGE(L"MinimalVerticalDelta"),
    XSTRING_PTR_STORAGE(L"NegativeCompactVerticalDelta"),
    XSTRING_PTR_STORAGE(L"NegativeHiddenVerticalDelta"),
    XSTRING_PTR_STORAGE(L"NegativeMinimalVerticalDelta"),
    XSTRING_PTR_STORAGE(L"KeyboardAcceleratorTextMinWidth"),
    XSTRING_PTR_STORAGE(L"ApplicationStarted"),
    XSTRING_PTR_STORAGE(L"HighContrastAdjustment"),
    XSTRING_PTR_STORAGE(L"RequestedTheme"),
    XSTRING_PTR_STORAGE(L"RequiresPointerMode"),
    XSTRING_PTR_STORAGE(L"Resources"),
    XSTRING_PTR_STORAGE(L"RootVisual"),
    XSTRING_PTR_STORAGE(L"Element"),
    XSTRING_PTR_STORAGE(L"Type"),
    XSTRING_PTR_STORAGE(L"EventsSource"),
    XSTRING_PTR_STORAGE(L"Peer"),
    XSTRING_PTR_STORAGE(L"Type"),
    XSTRING_PTR_STORAGE(L"ChosenSuggestion"),
    XSTRING_PTR_STORAGE(L"QueryText"),
    XSTRING_PTR_STORAGE(L"SelectedItem"),
    XSTRING_PTR_STORAGE(L"Reason"),
    XSTRING_PTR_STORAGE(L"Opacity"),
    XSTRING_PTR_STORAGE(L"RelativeTransform"),
    XSTRING_PTR_STORAGE(L"Transform"),
    XSTRING_PTR_STORAGE(L"CenterX"),
    XSTRING_PTR_STORAGE(L"CenterY"),
    XSTRING_PTR_STORAGE(L"ClipRect"),
    XSTRING_PTR_STORAGE(L"HasMoreContentAfter"),
    XSTRING_PTR_STORAGE(L"HasMoreContentBefore"),
    XSTRING_PTR_STORAGE(L"HasMoreViews"),
    XSTRING_PTR_STORAGE(L"HeaderText"),
    XSTRING_PTR_STORAGE(L"MinViewWidth"),
    XSTRING_PTR_STORAGE(L"WeekDay1"),
    XSTRING_PTR_STORAGE(L"WeekDay2"),
    XSTRING_PTR_STORAGE(L"WeekDay3"),
    XSTRING_PTR_STORAGE(L"WeekDay4"),
    XSTRING_PTR_STORAGE(L"WeekDay5"),
    XSTRING_PTR_STORAGE(L"WeekDay6"),
    XSTRING_PTR_STORAGE(L"WeekDay7"),
    XSTRING_PTR_STORAGE(L"IsSourceGrouped"),
    XSTRING_PTR_STORAGE(L"ItemsPath"),
    XSTRING_PTR_STORAGE(L"Source"),
    XSTRING_PTR_STORAGE(L"View"),
    XSTRING_PTR_STORAGE(L"A"),
    XSTRING_PTR_STORAGE(L"B"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"G"),
    XSTRING_PTR_STORAGE(L"R"),
    XSTRING_PTR_STORAGE(L"KeyTime"),
    XSTRING_PTR_STORAGE(L"Value"),
    XSTRING_PTR_STORAGE(L"ActualWidth"),
    XSTRING_PTR_STORAGE(L"MaxWidth"),
    XSTRING_PTR_STORAGE(L"MinWidth"),
    XSTRING_PTR_STORAGE(L"Width"),
    XSTRING_PTR_STORAGE(L"DropDownClosedHeight"),
    XSTRING_PTR_STORAGE(L"DropDownContentMinWidth"),
    XSTRING_PTR_STORAGE(L"DropDownOffset"),
    XSTRING_PTR_STORAGE(L"DropDownOpenedHeight"),
    XSTRING_PTR_STORAGE(L"SelectedItemDirection"),
    XSTRING_PTR_STORAGE(L"ContentHeight"),
    XSTRING_PTR_STORAGE(L"EffectiveOverflowButtonVisibility"),
    XSTRING_PTR_STORAGE(L"NegativeOverflowContentHeight"),
    XSTRING_PTR_STORAGE(L"OverflowContentClipRect"),
    XSTRING_PTR_STORAGE(L"OverflowContentCompactYTranslation"),
    XSTRING_PTR_STORAGE(L"OverflowContentHeight"),
    XSTRING_PTR_STORAGE(L"OverflowContentHiddenYTranslation"),
    XSTRING_PTR_STORAGE(L"OverflowContentHorizontalOffset"),
    XSTRING_PTR_STORAGE(L"OverflowContentMaxHeight"),
    XSTRING_PTR_STORAGE(L"OverflowContentMaxWidth"),
    XSTRING_PTR_STORAGE(L"OverflowContentMinimalYTranslation"),
    XSTRING_PTR_STORAGE(L"OverflowContentMinWidth"),
    XSTRING_PTR_STORAGE(L"BottomLeft"),
    XSTRING_PTR_STORAGE(L"BottomRight"),
    XSTRING_PTR_STORAGE(L"TopLeft"),
    XSTRING_PTR_STORAGE(L"TopRight"),
    XSTRING_PTR_STORAGE(L"PropertyId"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"KeyTime"),
    XSTRING_PTR_STORAGE(L"Value"),
    XSTRING_PTR_STORAGE(L"EasingMode"),
    XSTRING_PTR_STORAGE(L"MarkupExtensionType"),
    XSTRING_PTR_STORAGE(L"NativeValue"),
    XSTRING_PTR_STORAGE(L"AllowFocusOnInteraction"),
    XSTRING_PTR_STORAGE(L"AllowFocusWhenDisabled"),
    XSTRING_PTR_STORAGE(L"AreOpenCloseAnimationsEnabled"),
    XSTRING_PTR_STORAGE(L"AttachedFlyout"),
    XSTRING_PTR_STORAGE(L"ElementSoundMode"),
    XSTRING_PTR_STORAGE(L"InputDevicePrefersPrimaryCommands"),
    XSTRING_PTR_STORAGE(L"IsOpen"),
    XSTRING_PTR_STORAGE(L"LightDismissOverlayMode"),
    XSTRING_PTR_STORAGE(L"OverlayInputPassThroughElement"),
    XSTRING_PTR_STORAGE(L"Placement"),
    XSTRING_PTR_STORAGE(L"ShouldConstrainToRootBounds"),
    XSTRING_PTR_STORAGE(L"ShowMode"),
    XSTRING_PTR_STORAGE(L"SystemBackdrop"),
    XSTRING_PTR_STORAGE(L"Target"),
    XSTRING_PTR_STORAGE(L"Weight"),
    XSTRING_PTR_STORAGE(L"Template"),
    XSTRING_PTR_STORAGE(L"Bounds"),
    XSTRING_PTR_STORAGE(L"Transform"),
    XSTRING_PTR_STORAGE(L"Color"),
    XSTRING_PTR_STORAGE(L"Offset"),
    XSTRING_PTR_STORAGE(L"GridUnitType"),
    XSTRING_PTR_STORAGE(L"Value"),
    XSTRING_PTR_STORAGE(L"ContainerStyle"),
    XSTRING_PTR_STORAGE(L"ContainerStyleSelector"),
    XSTRING_PTR_STORAGE(L"HeaderContainerStyle"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"HeaderTemplateSelector"),
    XSTRING_PTR_STORAGE(L"HidesIfEmpty"),
    XSTRING_PTR_STORAGE(L"Panel"),
    XSTRING_PTR_STORAGE(L"Foreground"),
    XSTRING_PTR_STORAGE(L"DesiredDeceleration"),
    XSTRING_PTR_STORAGE(L"DesiredExpansion"),
    XSTRING_PTR_STORAGE(L"DesiredDeceleration"),
    XSTRING_PTR_STORAGE(L"DesiredRotation"),
    XSTRING_PTR_STORAGE(L"DesiredDeceleration"),
    XSTRING_PTR_STORAGE(L"DesiredDisplacement"),
    XSTRING_PTR_STORAGE(L"Names"),
    XSTRING_PTR_STORAGE(L"NameValue"),
    XSTRING_PTR_STORAGE(L"InputValidationKind"),
    XSTRING_PTR_STORAGE(L"InputValidationMode"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"IsEnabled"),
    XSTRING_PTR_STORAGE(L"Key"),
    XSTRING_PTR_STORAGE(L"Modifiers"),
    XSTRING_PTR_STORAGE(L"ScopeOwner"),
    XSTRING_PTR_STORAGE(L"ControlPoint1"),
    XSTRING_PTR_STORAGE(L"ControlPoint2"),
    XSTRING_PTR_STORAGE(L"Bounds"),
    XSTRING_PTR_STORAGE(L"Element"),
    XSTRING_PTR_STORAGE(L"Index"),
    XSTRING_PTR_STORAGE(L"StaggerTime"),
    XSTRING_PTR_STORAGE(L"DecodedPhysicalSize"),
    XSTRING_PTR_STORAGE(L"DecodedSize"),
    XSTRING_PTR_STORAGE(L"NaturalSize"),
    XSTRING_PTR_STORAGE(L"Center"),
    XSTRING_PTR_STORAGE(L"Radius"),
    XSTRING_PTR_STORAGE(L"M11"),
    XSTRING_PTR_STORAGE(L"M12"),
    XSTRING_PTR_STORAGE(L"M21"),
    XSTRING_PTR_STORAGE(L"M22"),
    XSTRING_PTR_STORAGE(L"OffsetX"),
    XSTRING_PTR_STORAGE(L"OffsetY"),
    XSTRING_PTR_STORAGE(L"M11"),
    XSTRING_PTR_STORAGE(L"M12"),
    XSTRING_PTR_STORAGE(L"M13"),
    XSTRING_PTR_STORAGE(L"M14"),
    XSTRING_PTR_STORAGE(L"M21"),
    XSTRING_PTR_STORAGE(L"M22"),
    XSTRING_PTR_STORAGE(L"M23"),
    XSTRING_PTR_STORAGE(L"M24"),
    XSTRING_PTR_STORAGE(L"M31"),
    XSTRING_PTR_STORAGE(L"M32"),
    XSTRING_PTR_STORAGE(L"M33"),
    XSTRING_PTR_STORAGE(L"M34"),
    XSTRING_PTR_STORAGE(L"M44"),
    XSTRING_PTR_STORAGE(L"OffsetX"),
    XSTRING_PTR_STORAGE(L"OffsetY"),
    XSTRING_PTR_STORAGE(L"OffsetZ"),
    XSTRING_PTR_STORAGE(L"KeyboardAcceleratorTextMinWidth"),
    XSTRING_PTR_STORAGE(L"FlyoutContentMinWidth"),
    XSTRING_PTR_STORAGE(L"KeyTime"),
    XSTRING_PTR_STORAGE(L"Value"),
    XSTRING_PTR_STORAGE(L"SourcePageType"),
    XSTRING_PTR_STORAGE(L"CurveSegments"),
    XSTRING_PTR_STORAGE(L"BeginOffset"),
    XSTRING_PTR_STORAGE(L"ConstantCoefficient"),
    XSTRING_PTR_STORAGE(L"CubicCoefficient"),
    XSTRING_PTR_STORAGE(L"LinearCoefficient"),
    XSTRING_PTR_STORAGE(L"QuadraticCoefficient"),
    XSTRING_PTR_STORAGE(L"IsClosed"),
    XSTRING_PTR_STORAGE(L"IsFilled"),
    XSTRING_PTR_STORAGE(L"Segments"),
    XSTRING_PTR_STORAGE(L"StartPoint"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"X"),
    XSTRING_PTR_STORAGE(L"Y"),
    XSTRING_PTR_STORAGE(L"IsInContact"),
    XSTRING_PTR_STORAGE(L"IsInRange"),
    XSTRING_PTR_STORAGE(L"PointerDeviceType"),
    XSTRING_PTR_STORAGE(L"PointerId"),
    XSTRING_PTR_STORAGE(L"PointerValue"),
    XSTRING_PTR_STORAGE(L"TargetValue"),
    XSTRING_PTR_STORAGE(L"KeyTime"),
    XSTRING_PTR_STORAGE(L"Value"),
    XSTRING_PTR_STORAGE(L"Count"),
    XSTRING_PTR_STORAGE(L"DesiredFormat"),
    XSTRING_PTR_STORAGE(L"DocumentSource"),
    XSTRING_PTR_STORAGE(L"PrintedPageCount"),
    XSTRING_PTR_STORAGE(L"Path"),
    XSTRING_PTR_STORAGE(L"Height"),
    XSTRING_PTR_STORAGE(L"Width"),
    XSTRING_PTR_STORAGE(L"X"),
    XSTRING_PTR_STORAGE(L"Y"),
    XSTRING_PTR_STORAGE(L"ActualHeight"),
    XSTRING_PTR_STORAGE(L"Height"),
    XSTRING_PTR_STORAGE(L"MaxHeight"),
    XSTRING_PTR_STORAGE(L"MinHeight"),
    XSTRING_PTR_STORAGE(L"Curves"),
    XSTRING_PTR_STORAGE(L"IsDescendant"),
    XSTRING_PTR_STORAGE(L"ShouldTargetClip"),
    XSTRING_PTR_STORAGE(L"IsSealed"),
    XSTRING_PTR_STORAGE(L"Height"),
    XSTRING_PTR_STORAGE(L"Width"),
    XSTRING_PTR_STORAGE(L"CompactPaneGridLength"),
    XSTRING_PTR_STORAGE(L"NegativeOpenPaneLength"),
    XSTRING_PTR_STORAGE(L"NegativeOpenPaneLengthMinusCompactLength"),
    XSTRING_PTR_STORAGE(L"OpenPaneGridLength"),
    XSTRING_PTR_STORAGE(L"OpenPaneLength"),
    XSTRING_PTR_STORAGE(L"OpenPaneLengthMinusCompactLength"),
    XSTRING_PTR_STORAGE(L"TriggerState"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"BasedOn"),
    XSTRING_PTR_STORAGE(L"IsSealed"),
    XSTRING_PTR_STORAGE(L"Setters"),
    XSTRING_PTR_STORAGE(L"TargetType"),
    XSTRING_PTR_STORAGE(L"CachedStyleSetterProperty"),
    XSTRING_PTR_STORAGE(L"Path"),
    XSTRING_PTR_STORAGE(L"Target"),
    XSTRING_PTR_STORAGE(L"Owner"),
    XSTRING_PTR_STORAGE(L"AccessKey"),
    XSTRING_PTR_STORAGE(L"AccessKeyScopeOwner"),
    XSTRING_PTR_STORAGE(L"AllowFocusOnInteraction"),
    XSTRING_PTR_STORAGE(L"CharacterSpacing"),
    XSTRING_PTR_STORAGE(L"ExitDisplayModeOnAccessKeyInvoked"),
    XSTRING_PTR_STORAGE(L"FontFamily"),
    XSTRING_PTR_STORAGE(L"FontSize"),
    XSTRING_PTR_STORAGE(L"FontStretch"),
    XSTRING_PTR_STORAGE(L"FontStyle"),
    XSTRING_PTR_STORAGE(L"FontWeight"),
    XSTRING_PTR_STORAGE(L"Foreground"),
    XSTRING_PTR_STORAGE(L"IsAccessKeyScope"),
    XSTRING_PTR_STORAGE(L"IsTextScaleFactorEnabled"),
    XSTRING_PTR_STORAGE(L"KeyTipHorizontalOffset"),
    XSTRING_PTR_STORAGE(L"KeyTipPlacementMode"),
    XSTRING_PTR_STORAGE(L"KeyTipVerticalOffset"),
    XSTRING_PTR_STORAGE(L"Language"),
    XSTRING_PTR_STORAGE(L"TextDecorations"),
    XSTRING_PTR_STORAGE(L"Length"),
    XSTRING_PTR_STORAGE(L"StartIndex"),
    XSTRING_PTR_STORAGE(L"Owner"),
    XSTRING_PTR_STORAGE(L"Bottom"),
    XSTRING_PTR_STORAGE(L"Left"),
    XSTRING_PTR_STORAGE(L"Right"),
    XSTRING_PTR_STORAGE(L"Top"),
    XSTRING_PTR_STORAGE(L"AutoReverse"),
    XSTRING_PTR_STORAGE(L"BeginTime"),
    XSTRING_PTR_STORAGE(L"Duration"),
    XSTRING_PTR_STORAGE(L"FillBehavior"),
    XSTRING_PTR_STORAGE(L"RepeatBehavior"),
    XSTRING_PTR_STORAGE(L"SpeedRatio"),
    XSTRING_PTR_STORAGE(L"Seconds"),
    XSTRING_PTR_STORAGE(L"CurtainCurrentToOffOffset"),
    XSTRING_PTR_STORAGE(L"CurtainCurrentToOnOffset"),
    XSTRING_PTR_STORAGE(L"CurtainOffToOnOffset"),
    XSTRING_PTR_STORAGE(L"CurtainOnToOffOffset"),
    XSTRING_PTR_STORAGE(L"KnobCurrentToOffOffset"),
    XSTRING_PTR_STORAGE(L"KnobCurrentToOnOffset"),
    XSTRING_PTR_STORAGE(L"KnobOffToOnOffset"),
    XSTRING_PTR_STORAGE(L"KnobOnToOffOffset"),
    XSTRING_PTR_STORAGE(L"FromHorizontalOffset"),
    XSTRING_PTR_STORAGE(L"FromVerticalOffset"),
    XSTRING_PTR_STORAGE(L"GeneratedStaggerFunction"),
    XSTRING_PTR_STORAGE(L"ClipTransform"),
    XSTRING_PTR_STORAGE(L"ClipTransformOrigin"),
    XSTRING_PTR_STORAGE(L"CompositeTransform"),
    XSTRING_PTR_STORAGE(L"Opacity"),
    XSTRING_PTR_STORAGE(L"OpacityAnimation"),
    XSTRING_PTR_STORAGE(L"TransformOrigin"),
    XSTRING_PTR_STORAGE(L"AccessKey"),
    XSTRING_PTR_STORAGE(L"AccessKeyScopeOwner"),
    XSTRING_PTR_STORAGE(L"ActualOffset"),
    XSTRING_PTR_STORAGE(L"ActualSize"),
    XSTRING_PTR_STORAGE(L"AllowDrop"),
    XSTRING_PTR_STORAGE(L"CacheMode"),
    XSTRING_PTR_STORAGE(L"CanBeScrollAnchor"),
    XSTRING_PTR_STORAGE(L"CanDrag"),
    XSTRING_PTR_STORAGE(L"CanvasOffset"),
    XSTRING_PTR_STORAGE(L"ChildrenInternal"),
    XSTRING_PTR_STORAGE(L"Clip"),
    XSTRING_PTR_STORAGE(L"CompositeMode"),
    XSTRING_PTR_STORAGE(L"ContextFlyout"),
    XSTRING_PTR_STORAGE(L"DirectManipulationContainer"),
    XSTRING_PTR_STORAGE(L"ExitDisplayModeOnAccessKeyInvoked"),
    XSTRING_PTR_STORAGE(L"FocusState"),
    XSTRING_PTR_STORAGE(L"GlobalScaleFactor"),
    XSTRING_PTR_STORAGE(L"HandOffVisualClip"),
    XSTRING_PTR_STORAGE(L"HandOffVisualTransform"),
    XSTRING_PTR_STORAGE(L"HandOffVisualTransformMatrix3D"),
    XSTRING_PTR_STORAGE(L"HighContrastAdjustment"),
    XSTRING_PTR_STORAGE(L"IsAccessKeyScope"),
    XSTRING_PTR_STORAGE(L"IsDoubleTapEnabled"),
    XSTRING_PTR_STORAGE(L"IsGamepadFocusCandidate"),
    XSTRING_PTR_STORAGE(L"IsHitTestVisible"),
    XSTRING_PTR_STORAGE(L"IsHoldingEnabled"),
    XSTRING_PTR_STORAGE(L"IsRightTapEnabled"),
    XSTRING_PTR_STORAGE(L"IsTabStop"),
    XSTRING_PTR_STORAGE(L"IsTapEnabled"),
    XSTRING_PTR_STORAGE(L"KeyboardAcceleratorPlacementMode"),
    XSTRING_PTR_STORAGE(L"KeyboardAcceleratorPlacementTarget"),
    XSTRING_PTR_STORAGE(L"KeyboardAccelerators"),
    XSTRING_PTR_STORAGE(L"KeyTipHorizontalOffset"),
    XSTRING_PTR_STORAGE(L"KeyTipPlacementMode"),
    XSTRING_PTR_STORAGE(L"KeyTipTarget"),
    XSTRING_PTR_STORAGE(L"KeyTipVerticalOffset"),
    XSTRING_PTR_STORAGE(L"Lights"),
    XSTRING_PTR_STORAGE(L"ManipulationMode"),
    XSTRING_PTR_STORAGE(L"OffsetXAnimation"),
    XSTRING_PTR_STORAGE(L"OffsetYAnimation"),
    XSTRING_PTR_STORAGE(L"Opacity"),
    XSTRING_PTR_STORAGE(L"OpacityAnimation"),
    XSTRING_PTR_STORAGE(L"OpacityExpression"),
    XSTRING_PTR_STORAGE(L"OpacityTransition"),
    XSTRING_PTR_STORAGE(L"PointerCaptures"),
    XSTRING_PTR_STORAGE(L"Projection"),
    XSTRING_PTR_STORAGE(L"ProtectedCursor"),
    XSTRING_PTR_STORAGE(L"RenderSize"),
    XSTRING_PTR_STORAGE(L"RenderTransform"),
    XSTRING_PTR_STORAGE(L"RenderTransformOrigin"),
    XSTRING_PTR_STORAGE(L"RotationTransition"),
    XSTRING_PTR_STORAGE(L"ScaleTransition"),
    XSTRING_PTR_STORAGE(L"Shadow"),
    XSTRING_PTR_STORAGE(L"TabFocusNavigation"),
    XSTRING_PTR_STORAGE(L"TabIndex"),
    XSTRING_PTR_STORAGE(L"Transform3D"),
    XSTRING_PTR_STORAGE(L"Transitions"),
    XSTRING_PTR_STORAGE(L"TransitionTarget"),
    XSTRING_PTR_STORAGE(L"TranslationTransition"),
    XSTRING_PTR_STORAGE(L"UseLayoutRounding"),
    XSTRING_PTR_STORAGE(L"UseSystemFocusVisuals"),
    XSTRING_PTR_STORAGE(L"Visibility"),
    XSTRING_PTR_STORAGE(L"XYFocusDown"),
    XSTRING_PTR_STORAGE(L"XYFocusDownNavigationStrategy"),
    XSTRING_PTR_STORAGE(L"XYFocusKeyboardNavigation"),
    XSTRING_PTR_STORAGE(L"XYFocusLeft"),
    XSTRING_PTR_STORAGE(L"XYFocusLeftNavigationStrategy"),
    XSTRING_PTR_STORAGE(L"XYFocusRight"),
    XSTRING_PTR_STORAGE(L"XYFocusRightNavigationStrategy"),
    XSTRING_PTR_STORAGE(L"XYFocusUp"),
    XSTRING_PTR_STORAGE(L"XYFocusUpNavigationStrategy"),
    XSTRING_PTR_STORAGE(L"__DeferredSetters"),
    XSTRING_PTR_STORAGE(L"__DeferredStoryboard"),
    XSTRING_PTR_STORAGE(L"Setters"),
    XSTRING_PTR_STORAGE(L"StateTriggers"),
    XSTRING_PTR_STORAGE(L"Storyboard"),
    XSTRING_PTR_STORAGE(L"States"),
    XSTRING_PTR_STORAGE(L"Transitions"),
    XSTRING_PTR_STORAGE(L"CustomVisualStateManager"),
    XSTRING_PTR_STORAGE(L"VisualStateGroups"),
    XSTRING_PTR_STORAGE(L"From"),
    XSTRING_PTR_STORAGE(L"GeneratedDuration"),
    XSTRING_PTR_STORAGE(L"GeneratedEasingFunction"),
    XSTRING_PTR_STORAGE(L"Storyboard"),
    XSTRING_PTR_STORAGE(L"To"),
    XSTRING_PTR_STORAGE(L"Content"),
    XSTRING_PTR_STORAGE(L"SystemBackdrop"),
    XSTRING_PTR_STORAGE(L"Title"),
    XSTRING_PTR_STORAGE(L"TransparentBackground"),
    XSTRING_PTR_STORAGE(L"AccessKey"),
    XSTRING_PTR_STORAGE(L"Command"),
    XSTRING_PTR_STORAGE(L"Description"),
    XSTRING_PTR_STORAGE(L"IconSource"),
    XSTRING_PTR_STORAGE(L"KeyboardAccelerators"),
    XSTRING_PTR_STORAGE(L"Label"),
    XSTRING_PTR_STORAGE(L"MinWindowHeight"),
    XSTRING_PTR_STORAGE(L"MinWindowWidth"),
    XSTRING_PTR_STORAGE(L"IsLargeArc"),
    XSTRING_PTR_STORAGE(L"Point"),
    XSTRING_PTR_STORAGE(L"RotationAngle"),
    XSTRING_PTR_STORAGE(L"Size"),
    XSTRING_PTR_STORAGE(L"SweepDirection"),
    XSTRING_PTR_STORAGE(L"Amplitude"),
    XSTRING_PTR_STORAGE(L"Storyboard"),
    XSTRING_PTR_STORAGE(L"Point1"),
    XSTRING_PTR_STORAGE(L"Point2"),
    XSTRING_PTR_STORAGE(L"Point3"),
    XSTRING_PTR_STORAGE(L"ShowAsMonochrome"),
    XSTRING_PTR_STORAGE(L"UriSource"),
    XSTRING_PTR_STORAGE(L"PixelHeight"),
    XSTRING_PTR_STORAGE(L"PixelWidth"),
    XSTRING_PTR_STORAGE(L"HorizontalTextAlignment"),
    XSTRING_PTR_STORAGE(L"LineHeight"),
    XSTRING_PTR_STORAGE(L"LineStackingStrategy"),
    XSTRING_PTR_STORAGE(L"Margin"),
    XSTRING_PTR_STORAGE(L"TextAlignment"),
    XSTRING_PTR_STORAGE(L"Bounces"),
    XSTRING_PTR_STORAGE(L"Bounciness"),
    XSTRING_PTR_STORAGE(L"By"),
    XSTRING_PTR_STORAGE(L"EasingFunction"),
    XSTRING_PTR_STORAGE(L"EnableDependentAnimation"),
    XSTRING_PTR_STORAGE(L"From"),
    XSTRING_PTR_STORAGE(L"To"),
    XSTRING_PTR_STORAGE(L"EnableDependentAnimation"),
    XSTRING_PTR_STORAGE(L"KeyFrames"),
    XSTRING_PTR_STORAGE(L"CenterX"),
    XSTRING_PTR_STORAGE(L"CenterXAnimation"),
    XSTRING_PTR_STORAGE(L"CenterY"),
    XSTRING_PTR_STORAGE(L"CenterYAnimation"),
    XSTRING_PTR_STORAGE(L"CenterZ"),
    XSTRING_PTR_STORAGE(L"CenterZAnimation"),
    XSTRING_PTR_STORAGE(L"RotationX"),
    XSTRING_PTR_STORAGE(L"RotationXAnimation"),
    XSTRING_PTR_STORAGE(L"RotationY"),
    XSTRING_PTR_STORAGE(L"RotationYAnimation"),
    XSTRING_PTR_STORAGE(L"RotationZ"),
    XSTRING_PTR_STORAGE(L"RotationZAnimation"),
    XSTRING_PTR_STORAGE(L"ScaleX"),
    XSTRING_PTR_STORAGE(L"ScaleXAnimation"),
    XSTRING_PTR_STORAGE(L"ScaleY"),
    XSTRING_PTR_STORAGE(L"ScaleYAnimation"),
    XSTRING_PTR_STORAGE(L"ScaleZ"),
    XSTRING_PTR_STORAGE(L"ScaleZAnimation"),
    XSTRING_PTR_STORAGE(L"TranslateX"),
    XSTRING_PTR_STORAGE(L"TranslateXAnimation"),
    XSTRING_PTR_STORAGE(L"TranslateY"),
    XSTRING_PTR_STORAGE(L"TranslateYAnimation"),
    XSTRING_PTR_STORAGE(L"TranslateZ"),
    XSTRING_PTR_STORAGE(L"TranslateZAnimation"),
    XSTRING_PTR_STORAGE(L"HorizontalOffset"),
    XSTRING_PTR_STORAGE(L"VerticalOffset"),
    XSTRING_PTR_STORAGE(L"TargetType"),
    XSTRING_PTR_STORAGE(L"ResourceKey"),
    XSTRING_PTR_STORAGE(L"ExtensionInstance"),
    XSTRING_PTR_STORAGE(L"Interval"),
    XSTRING_PTR_STORAGE(L"By"),
    XSTRING_PTR_STORAGE(L"EasingFunction"),
    XSTRING_PTR_STORAGE(L"EnableDependentAnimation"),
    XSTRING_PTR_STORAGE(L"From"),
    XSTRING_PTR_STORAGE(L"To"),
    XSTRING_PTR_STORAGE(L"EnableDependentAnimation"),
    XSTRING_PTR_STORAGE(L"KeyFrames"),
    XSTRING_PTR_STORAGE(L"TimeSpan"),
    XSTRING_PTR_STORAGE(L"Children"),
    XSTRING_PTR_STORAGE(L"EasingFunction"),
    XSTRING_PTR_STORAGE(L"EasingFunction"),
    XSTRING_PTR_STORAGE(L"EasingFunction"),
    XSTRING_PTR_STORAGE(L"Edge"),
    XSTRING_PTR_STORAGE(L"Oscillations"),
    XSTRING_PTR_STORAGE(L"Springiness"),
    XSTRING_PTR_STORAGE(L"Center"),
    XSTRING_PTR_STORAGE(L"RadiusX"),
    XSTRING_PTR_STORAGE(L"RadiusY"),
    XSTRING_PTR_STORAGE(L"FromHorizontalOffset"),
    XSTRING_PTR_STORAGE(L"FromVerticalOffset"),
    XSTRING_PTR_STORAGE(L"IsStaggeringEnabled"),
    XSTRING_PTR_STORAGE(L"Actions"),
    XSTRING_PTR_STORAGE(L"RoutedEvent"),
    XSTRING_PTR_STORAGE(L"Exponent"),
    XSTRING_PTR_STORAGE(L"Content"),
    XSTRING_PTR_STORAGE(L"FlyoutPresenterStyle"),
    XSTRING_PTR_STORAGE(L"FontFamily"),
    XSTRING_PTR_STORAGE(L"FontSize"),
    XSTRING_PTR_STORAGE(L"FontStyle"),
    XSTRING_PTR_STORAGE(L"FontWeight"),
    XSTRING_PTR_STORAGE(L"Glyph"),
    XSTRING_PTR_STORAGE(L"IsTextScaleFactorEnabled"),
    XSTRING_PTR_STORAGE(L"MirroredWhenRightToLeft"),
    XSTRING_PTR_STORAGE(L"ActualHeight"),
    XSTRING_PTR_STORAGE(L"ActualTheme"),
    XSTRING_PTR_STORAGE(L"ActualWidth"),
    XSTRING_PTR_STORAGE(L"AllowFocusOnInteraction"),
    XSTRING_PTR_STORAGE(L"AllowFocusWhenDisabled"),
    XSTRING_PTR_STORAGE(L"AutomationPeerFactoryIndex"),
    XSTRING_PTR_STORAGE(L"BringIntoViewDistanceX"),
    XSTRING_PTR_STORAGE(L"BringIntoViewDistanceY"),
    XSTRING_PTR_STORAGE(L"DataContext"),
    XSTRING_PTR_STORAGE(L"EffectiveViewport"),
    XSTRING_PTR_STORAGE(L"FlowDirection"),
    XSTRING_PTR_STORAGE(L"FocusVisualMargin"),
    XSTRING_PTR_STORAGE(L"FocusVisualPrimaryBrush"),
    XSTRING_PTR_STORAGE(L"FocusVisualPrimaryThickness"),
    XSTRING_PTR_STORAGE(L"FocusVisualSecondaryBrush"),
    XSTRING_PTR_STORAGE(L"FocusVisualSecondaryThickness"),
    XSTRING_PTR_STORAGE(L"Height"),
    XSTRING_PTR_STORAGE(L"HorizontalAlignment"),
    XSTRING_PTR_STORAGE(L"IsTextScaleFactorEnabledInternal"),
    XSTRING_PTR_STORAGE(L"Language"),
    XSTRING_PTR_STORAGE(L"Margin"),
    XSTRING_PTR_STORAGE(L"MaxHeight"),
    XSTRING_PTR_STORAGE(L"MaxViewport"),
    XSTRING_PTR_STORAGE(L"MaxWidth"),
    XSTRING_PTR_STORAGE(L"MinHeight"),
    XSTRING_PTR_STORAGE(L"MinWidth"),
    XSTRING_PTR_STORAGE(L"Parent"),
    XSTRING_PTR_STORAGE(L"RequestedTheme"),
    XSTRING_PTR_STORAGE(L"Resources"),
    XSTRING_PTR_STORAGE(L"Style"),
    XSTRING_PTR_STORAGE(L"Tag"),
    XSTRING_PTR_STORAGE(L"Triggers"),
    XSTRING_PTR_STORAGE(L"VerticalAlignment"),
    XSTRING_PTR_STORAGE(L"Width"),
    XSTRING_PTR_STORAGE(L"Owner"),
    XSTRING_PTR_STORAGE(L"ActualHeight"),
    XSTRING_PTR_STORAGE(L"ActualWidth"),
    XSTRING_PTR_STORAGE(L"Children"),
    XSTRING_PTR_STORAGE(L"Height"),
    XSTRING_PTR_STORAGE(L"HorizontalAlignment"),
    XSTRING_PTR_STORAGE(L"Margin"),
    XSTRING_PTR_STORAGE(L"MaxHeight"),
    XSTRING_PTR_STORAGE(L"MaxWidth"),
    XSTRING_PTR_STORAGE(L"MinHeight"),
    XSTRING_PTR_STORAGE(L"MinWidth"),
    XSTRING_PTR_STORAGE(L"VerticalAlignment"),
    XSTRING_PTR_STORAGE(L"Width"),
    XSTRING_PTR_STORAGE(L"Children"),
    XSTRING_PTR_STORAGE(L"FillRule"),
    XSTRING_PTR_STORAGE(L"ColorInterpolationMode"),
    XSTRING_PTR_STORAGE(L"GradientStops"),
    XSTRING_PTR_STORAGE(L"MappingMode"),
    XSTRING_PTR_STORAGE(L"SpreadMethod"),
    XSTRING_PTR_STORAGE(L"DragItemsCount"),
    XSTRING_PTR_STORAGE(L"Item"),
    XSTRING_PTR_STORAGE(L"ItemsControlAutomationPeer"),
    XSTRING_PTR_STORAGE(L"TimeSpan"),
    XSTRING_PTR_STORAGE(L"EndPoint"),
    XSTRING_PTR_STORAGE(L"StartPoint"),
    XSTRING_PTR_STORAGE(L"Point"),
    XSTRING_PTR_STORAGE(L"DragItemsCount"),
    XSTRING_PTR_STORAGE(L"ProjectionMatrix"),
    XSTRING_PTR_STORAGE(L"Items"),
    XSTRING_PTR_STORAGE(L"MenuFlyoutPresenterStyle"),
    XSTRING_PTR_STORAGE(L"ClosedRatio"),
    XSTRING_PTR_STORAGE(L"Direction"),
    XSTRING_PTR_STORAGE(L"OpenedLength"),
    XSTRING_PTR_STORAGE(L"EnableDependentAnimation"),
    XSTRING_PTR_STORAGE(L"KeyFrames"),
    XSTRING_PTR_STORAGE(L"ActualHeight"),
    XSTRING_PTR_STORAGE(L"ActualWidth"),
    XSTRING_PTR_STORAGE(L"Children"),
    XSTRING_PTR_STORAGE(L"Height"),
    XSTRING_PTR_STORAGE(L"HorizontalAlignment"),
    XSTRING_PTR_STORAGE(L"Margin"),
    XSTRING_PTR_STORAGE(L"MaxHeight"),
    XSTRING_PTR_STORAGE(L"MaxWidth"),
    XSTRING_PTR_STORAGE(L"MinHeight"),
    XSTRING_PTR_STORAGE(L"MinWidth"),
    XSTRING_PTR_STORAGE(L"VerticalAlignment"),
    XSTRING_PTR_STORAGE(L"Width"),
    XSTRING_PTR_STORAGE(L"Edge"),
    XSTRING_PTR_STORAGE(L"Figures"),
    XSTRING_PTR_STORAGE(L"FillRule"),
    XSTRING_PTR_STORAGE(L"Data"),
    XSTRING_PTR_STORAGE(L"Depth"),
    XSTRING_PTR_STORAGE(L"OffsetX"),
    XSTRING_PTR_STORAGE(L"OffsetY"),
    XSTRING_PTR_STORAGE(L"OffsetFromCenter"),
    XSTRING_PTR_STORAGE(L"OpenedLength"),
    XSTRING_PTR_STORAGE(L"CenterOfRotationX"),
    XSTRING_PTR_STORAGE(L"CenterOfRotationXAnimation"),
    XSTRING_PTR_STORAGE(L"CenterOfRotationY"),
    XSTRING_PTR_STORAGE(L"CenterOfRotationYAnimation"),
    XSTRING_PTR_STORAGE(L"CenterOfRotationZ"),
    XSTRING_PTR_STORAGE(L"CenterOfRotationZAnimation"),
    XSTRING_PTR_STORAGE(L"GlobalOffsetX"),
    XSTRING_PTR_STORAGE(L"GlobalOffsetXAnimation"),
    XSTRING_PTR_STORAGE(L"GlobalOffsetY"),
    XSTRING_PTR_STORAGE(L"GlobalOffsetYAnimation"),
    XSTRING_PTR_STORAGE(L"GlobalOffsetZ"),
    XSTRING_PTR_STORAGE(L"GlobalOffsetZAnimation"),
    XSTRING_PTR_STORAGE(L"LocalOffsetX"),
    XSTRING_PTR_STORAGE(L"LocalOffsetXAnimation"),
    XSTRING_PTR_STORAGE(L"LocalOffsetY"),
    XSTRING_PTR_STORAGE(L"LocalOffsetYAnimation"),
    XSTRING_PTR_STORAGE(L"LocalOffsetZ"),
    XSTRING_PTR_STORAGE(L"LocalOffsetZAnimation"),
    XSTRING_PTR_STORAGE(L"ProjectionMatrix"),
    XSTRING_PTR_STORAGE(L"RotationX"),
    XSTRING_PTR_STORAGE(L"RotationXAnimation"),
    XSTRING_PTR_STORAGE(L"RotationY"),
    XSTRING_PTR_STORAGE(L"RotationYAnimation"),
    XSTRING_PTR_STORAGE(L"RotationZ"),
    XSTRING_PTR_STORAGE(L"RotationZAnimation"),
    XSTRING_PTR_STORAGE(L"By"),
    XSTRING_PTR_STORAGE(L"EasingFunction"),
    XSTRING_PTR_STORAGE(L"EnableDependentAnimation"),
    XSTRING_PTR_STORAGE(L"From"),
    XSTRING_PTR_STORAGE(L"To"),
    XSTRING_PTR_STORAGE(L"EnableDependentAnimation"),
    XSTRING_PTR_STORAGE(L"KeyFrames"),
    XSTRING_PTR_STORAGE(L"KeyFrames"),
    XSTRING_PTR_STORAGE(L"PointerSource"),
    XSTRING_PTR_STORAGE(L"Points"),
    XSTRING_PTR_STORAGE(L"Points"),
    XSTRING_PTR_STORAGE(L"Points"),
    XSTRING_PTR_STORAGE(L"FromHorizontalOffset"),
    XSTRING_PTR_STORAGE(L"FromVerticalOffset"),
    XSTRING_PTR_STORAGE(L"Power"),
    XSTRING_PTR_STORAGE(L"Delay"),
    XSTRING_PTR_STORAGE(L"DelayReduce"),
    XSTRING_PTR_STORAGE(L"Maximum"),
    XSTRING_PTR_STORAGE(L"Reverse"),
    XSTRING_PTR_STORAGE(L"Point1"),
    XSTRING_PTR_STORAGE(L"Point2"),
    XSTRING_PTR_STORAGE(L"RadiusX"),
    XSTRING_PTR_STORAGE(L"RadiusY"),
    XSTRING_PTR_STORAGE(L"Rect"),
    XSTRING_PTR_STORAGE(L"Mode"),
    XSTRING_PTR_STORAGE(L"PixelHeight"),
    XSTRING_PTR_STORAGE(L"PixelWidth"),
    XSTRING_PTR_STORAGE(L"IsStaggeringEnabled"),
    XSTRING_PTR_STORAGE(L"Property"),
    XSTRING_PTR_STORAGE(L"Target"),
    XSTRING_PTR_STORAGE(L"Value"),
    XSTRING_PTR_STORAGE(L"Color"),
    XSTRING_PTR_STORAGE(L"ColorAAnimation"),
    XSTRING_PTR_STORAGE(L"ColorAnimation"),
    XSTRING_PTR_STORAGE(L"ColorBAnimation"),
    XSTRING_PTR_STORAGE(L"ColorGAnimation"),
    XSTRING_PTR_STORAGE(L"ColorRAnimation"),
    XSTRING_PTR_STORAGE(L"KeySpline"),
    XSTRING_PTR_STORAGE(L"KeySpline"),
    XSTRING_PTR_STORAGE(L"KeySpline"),
    XSTRING_PTR_STORAGE(L"Kind"),
    XSTRING_PTR_STORAGE(L"IsActive"),
    XSTRING_PTR_STORAGE(L"ResourceKey"),
    XSTRING_PTR_STORAGE(L"RasterizePixelHeight"),
    XSTRING_PTR_STORAGE(L"RasterizePixelWidth"),
    XSTRING_PTR_STORAGE(L"UriSource"),
    XSTRING_PTR_STORAGE(L"Symbol"),
    XSTRING_PTR_STORAGE(L"Property"),
    XSTRING_PTR_STORAGE(L"Background"),
    XSTRING_PTR_STORAGE(L"Foreground"),
    XSTRING_PTR_STORAGE(L"Ranges"),
    XSTRING_PTR_STORAGE(L"ResourceKey"),
    XSTRING_PTR_STORAGE(L"Receivers"),
    XSTRING_PTR_STORAGE(L"AlignmentX"),
    XSTRING_PTR_STORAGE(L"AlignmentY"),
    XSTRING_PTR_STORAGE(L"Stretch"),
    XSTRING_PTR_STORAGE(L"FallbackColor"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"Converter"),
    XSTRING_PTR_STORAGE(L"ConverterLanguage"),
    XSTRING_PTR_STORAGE(L"ConverterParameter"),
    XSTRING_PTR_STORAGE(L"ElementName"),
    XSTRING_PTR_STORAGE(L"FallbackValue"),
    XSTRING_PTR_STORAGE(L"Mode"),
    XSTRING_PTR_STORAGE(L"Path"),
    XSTRING_PTR_STORAGE(L"RelativeSource"),
    XSTRING_PTR_STORAGE(L"Source"),
    XSTRING_PTR_STORAGE(L"TargetNullValue"),
    XSTRING_PTR_STORAGE(L"UpdateSourceTrigger"),
    XSTRING_PTR_STORAGE(L"AutoPlay"),
    XSTRING_PTR_STORAGE(L"CreateOptions"),
    XSTRING_PTR_STORAGE(L"DecodePixelHeight"),
    XSTRING_PTR_STORAGE(L"DecodePixelType"),
    XSTRING_PTR_STORAGE(L"DecodePixelWidth"),
    XSTRING_PTR_STORAGE(L"IsAnimatedBitmap"),
    XSTRING_PTR_STORAGE(L"IsPlaying"),
    XSTRING_PTR_STORAGE(L"UriSource"),
    XSTRING_PTR_STORAGE(L"Background"),
    XSTRING_PTR_STORAGE(L"BackgroundSizing"),
    XSTRING_PTR_STORAGE(L"BackgroundTransition"),
    XSTRING_PTR_STORAGE(L"BorderBrush"),
    XSTRING_PTR_STORAGE(L"BorderThickness"),
    XSTRING_PTR_STORAGE(L"Child"),
    XSTRING_PTR_STORAGE(L"ChildTransitions"),
    XSTRING_PTR_STORAGE(L"CornerRadius"),
    XSTRING_PTR_STORAGE(L"Padding"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"CenterX"),
    XSTRING_PTR_STORAGE(L"CenterXAnimation"),
    XSTRING_PTR_STORAGE(L"CenterY"),
    XSTRING_PTR_STORAGE(L"CenterYAnimation"),
    XSTRING_PTR_STORAGE(L"RotateAnimation"),
    XSTRING_PTR_STORAGE(L"Rotation"),
    XSTRING_PTR_STORAGE(L"ScaleX"),
    XSTRING_PTR_STORAGE(L"ScaleXAnimation"),
    XSTRING_PTR_STORAGE(L"ScaleY"),
    XSTRING_PTR_STORAGE(L"ScaleYAnimation"),
    XSTRING_PTR_STORAGE(L"SkewX"),
    XSTRING_PTR_STORAGE(L"SkewXAnimation"),
    XSTRING_PTR_STORAGE(L"SkewY"),
    XSTRING_PTR_STORAGE(L"SkewYAnimation"),
    XSTRING_PTR_STORAGE(L"TranslateX"),
    XSTRING_PTR_STORAGE(L"TranslateXAnimation"),
    XSTRING_PTR_STORAGE(L"TranslateY"),
    XSTRING_PTR_STORAGE(L"TranslateYAnimation"),
    XSTRING_PTR_STORAGE(L"Background"),
    XSTRING_PTR_STORAGE(L"BackgroundSizing"),
    XSTRING_PTR_STORAGE(L"BackgroundTransition"),
    XSTRING_PTR_STORAGE(L"BorderBrush"),
    XSTRING_PTR_STORAGE(L"BorderThickness"),
    XSTRING_PTR_STORAGE(L"CharacterSpacing"),
    XSTRING_PTR_STORAGE(L"Content"),
    XSTRING_PTR_STORAGE(L"ContentTemplate"),
    XSTRING_PTR_STORAGE(L"ContentTemplateSelector"),
    XSTRING_PTR_STORAGE(L"ContentTransitions"),
    XSTRING_PTR_STORAGE(L"CornerRadius"),
    XSTRING_PTR_STORAGE(L"FontFamily"),
    XSTRING_PTR_STORAGE(L"FontSize"),
    XSTRING_PTR_STORAGE(L"FontStretch"),
    XSTRING_PTR_STORAGE(L"FontStyle"),
    XSTRING_PTR_STORAGE(L"FontWeight"),
    XSTRING_PTR_STORAGE(L"Foreground"),
    XSTRING_PTR_STORAGE(L"HorizontalContentAlignment"),
    XSTRING_PTR_STORAGE(L"IsTextScaleFactorEnabled"),
    XSTRING_PTR_STORAGE(L"LineHeight"),
    XSTRING_PTR_STORAGE(L"LineStackingStrategy"),
    XSTRING_PTR_STORAGE(L"MaxLines"),
    XSTRING_PTR_STORAGE(L"OpticalMarginAlignment"),
    XSTRING_PTR_STORAGE(L"Padding"),
    XSTRING_PTR_STORAGE(L"SelectedContentTemplate"),
    XSTRING_PTR_STORAGE(L"TextLineBounds"),
    XSTRING_PTR_STORAGE(L"TextWrapping"),
    XSTRING_PTR_STORAGE(L"VerticalContentAlignment"),
    XSTRING_PTR_STORAGE(L"Background"),
    XSTRING_PTR_STORAGE(L"BackgroundSizing"),
    XSTRING_PTR_STORAGE(L"BorderBrush"),
    XSTRING_PTR_STORAGE(L"BorderThickness"),
    XSTRING_PTR_STORAGE(L"CharacterSpacing"),
    XSTRING_PTR_STORAGE(L"CornerRadius"),
    XSTRING_PTR_STORAGE(L"DefaultStyleKey"),
    XSTRING_PTR_STORAGE(L"DefaultStyleResourceUri"),
    XSTRING_PTR_STORAGE(L"ElementSoundMode"),
    XSTRING_PTR_STORAGE(L"FocusTargetDescendant"),
    XSTRING_PTR_STORAGE(L"FontFamily"),
    XSTRING_PTR_STORAGE(L"FontSize"),
    XSTRING_PTR_STORAGE(L"FontStretch"),
    XSTRING_PTR_STORAGE(L"FontStyle"),
    XSTRING_PTR_STORAGE(L"FontWeight"),
    XSTRING_PTR_STORAGE(L"Foreground"),
    XSTRING_PTR_STORAGE(L"HorizontalContentAlignment"),
    XSTRING_PTR_STORAGE(L"IsEnabled"),
    XSTRING_PTR_STORAGE(L"IsFocusEngaged"),
    XSTRING_PTR_STORAGE(L"IsFocusEngagementEnabled"),
    XSTRING_PTR_STORAGE(L"IsTemplateFocusTarget"),
    XSTRING_PTR_STORAGE(L"IsTemplateKeyTipTarget"),
    XSTRING_PTR_STORAGE(L"IsTextScaleFactorEnabled"),
    XSTRING_PTR_STORAGE(L"Padding"),
    XSTRING_PTR_STORAGE(L"RequiresPointer"),
    XSTRING_PTR_STORAGE(L"TabNavigation"),
    XSTRING_PTR_STORAGE(L"Template"),
    XSTRING_PTR_STORAGE(L"TemplateKeyTipTarget"),
    XSTRING_PTR_STORAGE(L"VerticalContentAlignment"),
    XSTRING_PTR_STORAGE(L"DisplayMemberPath"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"TargetName"),
    XSTRING_PTR_STORAGE(L"Direction"),
    XSTRING_PTR_STORAGE(L"TargetName"),
    XSTRING_PTR_STORAGE(L"ToOffset"),
    XSTRING_PTR_STORAGE(L"EntranceTarget"),
    XSTRING_PTR_STORAGE(L"EntranceTargetName"),
    XSTRING_PTR_STORAGE(L"ExitTarget"),
    XSTRING_PTR_STORAGE(L"ExitTargetName"),
    XSTRING_PTR_STORAGE(L"EntranceTarget"),
    XSTRING_PTR_STORAGE(L"EntranceTargetName"),
    XSTRING_PTR_STORAGE(L"ExitTarget"),
    XSTRING_PTR_STORAGE(L"ExitTargetName"),
    XSTRING_PTR_STORAGE(L"TargetName"),
    XSTRING_PTR_STORAGE(L"TargetName"),
    XSTRING_PTR_STORAGE(L"TargetName"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ColorFontPaletteIndex"),
    XSTRING_PTR_STORAGE(L"Fill"),
    XSTRING_PTR_STORAGE(L"FontRenderingEmSize"),
    XSTRING_PTR_STORAGE(L"FontUri"),
    XSTRING_PTR_STORAGE(L"Indices"),
    XSTRING_PTR_STORAGE(L"IsColorFontEnabled"),
    XSTRING_PTR_STORAGE(L"OriginX"),
    XSTRING_PTR_STORAGE(L"OriginY"),
    XSTRING_PTR_STORAGE(L"StyleSimulations"),
    XSTRING_PTR_STORAGE(L"UnicodeString"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"Foreground"),
    XSTRING_PTR_STORAGE(L"NineGrid"),
    XSTRING_PTR_STORAGE(L"Source"),
    XSTRING_PTR_STORAGE(L"Stretch"),
    XSTRING_PTR_STORAGE(L"ImageSource"),
    XSTRING_PTR_STORAGE(L"Child"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"Footer"),
    XSTRING_PTR_STORAGE(L"FooterTemplate"),
    XSTRING_PTR_STORAGE(L"FooterTransitions"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"HeaderTransitions"),
    XSTRING_PTR_STORAGE(L"ItemsPanel"),
    XSTRING_PTR_STORAGE(L"Padding"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"EndPoint"),
    XSTRING_PTR_STORAGE(L"StartPoint"),
    XSTRING_PTR_STORAGE(L"Matrix"),
    XSTRING_PTR_STORAGE(L"IsFullWindow"),
    XSTRING_PTR_STORAGE(L"MediaPlayer"),
    XSTRING_PTR_STORAGE(L"Stretch"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"Background"),
    XSTRING_PTR_STORAGE(L"BackgroundTransition"),
    XSTRING_PTR_STORAGE(L"BorderBrushProtected"),
    XSTRING_PTR_STORAGE(L"BorderThicknessProtected"),
    XSTRING_PTR_STORAGE(L"Children"),
    XSTRING_PTR_STORAGE(L"ChildrenTransitions"),
    XSTRING_PTR_STORAGE(L"CornerRadiusProtected"),
    XSTRING_PTR_STORAGE(L"IsIgnoringTransitions"),
    XSTRING_PTR_STORAGE(L"IsItemsHost"),
    XSTRING_PTR_STORAGE(L"Inlines"),
    XSTRING_PTR_STORAGE(L"TextIndent"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"TargetName"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"TargetName"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"FromHorizontalOffset"),
    XSTRING_PTR_STORAGE(L"FromVerticalOffset"),
    XSTRING_PTR_STORAGE(L"TargetName"),
    XSTRING_PTR_STORAGE(L"TargetName"),
    XSTRING_PTR_STORAGE(L"ActualPlacement"),
    XSTRING_PTR_STORAGE(L"AssociatedFlyout"),
    XSTRING_PTR_STORAGE(L"Child"),
    XSTRING_PTR_STORAGE(L"ChildTransitions"),
    XSTRING_PTR_STORAGE(L"DesiredPlacement"),
    XSTRING_PTR_STORAGE(L"DisableOverlayIsLightDismissCheck"),
    XSTRING_PTR_STORAGE(L"HorizontalOffset"),
    XSTRING_PTR_STORAGE(L"IsApplicationBarService"),
    XSTRING_PTR_STORAGE(L"IsContentDialog"),
    XSTRING_PTR_STORAGE(L"IsLightDismissEnabled"),
    XSTRING_PTR_STORAGE(L"IsOpen"),
    XSTRING_PTR_STORAGE(L"IsSubMenu"),
    XSTRING_PTR_STORAGE(L"LightDismissOverlayMode"),
    XSTRING_PTR_STORAGE(L"OverlayElement"),
    XSTRING_PTR_STORAGE(L"OverlayInputPassThroughElement"),
    XSTRING_PTR_STORAGE(L"PlacementTarget"),
    XSTRING_PTR_STORAGE(L"ShouldConstrainToRootBounds"),
    XSTRING_PTR_STORAGE(L"SystemBackdrop"),
    XSTRING_PTR_STORAGE(L"VerticalOffset"),
    XSTRING_PTR_STORAGE(L"Count"),
    XSTRING_PTR_STORAGE(L"Duration"),
    XSTRING_PTR_STORAGE(L"FromHorizontalOffset"),
    XSTRING_PTR_STORAGE(L"FromVerticalOffset"),
    XSTRING_PTR_STORAGE(L"TargetName"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"MergedDictionaries"),
    XSTRING_PTR_STORAGE(L"Source"),
    XSTRING_PTR_STORAGE(L"ThemeDictionaries"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"Blocks"),
    XSTRING_PTR_STORAGE(L"CharacterSpacing"),
    XSTRING_PTR_STORAGE(L"FontFamily"),
    XSTRING_PTR_STORAGE(L"FontSize"),
    XSTRING_PTR_STORAGE(L"FontStretch"),
    XSTRING_PTR_STORAGE(L"FontStyle"),
    XSTRING_PTR_STORAGE(L"FontWeight"),
    XSTRING_PTR_STORAGE(L"Foreground"),
    XSTRING_PTR_STORAGE(L"HasOverflowContent"),
    XSTRING_PTR_STORAGE(L"HorizontalTextAlignment"),
    XSTRING_PTR_STORAGE(L"IsColorFontEnabled"),
    XSTRING_PTR_STORAGE(L"IsTextScaleFactorEnabled"),
    XSTRING_PTR_STORAGE(L"IsTextSelectionEnabled"),
    XSTRING_PTR_STORAGE(L"IsTextTrimmed"),
    XSTRING_PTR_STORAGE(L"LineHeight"),
    XSTRING_PTR_STORAGE(L"LineStackingStrategy"),
    XSTRING_PTR_STORAGE(L"MaxLines"),
    XSTRING_PTR_STORAGE(L"OpticalMarginAlignment"),
    XSTRING_PTR_STORAGE(L"OverflowContentTarget"),
    XSTRING_PTR_STORAGE(L"Padding"),
    XSTRING_PTR_STORAGE(L"SelectedText"),
    XSTRING_PTR_STORAGE(L"SelectionFlyout"),
    XSTRING_PTR_STORAGE(L"SelectionHighlightColor"),
    XSTRING_PTR_STORAGE(L"TextAlignment"),
    XSTRING_PTR_STORAGE(L"TextDecorations"),
    XSTRING_PTR_STORAGE(L"TextHighlighters"),
    XSTRING_PTR_STORAGE(L"TextIndent"),
    XSTRING_PTR_STORAGE(L"TextLineBounds"),
    XSTRING_PTR_STORAGE(L"TextReadingOrder"),
    XSTRING_PTR_STORAGE(L"TextTrimming"),
    XSTRING_PTR_STORAGE(L"TextWrapping"),
    XSTRING_PTR_STORAGE(L"HasOverflowContent"),
    XSTRING_PTR_STORAGE(L"IsTextTrimmed"),
    XSTRING_PTR_STORAGE(L"MaxLines"),
    XSTRING_PTR_STORAGE(L"OverflowContentTarget"),
    XSTRING_PTR_STORAGE(L"Padding"),
    XSTRING_PTR_STORAGE(L"Angle"),
    XSTRING_PTR_STORAGE(L"AngleAnimation"),
    XSTRING_PTR_STORAGE(L"CenterX"),
    XSTRING_PTR_STORAGE(L"CenterXAnimation"),
    XSTRING_PTR_STORAGE(L"CenterY"),
    XSTRING_PTR_STORAGE(L"CenterYAnimation"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"FlowDirection"),
    XSTRING_PTR_STORAGE(L"Text"),
    XSTRING_PTR_STORAGE(L"CenterX"),
    XSTRING_PTR_STORAGE(L"CenterXAnimation"),
    XSTRING_PTR_STORAGE(L"CenterY"),
    XSTRING_PTR_STORAGE(L"CenterYAnimation"),
    XSTRING_PTR_STORAGE(L"ScaleX"),
    XSTRING_PTR_STORAGE(L"ScaleXAnimation"),
    XSTRING_PTR_STORAGE(L"ScaleY"),
    XSTRING_PTR_STORAGE(L"ScaleYAnimation"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"IsSealed"),
    XSTRING_PTR_STORAGE(L"Fill"),
    XSTRING_PTR_STORAGE(L"GeometryTransform"),
    XSTRING_PTR_STORAGE(L"Stretch"),
    XSTRING_PTR_STORAGE(L"Stroke"),
    XSTRING_PTR_STORAGE(L"StrokeDashArray"),
    XSTRING_PTR_STORAGE(L"StrokeDashCap"),
    XSTRING_PTR_STORAGE(L"StrokeDashOffset"),
    XSTRING_PTR_STORAGE(L"StrokeEndLineCap"),
    XSTRING_PTR_STORAGE(L"StrokeLineJoin"),
    XSTRING_PTR_STORAGE(L"StrokeMiterLimit"),
    XSTRING_PTR_STORAGE(L"StrokeStartLineCap"),
    XSTRING_PTR_STORAGE(L"StrokeThickness"),
    XSTRING_PTR_STORAGE(L"AngleX"),
    XSTRING_PTR_STORAGE(L"AngleXAnimation"),
    XSTRING_PTR_STORAGE(L"AngleY"),
    XSTRING_PTR_STORAGE(L"AngleYAnimation"),
    XSTRING_PTR_STORAGE(L"CenterX"),
    XSTRING_PTR_STORAGE(L"CenterXAnimation"),
    XSTRING_PTR_STORAGE(L"CenterY"),
    XSTRING_PTR_STORAGE(L"CenterYAnimation"),
    XSTRING_PTR_STORAGE(L"Inlines"),
    XSTRING_PTR_STORAGE(L"ClosedLength"),
    XSTRING_PTR_STORAGE(L"ClosedTarget"),
    XSTRING_PTR_STORAGE(L"ClosedTargetName"),
    XSTRING_PTR_STORAGE(L"ContentTarget"),
    XSTRING_PTR_STORAGE(L"ContentTargetName"),
    XSTRING_PTR_STORAGE(L"ContentTranslationDirection"),
    XSTRING_PTR_STORAGE(L"ContentTranslationOffset"),
    XSTRING_PTR_STORAGE(L"OffsetFromCenter"),
    XSTRING_PTR_STORAGE(L"OpenedLength"),
    XSTRING_PTR_STORAGE(L"OpenedTarget"),
    XSTRING_PTR_STORAGE(L"OpenedTargetName"),
    XSTRING_PTR_STORAGE(L"ClosedLength"),
    XSTRING_PTR_STORAGE(L"ClosedTarget"),
    XSTRING_PTR_STORAGE(L"ClosedTargetName"),
    XSTRING_PTR_STORAGE(L"ContentTarget"),
    XSTRING_PTR_STORAGE(L"ContentTargetName"),
    XSTRING_PTR_STORAGE(L"ContentTranslationDirection"),
    XSTRING_PTR_STORAGE(L"ContentTranslationOffset"),
    XSTRING_PTR_STORAGE(L"OffsetFromCenter"),
    XSTRING_PTR_STORAGE(L"OpenedLength"),
    XSTRING_PTR_STORAGE(L"OpenedTarget"),
    XSTRING_PTR_STORAGE(L"OpenedTargetName"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"Children"),
    XSTRING_PTR_STORAGE(L"IsEssential"),
    XSTRING_PTR_STORAGE(L"TargetName"),
    XSTRING_PTR_STORAGE(L"TargetProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"FromHorizontalOffset"),
    XSTRING_PTR_STORAGE(L"FromVerticalOffset"),
    XSTRING_PTR_STORAGE(L"TargetName"),
    XSTRING_PTR_STORAGE(L"TargetName"),
    XSTRING_PTR_STORAGE(L"ToHorizontalOffset"),
    XSTRING_PTR_STORAGE(L"ToVerticalOffset"),
    XSTRING_PTR_STORAGE(L"CharacterSpacing"),
    XSTRING_PTR_STORAGE(L"FontFamily"),
    XSTRING_PTR_STORAGE(L"FontSize"),
    XSTRING_PTR_STORAGE(L"FontStretch"),
    XSTRING_PTR_STORAGE(L"FontStyle"),
    XSTRING_PTR_STORAGE(L"FontWeight"),
    XSTRING_PTR_STORAGE(L"Foreground"),
    XSTRING_PTR_STORAGE(L"HorizontalTextAlignment"),
    XSTRING_PTR_STORAGE(L"Inlines"),
    XSTRING_PTR_STORAGE(L"IsColorFontEnabled"),
    XSTRING_PTR_STORAGE(L"IsTextScaleFactorEnabled"),
    XSTRING_PTR_STORAGE(L"IsTextSelectionEnabled"),
    XSTRING_PTR_STORAGE(L"IsTextTrimmed"),
    XSTRING_PTR_STORAGE(L"LineHeight"),
    XSTRING_PTR_STORAGE(L"LineStackingStrategy"),
    XSTRING_PTR_STORAGE(L"MaxLines"),
    XSTRING_PTR_STORAGE(L"OpticalMarginAlignment"),
    XSTRING_PTR_STORAGE(L"Padding"),
    XSTRING_PTR_STORAGE(L"SelectedText"),
    XSTRING_PTR_STORAGE(L"SelectionFlyout"),
    XSTRING_PTR_STORAGE(L"SelectionHighlightColor"),
    XSTRING_PTR_STORAGE(L"Text"),
    XSTRING_PTR_STORAGE(L"TextAlignment"),
    XSTRING_PTR_STORAGE(L"TextDecorations"),
    XSTRING_PTR_STORAGE(L"TextHighlighters"),
    XSTRING_PTR_STORAGE(L"TextLineBounds"),
    XSTRING_PTR_STORAGE(L"TextReadingOrder"),
    XSTRING_PTR_STORAGE(L"TextTrimming"),
    XSTRING_PTR_STORAGE(L"TextWrapping"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"Children"),
    XSTRING_PTR_STORAGE(L"Value"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"X"),
    XSTRING_PTR_STORAGE(L"XAnimation"),
    XSTRING_PTR_STORAGE(L"Y"),
    XSTRING_PTR_STORAGE(L"YAnimation"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"Child"),
    XSTRING_PTR_STORAGE(L"Stretch"),
    XSTRING_PTR_STORAGE(L"StretchDirection"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ActiveStoryboards"),
    XSTRING_PTR_STORAGE(L"ActiveTransitions"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"DeferredSetters"),
    XSTRING_PTR_STORAGE(L"DeferredStateTriggers"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"DynamicOverflowOrder"),
    XSTRING_PTR_STORAGE(L"IsCompact"),
    XSTRING_PTR_STORAGE(L"IsInOverflow"),
    XSTRING_PTR_STORAGE(L"UseOverflowStyle"),
    XSTRING_PTR_STORAGE(L"ShowAsMonochrome"),
    XSTRING_PTR_STORAGE(L"UriSource"),
    XSTRING_PTR_STORAGE(L"CalendarIdentifier"),
    XSTRING_PTR_STORAGE(L"CalendarViewStyle"),
    XSTRING_PTR_STORAGE(L"Date"),
    XSTRING_PTR_STORAGE(L"DateFormat"),
    XSTRING_PTR_STORAGE(L"DayOfWeekFormat"),
    XSTRING_PTR_STORAGE(L"Description"),
    XSTRING_PTR_STORAGE(L"DisplayMode"),
    XSTRING_PTR_STORAGE(L"FirstDayOfWeek"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderPlacement"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"IsCalendarOpen"),
    XSTRING_PTR_STORAGE(L"IsGroupLabelVisible"),
    XSTRING_PTR_STORAGE(L"IsOutOfScopeEnabled"),
    XSTRING_PTR_STORAGE(L"IsTodayHighlighted"),
    XSTRING_PTR_STORAGE(L"LightDismissOverlayMode"),
    XSTRING_PTR_STORAGE(L"MaxDate"),
    XSTRING_PTR_STORAGE(L"MinDate"),
    XSTRING_PTR_STORAGE(L"PlaceholderText"),
    XSTRING_PTR_STORAGE(L"BlackoutBackground"),
    XSTRING_PTR_STORAGE(L"BlackoutForeground"),
    XSTRING_PTR_STORAGE(L"BlackoutStrikethroughBrush"),
    XSTRING_PTR_STORAGE(L"CalendarIdentifier"),
    XSTRING_PTR_STORAGE(L"CalendarItemBackground"),
    XSTRING_PTR_STORAGE(L"CalendarItemBorderBrush"),
    XSTRING_PTR_STORAGE(L"CalendarItemBorderThickness"),
    XSTRING_PTR_STORAGE(L"CalendarItemCornerRadius"),
    XSTRING_PTR_STORAGE(L"CalendarItemDisabledBackground"),
    XSTRING_PTR_STORAGE(L"CalendarItemForeground"),
    XSTRING_PTR_STORAGE(L"CalendarItemHoverBackground"),
    XSTRING_PTR_STORAGE(L"CalendarItemPressedBackground"),
    XSTRING_PTR_STORAGE(L"CalendarViewDayItemStyle"),
    XSTRING_PTR_STORAGE(L"DayItemFontFamily"),
    XSTRING_PTR_STORAGE(L"DayItemFontSize"),
    XSTRING_PTR_STORAGE(L"DayItemFontStyle"),
    XSTRING_PTR_STORAGE(L"DayItemFontWeight"),
    XSTRING_PTR_STORAGE(L"DayItemMargin"),
    XSTRING_PTR_STORAGE(L"DayOfWeekFormat"),
    XSTRING_PTR_STORAGE(L"DisabledForeground"),
    XSTRING_PTR_STORAGE(L"DisplayMode"),
    XSTRING_PTR_STORAGE(L"FirstDayOfWeek"),
    XSTRING_PTR_STORAGE(L"FirstOfMonthLabelFontFamily"),
    XSTRING_PTR_STORAGE(L"FirstOfMonthLabelFontSize"),
    XSTRING_PTR_STORAGE(L"FirstOfMonthLabelFontStyle"),
    XSTRING_PTR_STORAGE(L"FirstOfMonthLabelFontWeight"),
    XSTRING_PTR_STORAGE(L"FirstOfMonthLabelMargin"),
    XSTRING_PTR_STORAGE(L"FirstOfYearDecadeLabelFontFamily"),
    XSTRING_PTR_STORAGE(L"FirstOfYearDecadeLabelFontSize"),
    XSTRING_PTR_STORAGE(L"FirstOfYearDecadeLabelFontStyle"),
    XSTRING_PTR_STORAGE(L"FirstOfYearDecadeLabelFontWeight"),
    XSTRING_PTR_STORAGE(L"FirstOfYearDecadeLabelMargin"),
    XSTRING_PTR_STORAGE(L"FocusBorderBrush"),
    XSTRING_PTR_STORAGE(L"HorizontalDayItemAlignment"),
    XSTRING_PTR_STORAGE(L"HorizontalFirstOfMonthLabelAlignment"),
    XSTRING_PTR_STORAGE(L"HoverBorderBrush"),
    XSTRING_PTR_STORAGE(L"IsGroupLabelVisible"),
    XSTRING_PTR_STORAGE(L"IsOutOfScopeEnabled"),
    XSTRING_PTR_STORAGE(L"IsTodayHighlighted"),
    XSTRING_PTR_STORAGE(L"MaxDate"),
    XSTRING_PTR_STORAGE(L"MinDate"),
    XSTRING_PTR_STORAGE(L"MonthYearItemFontFamily"),
    XSTRING_PTR_STORAGE(L"MonthYearItemFontSize"),
    XSTRING_PTR_STORAGE(L"MonthYearItemFontStyle"),
    XSTRING_PTR_STORAGE(L"MonthYearItemFontWeight"),
    XSTRING_PTR_STORAGE(L"MonthYearItemMargin"),
    XSTRING_PTR_STORAGE(L"NumberOfWeeksInView"),
    XSTRING_PTR_STORAGE(L"OutOfScopeBackground"),
    XSTRING_PTR_STORAGE(L"OutOfScopeForeground"),
    XSTRING_PTR_STORAGE(L"OutOfScopeHoverForeground"),
    XSTRING_PTR_STORAGE(L"OutOfScopePressedForeground"),
    XSTRING_PTR_STORAGE(L"PressedBorderBrush"),
    XSTRING_PTR_STORAGE(L"PressedForeground"),
    XSTRING_PTR_STORAGE(L"SelectedBorderBrush"),
    XSTRING_PTR_STORAGE(L"SelectedDates"),
    XSTRING_PTR_STORAGE(L"SelectedDisabledBorderBrush"),
    XSTRING_PTR_STORAGE(L"SelectedDisabledForeground"),
    XSTRING_PTR_STORAGE(L"SelectedForeground"),
    XSTRING_PTR_STORAGE(L"SelectedHoverBorderBrush"),
    XSTRING_PTR_STORAGE(L"SelectedHoverForeground"),
    XSTRING_PTR_STORAGE(L"SelectedPressedBorderBrush"),
    XSTRING_PTR_STORAGE(L"SelectedPressedForeground"),
    XSTRING_PTR_STORAGE(L"SelectionMode"),
    XSTRING_PTR_STORAGE(L"TemplateSettings"),
    XSTRING_PTR_STORAGE(L"TodayBackground"),
    XSTRING_PTR_STORAGE(L"TodayBlackoutBackground"),
    XSTRING_PTR_STORAGE(L"TodayBlackoutForeground"),
    XSTRING_PTR_STORAGE(L"TodayDisabledBackground"),
    XSTRING_PTR_STORAGE(L"TodayFontWeight"),
    XSTRING_PTR_STORAGE(L"TodayForeground"),
    XSTRING_PTR_STORAGE(L"TodayHoverBackground"),
    XSTRING_PTR_STORAGE(L"TodayHoverBorderBrush"),
    XSTRING_PTR_STORAGE(L"TodayPressedBackground"),
    XSTRING_PTR_STORAGE(L"TodayPressedBorderBrush"),
    XSTRING_PTR_STORAGE(L"TodaySelectedInnerBorderBrush"),
    XSTRING_PTR_STORAGE(L"VerticalDayItemAlignment"),
    XSTRING_PTR_STORAGE(L"VerticalFirstOfMonthLabelAlignment"),
    XSTRING_PTR_STORAGE(L"Left"),
    XSTRING_PTR_STORAGE(L"Top"),
    XSTRING_PTR_STORAGE(L"ZIndex"),
    XSTRING_PTR_STORAGE(L"Accent"),
    XSTRING_PTR_STORAGE(L"AltHigh"),
    XSTRING_PTR_STORAGE(L"AltLow"),
    XSTRING_PTR_STORAGE(L"AltMedium"),
    XSTRING_PTR_STORAGE(L"AltMediumHigh"),
    XSTRING_PTR_STORAGE(L"AltMediumLow"),
    XSTRING_PTR_STORAGE(L"BaseHigh"),
    XSTRING_PTR_STORAGE(L"BaseLow"),
    XSTRING_PTR_STORAGE(L"BaseMedium"),
    XSTRING_PTR_STORAGE(L"BaseMediumHigh"),
    XSTRING_PTR_STORAGE(L"BaseMediumLow"),
    XSTRING_PTR_STORAGE(L"ChromeAltLow"),
    XSTRING_PTR_STORAGE(L"ChromeBlackHigh"),
    XSTRING_PTR_STORAGE(L"ChromeBlackLow"),
    XSTRING_PTR_STORAGE(L"ChromeBlackMedium"),
    XSTRING_PTR_STORAGE(L"ChromeBlackMediumLow"),
    XSTRING_PTR_STORAGE(L"ChromeDisabledHigh"),
    XSTRING_PTR_STORAGE(L"ChromeDisabledLow"),
    XSTRING_PTR_STORAGE(L"ChromeGray"),
    XSTRING_PTR_STORAGE(L"ChromeHigh"),
    XSTRING_PTR_STORAGE(L"ChromeLow"),
    XSTRING_PTR_STORAGE(L"ChromeMedium"),
    XSTRING_PTR_STORAGE(L"ChromeMediumLow"),
    XSTRING_PTR_STORAGE(L"ChromeWhite"),
    XSTRING_PTR_STORAGE(L"ErrorText"),
    XSTRING_PTR_STORAGE(L"ListLow"),
    XSTRING_PTR_STORAGE(L"ListMedium"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"CommandingContainer"),
    XSTRING_PTR_STORAGE(L"CommandingTarget"),
    XSTRING_PTR_STORAGE(L"Content"),
    XSTRING_PTR_STORAGE(L"ContentTemplate"),
    XSTRING_PTR_STORAGE(L"ContentTemplateSelector"),
    XSTRING_PTR_STORAGE(L"ContentTransitions"),
    XSTRING_PTR_STORAGE(L"SelectedContentTemplate"),
    XSTRING_PTR_STORAGE(L"CalendarIdentifier"),
    XSTRING_PTR_STORAGE(L"Date"),
    XSTRING_PTR_STORAGE(L"DayFormat"),
    XSTRING_PTR_STORAGE(L"DayVisible"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderPlacement"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"LightDismissOverlayMode"),
    XSTRING_PTR_STORAGE(L"MaxYear"),
    XSTRING_PTR_STORAGE(L"MinYear"),
    XSTRING_PTR_STORAGE(L"MonthFormat"),
    XSTRING_PTR_STORAGE(L"MonthVisible"),
    XSTRING_PTR_STORAGE(L"Orientation"),
    XSTRING_PTR_STORAGE(L"SelectedDate"),
    XSTRING_PTR_STORAGE(L"YearFormat"),
    XSTRING_PTR_STORAGE(L"YearVisible"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"FontFamily"),
    XSTRING_PTR_STORAGE(L"FontSize"),
    XSTRING_PTR_STORAGE(L"FontStyle"),
    XSTRING_PTR_STORAGE(L"FontWeight"),
    XSTRING_PTR_STORAGE(L"Glyph"),
    XSTRING_PTR_STORAGE(L"IsTextScaleFactorEnabled"),
    XSTRING_PTR_STORAGE(L"MirroredWhenRightToLeft"),
    XSTRING_PTR_STORAGE(L"BackgroundSizing"),
    XSTRING_PTR_STORAGE(L"BorderBrush"),
    XSTRING_PTR_STORAGE(L"BorderThickness"),
    XSTRING_PTR_STORAGE(L"Column"),
    XSTRING_PTR_STORAGE(L"ColumnDefinitions"),
    XSTRING_PTR_STORAGE(L"ColumnSpacing"),
    XSTRING_PTR_STORAGE(L"ColumnSpan"),
    XSTRING_PTR_STORAGE(L"CornerRadius"),
    XSTRING_PTR_STORAGE(L"Padding"),
    XSTRING_PTR_STORAGE(L"Row"),
    XSTRING_PTR_STORAGE(L"RowDefinitions"),
    XSTRING_PTR_STORAGE(L"RowSpacing"),
    XSTRING_PTR_STORAGE(L"RowSpan"),
    XSTRING_PTR_STORAGE(L"DefaultSectionIndex"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"IsActiveView"),
    XSTRING_PTR_STORAGE(L"IsZoomedInView"),
    XSTRING_PTR_STORAGE(L"Orientation"),
    XSTRING_PTR_STORAGE(L"SectionHeaders"),
    XSTRING_PTR_STORAGE(L"Sections"),
    XSTRING_PTR_STORAGE(L"SectionsInView"),
    XSTRING_PTR_STORAGE(L"SemanticZoomOwner"),
    XSTRING_PTR_STORAGE(L"ContentTemplate"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"IsHeaderInteractive"),
    XSTRING_PTR_STORAGE(L"ElementSoundMode"),
    XSTRING_PTR_STORAGE(L"FocusState"),
    XSTRING_PTR_STORAGE(L"IsTabStop"),
    XSTRING_PTR_STORAGE(L"NavigateUri"),
    XSTRING_PTR_STORAGE(L"TabIndex"),
    XSTRING_PTR_STORAGE(L"UnderlineStyle"),
    XSTRING_PTR_STORAGE(L"XYFocusDown"),
    XSTRING_PTR_STORAGE(L"XYFocusDownNavigationStrategy"),
    XSTRING_PTR_STORAGE(L"XYFocusLeft"),
    XSTRING_PTR_STORAGE(L"XYFocusLeftNavigationStrategy"),
    XSTRING_PTR_STORAGE(L"XYFocusRight"),
    XSTRING_PTR_STORAGE(L"XYFocusRightNavigationStrategy"),
    XSTRING_PTR_STORAGE(L"XYFocusUp"),
    XSTRING_PTR_STORAGE(L"XYFocusUpNavigationStrategy"),
    XSTRING_PTR_STORAGE(L"IconSource"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"DisplayMemberPath"),
    XSTRING_PTR_STORAGE(L"GroupStyle"),
    XSTRING_PTR_STORAGE(L"GroupStyleSelector"),
    XSTRING_PTR_STORAGE(L"IsGrouping"),
    XSTRING_PTR_STORAGE(L"IsItemsHostInvalid"),
    XSTRING_PTR_STORAGE(L"ItemContainerStyle"),
    XSTRING_PTR_STORAGE(L"ItemContainerStyleSelector"),
    XSTRING_PTR_STORAGE(L"ItemContainerTransitions"),
    XSTRING_PTR_STORAGE(L"Items"),
    XSTRING_PTR_STORAGE(L"ItemsHost"),
    XSTRING_PTR_STORAGE(L"ItemsPanel"),
    XSTRING_PTR_STORAGE(L"ItemsSource"),
    XSTRING_PTR_STORAGE(L"ItemTemplate"),
    XSTRING_PTR_STORAGE(L"ItemTemplateSelector"),
    XSTRING_PTR_STORAGE(L"X1"),
    XSTRING_PTR_STORAGE(L"X2"),
    XSTRING_PTR_STORAGE(L"Y1"),
    XSTRING_PTR_STORAGE(L"Y2"),
    XSTRING_PTR_STORAGE(L"AreTransportControlsEnabled"),
    XSTRING_PTR_STORAGE(L"AutoPlay"),
    XSTRING_PTR_STORAGE(L"IsFullWindow"),
    XSTRING_PTR_STORAGE(L"MediaPlayer"),
    XSTRING_PTR_STORAGE(L"PosterSource"),
    XSTRING_PTR_STORAGE(L"Source"),
    XSTRING_PTR_STORAGE(L"Stretch"),
    XSTRING_PTR_STORAGE(L"TransportControls"),
    XSTRING_PTR_STORAGE(L"FastPlayFallbackBehaviour"),
    XSTRING_PTR_STORAGE(L"IsCompact"),
    XSTRING_PTR_STORAGE(L"IsFastForwardButtonVisible"),
    XSTRING_PTR_STORAGE(L"IsFastForwardEnabled"),
    XSTRING_PTR_STORAGE(L"IsFastRewindButtonVisible"),
    XSTRING_PTR_STORAGE(L"IsFastRewindEnabled"),
    XSTRING_PTR_STORAGE(L"IsNextTrackButtonVisible"),
    XSTRING_PTR_STORAGE(L"IsPlaybackRateButtonVisible"),
    XSTRING_PTR_STORAGE(L"IsPlaybackRateEnabled"),
    XSTRING_PTR_STORAGE(L"IsPreviousTrackButtonVisible"),
    XSTRING_PTR_STORAGE(L"IsRepeatButtonVisible"),
    XSTRING_PTR_STORAGE(L"IsRepeatEnabled"),
    XSTRING_PTR_STORAGE(L"IsSeekBarVisible"),
    XSTRING_PTR_STORAGE(L"IsSeekEnabled"),
    XSTRING_PTR_STORAGE(L"IsSkipBackwardButtonVisible"),
    XSTRING_PTR_STORAGE(L"IsSkipBackwardEnabled"),
    XSTRING_PTR_STORAGE(L"IsSkipForwardButtonVisible"),
    XSTRING_PTR_STORAGE(L"IsSkipForwardEnabled"),
    XSTRING_PTR_STORAGE(L"IsStopButtonVisible"),
    XSTRING_PTR_STORAGE(L"IsStopEnabled"),
    XSTRING_PTR_STORAGE(L"IsVolumeButtonVisible"),
    XSTRING_PTR_STORAGE(L"IsVolumeEnabled"),
    XSTRING_PTR_STORAGE(L"IsZoomButtonVisible"),
    XSTRING_PTR_STORAGE(L"IsZoomEnabled"),
    XSTRING_PTR_STORAGE(L"ShowAndHideAutomatically"),
    XSTRING_PTR_STORAGE(L"AreStickyGroupHeadersEnabledBase"),
    XSTRING_PTR_STORAGE(L"CanPasteClipboardContent"),
    XSTRING_PTR_STORAGE(L"Description"),
    XSTRING_PTR_STORAGE(L"ErrorTemplate"),
    XSTRING_PTR_STORAGE(L"HasValidationErrors"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderPlacement"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"InputScope"),
    XSTRING_PTR_STORAGE(L"InputValidationKind"),
    XSTRING_PTR_STORAGE(L"InputValidationMode"),
    XSTRING_PTR_STORAGE(L"IsPasswordRevealButtonEnabled"),
    XSTRING_PTR_STORAGE(L"MaxLength"),
    XSTRING_PTR_STORAGE(L"Password"),
    XSTRING_PTR_STORAGE(L"PasswordChar"),
    XSTRING_PTR_STORAGE(L"PasswordRevealMode"),
    XSTRING_PTR_STORAGE(L"PlaceholderText"),
    XSTRING_PTR_STORAGE(L"PreventKeyboardDisplayOnProgrammaticFocus"),
    XSTRING_PTR_STORAGE(L"SelectionFlyout"),
    XSTRING_PTR_STORAGE(L"SelectionHighlightColor"),
    XSTRING_PTR_STORAGE(L"TextReadingOrder"),
    XSTRING_PTR_STORAGE(L"ValidationCommand"),
    XSTRING_PTR_STORAGE(L"ValidationContext"),
    XSTRING_PTR_STORAGE(L"ValidationErrors"),
    XSTRING_PTR_STORAGE(L"Data"),
    XSTRING_PTR_STORAGE(L"Data"),
    XSTRING_PTR_STORAGE(L"FillRule"),
    XSTRING_PTR_STORAGE(L"Points"),
    XSTRING_PTR_STORAGE(L"FillRule"),
    XSTRING_PTR_STORAGE(L"Points"),
    XSTRING_PTR_STORAGE(L"LargeChange"),
    XSTRING_PTR_STORAGE(L"Maximum"),
    XSTRING_PTR_STORAGE(L"Minimum"),
    XSTRING_PTR_STORAGE(L"SmallChange"),
    XSTRING_PTR_STORAGE(L"Value"),
    XSTRING_PTR_STORAGE(L"RadiusX"),
    XSTRING_PTR_STORAGE(L"RadiusY"),
    XSTRING_PTR_STORAGE(L"Above"),
    XSTRING_PTR_STORAGE(L"AlignBottomWith"),
    XSTRING_PTR_STORAGE(L"AlignBottomWithPanel"),
    XSTRING_PTR_STORAGE(L"AlignHorizontalCenterWith"),
    XSTRING_PTR_STORAGE(L"AlignHorizontalCenterWithPanel"),
    XSTRING_PTR_STORAGE(L"AlignLeftWith"),
    XSTRING_PTR_STORAGE(L"AlignLeftWithPanel"),
    XSTRING_PTR_STORAGE(L"AlignRightWith"),
    XSTRING_PTR_STORAGE(L"AlignRightWithPanel"),
    XSTRING_PTR_STORAGE(L"AlignTopWith"),
    XSTRING_PTR_STORAGE(L"AlignTopWithPanel"),
    XSTRING_PTR_STORAGE(L"AlignVerticalCenterWith"),
    XSTRING_PTR_STORAGE(L"AlignVerticalCenterWithPanel"),
    XSTRING_PTR_STORAGE(L"BackgroundSizing"),
    XSTRING_PTR_STORAGE(L"Below"),
    XSTRING_PTR_STORAGE(L"BorderBrush"),
    XSTRING_PTR_STORAGE(L"BorderThickness"),
    XSTRING_PTR_STORAGE(L"CornerRadius"),
    XSTRING_PTR_STORAGE(L"LeftOf"),
    XSTRING_PTR_STORAGE(L"Padding"),
    XSTRING_PTR_STORAGE(L"RightOf"),
    XSTRING_PTR_STORAGE(L"AcceptsReturn"),
    XSTRING_PTR_STORAGE(L"CharacterCasing"),
    XSTRING_PTR_STORAGE(L"ClipboardCopyFormat"),
    XSTRING_PTR_STORAGE(L"Description"),
    XSTRING_PTR_STORAGE(L"DesiredCandidateWindowAlignment"),
    XSTRING_PTR_STORAGE(L"DisabledFormattingAccelerators"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderPlacement"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"HorizontalTextAlignment"),
    XSTRING_PTR_STORAGE(L"InputScope"),
    XSTRING_PTR_STORAGE(L"IsColorFontEnabled"),
    XSTRING_PTR_STORAGE(L"IsReadOnly"),
    XSTRING_PTR_STORAGE(L"IsSpellCheckEnabled"),
    XSTRING_PTR_STORAGE(L"IsTelemetryCollectionEnabled"),
    XSTRING_PTR_STORAGE(L"IsTextPredictionEnabled"),
    XSTRING_PTR_STORAGE(L"MaxLength"),
    XSTRING_PTR_STORAGE(L"PlaceholderText"),
    XSTRING_PTR_STORAGE(L"PreventKeyboardDisplayOnProgrammaticFocus"),
    XSTRING_PTR_STORAGE(L"ProofingMenuFlyout"),
    XSTRING_PTR_STORAGE(L"SelectionFlyout"),
    XSTRING_PTR_STORAGE(L"SelectionHighlightColor"),
    XSTRING_PTR_STORAGE(L"SelectionHighlightColorWhenNotFocused"),
    XSTRING_PTR_STORAGE(L"TextAlignment"),
    XSTRING_PTR_STORAGE(L"TextReadingOrder"),
    XSTRING_PTR_STORAGE(L"TextWrapping"),
    XSTRING_PTR_STORAGE(L"CanContentRenderOutsideBounds"),
    XSTRING_PTR_STORAGE(L"SizesContentToTemplatedParent"),
    XSTRING_PTR_STORAGE(L"CanChangeViews"),
    XSTRING_PTR_STORAGE(L"IsZoomedInViewActive"),
    XSTRING_PTR_STORAGE(L"IsZoomOutButtonEnabled"),
    XSTRING_PTR_STORAGE(L"ZoomedInView"),
    XSTRING_PTR_STORAGE(L"ZoomedOutView"),
    XSTRING_PTR_STORAGE(L"CompactPaneLength"),
    XSTRING_PTR_STORAGE(L"Content"),
    XSTRING_PTR_STORAGE(L"DisplayMode"),
    XSTRING_PTR_STORAGE(L"IsPaneOpen"),
    XSTRING_PTR_STORAGE(L"LightDismissOverlayMode"),
    XSTRING_PTR_STORAGE(L"OpenPaneLength"),
    XSTRING_PTR_STORAGE(L"Pane"),
    XSTRING_PTR_STORAGE(L"PaneBackground"),
    XSTRING_PTR_STORAGE(L"PanePlacement"),
    XSTRING_PTR_STORAGE(L"TemplateSettings"),
    XSTRING_PTR_STORAGE(L"AreScrollSnapPointsRegular"),
    XSTRING_PTR_STORAGE(L"BackgroundSizing"),
    XSTRING_PTR_STORAGE(L"BorderBrush"),
    XSTRING_PTR_STORAGE(L"BorderThickness"),
    XSTRING_PTR_STORAGE(L"CornerRadius"),
    XSTRING_PTR_STORAGE(L"Orientation"),
    XSTRING_PTR_STORAGE(L"Padding"),
    XSTRING_PTR_STORAGE(L"Spacing"),
    XSTRING_PTR_STORAGE(L"Symbol"),
    XSTRING_PTR_STORAGE(L"AcceptsReturn"),
    XSTRING_PTR_STORAGE(L"CanPasteClipboardContent"),
    XSTRING_PTR_STORAGE(L"CanRedo"),
    XSTRING_PTR_STORAGE(L"CanUndo"),
    XSTRING_PTR_STORAGE(L"CharacterCasing"),
    XSTRING_PTR_STORAGE(L"Description"),
    XSTRING_PTR_STORAGE(L"DesiredCandidateWindowAlignment"),
    XSTRING_PTR_STORAGE(L"ErrorTemplate"),
    XSTRING_PTR_STORAGE(L"HasValidationErrors"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderPlacement"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"HorizontalTextAlignment"),
    XSTRING_PTR_STORAGE(L"InputScope"),
    XSTRING_PTR_STORAGE(L"InputValidationKind"),
    XSTRING_PTR_STORAGE(L"InputValidationMode"),
    XSTRING_PTR_STORAGE(L"IsColorFontEnabled"),
    XSTRING_PTR_STORAGE(L"IsCoreDesktopPopupMenuEnabled"),
    XSTRING_PTR_STORAGE(L"IsReadOnly"),
    XSTRING_PTR_STORAGE(L"IsSpellCheckEnabled"),
    XSTRING_PTR_STORAGE(L"IsTelemetryCollectionEnabled"),
    XSTRING_PTR_STORAGE(L"IsTextPredictionEnabled"),
    XSTRING_PTR_STORAGE(L"MaxLength"),
    XSTRING_PTR_STORAGE(L"PlaceholderForeground"),
    XSTRING_PTR_STORAGE(L"PlaceholderText"),
    XSTRING_PTR_STORAGE(L"PreventEditFocusLoss"),
    XSTRING_PTR_STORAGE(L"PreventKeyboardDisplayOnProgrammaticFocus"),
    XSTRING_PTR_STORAGE(L"ProofingMenuFlyout"),
    XSTRING_PTR_STORAGE(L"SelectedText"),
    XSTRING_PTR_STORAGE(L"SelectionFlyout"),
    XSTRING_PTR_STORAGE(L"SelectionHighlightColor"),
    XSTRING_PTR_STORAGE(L"SelectionHighlightColorWhenNotFocused"),
    XSTRING_PTR_STORAGE(L"SelectionLength"),
    XSTRING_PTR_STORAGE(L"SelectionStart"),
    XSTRING_PTR_STORAGE(L"Text"),
    XSTRING_PTR_STORAGE(L"TextAlignment"),
    XSTRING_PTR_STORAGE(L"TextReadingOrder"),
    XSTRING_PTR_STORAGE(L"TextWrapping"),
    XSTRING_PTR_STORAGE(L"ValidationCommand"),
    XSTRING_PTR_STORAGE(L"ValidationContext"),
    XSTRING_PTR_STORAGE(L"ValidationErrors"),
    XSTRING_PTR_STORAGE(L"IsDragging"),
    XSTRING_PTR_STORAGE(L"Fill"),
    XSTRING_PTR_STORAGE(L"ClockIdentifier"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderPlacement"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"LightDismissOverlayMode"),
    XSTRING_PTR_STORAGE(L"MinuteIncrement"),
    XSTRING_PTR_STORAGE(L"SelectedTime"),
    XSTRING_PTR_STORAGE(L"Time"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderPlacement"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"IsOn"),
    XSTRING_PTR_STORAGE(L"OffContent"),
    XSTRING_PTR_STORAGE(L"OffContentTemplate"),
    XSTRING_PTR_STORAGE(L"OnContent"),
    XSTRING_PTR_STORAGE(L"OnContentTemplate"),
    XSTRING_PTR_STORAGE(L"TemplateSettings"),
    XSTRING_PTR_STORAGE(L"Content"),
    XSTRING_PTR_STORAGE(L"ColumnSpan"),
    XSTRING_PTR_STORAGE(L"HorizontalChildrenAlignment"),
    XSTRING_PTR_STORAGE(L"ItemHeight"),
    XSTRING_PTR_STORAGE(L"ItemWidth"),
    XSTRING_PTR_STORAGE(L"MaximumRowsOrColumns"),
    XSTRING_PTR_STORAGE(L"Orientation"),
    XSTRING_PTR_STORAGE(L"RowSpan"),
    XSTRING_PTR_STORAGE(L"VerticalChildrenAlignment"),
    XSTRING_PTR_STORAGE(L"ClosedDisplayMode"),
    XSTRING_PTR_STORAGE(L"IsOpen"),
    XSTRING_PTR_STORAGE(L"IsSticky"),
    XSTRING_PTR_STORAGE(L"LightDismissOverlayMode"),
    XSTRING_PTR_STORAGE(L"TemplateSettings"),
    XSTRING_PTR_STORAGE(L"DynamicOverflowOrder"),
    XSTRING_PTR_STORAGE(L"IsCompact"),
    XSTRING_PTR_STORAGE(L"IsInOverflow"),
    XSTRING_PTR_STORAGE(L"UseOverflowStyle"),
    XSTRING_PTR_STORAGE(L"AutoMaximizeSuggestionArea"),
    XSTRING_PTR_STORAGE(L"Description"),
    XSTRING_PTR_STORAGE(L"ErrorTemplate"),
    XSTRING_PTR_STORAGE(L"HasValidationErrors"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderPlacement"),
    XSTRING_PTR_STORAGE(L"InputValidationKind"),
    XSTRING_PTR_STORAGE(L"InputValidationMode"),
    XSTRING_PTR_STORAGE(L"IsSuggestionListOpen"),
    XSTRING_PTR_STORAGE(L"LightDismissOverlayMode"),
    XSTRING_PTR_STORAGE(L"MaxSuggestionListHeight"),
    XSTRING_PTR_STORAGE(L"PlaceholderText"),
    XSTRING_PTR_STORAGE(L"QueryIcon"),
    XSTRING_PTR_STORAGE(L"Text"),
    XSTRING_PTR_STORAGE(L"TextBoxStyle"),
    XSTRING_PTR_STORAGE(L"TextMemberPath"),
    XSTRING_PTR_STORAGE(L"UpdateTextOnSelect"),
    XSTRING_PTR_STORAGE(L"ValidationCommand"),
    XSTRING_PTR_STORAGE(L"ValidationContext"),
    XSTRING_PTR_STORAGE(L"ValidationErrors"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"ClickMode"),
    XSTRING_PTR_STORAGE(L"Command"),
    XSTRING_PTR_STORAGE(L"CommandParameter"),
    XSTRING_PTR_STORAGE(L"IsPointerOver"),
    XSTRING_PTR_STORAGE(L"IsPressed"),
    XSTRING_PTR_STORAGE(L"CacheLength"),
    XSTRING_PTR_STORAGE(L"Cols"),
    XSTRING_PTR_STORAGE(L"ItemMinHeight"),
    XSTRING_PTR_STORAGE(L"ItemMinWidth"),
    XSTRING_PTR_STORAGE(L"Orientation"),
    XSTRING_PTR_STORAGE(L"Rows"),
    XSTRING_PTR_STORAGE(L"StartIndex"),
    XSTRING_PTR_STORAGE(L"Date"),
    XSTRING_PTR_STORAGE(L"IsBlackout"),
    XSTRING_PTR_STORAGE(L"Date"),
    XSTRING_PTR_STORAGE(L"CloseButtonCommand"),
    XSTRING_PTR_STORAGE(L"CloseButtonCommandParameter"),
    XSTRING_PTR_STORAGE(L"CloseButtonStyle"),
    XSTRING_PTR_STORAGE(L"CloseButtonText"),
    XSTRING_PTR_STORAGE(L"DefaultButton"),
    XSTRING_PTR_STORAGE(L"FullSizeDesired"),
    XSTRING_PTR_STORAGE(L"IsPrimaryButtonEnabled"),
    XSTRING_PTR_STORAGE(L"IsSecondaryButtonEnabled"),
    XSTRING_PTR_STORAGE(L"PrimaryButtonCommand"),
    XSTRING_PTR_STORAGE(L"PrimaryButtonCommandParameter"),
    XSTRING_PTR_STORAGE(L"PrimaryButtonStyle"),
    XSTRING_PTR_STORAGE(L"PrimaryButtonText"),
    XSTRING_PTR_STORAGE(L"SecondaryButtonCommand"),
    XSTRING_PTR_STORAGE(L"SecondaryButtonCommandParameter"),
    XSTRING_PTR_STORAGE(L"SecondaryButtonStyle"),
    XSTRING_PTR_STORAGE(L"SecondaryButtonText"),
    XSTRING_PTR_STORAGE(L"Title"),
    XSTRING_PTR_STORAGE(L"TitleTemplate"),
    XSTRING_PTR_STORAGE(L"IsDefaultShadowEnabled"),
    XSTRING_PTR_STORAGE(L"BackStack"),
    XSTRING_PTR_STORAGE(L"BackStackDepth"),
    XSTRING_PTR_STORAGE(L"CacheSize"),
    XSTRING_PTR_STORAGE(L"CanGoBack"),
    XSTRING_PTR_STORAGE(L"CanGoForward"),
    XSTRING_PTR_STORAGE(L"CurrentSourcePageType"),
    XSTRING_PTR_STORAGE(L"ForwardStack"),
    XSTRING_PTR_STORAGE(L"IsNavigationStackEnabled"),
    XSTRING_PTR_STORAGE(L"SourcePageType"),
    XSTRING_PTR_STORAGE(L"CheckBrush"),
    XSTRING_PTR_STORAGE(L"CheckHintBrush"),
    XSTRING_PTR_STORAGE(L"CheckSelectingBrush"),
    XSTRING_PTR_STORAGE(L"ContentMargin"),
    XSTRING_PTR_STORAGE(L"DisabledOpacity"),
    XSTRING_PTR_STORAGE(L"DragBackground"),
    XSTRING_PTR_STORAGE(L"DragForeground"),
    XSTRING_PTR_STORAGE(L"DragOpacity"),
    XSTRING_PTR_STORAGE(L"FocusBorderBrush"),
    XSTRING_PTR_STORAGE(L"GridViewItemPresenterHorizontalContentAlignment"),
    XSTRING_PTR_STORAGE(L"GridViewItemPresenterPadding"),
    XSTRING_PTR_STORAGE(L"GridViewItemPresenterVerticalContentAlignment"),
    XSTRING_PTR_STORAGE(L"PlaceholderBackground"),
    XSTRING_PTR_STORAGE(L"PointerOverBackground"),
    XSTRING_PTR_STORAGE(L"PointerOverBackgroundMargin"),
    XSTRING_PTR_STORAGE(L"ReorderHintOffset"),
    XSTRING_PTR_STORAGE(L"SelectedBackground"),
    XSTRING_PTR_STORAGE(L"SelectedBorderThickness"),
    XSTRING_PTR_STORAGE(L"SelectedForeground"),
    XSTRING_PTR_STORAGE(L"SelectedPointerOverBackground"),
    XSTRING_PTR_STORAGE(L"SelectedPointerOverBorderBrush"),
    XSTRING_PTR_STORAGE(L"SelectionCheckMarkVisualEnabled"),
    XSTRING_PTR_STORAGE(L"ContentProperty"),
    XSTRING_PTR_STORAGE(L"AreStickyGroupHeadersEnabled"),
    XSTRING_PTR_STORAGE(L"CacheLength"),
    XSTRING_PTR_STORAGE(L"GroupHeaderPlacement"),
    XSTRING_PTR_STORAGE(L"GroupPadding"),
    XSTRING_PTR_STORAGE(L"ItemsUpdatingScrollMode"),
    XSTRING_PTR_STORAGE(L"Orientation"),
    XSTRING_PTR_STORAGE(L"AreStickyGroupHeadersEnabled"),
    XSTRING_PTR_STORAGE(L"CacheLength"),
    XSTRING_PTR_STORAGE(L"GroupHeaderPlacement"),
    XSTRING_PTR_STORAGE(L"GroupPadding"),
    XSTRING_PTR_STORAGE(L"ItemHeight"),
    XSTRING_PTR_STORAGE(L"ItemWidth"),
    XSTRING_PTR_STORAGE(L"MaximumRowsOrColumns"),
    XSTRING_PTR_STORAGE(L"Orientation"),
    XSTRING_PTR_STORAGE(L"CheckBoxBorderBrush"),
    XSTRING_PTR_STORAGE(L"CheckBoxBrush"),
    XSTRING_PTR_STORAGE(L"CheckBoxCornerRadius"),
    XSTRING_PTR_STORAGE(L"CheckBoxDisabledBorderBrush"),
    XSTRING_PTR_STORAGE(L"CheckBoxDisabledBrush"),
    XSTRING_PTR_STORAGE(L"CheckBoxPointerOverBorderBrush"),
    XSTRING_PTR_STORAGE(L"CheckBoxPointerOverBrush"),
    XSTRING_PTR_STORAGE(L"CheckBoxPressedBorderBrush"),
    XSTRING_PTR_STORAGE(L"CheckBoxPressedBrush"),
    XSTRING_PTR_STORAGE(L"CheckBoxSelectedBrush"),
    XSTRING_PTR_STORAGE(L"CheckBoxSelectedDisabledBrush"),
    XSTRING_PTR_STORAGE(L"CheckBoxSelectedPointerOverBrush"),
    XSTRING_PTR_STORAGE(L"CheckBoxSelectedPressedBrush"),
    XSTRING_PTR_STORAGE(L"CheckBrush"),
    XSTRING_PTR_STORAGE(L"CheckDisabledBrush"),
    XSTRING_PTR_STORAGE(L"CheckHintBrush"),
    XSTRING_PTR_STORAGE(L"CheckMode"),
    XSTRING_PTR_STORAGE(L"CheckPressedBrush"),
    XSTRING_PTR_STORAGE(L"CheckSelectingBrush"),
    XSTRING_PTR_STORAGE(L"ContentMargin"),
    XSTRING_PTR_STORAGE(L"DisabledOpacity"),
    XSTRING_PTR_STORAGE(L"DragBackground"),
    XSTRING_PTR_STORAGE(L"DragForeground"),
    XSTRING_PTR_STORAGE(L"DragOpacity"),
    XSTRING_PTR_STORAGE(L"FocusBorderBrush"),
    XSTRING_PTR_STORAGE(L"FocusSecondaryBorderBrush"),
    XSTRING_PTR_STORAGE(L"ListViewItemPresenterHorizontalContentAlignment"),
    XSTRING_PTR_STORAGE(L"ListViewItemPresenterPadding"),
    XSTRING_PTR_STORAGE(L"ListViewItemPresenterVerticalContentAlignment"),
    XSTRING_PTR_STORAGE(L"PlaceholderBackground"),
    XSTRING_PTR_STORAGE(L"PointerOverBackground"),
    XSTRING_PTR_STORAGE(L"PointerOverBackgroundMargin"),
    XSTRING_PTR_STORAGE(L"PointerOverBorderBrush"),
    XSTRING_PTR_STORAGE(L"PointerOverForeground"),
    XSTRING_PTR_STORAGE(L"PressedBackground"),
    XSTRING_PTR_STORAGE(L"ReorderHintOffset"),
    XSTRING_PTR_STORAGE(L"RevealBackground"),
    XSTRING_PTR_STORAGE(L"RevealBackgroundShowsAboveContent"),
    XSTRING_PTR_STORAGE(L"RevealBorderBrush"),
    XSTRING_PTR_STORAGE(L"RevealBorderThickness"),
    XSTRING_PTR_STORAGE(L"SelectedBackground"),
    XSTRING_PTR_STORAGE(L"SelectedBorderBrush"),
    XSTRING_PTR_STORAGE(L"SelectedBorderThickness"),
    XSTRING_PTR_STORAGE(L"SelectedDisabledBackground"),
    XSTRING_PTR_STORAGE(L"SelectedDisabledBorderBrush"),
    XSTRING_PTR_STORAGE(L"SelectedForeground"),
    XSTRING_PTR_STORAGE(L"SelectedInnerBorderBrush"),
    XSTRING_PTR_STORAGE(L"SelectedPointerOverBackground"),
    XSTRING_PTR_STORAGE(L"SelectedPointerOverBorderBrush"),
    XSTRING_PTR_STORAGE(L"SelectedPressedBackground"),
    XSTRING_PTR_STORAGE(L"SelectedPressedBorderBrush"),
    XSTRING_PTR_STORAGE(L"SelectionCheckMarkVisualEnabled"),
    XSTRING_PTR_STORAGE(L"SelectionIndicatorBrush"),
    XSTRING_PTR_STORAGE(L"SelectionIndicatorCornerRadius"),
    XSTRING_PTR_STORAGE(L"SelectionIndicatorDisabledBrush"),
    XSTRING_PTR_STORAGE(L"SelectionIndicatorMode"),
    XSTRING_PTR_STORAGE(L"SelectionIndicatorPointerOverBrush"),
    XSTRING_PTR_STORAGE(L"SelectionIndicatorPressedBrush"),
    XSTRING_PTR_STORAGE(L"SelectionIndicatorVisualEnabled"),
    XSTRING_PTR_STORAGE(L"Command"),
    XSTRING_PTR_STORAGE(L"CommandParameter"),
    XSTRING_PTR_STORAGE(L"Icon"),
    XSTRING_PTR_STORAGE(L"KeyboardAcceleratorTextOverride"),
    XSTRING_PTR_STORAGE(L"PreventDismissOnPointer"),
    XSTRING_PTR_STORAGE(L"TemplateSettings"),
    XSTRING_PTR_STORAGE(L"Text"),
    XSTRING_PTR_STORAGE(L"IsDefaultShadowEnabled"),
    XSTRING_PTR_STORAGE(L"SystemBackdrop"),
    XSTRING_PTR_STORAGE(L"TemplateSettings"),
    XSTRING_PTR_STORAGE(L"Icon"),
    XSTRING_PTR_STORAGE(L"Items"),
    XSTRING_PTR_STORAGE(L"Text"),
    XSTRING_PTR_STORAGE(L"IsContainerGeneratedForInsert"),
    XSTRING_PTR_STORAGE(L"BottomAppBar"),
    XSTRING_PTR_STORAGE(L"Frame"),
    XSTRING_PTR_STORAGE(L"NavigationCacheMode"),
    XSTRING_PTR_STORAGE(L"TopAppBar"),
    XSTRING_PTR_STORAGE(L"IndicatorMode"),
    XSTRING_PTR_STORAGE(L"Orientation"),
    XSTRING_PTR_STORAGE(L"ViewportSize"),
    XSTRING_PTR_STORAGE(L"IsSelectionActive"),
    XSTRING_PTR_STORAGE(L"IsSynchronizedWithCurrentItem"),
    XSTRING_PTR_STORAGE(L"SelectedIndex"),
    XSTRING_PTR_STORAGE(L"SelectedItem"),
    XSTRING_PTR_STORAGE(L"SelectedValue"),
    XSTRING_PTR_STORAGE(L"SelectedValuePath"),
    XSTRING_PTR_STORAGE(L"IsSelected"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderPlacement"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"IntermediateValue"),
    XSTRING_PTR_STORAGE(L"IsDirectionReversed"),
    XSTRING_PTR_STORAGE(L"IsThumbToolTipEnabled"),
    XSTRING_PTR_STORAGE(L"Orientation"),
    XSTRING_PTR_STORAGE(L"SnapsTo"),
    XSTRING_PTR_STORAGE(L"StepFrequency"),
    XSTRING_PTR_STORAGE(L"ThumbToolTipValueConverter"),
    XSTRING_PTR_STORAGE(L"TickFrequency"),
    XSTRING_PTR_STORAGE(L"TickPlacement"),
    XSTRING_PTR_STORAGE(L"CompositionScaleX"),
    XSTRING_PTR_STORAGE(L"CompositionScaleY"),
    XSTRING_PTR_STORAGE(L"HorizontalOffset"),
    XSTRING_PTR_STORAGE(L"IsOpen"),
    XSTRING_PTR_STORAGE(L"Placement"),
    XSTRING_PTR_STORAGE(L"PlacementRect"),
    XSTRING_PTR_STORAGE(L"PlacementTarget"),
    XSTRING_PTR_STORAGE(L"TemplateSettings"),
    XSTRING_PTR_STORAGE(L"VerticalOffset"),
    XSTRING_PTR_STORAGE(L"CaptionVisibility"),
    XSTRING_PTR_STORAGE(L"Flyout"),
    XSTRING_PTR_STORAGE(L"Description"),
    XSTRING_PTR_STORAGE(L"ErrorTemplate"),
    XSTRING_PTR_STORAGE(L"HasValidationErrors"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderPlacement"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"InputValidationKind"),
    XSTRING_PTR_STORAGE(L"InputValidationMode"),
    XSTRING_PTR_STORAGE(L"IsDropDownOpen"),
    XSTRING_PTR_STORAGE(L"IsEditable"),
    XSTRING_PTR_STORAGE(L"IsSelectionBoxHighlighted"),
    XSTRING_PTR_STORAGE(L"IsTextSearchEnabled"),
    XSTRING_PTR_STORAGE(L"LightDismissOverlayMode"),
    XSTRING_PTR_STORAGE(L"MaxDropDownHeight"),
    XSTRING_PTR_STORAGE(L"PlaceholderForeground"),
    XSTRING_PTR_STORAGE(L"PlaceholderText"),
    XSTRING_PTR_STORAGE(L"SelectionBoxItem"),
    XSTRING_PTR_STORAGE(L"SelectionBoxItemTemplate"),
    XSTRING_PTR_STORAGE(L"SelectionChangedTrigger"),
    XSTRING_PTR_STORAGE(L"TemplateSettings"),
    XSTRING_PTR_STORAGE(L"Text"),
    XSTRING_PTR_STORAGE(L"TextBoxStyle"),
    XSTRING_PTR_STORAGE(L"ValidationCommand"),
    XSTRING_PTR_STORAGE(L"ValidationContext"),
    XSTRING_PTR_STORAGE(L"ValidationErrors"),
    XSTRING_PTR_STORAGE(L"CommandBarOverflowPresenterStyle"),
    XSTRING_PTR_STORAGE(L"CommandBarTemplateSettings"),
    XSTRING_PTR_STORAGE(L"DefaultLabelPosition"),
    XSTRING_PTR_STORAGE(L"IsDynamicOverflowEnabled"),
    XSTRING_PTR_STORAGE(L"OverflowButtonVisibility"),
    XSTRING_PTR_STORAGE(L"PrimaryCommands"),
    XSTRING_PTR_STORAGE(L"SecondaryCommands"),
    XSTRING_PTR_STORAGE(L"UseTouchAnimationsForAllNavigation"),
    XSTRING_PTR_STORAGE(L"NavigateUri"),
    XSTRING_PTR_STORAGE(L"SelectedItems"),
    XSTRING_PTR_STORAGE(L"SelectionMode"),
    XSTRING_PTR_STORAGE(L"SingleSelectionFollowsFocus"),
    XSTRING_PTR_STORAGE(L"CanDragItems"),
    XSTRING_PTR_STORAGE(L"CanReorderItems"),
    XSTRING_PTR_STORAGE(L"DataFetchSize"),
    XSTRING_PTR_STORAGE(L"Footer"),
    XSTRING_PTR_STORAGE(L"FooterTemplate"),
    XSTRING_PTR_STORAGE(L"FooterTransitions"),
    XSTRING_PTR_STORAGE(L"Header"),
    XSTRING_PTR_STORAGE(L"HeaderTemplate"),
    XSTRING_PTR_STORAGE(L"HeaderTransitions"),
    XSTRING_PTR_STORAGE(L"IncrementalLoadingThreshold"),
    XSTRING_PTR_STORAGE(L"IncrementalLoadingTrigger"),
    XSTRING_PTR_STORAGE(L"IsActiveView"),
    XSTRING_PTR_STORAGE(L"IsItemClickEnabled"),
    XSTRING_PTR_STORAGE(L"IsMultiSelectCheckBoxEnabled"),
    XSTRING_PTR_STORAGE(L"IsSwipeEnabled"),
    XSTRING_PTR_STORAGE(L"IsZoomedInView"),
    XSTRING_PTR_STORAGE(L"ReorderMode"),
    XSTRING_PTR_STORAGE(L"SelectedItems"),
    XSTRING_PTR_STORAGE(L"SelectedRanges"),
    XSTRING_PTR_STORAGE(L"SelectionMode"),
    XSTRING_PTR_STORAGE(L"SemanticZoomOwner"),
    XSTRING_PTR_STORAGE(L"ShowsScrollingPlaceholders"),
    XSTRING_PTR_STORAGE(L"SingleSelectionFollowsFocus"),
    XSTRING_PTR_STORAGE(L"IsDraggable"),
    XSTRING_PTR_STORAGE(L"Delay"),
    XSTRING_PTR_STORAGE(L"Interval"),
    XSTRING_PTR_STORAGE(L"BringIntoViewOnFocusChange"),
    XSTRING_PTR_STORAGE(L"CanContentRenderOutsideBounds"),
    XSTRING_PTR_STORAGE(L"ComputedHorizontalScrollBarVisibility"),
    XSTRING_PTR_STORAGE(L"ComputedVerticalScrollBarVisibility"),
    XSTRING_PTR_STORAGE(L"ExtentHeight"),
    XSTRING_PTR_STORAGE(L"ExtentWidth"),
    XSTRING_PTR_STORAGE(L"HorizontalAnchorRatio"),
    XSTRING_PTR_STORAGE(L"HorizontalOffset"),
    XSTRING_PTR_STORAGE(L"HorizontalScrollBarVisibility"),
    XSTRING_PTR_STORAGE(L"HorizontalScrollMode"),
    XSTRING_PTR_STORAGE(L"HorizontalSnapPointsAlignment"),
    XSTRING_PTR_STORAGE(L"HorizontalSnapPointsType"),
    XSTRING_PTR_STORAGE(L"IsDeferredScrollingEnabled"),
    XSTRING_PTR_STORAGE(L"IsHorizontalRailEnabled"),
    XSTRING_PTR_STORAGE(L"IsHorizontalScrollChainingEnabled"),
    XSTRING_PTR_STORAGE(L"IsScrollInertiaEnabled"),
    XSTRING_PTR_STORAGE(L"IsVerticalRailEnabled"),
    XSTRING_PTR_STORAGE(L"IsVerticalScrollChainingEnabled"),
    XSTRING_PTR_STORAGE(L"IsZoomChainingEnabled"),
    XSTRING_PTR_STORAGE(L"IsZoomInertiaEnabled"),
    XSTRING_PTR_STORAGE(L"LeftHeader"),
    XSTRING_PTR_STORAGE(L"MaxZoomFactor"),
    XSTRING_PTR_STORAGE(L"MinZoomFactor"),
    XSTRING_PTR_STORAGE(L"ReduceViewportForCoreInputViewOcclusions"),
    XSTRING_PTR_STORAGE(L"ScrollableHeight"),
    XSTRING_PTR_STORAGE(L"ScrollableWidth"),
    XSTRING_PTR_STORAGE(L"TopHeader"),
    XSTRING_PTR_STORAGE(L"TopLeftHeader"),
    XSTRING_PTR_STORAGE(L"VerticalAnchorRatio"),
    XSTRING_PTR_STORAGE(L"VerticalOffset"),
    XSTRING_PTR_STORAGE(L"VerticalScrollBarVisibility"),
    XSTRING_PTR_STORAGE(L"VerticalScrollMode"),
    XSTRING_PTR_STORAGE(L"VerticalSnapPointsAlignment"),
    XSTRING_PTR_STORAGE(L"VerticalSnapPointsType"),
    XSTRING_PTR_STORAGE(L"ViewportHeight"),
    XSTRING_PTR_STORAGE(L"ViewportWidth"),
    XSTRING_PTR_STORAGE(L"ZoomFactor"),
    XSTRING_PTR_STORAGE(L"ZoomMode"),
    XSTRING_PTR_STORAGE(L"ZoomSnapPoints"),
    XSTRING_PTR_STORAGE(L"ZoomSnapPointsType"),
    XSTRING_PTR_STORAGE(L"IsChecked"),
    XSTRING_PTR_STORAGE(L"IsThreeState"),
    XSTRING_PTR_STORAGE(L"IsChecked"),
    XSTRING_PTR_STORAGE(L"AreScrollSnapPointsRegular"),
    XSTRING_PTR_STORAGE(L"IsContainerGeneratedForInsert"),
    XSTRING_PTR_STORAGE(L"IsVirtualizing"),
    XSTRING_PTR_STORAGE(L"Orientation"),
    XSTRING_PTR_STORAGE(L"VirtualizationMode"),
    XSTRING_PTR_STORAGE(L"HorizontalChildrenAlignment"),
    XSTRING_PTR_STORAGE(L"ItemHeight"),
    XSTRING_PTR_STORAGE(L"ItemWidth"),
    XSTRING_PTR_STORAGE(L"MaximumRowsOrColumns"),
    XSTRING_PTR_STORAGE(L"Orientation"),
    XSTRING_PTR_STORAGE(L"VerticalChildrenAlignment"),
    XSTRING_PTR_STORAGE(L"DynamicOverflowOrder"),
    XSTRING_PTR_STORAGE(L"Icon"),
    XSTRING_PTR_STORAGE(L"IsCompact"),
    XSTRING_PTR_STORAGE(L"IsInOverflow"),
    XSTRING_PTR_STORAGE(L"KeyboardAcceleratorTextOverride"),
    XSTRING_PTR_STORAGE(L"Label"),
    XSTRING_PTR_STORAGE(L"LabelPosition"),
    XSTRING_PTR_STORAGE(L"TemplateSettings"),
    XSTRING_PTR_STORAGE(L"UseOverflowStyle"),
    XSTRING_PTR_STORAGE(L"DynamicOverflowOrder"),
    XSTRING_PTR_STORAGE(L"Icon"),
    XSTRING_PTR_STORAGE(L"IsCompact"),
    XSTRING_PTR_STORAGE(L"IsInOverflow"),
    XSTRING_PTR_STORAGE(L"KeyboardAcceleratorTextOverride"),
    XSTRING_PTR_STORAGE(L"Label"),
    XSTRING_PTR_STORAGE(L"LabelPosition"),
    XSTRING_PTR_STORAGE(L"TemplateSettings"),
    XSTRING_PTR_STORAGE(L"UseOverflowStyle"),
    XSTRING_PTR_STORAGE(L"TemplateSettings"),
    XSTRING_PTR_STORAGE(L"TemplateSettings"),
    XSTRING_PTR_STORAGE(L"GroupName"),
    XSTRING_PTR_STORAGE(L"Duration"),
    XSTRING_PTR_STORAGE(L"Duration"),
    XSTRING_PTR_STORAGE(L"AnimatedCenterPoint"),
    XSTRING_PTR_STORAGE(L"AnimatedRotation"),
    XSTRING_PTR_STORAGE(L"AnimatedRotationAxis"),
    XSTRING_PTR_STORAGE(L"AnimatedScale"),
    XSTRING_PTR_STORAGE(L"AnimatedTransformMatrix"),
    XSTRING_PTR_STORAGE(L"AnimatedTranslation"),
    XSTRING_PTR_STORAGE(L"CenterPoint"),
    XSTRING_PTR_STORAGE(L"KeepAliveCount"),
    XSTRING_PTR_STORAGE(L"RasterizationScale"),
    XSTRING_PTR_STORAGE(L"Rotation"),
    XSTRING_PTR_STORAGE(L"RotationAxis"),
    XSTRING_PTR_STORAGE(L"Scale"),
    XSTRING_PTR_STORAGE(L"ThemeShadowReceiverCount"),
    XSTRING_PTR_STORAGE(L"TransformMatrix"),
    XSTRING_PTR_STORAGE(L"Translation"),
    XSTRING_PTR_STORAGE(L"Components"),
    XSTRING_PTR_STORAGE(L"Duration"),
    XSTRING_PTR_STORAGE(L"AnimatedCenterPoint"),
    XSTRING_PTR_STORAGE(L"AnimatedRotation"),
    XSTRING_PTR_STORAGE(L"AnimatedScale"),
    XSTRING_PTR_STORAGE(L"AnimatedTransformMatrix"),
    XSTRING_PTR_STORAGE(L"AnimatedTranslation"),
    XSTRING_PTR_STORAGE(L"CenterPoint"),
    XSTRING_PTR_STORAGE(L"Rotation"),
    XSTRING_PTR_STORAGE(L"Scale"),
    XSTRING_PTR_STORAGE(L"TransformMatrix"),
    XSTRING_PTR_STORAGE(L"Translation"),
};

// Maps a type name length to a scan range in c_aTypeNames. pnEndIndex is not inclusive.
UINT MapTypeNameLengthToSearchRange(_In_ UINT nLength, _Out_ UINT* pnEndIndex)
{
    switch (nLength)
    {
        case 3:
            *pnEndIndex = 4;
            return 1;
        case 4:
            *pnEndIndex = 14;
            return 4;
        case 5:
            *pnEndIndex = 28;
            return 14;
        case 6:
            *pnEndIndex = 51;
            return 28;
        case 7:
            *pnEndIndex = 67;
            return 51;
        case 8:
            *pnEndIndex = 91;
            return 67;
        case 9:
            *pnEndIndex = 120;
            return 91;
        case 10:
            *pnEndIndex = 160;
            return 120;
        case 11:
            *pnEndIndex = 193;
            return 160;
        case 12:
            *pnEndIndex = 231;
            return 193;
        case 13:
            *pnEndIndex = 261;
            return 231;
        case 14:
            *pnEndIndex = 299;
            return 261;
        case 15:
            *pnEndIndex = 345;
            return 299;
        case 16:
            *pnEndIndex = 383;
            return 345;
        case 17:
            *pnEndIndex = 417;
            return 383;
        case 18:
            *pnEndIndex = 457;
            return 417;
        case 19:
            *pnEndIndex = 509;
            return 457;
        case 20:
            *pnEndIndex = 557;
            return 509;
        case 21:
            *pnEndIndex = 591;
            return 557;
        case 22:
            *pnEndIndex = 642;
            return 591;
        case 23:
            *pnEndIndex = 682;
            return 642;
        case 24:
            *pnEndIndex = 715;
            return 682;
        case 25:
            *pnEndIndex = 750;
            return 715;
        case 26:
            *pnEndIndex = 778;
            return 750;
        case 27:
            *pnEndIndex = 792;
            return 778;
        case 28:
            *pnEndIndex = 813;
            return 792;
        case 29:
            *pnEndIndex = 833;
            return 813;
        case 30:
            *pnEndIndex = 854;
            return 833;
        case 31:
            *pnEndIndex = 866;
            return 854;
        case 32:
            *pnEndIndex = 883;
            return 866;
        case 33:
            *pnEndIndex = 896;
            return 883;
        case 34:
            *pnEndIndex = 909;
            return 896;
        case 35:
            *pnEndIndex = 915;
            return 909;
        case 36:
            *pnEndIndex = 921;
            return 915;
        case 37:
            *pnEndIndex = 926;
            return 921;
        case 38:
            *pnEndIndex = 929;
            return 926;
        case 39:
            *pnEndIndex = 934;
            return 929;
        case 40:
            *pnEndIndex = 935;
            return 934;
        case 41:
            *pnEndIndex = 936;
            return 935;
        case 42:
            *pnEndIndex = 937;
            return 936;
        case 43:
            *pnEndIndex = 938;
            return 937;
        case 49:
            *pnEndIndex = 939;
            return 938;
        case 50:
            *pnEndIndex = 940;
            return 939;
        default:
            *pnEndIndex = 0;
            return 0;
    }
}

// Returns the enum value array which can be used to do enum<->string conversions.
_Check_return_ HRESULT GetEnumValueTable(_In_ KnownTypeIndex nTypeIndex, _Out_ UINT* pnCount, _Outptr_result_buffer_(*pnCount) const XTABLE* ppTable[])
{
    switch (nTypeIndex)
    {
        case KnownTypeIndex::AccessibilityView:
            *pnCount = ARRAY_SIZE(satAccessibilityView);
            *ppTable = satAccessibilityView;
            return S_OK;
        case KnownTypeIndex::AlignmentX:
            *pnCount = ARRAY_SIZE(satAlignmentX);
            *ppTable = satAlignmentX;
            return S_OK;
        case KnownTypeIndex::AlignmentY:
            *pnCount = ARRAY_SIZE(satAlignmentY);
            *ppTable = satAlignmentY;
            return S_OK;
        case KnownTypeIndex::AnimationDirection:
            *pnCount = ARRAY_SIZE(satAnimationDirection);
            *ppTable = satAnimationDirection;
            return S_OK;
        case KnownTypeIndex::AnnotationType:
            *pnCount = ARRAY_SIZE(satAnnotationType);
            *ppTable = satAnnotationType;
            return S_OK;
        case KnownTypeIndex::AppBarClosedDisplayMode:
            *pnCount = ARRAY_SIZE(satAppBarClosedDisplayMode);
            *ppTable = satAppBarClosedDisplayMode;
            return S_OK;
        case KnownTypeIndex::ApplicationHighContrastAdjustment:
            *pnCount = ARRAY_SIZE(satApplicationHighContrastAdjustment);
            *ppTable = satApplicationHighContrastAdjustment;
            return S_OK;
        case KnownTypeIndex::ApplicationRequiresPointerMode:
            *pnCount = ARRAY_SIZE(satApplicationRequiresPointerMode);
            *ppTable = satApplicationRequiresPointerMode;
            return S_OK;
        case KnownTypeIndex::ApplicationTheme:
            *pnCount = ARRAY_SIZE(satApplicationTheme);
            *ppTable = satApplicationTheme;
            return S_OK;
        case KnownTypeIndex::AutomationActiveEnd:
            *pnCount = ARRAY_SIZE(satAutomationActiveEnd);
            *ppTable = satAutomationActiveEnd;
            return S_OK;
        case KnownTypeIndex::AutomationAnimationStyle:
            *pnCount = ARRAY_SIZE(satAutomationAnimationStyle);
            *ppTable = satAutomationAnimationStyle;
            return S_OK;
        case KnownTypeIndex::AutomationBulletStyle:
            *pnCount = ARRAY_SIZE(satAutomationBulletStyle);
            *ppTable = satAutomationBulletStyle;
            return S_OK;
        case KnownTypeIndex::AutomationCaretBidiMode:
            *pnCount = ARRAY_SIZE(satAutomationCaretBidiMode);
            *ppTable = satAutomationCaretBidiMode;
            return S_OK;
        case KnownTypeIndex::AutomationCaretPosition:
            *pnCount = ARRAY_SIZE(satAutomationCaretPosition);
            *ppTable = satAutomationCaretPosition;
            return S_OK;
        case KnownTypeIndex::AutomationControlType:
            *pnCount = ARRAY_SIZE(satAutomationControlType);
            *ppTable = satAutomationControlType;
            return S_OK;
        case KnownTypeIndex::AutomationEvents:
            *pnCount = ARRAY_SIZE(satAutomationEvents);
            *ppTable = satAutomationEvents;
            return S_OK;
        case KnownTypeIndex::AutomationFlowDirections:
            *pnCount = ARRAY_SIZE(satAutomationFlowDirections);
            *ppTable = satAutomationFlowDirections;
            return S_OK;
        case KnownTypeIndex::AutomationHeadingLevel:
            *pnCount = ARRAY_SIZE(satAutomationHeadingLevel);
            *ppTable = satAutomationHeadingLevel;
            return S_OK;
        case KnownTypeIndex::AutomationLandmarkType:
            *pnCount = ARRAY_SIZE(satAutomationLandmarkType);
            *ppTable = satAutomationLandmarkType;
            return S_OK;
        case KnownTypeIndex::AutomationLiveSetting:
            *pnCount = ARRAY_SIZE(satAutomationLiveSetting);
            *ppTable = satAutomationLiveSetting;
            return S_OK;
        case KnownTypeIndex::AutomationNavigationDirection:
            *pnCount = ARRAY_SIZE(satAutomationNavigationDirection);
            *ppTable = satAutomationNavigationDirection;
            return S_OK;
        case KnownTypeIndex::AutomationNotificationKind:
            *pnCount = ARRAY_SIZE(satAutomationNotificationKind);
            *ppTable = satAutomationNotificationKind;
            return S_OK;
        case KnownTypeIndex::AutomationNotificationProcessing:
            *pnCount = ARRAY_SIZE(satAutomationNotificationProcessing);
            *ppTable = satAutomationNotificationProcessing;
            return S_OK;
        case KnownTypeIndex::AutomationOrientation:
            *pnCount = ARRAY_SIZE(satAutomationOrientation);
            *ppTable = satAutomationOrientation;
            return S_OK;
        case KnownTypeIndex::AutomationOutlineStyles:
            *pnCount = ARRAY_SIZE(satAutomationOutlineStyles);
            *ppTable = satAutomationOutlineStyles;
            return S_OK;
        case KnownTypeIndex::AutomationStructureChangeType:
            *pnCount = ARRAY_SIZE(satAutomationStructureChangeType);
            *ppTable = satAutomationStructureChangeType;
            return S_OK;
        case KnownTypeIndex::AutomationStyleId:
            *pnCount = ARRAY_SIZE(satAutomationStyleId);
            *ppTable = satAutomationStyleId;
            return S_OK;
        case KnownTypeIndex::AutomationTextDecorationLineStyle:
            *pnCount = ARRAY_SIZE(satAutomationTextDecorationLineStyle);
            *ppTable = satAutomationTextDecorationLineStyle;
            return S_OK;
        case KnownTypeIndex::AutomationTextEditChangeType:
            *pnCount = ARRAY_SIZE(satAutomationTextEditChangeType);
            *ppTable = satAutomationTextEditChangeType;
            return S_OK;
        case KnownTypeIndex::AutoSuggestionBoxTextChangeReason:
            *pnCount = ARRAY_SIZE(satAutoSuggestionBoxTextChangeReason);
            *ppTable = satAutoSuggestionBoxTextChangeReason;
            return S_OK;
        case KnownTypeIndex::BackgroundSizing:
            *pnCount = ARRAY_SIZE(satBackgroundSizing);
            *ppTable = satBackgroundSizing;
            return S_OK;
        case KnownTypeIndex::BindingMode:
            *pnCount = ARRAY_SIZE(satBindingMode);
            *ppTable = satBindingMode;
            return S_OK;
        case KnownTypeIndex::BitmapCreateOptions:
            *pnCount = ARRAY_SIZE(satBitmapCreateOptions);
            *ppTable = satBitmapCreateOptions;
            return S_OK;
        case KnownTypeIndex::BrushMappingMode:
            *pnCount = ARRAY_SIZE(satBrushMappingMode);
            *ppTable = satBrushMappingMode;
            return S_OK;
        case KnownTypeIndex::CalendarViewDisplayMode:
            *pnCount = ARRAY_SIZE(satCalendarViewDisplayMode);
            *ppTable = satCalendarViewDisplayMode;
            return S_OK;
        case KnownTypeIndex::CalendarViewSelectionMode:
            *pnCount = ARRAY_SIZE(satCalendarViewSelectionMode);
            *ppTable = satCalendarViewSelectionMode;
            return S_OK;
        case KnownTypeIndex::CandidateWindowAlignment:
            *pnCount = ARRAY_SIZE(satCandidateWindowAlignment);
            *ppTable = satCandidateWindowAlignment;
            return S_OK;
        case KnownTypeIndex::CharacterCasing:
            *pnCount = ARRAY_SIZE(satCharacterCasing);
            *ppTable = satCharacterCasing;
            return S_OK;
        case KnownTypeIndex::ClickMode:
            *pnCount = ARRAY_SIZE(satClickMode);
            *ppTable = satClickMode;
            return S_OK;
        case KnownTypeIndex::ClockState:
            *pnCount = ARRAY_SIZE(satClockState);
            *ppTable = satClockState;
            return S_OK;
        case KnownTypeIndex::CollectionChange:
            *pnCount = ARRAY_SIZE(satCollectionChange);
            *ppTable = satCollectionChange;
            return S_OK;
        case KnownTypeIndex::ColorInterpolationMode:
            *pnCount = ARRAY_SIZE(satColorInterpolationMode);
            *ppTable = satColorInterpolationMode;
            return S_OK;
        case KnownTypeIndex::ComboBoxSelectionChangedTrigger:
            *pnCount = ARRAY_SIZE(satComboBoxSelectionChangedTrigger);
            *ppTable = satComboBoxSelectionChangedTrigger;
            return S_OK;
        case KnownTypeIndex::CommandBarDefaultLabelPosition:
            *pnCount = ARRAY_SIZE(satCommandBarDefaultLabelPosition);
            *ppTable = satCommandBarDefaultLabelPosition;
            return S_OK;
        case KnownTypeIndex::CommandBarDynamicOverflowAction:
            *pnCount = ARRAY_SIZE(satCommandBarDynamicOverflowAction);
            *ppTable = satCommandBarDynamicOverflowAction;
            return S_OK;
        case KnownTypeIndex::CommandBarLabelPosition:
            *pnCount = ARRAY_SIZE(satCommandBarLabelPosition);
            *ppTable = satCommandBarLabelPosition;
            return S_OK;
        case KnownTypeIndex::CommandBarOverflowButtonVisibility:
            *pnCount = ARRAY_SIZE(satCommandBarOverflowButtonVisibility);
            *ppTable = satCommandBarOverflowButtonVisibility;
            return S_OK;
        case KnownTypeIndex::ComponentResourceLocation:
            *pnCount = ARRAY_SIZE(satComponentResourceLocation);
            *ppTable = satComponentResourceLocation;
            return S_OK;
        case KnownTypeIndex::ConnectedAnimationComponent:
            *pnCount = ARRAY_SIZE(satConnectedAnimationComponent);
            *ppTable = satConnectedAnimationComponent;
            return S_OK;
        case KnownTypeIndex::ContentDialogButton:
            *pnCount = ARRAY_SIZE(satContentDialogButton);
            *ppTable = satContentDialogButton;
            return S_OK;
        case KnownTypeIndex::ContentDialogPlacement:
            *pnCount = ARRAY_SIZE(satContentDialogPlacement);
            *ppTable = satContentDialogPlacement;
            return S_OK;
        case KnownTypeIndex::ContentDialogResult:
            *pnCount = ARRAY_SIZE(satContentDialogResult);
            *ppTable = satContentDialogResult;
            return S_OK;
        case KnownTypeIndex::ControlHeaderPlacement:
            *pnCount = ARRAY_SIZE(satControlHeaderPlacement);
            *ppTable = satControlHeaderPlacement;
            return S_OK;
        case KnownTypeIndex::CoreCursorType:
            *pnCount = ARRAY_SIZE(satCoreCursorType);
            *ppTable = satCoreCursorType;
            return S_OK;
        case KnownTypeIndex::DataPackageOperation:
            *pnCount = ARRAY_SIZE(satDataPackageOperation);
            *ppTable = satDataPackageOperation;
            return S_OK;
        case KnownTypeIndex::DayOfWeek:
            *pnCount = ARRAY_SIZE(satDayOfWeek);
            *ppTable = satDayOfWeek;
            return S_OK;
        case KnownTypeIndex::DecodePixelType:
            *pnCount = ARRAY_SIZE(satDecodePixelType);
            *ppTable = satDecodePixelType;
            return S_OK;
        case KnownTypeIndex::DisabledFormattingAccelerators:
            *pnCount = ARRAY_SIZE(satDisabledFormattingAccelerators);
            *ppTable = satDisabledFormattingAccelerators;
            return S_OK;
        case KnownTypeIndex::DockPosition:
            *pnCount = ARRAY_SIZE(satDockPosition);
            *ppTable = satDockPosition;
            return S_OK;
        case KnownTypeIndex::EasingMode:
            *pnCount = ARRAY_SIZE(satEasingMode);
            *ppTable = satEasingMode;
            return S_OK;
        case KnownTypeIndex::EdgeTransitionLocation:
            *pnCount = ARRAY_SIZE(satEdgeTransitionLocation);
            *ppTable = satEdgeTransitionLocation;
            return S_OK;
        case KnownTypeIndex::ElementCompositeMode:
            *pnCount = ARRAY_SIZE(satElementCompositeMode);
            *ppTable = satElementCompositeMode;
            return S_OK;
        case KnownTypeIndex::ElementHighContrastAdjustment:
            *pnCount = ARRAY_SIZE(satElementHighContrastAdjustment);
            *ppTable = satElementHighContrastAdjustment;
            return S_OK;
        case KnownTypeIndex::ElementSoundKind:
            *pnCount = ARRAY_SIZE(satElementSoundKind);
            *ppTable = satElementSoundKind;
            return S_OK;
        case KnownTypeIndex::ElementSoundMode:
            *pnCount = ARRAY_SIZE(satElementSoundMode);
            *ppTable = satElementSoundMode;
            return S_OK;
        case KnownTypeIndex::ElementSoundPlayerState:
            *pnCount = ARRAY_SIZE(satElementSoundPlayerState);
            *ppTable = satElementSoundPlayerState;
            return S_OK;
        case KnownTypeIndex::ElementSpatialAudioMode:
            *pnCount = ARRAY_SIZE(satElementSpatialAudioMode);
            *ppTable = satElementSpatialAudioMode;
            return S_OK;
        case KnownTypeIndex::ElementTheme:
            *pnCount = ARRAY_SIZE(satElementTheme);
            *ppTable = satElementTheme;
            return S_OK;
        case KnownTypeIndex::ExpandCollapseState:
            *pnCount = ARRAY_SIZE(satExpandCollapseState);
            *ppTable = satExpandCollapseState;
            return S_OK;
        case KnownTypeIndex::FailedMediaStreamKind:
            *pnCount = ARRAY_SIZE(satFailedMediaStreamKind);
            *ppTable = satFailedMediaStreamKind;
            return S_OK;
        case KnownTypeIndex::FastPlayFallbackBehaviour:
            *pnCount = ARRAY_SIZE(satFastPlayFallbackBehaviour);
            *ppTable = satFastPlayFallbackBehaviour;
            return S_OK;
        case KnownTypeIndex::FillBehavior:
            *pnCount = ARRAY_SIZE(satFillBehavior);
            *ppTable = satFillBehavior;
            return S_OK;
        case KnownTypeIndex::FillRule:
            *pnCount = ARRAY_SIZE(satFillRule);
            *ppTable = satFillRule;
            return S_OK;
        case KnownTypeIndex::FlowDirection:
            *pnCount = ARRAY_SIZE(satFlowDirection);
            *ppTable = satFlowDirection;
            return S_OK;
        case KnownTypeIndex::FlyoutPlacementMode:
            *pnCount = ARRAY_SIZE(satFlyoutPlacementMode);
            *ppTable = satFlyoutPlacementMode;
            return S_OK;
        case KnownTypeIndex::FlyoutShowMode:
            *pnCount = ARRAY_SIZE(satFlyoutShowMode);
            *ppTable = satFlyoutShowMode;
            return S_OK;
        case KnownTypeIndex::FocusInputDeviceKind:
            *pnCount = ARRAY_SIZE(satFocusInputDeviceKind);
            *ppTable = satFocusInputDeviceKind;
            return S_OK;
        case KnownTypeIndex::FocusNavigationDirection:
            *pnCount = ARRAY_SIZE(satFocusNavigationDirection);
            *ppTable = satFocusNavigationDirection;
            return S_OK;
        case KnownTypeIndex::FocusState:
            *pnCount = ARRAY_SIZE(satFocusState);
            *ppTable = satFocusState;
            return S_OK;
        case KnownTypeIndex::FocusVisualKind:
            *pnCount = ARRAY_SIZE(satFocusVisualKind);
            *ppTable = satFocusVisualKind;
            return S_OK;
        case KnownTypeIndex::FontCapitals:
            *pnCount = ARRAY_SIZE(satFontCapitals);
            *ppTable = satFontCapitals;
            return S_OK;
        case KnownTypeIndex::FontEastAsianLanguage:
            *pnCount = ARRAY_SIZE(satFontEastAsianLanguage);
            *ppTable = satFontEastAsianLanguage;
            return S_OK;
        case KnownTypeIndex::FontEastAsianWidths:
            *pnCount = ARRAY_SIZE(satFontEastAsianWidths);
            *ppTable = satFontEastAsianWidths;
            return S_OK;
        case KnownTypeIndex::FontFraction:
            *pnCount = ARRAY_SIZE(satFontFraction);
            *ppTable = satFontFraction;
            return S_OK;
        case KnownTypeIndex::FontNumeralAlignment:
            *pnCount = ARRAY_SIZE(satFontNumeralAlignment);
            *ppTable = satFontNumeralAlignment;
            return S_OK;
        case KnownTypeIndex::FontNumeralStyle:
            *pnCount = ARRAY_SIZE(satFontNumeralStyle);
            *ppTable = satFontNumeralStyle;
            return S_OK;
        case KnownTypeIndex::FontStretch:
            *pnCount = ARRAY_SIZE(satFontStretch);
            *ppTable = satFontStretch;
            return S_OK;
        case KnownTypeIndex::FontStyle:
            *pnCount = ARRAY_SIZE(satFontStyle);
            *ppTable = satFontStyle;
            return S_OK;
        case KnownTypeIndex::FontVariants:
            *pnCount = ARRAY_SIZE(satFontVariants);
            *ppTable = satFontVariants;
            return S_OK;
        case KnownTypeIndex::GeneratorDirection:
            *pnCount = ARRAY_SIZE(satGeneratorDirection);
            *ppTable = satGeneratorDirection;
            return S_OK;
        case KnownTypeIndex::GestureModes:
            *pnCount = ARRAY_SIZE(satGestureModes);
            *ppTable = satGestureModes;
            return S_OK;
        case KnownTypeIndex::GradientSpreadMethod:
            *pnCount = ARRAY_SIZE(satGradientSpreadMethod);
            *ppTable = satGradientSpreadMethod;
            return S_OK;
        case KnownTypeIndex::GridUnitType:
            *pnCount = ARRAY_SIZE(satGridUnitType);
            *ppTable = satGridUnitType;
            return S_OK;
        case KnownTypeIndex::GroupHeaderPlacement:
            *pnCount = ARRAY_SIZE(satGroupHeaderPlacement);
            *ppTable = satGroupHeaderPlacement;
            return S_OK;
        case KnownTypeIndex::HoldingState:
            *pnCount = ARRAY_SIZE(satHoldingState);
            *ppTable = satHoldingState;
            return S_OK;
        case KnownTypeIndex::HorizontalAlignment:
            *pnCount = ARRAY_SIZE(satHorizontalAlignment);
            *ppTable = satHorizontalAlignment;
            return S_OK;
        case KnownTypeIndex::IncrementalLoadingTrigger:
            *pnCount = ARRAY_SIZE(satIncrementalLoadingTrigger);
            *ppTable = satIncrementalLoadingTrigger;
            return S_OK;
        case KnownTypeIndex::InputScopeNameValue:
            *pnCount = ARRAY_SIZE(satInputScopeNameValue);
            *ppTable = satInputScopeNameValue;
            return S_OK;
        case KnownTypeIndex::InputValidationErrorEventAction:
            *pnCount = ARRAY_SIZE(satInputValidationErrorEventAction);
            *ppTable = satInputValidationErrorEventAction;
            return S_OK;
        case KnownTypeIndex::InputValidationKind:
            *pnCount = ARRAY_SIZE(satInputValidationKind);
            *ppTable = satInputValidationKind;
            return S_OK;
        case KnownTypeIndex::InputValidationMode:
            *pnCount = ARRAY_SIZE(satInputValidationMode);
            *ppTable = satInputValidationMode;
            return S_OK;
        case KnownTypeIndex::ItemsUpdatingScrollMode:
            *pnCount = ARRAY_SIZE(satItemsUpdatingScrollMode);
            *ppTable = satItemsUpdatingScrollMode;
            return S_OK;
        case KnownTypeIndex::KeyboardAcceleratorPlacementMode:
            *pnCount = ARRAY_SIZE(satKeyboardAcceleratorPlacementMode);
            *ppTable = satKeyboardAcceleratorPlacementMode;
            return S_OK;
        case KnownTypeIndex::KeyboardNavigationMode:
            *pnCount = ARRAY_SIZE(satKeyboardNavigationMode);
            *ppTable = satKeyboardNavigationMode;
            return S_OK;
        case KnownTypeIndex::KeyTipPlacementMode:
            *pnCount = ARRAY_SIZE(satKeyTipPlacementMode);
            *ppTable = satKeyTipPlacementMode;
            return S_OK;
        case KnownTypeIndex::LightDismissOverlayMode:
            *pnCount = ARRAY_SIZE(satLightDismissOverlayMode);
            *ppTable = satLightDismissOverlayMode;
            return S_OK;
        case KnownTypeIndex::LineStackingStrategy:
            *pnCount = ARRAY_SIZE(satLineStackingStrategy);
            *ppTable = satLineStackingStrategy;
            return S_OK;
        case KnownTypeIndex::ListViewItemPresenterCheckMode:
            *pnCount = ARRAY_SIZE(satListViewItemPresenterCheckMode);
            *ppTable = satListViewItemPresenterCheckMode;
            return S_OK;
        case KnownTypeIndex::ListViewItemPresenterSelectionIndicatorMode:
            *pnCount = ARRAY_SIZE(satListViewItemPresenterSelectionIndicatorMode);
            *ppTable = satListViewItemPresenterSelectionIndicatorMode;
            return S_OK;
        case KnownTypeIndex::ListViewReorderMode:
            *pnCount = ARRAY_SIZE(satListViewReorderMode);
            *ppTable = satListViewReorderMode;
            return S_OK;
        case KnownTypeIndex::ListViewSelectionMode:
            *pnCount = ARRAY_SIZE(satListViewSelectionMode);
            *ppTable = satListViewSelectionMode;
            return S_OK;
        case KnownTypeIndex::LoadedImageSourceLoadStatus:
            *pnCount = ARRAY_SIZE(satLoadedImageSourceLoadStatus);
            *ppTable = satLoadedImageSourceLoadStatus;
            return S_OK;
        case KnownTypeIndex::LogicalDirection:
            *pnCount = ARRAY_SIZE(satLogicalDirection);
            *ppTable = satLogicalDirection;
            return S_OK;
        case KnownTypeIndex::ManipulationModes:
            *pnCount = ARRAY_SIZE(satManipulationModes);
            *ppTable = satManipulationModes;
            return S_OK;
        case KnownTypeIndex::MarkupExtensionType:
            *pnCount = ARRAY_SIZE(satMarkupExtensionType);
            *ppTable = satMarkupExtensionType;
            return S_OK;
        case KnownTypeIndex::NavigationCacheMode:
            *pnCount = ARRAY_SIZE(satNavigationCacheMode);
            *ppTable = satNavigationCacheMode;
            return S_OK;
        case KnownTypeIndex::NavigationMode:
            *pnCount = ARRAY_SIZE(satNavigationMode);
            *ppTable = satNavigationMode;
            return S_OK;
        case KnownTypeIndex::NotifyCollectionChangedAction:
            *pnCount = ARRAY_SIZE(satNotifyCollectionChangedAction);
            *ppTable = satNotifyCollectionChangedAction;
            return S_OK;
        case KnownTypeIndex::OpticalMarginAlignment:
            *pnCount = ARRAY_SIZE(satOpticalMarginAlignment);
            *ppTable = satOpticalMarginAlignment;
            return S_OK;
        case KnownTypeIndex::Orientation:
            *pnCount = ARRAY_SIZE(satOrientation);
            *ppTable = satOrientation;
            return S_OK;
        case KnownTypeIndex::PanelScrollingDirection:
            *pnCount = ARRAY_SIZE(satPanelScrollingDirection);
            *ppTable = satPanelScrollingDirection;
            return S_OK;
        case KnownTypeIndex::PasswordRevealMode:
            *pnCount = ARRAY_SIZE(satPasswordRevealMode);
            *ppTable = satPasswordRevealMode;
            return S_OK;
        case KnownTypeIndex::PatternInterface:
            *pnCount = ARRAY_SIZE(satPatternInterface);
            *ppTable = satPatternInterface;
            return S_OK;
        case KnownTypeIndex::PenLineCap:
            *pnCount = ARRAY_SIZE(satPenLineCap);
            *ppTable = satPenLineCap;
            return S_OK;
        case KnownTypeIndex::PenLineJoin:
            *pnCount = ARRAY_SIZE(satPenLineJoin);
            *ppTable = satPenLineJoin;
            return S_OK;
        case KnownTypeIndex::PlacementMode:
            *pnCount = ARRAY_SIZE(satPlacementMode);
            *ppTable = satPlacementMode;
            return S_OK;
        case KnownTypeIndex::PointerDeviceType:
            *pnCount = ARRAY_SIZE(satPointerDeviceType);
            *ppTable = satPointerDeviceType;
            return S_OK;
        case KnownTypeIndex::PointerDirection:
            *pnCount = ARRAY_SIZE(satPointerDirection);
            *ppTable = satPointerDirection;
            return S_OK;
        case KnownTypeIndex::PopupPlacementMode:
            *pnCount = ARRAY_SIZE(satPopupPlacementMode);
            *ppTable = satPopupPlacementMode;
            return S_OK;
        case KnownTypeIndex::PreviewPageCountType:
            *pnCount = ARRAY_SIZE(satPreviewPageCountType);
            *ppTable = satPreviewPageCountType;
            return S_OK;
        case KnownTypeIndex::PrintDocumentFormat:
            *pnCount = ARRAY_SIZE(satPrintDocumentFormat);
            *ppTable = satPrintDocumentFormat;
            return S_OK;
        case KnownTypeIndex::RelativeSourceMode:
            *pnCount = ARRAY_SIZE(satRelativeSourceMode);
            *ppTable = satRelativeSourceMode;
            return S_OK;
        case KnownTypeIndex::RequiresPointer:
            *pnCount = ARRAY_SIZE(satRequiresPointer);
            *ppTable = satRequiresPointer;
            return S_OK;
        case KnownTypeIndex::RichEditClipboardFormat:
            *pnCount = ARRAY_SIZE(satRichEditClipboardFormat);
            *ppTable = satRichEditClipboardFormat;
            return S_OK;
        case KnownTypeIndex::RowOrColumnMajor:
            *pnCount = ARRAY_SIZE(satRowOrColumnMajor);
            *ppTable = satRowOrColumnMajor;
            return S_OK;
        case KnownTypeIndex::ScrollAmount:
            *pnCount = ARRAY_SIZE(satScrollAmount);
            *ppTable = satScrollAmount;
            return S_OK;
        case KnownTypeIndex::ScrollBarVisibility:
            *pnCount = ARRAY_SIZE(satScrollBarVisibility);
            *ppTable = satScrollBarVisibility;
            return S_OK;
        case KnownTypeIndex::ScrollEventType:
            *pnCount = ARRAY_SIZE(satScrollEventType);
            *ppTable = satScrollEventType;
            return S_OK;
        case KnownTypeIndex::ScrollingIndicatorMode:
            *pnCount = ARRAY_SIZE(satScrollingIndicatorMode);
            *ppTable = satScrollingIndicatorMode;
            return S_OK;
        case KnownTypeIndex::ScrollIntoViewAlignment:
            *pnCount = ARRAY_SIZE(satScrollIntoViewAlignment);
            *ppTable = satScrollIntoViewAlignment;
            return S_OK;
        case KnownTypeIndex::ScrollMode:
            *pnCount = ARRAY_SIZE(satScrollMode);
            *ppTable = satScrollMode;
            return S_OK;
        case KnownTypeIndex::SelectionMode:
            *pnCount = ARRAY_SIZE(satSelectionMode);
            *ppTable = satSelectionMode;
            return S_OK;
        case KnownTypeIndex::SliderSnapsTo:
            *pnCount = ARRAY_SIZE(satSliderSnapsTo);
            *ppTable = satSliderSnapsTo;
            return S_OK;
        case KnownTypeIndex::SnapPointsAlignment:
            *pnCount = ARRAY_SIZE(satSnapPointsAlignment);
            *ppTable = satSnapPointsAlignment;
            return S_OK;
        case KnownTypeIndex::SnapPointsType:
            *pnCount = ARRAY_SIZE(satSnapPointsType);
            *ppTable = satSnapPointsType;
            return S_OK;
        case KnownTypeIndex::SplitViewDisplayMode:
            *pnCount = ARRAY_SIZE(satSplitViewDisplayMode);
            *ppTable = satSplitViewDisplayMode;
            return S_OK;
        case KnownTypeIndex::SplitViewPanePlacement:
            *pnCount = ARRAY_SIZE(satSplitViewPanePlacement);
            *ppTable = satSplitViewPanePlacement;
            return S_OK;
        case KnownTypeIndex::StandardUICommandKind:
            *pnCount = ARRAY_SIZE(satStandardUICommandKind);
            *ppTable = satStandardUICommandKind;
            return S_OK;
        case KnownTypeIndex::Stretch:
            *pnCount = ARRAY_SIZE(satStretch);
            *ppTable = satStretch;
            return S_OK;
        case KnownTypeIndex::StretchDirection:
            *pnCount = ARRAY_SIZE(satStretchDirection);
            *ppTable = satStretchDirection;
            return S_OK;
        case KnownTypeIndex::StyleSimulations:
            *pnCount = ARRAY_SIZE(satStyleSimulations);
            *ppTable = satStyleSimulations;
            return S_OK;
        case KnownTypeIndex::SupportedTextSelection:
            *pnCount = ARRAY_SIZE(satSupportedTextSelection);
            *ppTable = satSupportedTextSelection;
            return S_OK;
        case KnownTypeIndex::SvgImageSourceLoadStatus:
            *pnCount = ARRAY_SIZE(satSvgImageSourceLoadStatus);
            *ppTable = satSvgImageSourceLoadStatus;
            return S_OK;
        case KnownTypeIndex::SweepDirection:
            *pnCount = ARRAY_SIZE(satSweepDirection);
            *ppTable = satSweepDirection;
            return S_OK;
        case KnownTypeIndex::Symbol:
            *pnCount = ARRAY_SIZE(satSymbol);
            *ppTable = satSymbol;
            return S_OK;
        case KnownTypeIndex::SynchronizedInputType:
            *pnCount = ARRAY_SIZE(satSynchronizedInputType);
            *ppTable = satSynchronizedInputType;
            return S_OK;
        case KnownTypeIndex::TextAlignment:
            *pnCount = ARRAY_SIZE(satTextAlignment);
            *ppTable = satTextAlignment;
            return S_OK;
        case KnownTypeIndex::TextDecorations:
            *pnCount = ARRAY_SIZE(satTextDecorations);
            *ppTable = satTextDecorations;
            return S_OK;
        case KnownTypeIndex::TextFormattingMode:
            *pnCount = ARRAY_SIZE(satTextFormattingMode);
            *ppTable = satTextFormattingMode;
            return S_OK;
        case KnownTypeIndex::TextHintingMode:
            *pnCount = ARRAY_SIZE(satTextHintingMode);
            *ppTable = satTextHintingMode;
            return S_OK;
        case KnownTypeIndex::TextLineBounds:
            *pnCount = ARRAY_SIZE(satTextLineBounds);
            *ppTable = satTextLineBounds;
            return S_OK;
        case KnownTypeIndex::TextReadingOrder:
            *pnCount = ARRAY_SIZE(satTextReadingOrder);
            *ppTable = satTextReadingOrder;
            return S_OK;
        case KnownTypeIndex::TextRenderingMode:
            *pnCount = ARRAY_SIZE(satTextRenderingMode);
            *ppTable = satTextRenderingMode;
            return S_OK;
        case KnownTypeIndex::TextTrimming:
            *pnCount = ARRAY_SIZE(satTextTrimming);
            *ppTable = satTextTrimming;
            return S_OK;
        case KnownTypeIndex::TextWrapping:
            *pnCount = ARRAY_SIZE(satTextWrapping);
            *ppTable = satTextWrapping;
            return S_OK;
        case KnownTypeIndex::TickPlacement:
            *pnCount = ARRAY_SIZE(satTickPlacement);
            *ppTable = satTickPlacement;
            return S_OK;
        case KnownTypeIndex::ToggleState:
            *pnCount = ARRAY_SIZE(satToggleState);
            *ppTable = satToggleState;
            return S_OK;
        case KnownTypeIndex::TypeKind:
            *pnCount = ARRAY_SIZE(satTypeKind);
            *ppTable = satTypeKind;
            return S_OK;
        case KnownTypeIndex::UnderlineStyle:
            *pnCount = ARRAY_SIZE(satUnderlineStyle);
            *ppTable = satUnderlineStyle;
            return S_OK;
        case KnownTypeIndex::UpdateSourceTrigger:
            *pnCount = ARRAY_SIZE(satUpdateSourceTrigger);
            *ppTable = satUpdateSourceTrigger;
            return S_OK;
        case KnownTypeIndex::Vector3TransitionComponents:
            *pnCount = ARRAY_SIZE(satVector3TransitionComponents);
            *ppTable = satVector3TransitionComponents;
            return S_OK;
        case KnownTypeIndex::VerticalAlignment:
            *pnCount = ARRAY_SIZE(satVerticalAlignment);
            *ppTable = satVerticalAlignment;
            return S_OK;
        case KnownTypeIndex::VirtualizationMode:
            *pnCount = ARRAY_SIZE(satVirtualizationMode);
            *ppTable = satVirtualizationMode;
            return S_OK;
        case KnownTypeIndex::VirtualKey:
            *pnCount = ARRAY_SIZE(satVirtualKey);
            *ppTable = satVirtualKey;
            return S_OK;
        case KnownTypeIndex::VirtualKeyModifiers:
            *pnCount = ARRAY_SIZE(satVirtualKeyModifiers);
            *ppTable = satVirtualKeyModifiers;
            return S_OK;
        case KnownTypeIndex::Visibility:
            *pnCount = ARRAY_SIZE(satVisibility);
            *ppTable = satVisibility;
            return S_OK;
        case KnownTypeIndex::WindowInteractionState:
            *pnCount = ARRAY_SIZE(satWindowInteractionState);
            *ppTable = satWindowInteractionState;
            return S_OK;
        case KnownTypeIndex::WindowVisualState:
            *pnCount = ARRAY_SIZE(satWindowVisualState);
            *ppTable = satWindowVisualState;
            return S_OK;
        case KnownTypeIndex::XYFocusKeyboardNavigationMode:
            *pnCount = ARRAY_SIZE(satXYFocusKeyboardNavigationMode);
            *ppTable = satXYFocusKeyboardNavigationMode;
            return S_OK;
        case KnownTypeIndex::XYFocusNavigationStrategy:
            *pnCount = ARRAY_SIZE(satXYFocusNavigationStrategy);
            *ppTable = satXYFocusNavigationStrategy;
            return S_OK;
        case KnownTypeIndex::XYFocusNavigationStrategyOverride:
            *pnCount = ARRAY_SIZE(satXYFocusNavigationStrategyOverride);
            *ppTable = satXYFocusNavigationStrategyOverride;
            return S_OK;
        case KnownTypeIndex::ZoomMode:
            *pnCount = ARRAY_SIZE(satZoomMode);
            *ppTable = satZoomMode;
            return S_OK;
        case KnownTypeIndex::ZoomUnit:
            *pnCount = ARRAY_SIZE(satZoomUnit);
            *ppTable = satZoomUnit;
            return S_OK;
        default:
            ASSERT(FALSE);
            return E_FAIL;
    }
}
