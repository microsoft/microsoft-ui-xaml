// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML metadata.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

class CDependencyObject;
template<>
struct DependencyObjectTraits<CDependencyObject>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DependencyObject;
};
class CAppBarButtonTemplateSettings;
template<>
struct DependencyObjectTraits<CAppBarButtonTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AppBarButtonTemplateSettings;
};
class CAppBarTemplateSettings;
template<>
struct DependencyObjectTraits<CAppBarTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AppBarTemplateSettings;
};
class CAppBarToggleButtonTemplateSettings;
template<>
struct DependencyObjectTraits<CAppBarToggleButtonTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AppBarToggleButtonTemplateSettings;
};
class CApplication;
template<>
struct DependencyObjectTraits<CApplication>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Application;
};
class CApplicationBarService;
template<>
struct DependencyObjectTraits<CApplicationBarService>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ApplicationBarService;
};
class CAutomationAnnotation;
template<>
struct DependencyObjectTraits<CAutomationAnnotation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AutomationAnnotation;
};
class CAutomationPeer;
template<>
struct DependencyObjectTraits<CAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AutomationPeer;
};
class CAutomationPeerAnnotation;
template<>
struct DependencyObjectTraits<CAutomationPeerAnnotation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AutomationPeerAnnotation;
};
class CAutoSuggestBoxQuerySubmittedEventArgs;
template<>
struct DependencyObjectTraits<CAutoSuggestBoxQuerySubmittedEventArgs>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AutoSuggestBoxQuerySubmittedEventArgs;
};
class CAutoSuggestBoxSuggestionChosenEventArgs;
template<>
struct DependencyObjectTraits<CAutoSuggestBoxSuggestionChosenEventArgs>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AutoSuggestBoxSuggestionChosenEventArgs;
};
class CAutoSuggestBoxTextChangedEventArgs;
template<>
struct DependencyObjectTraits<CAutoSuggestBoxTextChangedEventArgs>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AutoSuggestBoxTextChangedEventArgs;
};
class CBoolean;
template<>
struct DependencyObjectTraits<CBoolean>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Boolean;
};
class CBrush;
template<>
struct DependencyObjectTraits<CBrush>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Brush;
};
class CBrushTransition;
template<>
struct DependencyObjectTraits<CBrushTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BrushTransition;
};
class CCacheMode;
template<>
struct DependencyObjectTraits<CCacheMode>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CacheMode;
};
class CCalendarViewTemplateSettings;
template<>
struct DependencyObjectTraits<CCalendarViewTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarViewTemplateSettings;
};
class CCollectionView;
template<>
struct DependencyObjectTraits<CCollectionView>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CollectionView;
};
class CCollectionViewGroup;
template<>
struct DependencyObjectTraits<CCollectionViewGroup>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CollectionViewGroup;
};
class CCollectionViewSource;
template<>
struct DependencyObjectTraits<CCollectionViewSource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CollectionViewSource;
};
class CColor;
template<>
struct DependencyObjectTraits<CColor>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Color;
};
class CColorKeyFrame;
template<>
struct DependencyObjectTraits<CColorKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ColorKeyFrame;
};
class CColumnDefinition;
template<>
struct DependencyObjectTraits<CColumnDefinition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ColumnDefinition;
};
class CComboBoxTemplateSettings;
template<>
struct DependencyObjectTraits<CComboBoxTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ComboBoxTemplateSettings;
};
class CCommandBarTemplateSettings;
template<>
struct DependencyObjectTraits<CCommandBarTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CommandBarTemplateSettings;
};
class CConnectedAnimation;
template<>
struct DependencyObjectTraits<CConnectedAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ConnectedAnimation;
};
class CConnectedAnimationService;
template<>
struct DependencyObjectTraits<CConnectedAnimationService>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ConnectedAnimationService;
};
class CCornerRadius;
template<>
struct DependencyObjectTraits<CCornerRadius>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CornerRadius;
};
class CDebugSettings;
template<>
struct DependencyObjectTraits<CDebugSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DebugSettings;
};
class CDeferredElement;
template<>
struct DependencyObjectTraits<CDeferredElement>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DeferredElement;
};
class CDependencyObjectWrapper;
template<>
struct DependencyObjectTraits<CDependencyObjectWrapper>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DependencyObjectWrapper;
};
class CDependencyPropertyProxy;
template<>
struct DependencyObjectTraits<CDependencyPropertyProxy>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DependencyPropertyProxy;
};
class CDeployment;
template<>
struct DependencyObjectTraits<CDeployment>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Deployment;
};
class CDouble;
template<>
struct DependencyObjectTraits<CDouble>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Double;
};
class CDoubleKeyFrame;
template<>
struct DependencyObjectTraits<CDoubleKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DoubleKeyFrame;
};
class CEasingFunctionBase;
template<>
struct DependencyObjectTraits<CEasingFunctionBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::EasingFunctionBase;
};
class CEnumerated;
template<>
struct DependencyObjectTraits<CEnumerated>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Enumerated;
};
class CManagedObjectReference;
template<>
struct DependencyObjectTraits<CManagedObjectReference>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ExternalObjectReference;
};
class CFlyoutBase;
template<>
struct DependencyObjectTraits<CFlyoutBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FlyoutBase;
};
class CFontFamily;
template<>
struct DependencyObjectTraits<CFontFamily>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FontFamily;
};
class CFontWeight;
template<>
struct DependencyObjectTraits<CFontWeight>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FontWeight;
};
class CFrameworkTemplate;
template<>
struct DependencyObjectTraits<CFrameworkTemplate>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FrameworkTemplate;
};
class CGeneralTransform;
template<>
struct DependencyObjectTraits<CGeneralTransform>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GeneralTransform;
};
class CGeometry;
template<>
struct DependencyObjectTraits<CGeometry>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Geometry;
};
class CGradientStop;
template<>
struct DependencyObjectTraits<CGradientStop>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GradientStop;
};
class CGridLength;
template<>
struct DependencyObjectTraits<CGridLength>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GridLength;
};
class CGroupStyle;
template<>
struct DependencyObjectTraits<CGroupStyle>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GroupStyle;
};
class HWCompNode;
template<>
struct DependencyObjectTraits<HWCompNode>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HWCompNode;
};
class CIconSource;
template<>
struct DependencyObjectTraits<CIconSource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::IconSource;
};
class CImageSource;
template<>
struct DependencyObjectTraits<CImageSource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ImageSource;
};
class CInertiaExpansionBehavior;
template<>
struct DependencyObjectTraits<CInertiaExpansionBehavior>
{
    static const KnownTypeIndex Index = KnownTypeIndex::InertiaExpansionBehavior;
};
class CInertiaRotationBehavior;
template<>
struct DependencyObjectTraits<CInertiaRotationBehavior>
{
    static const KnownTypeIndex Index = KnownTypeIndex::InertiaRotationBehavior;
};
class CInertiaTranslationBehavior;
template<>
struct DependencyObjectTraits<CInertiaTranslationBehavior>
{
    static const KnownTypeIndex Index = KnownTypeIndex::InertiaTranslationBehavior;
};
class CInputScope;
template<>
struct DependencyObjectTraits<CInputScope>
{
    static const KnownTypeIndex Index = KnownTypeIndex::InputScope;
};
class CInputScopeName;
template<>
struct DependencyObjectTraits<CInputScopeName>
{
    static const KnownTypeIndex Index = KnownTypeIndex::InputScopeName;
};
class CInputValidationCommand;
template<>
struct DependencyObjectTraits<CInputValidationCommand>
{
    static const KnownTypeIndex Index = KnownTypeIndex::InputValidationCommand;
};
class CInt32;
template<>
struct DependencyObjectTraits<CInt32>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Int32;
};
class CIRawElementProviderSimple;
template<>
struct DependencyObjectTraits<CIRawElementProviderSimple>
{
    static const KnownTypeIndex Index = KnownTypeIndex::IRawElementProviderSimple;
};
class CIsApiContractNotPresentPredicate;
template<>
struct DependencyObjectTraits<CIsApiContractNotPresentPredicate>
{
    static const KnownTypeIndex Index = KnownTypeIndex::IsApiContractNotPresent;
};
class CIsApiContractPresentPredicate;
template<>
struct DependencyObjectTraits<CIsApiContractPresentPredicate>
{
    static const KnownTypeIndex Index = KnownTypeIndex::IsApiContractPresent;
};
class CIsPropertyNotPresentPredicate;
template<>
struct DependencyObjectTraits<CIsPropertyNotPresentPredicate>
{
    static const KnownTypeIndex Index = KnownTypeIndex::IsPropertyNotPresent;
};
class CIsPropertyPresentPredicate;
template<>
struct DependencyObjectTraits<CIsPropertyPresentPredicate>
{
    static const KnownTypeIndex Index = KnownTypeIndex::IsPropertyPresent;
};
class CIsTypeNotPresentPredicate;
template<>
struct DependencyObjectTraits<CIsTypeNotPresentPredicate>
{
    static const KnownTypeIndex Index = KnownTypeIndex::IsTypeNotPresent;
};
class CIsTypePresentPredicate;
template<>
struct DependencyObjectTraits<CIsTypePresentPredicate>
{
    static const KnownTypeIndex Index = KnownTypeIndex::IsTypePresent;
};
class CKeyboardAccelerator;
template<>
struct DependencyObjectTraits<CKeyboardAccelerator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::KeyboardAccelerator;
};
class CKeySpline;
template<>
struct DependencyObjectTraits<CKeySpline>
{
    static const KnownTypeIndex Index = KnownTypeIndex::KeySpline;
};
class CLayoutTransitionStaggerItem;
template<>
struct DependencyObjectTraits<CLayoutTransitionStaggerItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::LayoutTransitionStaggerItem;
};
class CLengthConverter;
template<>
struct DependencyObjectTraits<CLengthConverter>
{
    static const KnownTypeIndex Index = KnownTypeIndex::LengthConverter;
};
class CListViewBaseItemTemplateSettings;
template<>
struct DependencyObjectTraits<CListViewBaseItemTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewBaseItemTemplateSettings;
};
class CLoadedImageSurface;
template<>
struct DependencyObjectTraits<CLoadedImageSurface>
{
    static const KnownTypeIndex Index = KnownTypeIndex::LoadedImageSurface;
};
class CManipulationDelta;
template<>
struct DependencyObjectTraits<CManipulationDelta>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ManipulationDelta;
};
class CManipulationPivot;
template<>
struct DependencyObjectTraits<CManipulationPivot>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ManipulationPivot;
};
class CManipulationVelocities;
template<>
struct DependencyObjectTraits<CManipulationVelocities>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ManipulationVelocities;
};
class CMarkupExtensionBase;
template<>
struct DependencyObjectTraits<CMarkupExtensionBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MarkupExtensionBase;
};
class CMatrix;
template<>
struct DependencyObjectTraits<CMatrix>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Matrix;
};
class CMatrix4x4;
template<>
struct DependencyObjectTraits<CMatrix4x4>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Matrix3D;
};
class CMediaPlaybackItemConverter;
template<>
struct DependencyObjectTraits<CMediaPlaybackItemConverter>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MediaPlaybackItemConverter;
};
class CMenuFlyoutItemTemplateSettings;
template<>
struct DependencyObjectTraits<CMenuFlyoutItemTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MenuFlyoutItemTemplateSettings;
};
class CMenuFlyoutPresenterTemplateSettings;
template<>
struct DependencyObjectTraits<CMenuFlyoutPresenterTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MenuFlyoutPresenterTemplateSettings;
};
class CNavigationTransitionInfo;
template<>
struct DependencyObjectTraits<CNavigationTransitionInfo>
{
    static const KnownTypeIndex Index = KnownTypeIndex::NavigationTransitionInfo;
};
class CNullKeyedResource;
template<>
struct DependencyObjectTraits<CNullKeyedResource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::NullKeyedResource;
};
class CObjectKeyFrame;
template<>
struct DependencyObjectTraits<CObjectKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ObjectKeyFrame;
};
class CPageStackEntry;
template<>
struct DependencyObjectTraits<CPageStackEntry>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PageStackEntry;
};
class CParametricCurve;
template<>
struct DependencyObjectTraits<CParametricCurve>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ParametricCurve;
};
class CParametricCurveSegment;
template<>
struct DependencyObjectTraits<CParametricCurveSegment>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ParametricCurveSegment;
};
class CPathFigure;
template<>
struct DependencyObjectTraits<CPathFigure>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PathFigure;
};
class CPathSegment;
template<>
struct DependencyObjectTraits<CPathSegment>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PathSegment;
};
class CPoint;
template<>
struct DependencyObjectTraits<CPoint>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Point;
};
class CPointer;
template<>
struct DependencyObjectTraits<CPointer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Pointer;
};
class CPointerKeyFrame;
template<>
struct DependencyObjectTraits<CPointerKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PointerKeyFrame;
};
class CPointKeyFrame;
template<>
struct DependencyObjectTraits<CPointKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PointKeyFrame;
};
class CCollection;
template<>
struct DependencyObjectTraits<CCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PresentationFrameworkCollection;
};
class CPrintDocument;
template<>
struct DependencyObjectTraits<CPrintDocument>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PrintDocument;
};
class CProjection;
template<>
struct DependencyObjectTraits<CProjection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Projection;
};
class CPropertyPath;
template<>
struct DependencyObjectTraits<CPropertyPath>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PropertyPath;
};
class CRect;
template<>
struct DependencyObjectTraits<CRect>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Rect;
};
class CRowDefinition;
template<>
struct DependencyObjectTraits<CRowDefinition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RowDefinition;
};
class CScalarTransition;
template<>
struct DependencyObjectTraits<CScalarTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ScalarTransition;
};
class CSecondaryContentRelationship;
template<>
struct DependencyObjectTraits<CSecondaryContentRelationship>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SecondaryContentRelationship;
};
class CSetterBase;
template<>
struct DependencyObjectTraits<CSetterBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SetterBase;
};
class CShadow;
template<>
struct DependencyObjectTraits<CShadow>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Shadow;
};
class CSize;
template<>
struct DependencyObjectTraits<CSize>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Size;
};
class CSplitViewTemplateSettings;
template<>
struct DependencyObjectTraits<CSplitViewTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SplitViewTemplateSettings;
};
class CStaggerFunctionBase;
template<>
struct DependencyObjectTraits<CStaggerFunctionBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::StaggerFunctionBase;
};
class CStateTriggerBase;
template<>
struct DependencyObjectTraits<CStateTriggerBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::StateTriggerBase;
};
class CString;
template<>
struct DependencyObjectTraits<CString>
{
    static const KnownTypeIndex Index = KnownTypeIndex::String;
};
class CStyle;
template<>
struct DependencyObjectTraits<CStyle>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Style;
};
class CSystemBackdrop;
template<>
struct DependencyObjectTraits<CSystemBackdrop>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SystemBackdrop;
};
class CTargetPropertyPath;
template<>
struct DependencyObjectTraits<CTargetPropertyPath>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TargetPropertyPath;
};
class CTemplateContent;
template<>
struct DependencyObjectTraits<CTemplateContent>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TemplateContent;
};
class CTextAdapter;
template<>
struct DependencyObjectTraits<CTextAdapter>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextAdapter;
};
class CTextElement;
template<>
struct DependencyObjectTraits<CTextElement>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextElement;
};
class CTextHighlighterBase;
template<>
struct DependencyObjectTraits<CTextHighlighterBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextHighlighterBase;
};
class CTextPointerWrapper;
template<>
struct DependencyObjectTraits<CTextPointerWrapper>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextPointerWrapper;
};
class CTextProvider;
template<>
struct DependencyObjectTraits<CTextProvider>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextProvider;
};
class CTextRange;
template<>
struct DependencyObjectTraits<CTextRange>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextRange;
};
class CTextRangeAdapter;
template<>
struct DependencyObjectTraits<CTextRangeAdapter>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextRangeAdapter;
};
class CTextRangeProvider;
template<>
struct DependencyObjectTraits<CTextRangeProvider>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextRangeProvider;
};
class CThickness;
template<>
struct DependencyObjectTraits<CThickness>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Thickness;
};
class CTimeline;
template<>
struct DependencyObjectTraits<CTimeline>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Timeline;
};
class CTimeSpan;
template<>
struct DependencyObjectTraits<CTimeSpan>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TimeSpan;
};
class CToggleSwitchTemplateSettings;
template<>
struct DependencyObjectTraits<CToggleSwitchTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ToggleSwitchTemplateSettings;
};
class CToolTipTemplateSettings;
template<>
struct DependencyObjectTraits<CToolTipTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ToolTipTemplateSettings;
};
class CTransform3D;
template<>
struct DependencyObjectTraits<CTransform3D>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Transform3D;
};
class CTransition;
template<>
struct DependencyObjectTraits<CTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Transition;
};
class CTransitionTarget;
template<>
struct DependencyObjectTraits<CTransitionTarget>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TransitionTarget;
};
class CTriggerAction;
template<>
struct DependencyObjectTraits<CTriggerAction>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TriggerAction;
};
class CTriggerBase;
template<>
struct DependencyObjectTraits<CTriggerBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TriggerBase;
};
class CUIElement;
template<>
struct DependencyObjectTraits<CUIElement>
{
    static const KnownTypeIndex Index = KnownTypeIndex::UIElement;
};
class CVector3Transition;
template<>
struct DependencyObjectTraits<CVector3Transition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Vector3Transition;
};
class CVisualState;
template<>
struct DependencyObjectTraits<CVisualState>
{
    static const KnownTypeIndex Index = KnownTypeIndex::VisualState;
};
class CVisualStateGroup;
template<>
struct DependencyObjectTraits<CVisualStateGroup>
{
    static const KnownTypeIndex Index = KnownTypeIndex::VisualStateGroup;
};
class CVisualStateManager;
template<>
struct DependencyObjectTraits<CVisualStateManager>
{
    static const KnownTypeIndex Index = KnownTypeIndex::VisualStateManager;
};
class CVisualTransition;
template<>
struct DependencyObjectTraits<CVisualTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::VisualTransition;
};
class CWindow;
template<>
struct DependencyObjectTraits<CWindow>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Window;
};
class CXamlLight;
template<>
struct DependencyObjectTraits<CXamlLight>
{
    static const KnownTypeIndex Index = KnownTypeIndex::XamlLight;
};
class CXamlUICommand;
template<>
struct DependencyObjectTraits<CXamlUICommand>
{
    static const KnownTypeIndex Index = KnownTypeIndex::XamlUICommand;
};
class CAdaptiveTrigger;
template<>
struct DependencyObjectTraits<CAdaptiveTrigger>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AdaptiveTrigger;
};
class CAddDeleteThemeTransition;
template<>
struct DependencyObjectTraits<CAddDeleteThemeTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AddDeleteThemeTransition;
};
class CArcSegment;
template<>
struct DependencyObjectTraits<CArcSegment>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ArcSegment;
};
class CBackInterpolator;
template<>
struct DependencyObjectTraits<CBackInterpolator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BackEase;
};
class CBeginStoryboard;
template<>
struct DependencyObjectTraits<CBeginStoryboard>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BeginStoryboard;
};
class CBezierSegment;
template<>
struct DependencyObjectTraits<CBezierSegment>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BezierSegment;
};
class CBindingBase;
template<>
struct DependencyObjectTraits<CBindingBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BindingBase;
};
class CBitmapCache;
template<>
struct DependencyObjectTraits<CBitmapCache>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BitmapCache;
};
class CBitmapIconSource;
template<>
struct DependencyObjectTraits<CBitmapIconSource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BitmapIconSource;
};
class CBitmapSource;
template<>
struct DependencyObjectTraits<CBitmapSource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BitmapSource;
};
class CBlock;
template<>
struct DependencyObjectTraits<CBlock>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Block;
};
class CBounceInterpolator;
template<>
struct DependencyObjectTraits<CBounceInterpolator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BounceEase;
};
class CCalendarViewHeaderAutomationPeer;
template<>
struct DependencyObjectTraits<CCalendarViewHeaderAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarViewHeaderAutomationPeer;
};
class CCircInterpolator;
template<>
struct DependencyObjectTraits<CCircInterpolator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CircleEase;
};
class CColorAnimation;
template<>
struct DependencyObjectTraits<CColorAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ColorAnimation;
};
class CColorAnimationUsingKeyFrames;
template<>
struct DependencyObjectTraits<CColorAnimationUsingKeyFrames>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ColorAnimationUsingKeyFrames;
};
class CCompositeTransform3D;
template<>
struct DependencyObjectTraits<CCompositeTransform3D>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CompositeTransform3D;
};
class CContentDialogOpenCloseThemeTransition;
template<>
struct DependencyObjectTraits<CContentDialogOpenCloseThemeTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ContentDialogOpenCloseThemeTransition;
};
class CContentThemeTransition;
template<>
struct DependencyObjectTraits<CContentThemeTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ContentThemeTransition;
};
class CControlTemplate;
template<>
struct DependencyObjectTraits<CControlTemplate>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ControlTemplate;
};
class CCubicInterpolator;
template<>
struct DependencyObjectTraits<CCubicInterpolator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CubicEase;
};
class CustomResourceExtension;
template<>
struct DependencyObjectTraits<CustomResourceExtension>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CustomResource;
};
class CDataTemplate;
template<>
struct DependencyObjectTraits<CDataTemplate>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DataTemplate;
};
class CDiscreteColorKeyFrame;
template<>
struct DependencyObjectTraits<CDiscreteColorKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DiscreteColorKeyFrame;
};
class CDiscreteDoubleKeyFrame;
template<>
struct DependencyObjectTraits<CDiscreteDoubleKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DiscreteDoubleKeyFrame;
};
class CDiscreteObjectKeyFrame;
template<>
struct DependencyObjectTraits<CDiscreteObjectKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DiscreteObjectKeyFrame;
};
class CDiscretePointKeyFrame;
template<>
struct DependencyObjectTraits<CDiscretePointKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DiscretePointKeyFrame;
};
class CDispatcherTimer;
template<>
struct DependencyObjectTraits<CDispatcherTimer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DispatcherTimer;
};
class CDoubleAnimation;
template<>
struct DependencyObjectTraits<CDoubleAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DoubleAnimation;
};
class CDoubleAnimationUsingKeyFrames;
template<>
struct DependencyObjectTraits<CDoubleAnimationUsingKeyFrames>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DoubleAnimationUsingKeyFrames;
};
class CDuration;
template<>
struct DependencyObjectTraits<CDuration>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Duration;
};
class CDynamicTimeline;
template<>
struct DependencyObjectTraits<CDynamicTimeline>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DynamicTimeline;
};
class CEasingColorKeyFrame;
template<>
struct DependencyObjectTraits<CEasingColorKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::EasingColorKeyFrame;
};
class CEasingDoubleKeyFrame;
template<>
struct DependencyObjectTraits<CEasingDoubleKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::EasingDoubleKeyFrame;
};
class CEasingPointKeyFrame;
template<>
struct DependencyObjectTraits<CEasingPointKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::EasingPointKeyFrame;
};
class CEdgeUIThemeTransition;
template<>
struct DependencyObjectTraits<CEdgeUIThemeTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::EdgeUIThemeTransition;
};
class CElasticInterpolator;
template<>
struct DependencyObjectTraits<CElasticInterpolator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ElasticEase;
};
class CEllipseGeometry;
template<>
struct DependencyObjectTraits<CEllipseGeometry>
{
    static const KnownTypeIndex Index = KnownTypeIndex::EllipseGeometry;
};
class CEntranceThemeTransition;
template<>
struct DependencyObjectTraits<CEntranceThemeTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::EntranceThemeTransition;
};
class CEventTrigger;
template<>
struct DependencyObjectTraits<CEventTrigger>
{
    static const KnownTypeIndex Index = KnownTypeIndex::EventTrigger;
};
class CExponentialInterpolator;
template<>
struct DependencyObjectTraits<CExponentialInterpolator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ExponentialEase;
};
class CFlyout;
template<>
struct DependencyObjectTraits<CFlyout>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Flyout;
};
class CFontIconSource;
template<>
struct DependencyObjectTraits<CFontIconSource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FontIconSource;
};
class CFrameworkElement;
template<>
struct DependencyObjectTraits<CFrameworkElement>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FrameworkElement;
};
class CFrameworkElementAutomationPeer;
template<>
struct DependencyObjectTraits<CFrameworkElementAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FrameworkElementAutomationPeer;
};
class CFrameworkElementEx;
template<>
struct DependencyObjectTraits<CFrameworkElementEx>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FrameworkElementEx;
};
class CGeometryGroup;
template<>
struct DependencyObjectTraits<CGeometryGroup>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GeometryGroup;
};
class CGradientBrush;
template<>
struct DependencyObjectTraits<CGradientBrush>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GradientBrush;
};
class CGridViewItemTemplateSettings;
template<>
struct DependencyObjectTraits<CGridViewItemTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GridViewItemTemplateSettings;
};
class CGroupedDataCollectionView;
template<>
struct DependencyObjectTraits<CGroupedDataCollectionView>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GroupedDataCollectionView;
};
class HWCompLeafNode;
template<>
struct DependencyObjectTraits<HWCompLeafNode>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HWCompLeafNode;
};
class HWCompTreeNode;
template<>
struct DependencyObjectTraits<HWCompTreeNode>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HWCompTreeNode;
};
class CHyperlinkAutomationPeer;
template<>
struct DependencyObjectTraits<CHyperlinkAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HyperlinkAutomationPeer;
};
class CInline;
template<>
struct DependencyObjectTraits<CInline>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Inline;
};
class CInputPaneThemeTransition;
template<>
struct DependencyObjectTraits<CInputPaneThemeTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::InputPaneThemeTransition;
};
class CInternalTransform;
template<>
struct DependencyObjectTraits<CInternalTransform>
{
    static const KnownTypeIndex Index = KnownTypeIndex::InternalTransform;
};
class CItemAutomationPeer;
template<>
struct DependencyObjectTraits<CItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ItemAutomationPeer;
};
class CItemsPanelTemplate;
template<>
struct DependencyObjectTraits<CItemsPanelTemplate>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ItemsPanelTemplate;
};
class CKeyTime;
template<>
struct DependencyObjectTraits<CKeyTime>
{
    static const KnownTypeIndex Index = KnownTypeIndex::KeyTime;
};
class CLayoutTransitionElement;
template<>
struct DependencyObjectTraits<CLayoutTransitionElement>
{
    static const KnownTypeIndex Index = KnownTypeIndex::LayoutTransitionElement;
};
class CLinearColorKeyFrame;
template<>
struct DependencyObjectTraits<CLinearColorKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::LinearColorKeyFrame;
};
class CLinearDoubleKeyFrame;
template<>
struct DependencyObjectTraits<CLinearDoubleKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::LinearDoubleKeyFrame;
};
class CLinearPointKeyFrame;
template<>
struct DependencyObjectTraits<CLinearPointKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::LinearPointKeyFrame;
};
class CLineGeometry;
template<>
struct DependencyObjectTraits<CLineGeometry>
{
    static const KnownTypeIndex Index = KnownTypeIndex::LineGeometry;
};
class CLineSegment;
template<>
struct DependencyObjectTraits<CLineSegment>
{
    static const KnownTypeIndex Index = KnownTypeIndex::LineSegment;
};
class CListViewItemTemplateSettings;
template<>
struct DependencyObjectTraits<CListViewItemTemplateSettings>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewItemTemplateSettings;
};
class CMatrix3DProjection;
template<>
struct DependencyObjectTraits<CMatrix3DProjection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Matrix3DProjection;
};
class CMediaSwapChainElement;
template<>
struct DependencyObjectTraits<CMediaSwapChainElement>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MediaSwapChainElement;
};
class CMenuFlyout;
template<>
struct DependencyObjectTraits<CMenuFlyout>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MenuFlyout;
};
class CMenuPopupThemeTransition;
template<>
struct DependencyObjectTraits<CMenuPopupThemeTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MenuPopupThemeTransition;
};
class CNullExtension;
template<>
struct DependencyObjectTraits<CNullExtension>
{
    static const KnownTypeIndex Index = KnownTypeIndex::NullExtension;
};
class CObjectAnimationUsingKeyFrames;
template<>
struct DependencyObjectTraits<CObjectAnimationUsingKeyFrames>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ObjectAnimationUsingKeyFrames;
};
class CPanelEx;
template<>
struct DependencyObjectTraits<CPanelEx>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PanelEx;
};
class CPaneThemeTransition;
template<>
struct DependencyObjectTraits<CPaneThemeTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PaneThemeTransition;
};
class CParallelTimeline;
template<>
struct DependencyObjectTraits<CParallelTimeline>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ParallelTimeline;
};
class CPathGeometry;
template<>
struct DependencyObjectTraits<CPathGeometry>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PathGeometry;
};
class CPathIconSource;
template<>
struct DependencyObjectTraits<CPathIconSource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PathIconSource;
};
class CPerspectiveTransform3D;
template<>
struct DependencyObjectTraits<CPerspectiveTransform3D>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PerspectiveTransform3D;
};
class CPickerFlyoutThemeTransition;
template<>
struct DependencyObjectTraits<CPickerFlyoutThemeTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PickerFlyoutThemeTransition;
};
class CPlaneProjection;
template<>
struct DependencyObjectTraits<CPlaneProjection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PlaneProjection;
};
class CPointAnimation;
template<>
struct DependencyObjectTraits<CPointAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PointAnimation;
};
class CPointAnimationUsingKeyFrames;
template<>
struct DependencyObjectTraits<CPointAnimationUsingKeyFrames>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PointAnimationUsingKeyFrames;
};
class CPointerAnimationUsingKeyFrames;
template<>
struct DependencyObjectTraits<CPointerAnimationUsingKeyFrames>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PointerAnimationUsingKeyFrames;
};
class CPolyBezierSegment;
template<>
struct DependencyObjectTraits<CPolyBezierSegment>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PolyBezierSegment;
};
class CPolyLineSegment;
template<>
struct DependencyObjectTraits<CPolyLineSegment>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PolyLineSegment;
};
class CPolyQuadraticSegment;
template<>
struct DependencyObjectTraits<CPolyQuadraticSegment>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PolyQuadraticBezierSegment;
};
class CPopupThemeTransition;
template<>
struct DependencyObjectTraits<CPopupThemeTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PopupThemeTransition;
};
class CPowerInterpolator;
template<>
struct DependencyObjectTraits<CPowerInterpolator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PowerEase;
};
class CPVLStaggerFunction;
template<>
struct DependencyObjectTraits<CPVLStaggerFunction>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PVLStaggerFunction;
};
class CQuadraticSegment;
template<>
struct DependencyObjectTraits<CQuadraticSegment>
{
    static const KnownTypeIndex Index = KnownTypeIndex::QuadraticBezierSegment;
};
class CQuadraticInterpolator;
template<>
struct DependencyObjectTraits<CQuadraticInterpolator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::QuadraticEase;
};
class CQuarticInterpolator;
template<>
struct DependencyObjectTraits<CQuarticInterpolator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::QuarticEase;
};
class CQuinticInterpolator;
template<>
struct DependencyObjectTraits<CQuinticInterpolator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::QuinticEase;
};
class CRectangleGeometry;
template<>
struct DependencyObjectTraits<CRectangleGeometry>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RectangleGeometry;
};
class CRelativeSource;
template<>
struct DependencyObjectTraits<CRelativeSource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RelativeSource;
};
class CRenderTargetBitmap;
template<>
struct DependencyObjectTraits<CRenderTargetBitmap>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RenderTargetBitmap;
};
class CReorderThemeTransition;
template<>
struct DependencyObjectTraits<CReorderThemeTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ReorderThemeTransition;
};
class CRepositionThemeTransition;
template<>
struct DependencyObjectTraits<CRepositionThemeTransition>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RepositionThemeTransition;
};
class CSetter;
template<>
struct DependencyObjectTraits<CSetter>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Setter;
};
class CSineInterpolator;
template<>
struct DependencyObjectTraits<CSineInterpolator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SineEase;
};
class CSoftwareBitmapSource;
template<>
struct DependencyObjectTraits<CSoftwareBitmapSource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SoftwareBitmapSource;
};
class CSolidColorBrush;
template<>
struct DependencyObjectTraits<CSolidColorBrush>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SolidColorBrush;
};
class CSplineColorKeyFrame;
template<>
struct DependencyObjectTraits<CSplineColorKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SplineColorKeyFrame;
};
class CSplineDoubleKeyFrame;
template<>
struct DependencyObjectTraits<CSplineDoubleKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SplineDoubleKeyFrame;
};
class CSplinePointKeyFrame;
template<>
struct DependencyObjectTraits<CSplinePointKeyFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SplinePointKeyFrame;
};
class CStandardUICommand;
template<>
struct DependencyObjectTraits<CStandardUICommand>
{
    static const KnownTypeIndex Index = KnownTypeIndex::StandardUICommand;
};
class CStateTrigger;
template<>
struct DependencyObjectTraits<CStateTrigger>
{
    static const KnownTypeIndex Index = KnownTypeIndex::StateTrigger;
};
class CStaticResourceExtension;
template<>
struct DependencyObjectTraits<CStaticResourceExtension>
{
    static const KnownTypeIndex Index = KnownTypeIndex::StaticResource;
};
class CSurfaceImageSource;
template<>
struct DependencyObjectTraits<CSurfaceImageSource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SurfaceImageSource;
};
class CSvgImageSource;
template<>
struct DependencyObjectTraits<CSvgImageSource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SvgImageSource;
};
class CSwapChainElement;
template<>
struct DependencyObjectTraits<CSwapChainElement>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SwapChainElement;
};
class CSymbolIconSource;
template<>
struct DependencyObjectTraits<CSymbolIconSource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SymbolIconSource;
};
class CTemplateBindingExtension;
template<>
struct DependencyObjectTraits<CTemplateBindingExtension>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TemplateBinding;
};
class CTextHighlighter;
template<>
struct DependencyObjectTraits<CTextHighlighter>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextHighlighter;
};
class CThemeResourceExtension;
template<>
struct DependencyObjectTraits<CThemeResourceExtension>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ThemeResource;
};
class CThemeShadow;
template<>
struct DependencyObjectTraits<CThemeShadow>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ThemeShadow;
};
class CTileBrush;
template<>
struct DependencyObjectTraits<CTileBrush>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TileBrush;
};
class CTransform;
template<>
struct DependencyObjectTraits<CTransform>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Transform;
};
class CVectorCollectionView;
template<>
struct DependencyObjectTraits<CVectorCollectionView>
{
    static const KnownTypeIndex Index = KnownTypeIndex::VectorCollectionView;
};
class CVectorViewCollectionView;
template<>
struct DependencyObjectTraits<CVectorViewCollectionView>
{
    static const KnownTypeIndex Index = KnownTypeIndex::VectorViewCollectionView;
};
class CXamlCompositionBrush;
template<>
struct DependencyObjectTraits<CXamlCompositionBrush>
{
    static const KnownTypeIndex Index = KnownTypeIndex::XamlCompositionBrushBase;
};
class CAppBarAutomationPeer;
template<>
struct DependencyObjectTraits<CAppBarAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AppBarAutomationPeer;
};
class CAppBarLightDismissAutomationPeer;
template<>
struct DependencyObjectTraits<CAppBarLightDismissAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AppBarLightDismissAutomationPeer;
};
class CAutomationAnnotationCollection;
template<>
struct DependencyObjectTraits<CAutomationAnnotationCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AutomationAnnotationCollection;
};
class CAutomationPeerAnnotationCollection;
template<>
struct DependencyObjectTraits<CAutomationPeerAnnotationCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AutomationPeerAnnotationCollection;
};
class CAutomationPeerCollection;
template<>
struct DependencyObjectTraits<CAutomationPeerCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AutomationPeerCollection;
};
class CAutoSuggestBoxAutomationPeer;
template<>
struct DependencyObjectTraits<CAutoSuggestBoxAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AutoSuggestBoxAutomationPeer;
};
class CBinding;
template<>
struct DependencyObjectTraits<CBinding>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Binding;
};
class CBitmapImage;
template<>
struct DependencyObjectTraits<CBitmapImage>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BitmapImage;
};
class CBorder;
template<>
struct DependencyObjectTraits<CBorder>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Border;
};
class CBrushCollection;
template<>
struct DependencyObjectTraits<CBrushCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BrushCollection;
};
class CButtonBaseAutomationPeer;
template<>
struct DependencyObjectTraits<CButtonBaseAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ButtonBaseAutomationPeer;
};
class CCalendarDatePickerAutomationPeer;
template<>
struct DependencyObjectTraits<CCalendarDatePickerAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarDatePickerAutomationPeer;
};
class CCalendarViewAutomationPeer;
template<>
struct DependencyObjectTraits<CCalendarViewAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarViewAutomationPeer;
};
class CCalendarViewBaseItemAutomationPeer;
template<>
struct DependencyObjectTraits<CCalendarViewBaseItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarViewBaseItemAutomationPeer;
};
class CColorKeyFrameCollection;
template<>
struct DependencyObjectTraits<CColorKeyFrameCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ColorKeyFrameCollection;
};
class CColumnDefinitionCollection;
template<>
struct DependencyObjectTraits<CColumnDefinitionCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ColumnDefinitionCollection;
};
class CComboBoxItemAutomationPeer;
template<>
struct DependencyObjectTraits<CComboBoxItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ComboBoxItemAutomationPeer;
};
class CComboBoxLightDismissAutomationPeer;
template<>
struct DependencyObjectTraits<CComboBoxLightDismissAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ComboBoxLightDismissAutomationPeer;
};
class CCompositeTransform;
template<>
struct DependencyObjectTraits<CCompositeTransform>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CompositeTransform;
};
class CConnectedAnimationRoot;
template<>
struct DependencyObjectTraits<CConnectedAnimationRoot>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ConnectedAnimationRoot;
};
class CContentPresenter;
template<>
struct DependencyObjectTraits<CContentPresenter>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ContentPresenter;
};
class CControl;
template<>
struct DependencyObjectTraits<CControl>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Control;
};
class CDatePickerAutomationPeer;
template<>
struct DependencyObjectTraits<CDatePickerAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DatePickerAutomationPeer;
};
class CDisplayMemberTemplate;
template<>
struct DependencyObjectTraits<CDisplayMemberTemplate>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DisplayMemberTemplate;
};
class CDoubleCollection;
template<>
struct DependencyObjectTraits<CDoubleCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DoubleCollection;
};
class CDoubleKeyFrameCollection;
template<>
struct DependencyObjectTraits<CDoubleKeyFrameCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DoubleKeyFrameCollection;
};
class CDragItemThemeAnimation;
template<>
struct DependencyObjectTraits<CDragItemThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DragItemThemeAnimation;
};
class CDragOverThemeAnimation;
template<>
struct DependencyObjectTraits<CDragOverThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DragOverThemeAnimation;
};
class CDrillInThemeAnimation;
template<>
struct DependencyObjectTraits<CDrillInThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DrillInThemeAnimation;
};
class CDrillOutThemeAnimation;
template<>
struct DependencyObjectTraits<CDrillOutThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DrillOutThemeAnimation;
};
class CDropTargetItemThemeAnimation;
template<>
struct DependencyObjectTraits<CDropTargetItemThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DropTargetItemThemeAnimation;
};
class CFaceplateContentPresenterAutomationPeer;
template<>
struct DependencyObjectTraits<CFaceplateContentPresenterAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FaceplateContentPresenterAutomationPeer;
};
class CFadeInThemeAnimation;
template<>
struct DependencyObjectTraits<CFadeInThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FadeInThemeAnimation;
};
class CFadeOutThemeAnimation;
template<>
struct DependencyObjectTraits<CFadeOutThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FadeOutThemeAnimation;
};
class CFlipViewItemAutomationPeer;
template<>
struct DependencyObjectTraits<CFlipViewItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FlipViewItemAutomationPeer;
};
class CFloatCollection;
template<>
struct DependencyObjectTraits<CFloatCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FloatCollection;
};
class CFlyoutPresenterAutomationPeer;
template<>
struct DependencyObjectTraits<CFlyoutPresenterAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FlyoutPresenterAutomationPeer;
};
class CFullWindowMediaRootAutomationPeer;
template<>
struct DependencyObjectTraits<CFullWindowMediaRootAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FullWindowMediaRootAutomationPeer;
};
class CGeometryCollection;
template<>
struct DependencyObjectTraits<CGeometryCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GeometryCollection;
};
class CGlyphs;
template<>
struct DependencyObjectTraits<CGlyphs>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Glyphs;
};
class CGradientStopCollection;
template<>
struct DependencyObjectTraits<CGradientStopCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GradientStopCollection;
};
class CGroupItemAutomationPeer;
template<>
struct DependencyObjectTraits<CGroupItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GroupItemAutomationPeer;
};
class CHubAutomationPeer;
template<>
struct DependencyObjectTraits<CHubAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HubAutomationPeer;
};
class CHubSectionAutomationPeer;
template<>
struct DependencyObjectTraits<CHubSectionAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HubSectionAutomationPeer;
};
class CHubSectionCollection;
template<>
struct DependencyObjectTraits<CHubSectionCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HubSectionCollection;
};
class HWCompMediaNode;
template<>
struct DependencyObjectTraits<HWCompMediaNode>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HWCompMediaNode;
};
class HWCompRenderDataNode;
template<>
struct DependencyObjectTraits<HWCompRenderDataNode>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HWCompRenderDataNode;
};
class HWCompSwapChainNode;
template<>
struct DependencyObjectTraits<HWCompSwapChainNode>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HWCompSwapChainNode;
};
class HWRedirectedCompTreeNodeWinRT;
template<>
struct DependencyObjectTraits<HWRedirectedCompTreeNodeWinRT>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HWRedirectedCompTreeNodeWinRT;
};
class CIconElement;
template<>
struct DependencyObjectTraits<CIconElement>
{
    static const KnownTypeIndex Index = KnownTypeIndex::IconElement;
};
class CImage;
template<>
struct DependencyObjectTraits<CImage>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Image;
};
class CImageAutomationPeer;
template<>
struct DependencyObjectTraits<CImageAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ImageAutomationPeer;
};
class CImageBrush;
template<>
struct DependencyObjectTraits<CImageBrush>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ImageBrush;
};
class CInlineUIContainer;
template<>
struct DependencyObjectTraits<CInlineUIContainer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::InlineUIContainer;
};
class CInputScopeNameCollection;
template<>
struct DependencyObjectTraits<CInputScopeNameCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::InputScopeNameCollection;
};
class CItemsControlAutomationPeer;
template<>
struct DependencyObjectTraits<CItemsControlAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ItemsControlAutomationPeer;
};
class CItemsPresenter;
template<>
struct DependencyObjectTraits<CItemsPresenter>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ItemsPresenter;
};
class CIterableCollectionView;
template<>
struct DependencyObjectTraits<CIterableCollectionView>
{
    static const KnownTypeIndex Index = KnownTypeIndex::IterableCollectionView;
};
class CKeyboardAcceleratorCollection;
template<>
struct DependencyObjectTraits<CKeyboardAcceleratorCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::KeyboardAcceleratorCollection;
};
class CLandmarkTargetAutomationPeer;
template<>
struct DependencyObjectTraits<CLandmarkTargetAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::LandmarkTargetAutomationPeer;
};
class CLinearGradientBrush;
template<>
struct DependencyObjectTraits<CLinearGradientBrush>
{
    static const KnownTypeIndex Index = KnownTypeIndex::LinearGradientBrush;
};
class CLineBreak;
template<>
struct DependencyObjectTraits<CLineBreak>
{
    static const KnownTypeIndex Index = KnownTypeIndex::LineBreak;
};
class CListBoxItemAutomationPeer;
template<>
struct DependencyObjectTraits<CListBoxItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListBoxItemAutomationPeer;
};
class CListViewBaseHeaderItemAutomationPeer;
template<>
struct DependencyObjectTraits<CListViewBaseHeaderItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewBaseHeaderItemAutomationPeer;
};
class CListViewBaseItemAutomationPeer;
template<>
struct DependencyObjectTraits<CListViewBaseItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewBaseItemAutomationPeer;
};
class CListViewBaseItemSecondaryChrome;
template<>
struct DependencyObjectTraits<CListViewBaseItemSecondaryChrome>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewBaseItemSecondaryChrome;
};
class CMatrixTransform;
template<>
struct DependencyObjectTraits<CMatrixTransform>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MatrixTransform;
};
class CMediaBase;
template<>
struct DependencyObjectTraits<CMediaBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MediaBase;
};
class CMediaPlayerElementAutomationPeer;
template<>
struct DependencyObjectTraits<CMediaPlayerElementAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MediaPlayerElementAutomationPeer;
};
class CMediaPlayerPresenter;
template<>
struct DependencyObjectTraits<CMediaPlayerPresenter>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MediaPlayerPresenter;
};
class CMediaTransportControlsAutomationPeer;
template<>
struct DependencyObjectTraits<CMediaTransportControlsAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MediaTransportControlsAutomationPeer;
};
class CMenuFlyoutItemAutomationPeer;
template<>
struct DependencyObjectTraits<CMenuFlyoutItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MenuFlyoutItemAutomationPeer;
};
class CMenuFlyoutItemBaseCollection;
template<>
struct DependencyObjectTraits<CMenuFlyoutItemBaseCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MenuFlyoutItemBaseCollection;
};
class CMenuFlyoutSubItemAutomationPeer;
template<>
struct DependencyObjectTraits<CMenuFlyoutSubItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MenuFlyoutSubItemAutomationPeer;
};
class CNamedContainerAutomationPeer;
template<>
struct DependencyObjectTraits<CNamedContainerAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::NamedContainerAutomationPeer;
};
class CObjectKeyFrameCollection;
template<>
struct DependencyObjectTraits<CObjectKeyFrameCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ObjectKeyFrameCollection;
};
class CPanel;
template<>
struct DependencyObjectTraits<CPanel>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Panel;
};
class CParagraph;
template<>
struct DependencyObjectTraits<CParagraph>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Paragraph;
};
class CParametricCurveCollection;
template<>
struct DependencyObjectTraits<CParametricCurveCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ParametricCurveCollection;
};
class CParametricCurveSegmentCollection;
template<>
struct DependencyObjectTraits<CParametricCurveSegmentCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ParametricCurveSegmentCollection;
};
class CPasswordBoxAutomationPeer;
template<>
struct DependencyObjectTraits<CPasswordBoxAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PasswordBoxAutomationPeer;
};
class CPathFigureCollection;
template<>
struct DependencyObjectTraits<CPathFigureCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PathFigureCollection;
};
class CPathSegmentCollection;
template<>
struct DependencyObjectTraits<CPathSegmentCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PathSegmentCollection;
};
class CPointCollection;
template<>
struct DependencyObjectTraits<CPointCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PointCollection;
};
class CPointerCollection;
template<>
struct DependencyObjectTraits<CPointerCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PointerCollection;
};
class CPointerDownThemeAnimation;
template<>
struct DependencyObjectTraits<CPointerDownThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PointerDownThemeAnimation;
};
class CPointerKeyFrameCollection;
template<>
struct DependencyObjectTraits<CPointerKeyFrameCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PointerKeyFrameCollection;
};
class CPointerUpThemeAnimation;
template<>
struct DependencyObjectTraits<CPointerUpThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PointerUpThemeAnimation;
};
class CPointKeyFrameCollection;
template<>
struct DependencyObjectTraits<CPointKeyFrameCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PointKeyFrameCollection;
};
class CPopInThemeAnimation;
template<>
struct DependencyObjectTraits<CPopInThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PopInThemeAnimation;
};
class CPopOutThemeAnimation;
template<>
struct DependencyObjectTraits<CPopOutThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PopOutThemeAnimation;
};
class CPopup;
template<>
struct DependencyObjectTraits<CPopup>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Popup;
};
class CPopupAutomationPeer;
template<>
struct DependencyObjectTraits<CPopupAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PopupAutomationPeer;
};
class CPopupRootAutomationPeer;
template<>
struct DependencyObjectTraits<CPopupRootAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PopupRootAutomationPeer;
};
class CRangeBaseAutomationPeer;
template<>
struct DependencyObjectTraits<CRangeBaseAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RangeBaseAutomationPeer;
};
class CRepeatBehavior;
template<>
struct DependencyObjectTraits<CRepeatBehavior>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RepeatBehavior;
};
class CRepositionThemeAnimation;
template<>
struct DependencyObjectTraits<CRepositionThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RepositionThemeAnimation;
};
class CResourceDictionary;
template<>
struct DependencyObjectTraits<CResourceDictionary>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ResourceDictionary;
};
class CResourceDictionaryCollection;
template<>
struct DependencyObjectTraits<CResourceDictionaryCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ResourceDictionaryCollection;
};
class CRichEditBoxAutomationPeer;
template<>
struct DependencyObjectTraits<CRichEditBoxAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RichEditBoxAutomationPeer;
};
class CRichTextBlock;
template<>
struct DependencyObjectTraits<CRichTextBlock>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RichTextBlock;
};
class CRichTextBlockAutomationPeer;
template<>
struct DependencyObjectTraits<CRichTextBlockAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RichTextBlockAutomationPeer;
};
class CRichTextBlockOverflow;
template<>
struct DependencyObjectTraits<CRichTextBlockOverflow>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RichTextBlockOverflow;
};
class CRichTextBlockOverflowAutomationPeer;
template<>
struct DependencyObjectTraits<CRichTextBlockOverflowAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RichTextBlockOverflowAutomationPeer;
};
class CRotateTransform;
template<>
struct DependencyObjectTraits<CRotateTransform>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RotateTransform;
};
class CRowDefinitionCollection;
template<>
struct DependencyObjectTraits<CRowDefinitionCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RowDefinitionCollection;
};
class CRun;
template<>
struct DependencyObjectTraits<CRun>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Run;
};
class CScaleTransform;
template<>
struct DependencyObjectTraits<CScaleTransform>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ScaleTransform;
};
class CScrollViewerAutomationPeer;
template<>
struct DependencyObjectTraits<CScrollViewerAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ScrollViewerAutomationPeer;
};
class CSelectorItemAutomationPeer;
template<>
struct DependencyObjectTraits<CSelectorItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SelectorItemAutomationPeer;
};
class CSemanticZoomAutomationPeer;
template<>
struct DependencyObjectTraits<CSemanticZoomAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SemanticZoomAutomationPeer;
};
class CSetterBaseCollection;
template<>
struct DependencyObjectTraits<CSetterBaseCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SetterBaseCollection;
};
class CShape;
template<>
struct DependencyObjectTraits<CShape>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Shape;
};
class CSkewTransform;
template<>
struct DependencyObjectTraits<CSkewTransform>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SkewTransform;
};
class CSpan;
template<>
struct DependencyObjectTraits<CSpan>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Span;
};
class CSplitCloseThemeAnimation;
template<>
struct DependencyObjectTraits<CSplitCloseThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SplitCloseThemeAnimation;
};
class CSplitOpenThemeAnimation;
template<>
struct DependencyObjectTraits<CSplitOpenThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SplitOpenThemeAnimation;
};
class CSplitViewLightDismissAutomationPeer;
template<>
struct DependencyObjectTraits<CSplitViewLightDismissAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SplitViewLightDismissAutomationPeer;
};
class CSplitViewPaneAutomationPeer;
template<>
struct DependencyObjectTraits<CSplitViewPaneAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SplitViewPaneAutomationPeer;
};
class CStateTriggerCollection;
template<>
struct DependencyObjectTraits<CStateTriggerCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::StateTriggerCollection;
};
class CStoryboard;
template<>
struct DependencyObjectTraits<CStoryboard>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Storyboard;
};
class CStoryboardCollection;
template<>
struct DependencyObjectTraits<CStoryboardCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::StoryboardCollection;
};
class CSwipeBackThemeAnimation;
template<>
struct DependencyObjectTraits<CSwipeBackThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SwipeBackThemeAnimation;
};
class CSwipeHintThemeAnimation;
template<>
struct DependencyObjectTraits<CSwipeHintThemeAnimation>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SwipeHintThemeAnimation;
};
class CTextBlock;
template<>
struct DependencyObjectTraits<CTextBlock>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextBlock;
};
class CTextBlockAutomationPeer;
template<>
struct DependencyObjectTraits<CTextBlockAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextBlockAutomationPeer;
};
class CTextBoxAutomationPeer;
template<>
struct DependencyObjectTraits<CTextBoxAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextBoxAutomationPeer;
};
class CTextBoxBaseAutomationPeer;
template<>
struct DependencyObjectTraits<CTextBoxBaseAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextBoxBaseAutomationPeer;
};
class CTextBoxView;
template<>
struct DependencyObjectTraits<CTextBoxView>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextBoxView;
};
class CTextElementCollection;
template<>
struct DependencyObjectTraits<CTextElementCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextElementCollection;
};
class CTextHighlighterCollection;
template<>
struct DependencyObjectTraits<CTextHighlighterCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextHighlighterCollection;
};
class CTextRangeCollection;
template<>
struct DependencyObjectTraits<CTextRangeCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextRangeCollection;
};
class CThemeAnimationBase;
template<>
struct DependencyObjectTraits<CThemeAnimationBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ThemeAnimationBase;
};
class CThumbAutomationPeer;
template<>
struct DependencyObjectTraits<CThumbAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ThumbAutomationPeer;
};
class CTimelineCollection;
template<>
struct DependencyObjectTraits<CTimelineCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TimelineCollection;
};
class CTimePickerAutomationPeer;
template<>
struct DependencyObjectTraits<CTimePickerAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TimePickerAutomationPeer;
};
class CToggleMenuFlyoutItemAutomationPeer;
template<>
struct DependencyObjectTraits<CToggleMenuFlyoutItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ToggleMenuFlyoutItemAutomationPeer;
};
class CToggleSwitchAutomationPeer;
template<>
struct DependencyObjectTraits<CToggleSwitchAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ToggleSwitchAutomationPeer;
};
class CToolTipAutomationPeer;
template<>
struct DependencyObjectTraits<CToolTipAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ToolTipAutomationPeer;
};
class CTransformCollection;
template<>
struct DependencyObjectTraits<CTransformCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TransformCollection;
};
class CTransformGroup;
template<>
struct DependencyObjectTraits<CTransformGroup>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TransformGroup;
};
class CTransitionCollection;
template<>
struct DependencyObjectTraits<CTransitionCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TransitionCollection;
};
class CTranslateTransform;
template<>
struct DependencyObjectTraits<CTranslateTransform>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TranslateTransform;
};
class CTriggerActionCollection;
template<>
struct DependencyObjectTraits<CTriggerActionCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TriggerActionCollection;
};
class CTriggerCollection;
template<>
struct DependencyObjectTraits<CTriggerCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TriggerCollection;
};
class CUIElementCollection;
template<>
struct DependencyObjectTraits<CUIElementCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::UIElementCollection;
};
class CUIElementWeakCollection;
template<>
struct DependencyObjectTraits<CUIElementWeakCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::UIElementWeakCollection;
};
class CViewbox;
template<>
struct DependencyObjectTraits<CViewbox>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Viewbox;
};
class CVirtualSurfaceImageSource;
template<>
struct DependencyObjectTraits<CVirtualSurfaceImageSource>
{
    static const KnownTypeIndex Index = KnownTypeIndex::VirtualSurfaceImageSource;
};
class CVisualStateCollection;
template<>
struct DependencyObjectTraits<CVisualStateCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::VisualStateCollection;
};
class CVisualStateGroupCollection;
template<>
struct DependencyObjectTraits<CVisualStateGroupCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::VisualStateGroupCollection;
};
class CVisualTransitionCollection;
template<>
struct DependencyObjectTraits<CVisualTransitionCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::VisualTransitionCollection;
};
class CWriteableBitmap;
template<>
struct DependencyObjectTraits<CWriteableBitmap>
{
    static const KnownTypeIndex Index = KnownTypeIndex::WriteableBitmap;
};
class CXamlLightCollection;
template<>
struct DependencyObjectTraits<CXamlLightCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::XamlLightCollection;
};
class CAppBarSeparator;
template<>
struct DependencyObjectTraits<CAppBarSeparator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AppBarSeparator;
};
class CBasedOnSetterCollection;
template<>
struct DependencyObjectTraits<CBasedOnSetterCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BasedOnSetterCollection;
};
class CBitmapIcon;
template<>
struct DependencyObjectTraits<CBitmapIcon>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BitmapIcon;
};
class CBold;
template<>
struct DependencyObjectTraits<CBold>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Bold;
};
class CButtonAutomationPeer;
template<>
struct DependencyObjectTraits<CButtonAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ButtonAutomationPeer;
};
class CCalendarDatePicker;
template<>
struct DependencyObjectTraits<CCalendarDatePicker>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarDatePicker;
};
class CCalendarScrollViewerAutomationPeer;
template<>
struct DependencyObjectTraits<CCalendarScrollViewerAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarScrollViewerAutomationPeer;
};
class CCalendarView;
template<>
struct DependencyObjectTraits<CCalendarView>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarView;
};
class CCalendarViewBaseItemChrome;
template<>
struct DependencyObjectTraits<CCalendarViewBaseItemChrome>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarViewBaseItem;
};
class CCalendarViewDayItemAutomationPeer;
template<>
struct DependencyObjectTraits<CCalendarViewDayItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarViewDayItemAutomationPeer;
};
class CCalendarViewItemAutomationPeer;
template<>
struct DependencyObjectTraits<CCalendarViewItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarViewItemAutomationPeer;
};
class CCanvas;
template<>
struct DependencyObjectTraits<CCanvas>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Canvas;
};
class CCaretBrowsingCaret;
template<>
struct DependencyObjectTraits<CCaretBrowsingCaret>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CaretBrowsingCaret;
};
class CColorPaletteResources;
template<>
struct DependencyObjectTraits<CColorPaletteResources>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ColorPaletteResources;
};
class CComboBoxItemDataAutomationPeer;
template<>
struct DependencyObjectTraits<CComboBoxItemDataAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ComboBoxItemDataAutomationPeer;
};
class CCommandBarElementCollection;
template<>
struct DependencyObjectTraits<CCommandBarElementCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CommandBarElementCollection;
};
class CCommandingContainer;
template<>
struct DependencyObjectTraits<CCommandingContainer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CommandingContainer;
};
class CContentControl;
template<>
struct DependencyObjectTraits<CContentControl>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ContentControl;
};
class CDatePicker;
template<>
struct DependencyObjectTraits<CDatePicker>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DatePicker;
};
class CDependencyObjectCollection;
template<>
struct DependencyObjectTraits<CDependencyObjectCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::DependencyObjectCollection;
};
class CEllipse;
template<>
struct DependencyObjectTraits<CEllipse>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Ellipse;
};
class CFlipViewItemDataAutomationPeer;
template<>
struct DependencyObjectTraits<CFlipViewItemDataAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FlipViewItemDataAutomationPeer;
};
class CFontIcon;
template<>
struct DependencyObjectTraits<CFontIcon>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FontIcon;
};
class CFullWindowMediaRoot;
template<>
struct DependencyObjectTraits<CFullWindowMediaRoot>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FullWindowMediaRoot;
};
class CGrid;
template<>
struct DependencyObjectTraits<CGrid>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Grid;
};
class CGridViewHeaderItemAutomationPeer;
template<>
struct DependencyObjectTraits<CGridViewHeaderItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GridViewHeaderItemAutomationPeer;
};
class CGridViewItemAutomationPeer;
template<>
struct DependencyObjectTraits<CGridViewItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GridViewItemAutomationPeer;
};
class CHub;
template<>
struct DependencyObjectTraits<CHub>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Hub;
};
class CHubSection;
template<>
struct DependencyObjectTraits<CHubSection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HubSection;
};
class HWWindowedPopupCompTreeNodeWinRT;
template<>
struct DependencyObjectTraits<HWWindowedPopupCompTreeNodeWinRT>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HWWindowedPopupCompTreeNodeWinRT;
};
class CHyperlink;
template<>
struct DependencyObjectTraits<CHyperlink>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Hyperlink;
};
class CHyperlinkButtonAutomationPeer;
template<>
struct DependencyObjectTraits<CHyperlinkButtonAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HyperlinkButtonAutomationPeer;
};
class CIconSourceElement;
template<>
struct DependencyObjectTraits<CIconSourceElement>
{
    static const KnownTypeIndex Index = KnownTypeIndex::IconSourceElement;
};
class CItalic;
template<>
struct DependencyObjectTraits<CItalic>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Italic;
};
class CItemCollection;
template<>
struct DependencyObjectTraits<CItemCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ItemCollection;
};
class CItemsControl;
template<>
struct DependencyObjectTraits<CItemsControl>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ItemsControl;
};
class CLine;
template<>
struct DependencyObjectTraits<CLine>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Line;
};
class CListBoxItemDataAutomationPeer;
template<>
struct DependencyObjectTraits<CListBoxItemDataAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListBoxItemDataAutomationPeer;
};
class CListViewBaseItemDataAutomationPeer;
template<>
struct DependencyObjectTraits<CListViewBaseItemDataAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewBaseItemDataAutomationPeer;
};
class CListViewBaseItemChrome;
template<>
struct DependencyObjectTraits<CListViewBaseItemChrome>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewBaseItemPresenter;
};
class CListViewHeaderItemAutomationPeer;
template<>
struct DependencyObjectTraits<CListViewHeaderItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewHeaderItemAutomationPeer;
};
class CListViewItemAutomationPeer;
template<>
struct DependencyObjectTraits<CListViewItemAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewItemAutomationPeer;
};
class CMediaPlayerElement;
template<>
struct DependencyObjectTraits<CMediaPlayerElement>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MediaPlayerElement;
};
class CMediaTransportControls;
template<>
struct DependencyObjectTraits<CMediaTransportControls>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MediaTransportControls;
};
class CMenuFlyoutItemBase;
template<>
struct DependencyObjectTraits<CMenuFlyoutItemBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MenuFlyoutItemBase;
};
class CMenuFlyoutPresenterAutomationPeer;
template<>
struct DependencyObjectTraits<CMenuFlyoutPresenterAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MenuFlyoutPresenterAutomationPeer;
};
class CModernCollectionBasePanel;
template<>
struct DependencyObjectTraits<CModernCollectionBasePanel>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ModernCollectionBasePanel;
};
class CPasswordBox;
template<>
struct DependencyObjectTraits<CPasswordBox>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PasswordBox;
};
class CPath;
template<>
struct DependencyObjectTraits<CPath>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Path;
};
class CPathIcon;
template<>
struct DependencyObjectTraits<CPathIcon>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PathIcon;
};
class CPolygon;
template<>
struct DependencyObjectTraits<CPolygon>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Polygon;
};
class CPolyline;
template<>
struct DependencyObjectTraits<CPolyline>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Polyline;
};
class CRangeBase;
template<>
struct DependencyObjectTraits<CRangeBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RangeBase;
};
class CRectangle;
template<>
struct DependencyObjectTraits<CRectangle>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Rectangle;
};
class CRelativePanel;
template<>
struct DependencyObjectTraits<CRelativePanel>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RelativePanel;
};
class CRenderTargetBitmapRoot;
template<>
struct DependencyObjectTraits<CRenderTargetBitmapRoot>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RenderTargetBitmapRoot;
};
class CRepeatButtonAutomationPeer;
template<>
struct DependencyObjectTraits<CRepeatButtonAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RepeatButtonAutomationPeer;
};
class CRichEditBox;
template<>
struct DependencyObjectTraits<CRichEditBox>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RichEditBox;
};
class CRootVisual;
template<>
struct DependencyObjectTraits<CRootVisual>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RootVisual;
};
class CScrollBarAutomationPeer;
template<>
struct DependencyObjectTraits<CScrollBarAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ScrollBarAutomationPeer;
};
class CScrollContentPresenter;
template<>
struct DependencyObjectTraits<CScrollContentPresenter>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ScrollContentPresenter;
};
class CSelectorAutomationPeer;
template<>
struct DependencyObjectTraits<CSelectorAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SelectorAutomationPeer;
};
class CSemanticZoom;
template<>
struct DependencyObjectTraits<CSemanticZoom>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SemanticZoom;
};
class CSliderAutomationPeer;
template<>
struct DependencyObjectTraits<CSliderAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SliderAutomationPeer;
};
class CSplitView;
template<>
struct DependencyObjectTraits<CSplitView>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SplitView;
};
class CStackPanel;
template<>
struct DependencyObjectTraits<CStackPanel>
{
    static const KnownTypeIndex Index = KnownTypeIndex::StackPanel;
};
class CSymbolIcon;
template<>
struct DependencyObjectTraits<CSymbolIcon>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SymbolIcon;
};
class CTextBox;
template<>
struct DependencyObjectTraits<CTextBox>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextBox;
};
class CTextBoxBase;
template<>
struct DependencyObjectTraits<CTextBoxBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextBoxBase;
};
class CThumb;
template<>
struct DependencyObjectTraits<CThumb>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Thumb;
};
class CTickBar;
template<>
struct DependencyObjectTraits<CTickBar>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TickBar;
};
class CTimePicker;
template<>
struct DependencyObjectTraits<CTimePicker>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TimePicker;
};
class CToggleButtonAutomationPeer;
template<>
struct DependencyObjectTraits<CToggleButtonAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ToggleButtonAutomationPeer;
};
class CToggleSwitch;
template<>
struct DependencyObjectTraits<CToggleSwitch>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ToggleSwitch;
};
class CUnderline;
template<>
struct DependencyObjectTraits<CUnderline>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Underline;
};
class CUserControl;
template<>
struct DependencyObjectTraits<CUserControl>
{
    static const KnownTypeIndex Index = KnownTypeIndex::UserControl;
};
class CValidationErrorsCollection;
template<>
struct DependencyObjectTraits<CValidationErrorsCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ValidationErrorsCollection;
};
class CVariableSizedWrapGrid;
template<>
struct DependencyObjectTraits<CVariableSizedWrapGrid>
{
    static const KnownTypeIndex Index = KnownTypeIndex::VariableSizedWrapGrid;
};
class CVirtualizingPanel;
template<>
struct DependencyObjectTraits<CVirtualizingPanel>
{
    static const KnownTypeIndex Index = KnownTypeIndex::VirtualizingPanel;
};
class CXamlIslandRoot;
template<>
struct DependencyObjectTraits<CXamlIslandRoot>
{
    static const KnownTypeIndex Index = KnownTypeIndex::XamlIslandRoot;
};
class CXamlIslandRootCollection;
template<>
struct DependencyObjectTraits<CXamlIslandRootCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::XamlIslandRootCollection;
};
class CAppBar;
template<>
struct DependencyObjectTraits<CAppBar>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AppBar;
};
class CAppBarButtonAutomationPeer;
template<>
struct DependencyObjectTraits<CAppBarButtonAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AppBarButtonAutomationPeer;
};
class CAppBarElementContainer;
template<>
struct DependencyObjectTraits<CAppBarElementContainer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AppBarElementContainer;
};
class CAppBarLightDismiss;
template<>
struct DependencyObjectTraits<CAppBarLightDismiss>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AppBarLightDismiss;
};
class CAppBarToggleButtonAutomationPeer;
template<>
struct DependencyObjectTraits<CAppBarToggleButtonAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AppBarToggleButtonAutomationPeer;
};
class CAutoSuggestBox;
template<>
struct DependencyObjectTraits<CAutoSuggestBox>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AutoSuggestBox;
};
class CBlockCollection;
template<>
struct DependencyObjectTraits<CBlockCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::BlockCollection;
};
class CButtonBase;
template<>
struct DependencyObjectTraits<CButtonBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ButtonBase;
};
class CCalendarPanel;
template<>
struct DependencyObjectTraits<CCalendarPanel>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarPanel;
};
class CCalendarViewDayItemChrome;
template<>
struct DependencyObjectTraits<CCalendarViewDayItemChrome>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarViewDayItem;
};
class CCalendarViewItemChrome;
template<>
struct DependencyObjectTraits<CCalendarViewItemChrome>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CalendarViewItem;
};
class CCarouselPanel;
template<>
struct DependencyObjectTraits<CCarouselPanel>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CarouselPanel;
};
class CCheckBoxAutomationPeer;
template<>
struct DependencyObjectTraits<CCheckBoxAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CheckBoxAutomationPeer;
};
class CComboBoxAutomationPeer;
template<>
struct DependencyObjectTraits<CComboBoxAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ComboBoxAutomationPeer;
};
class CComboBoxLightDismiss;
template<>
struct DependencyObjectTraits<CComboBoxLightDismiss>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ComboBoxLightDismiss;
};
class CCommandBarOverflowPresenter;
template<>
struct DependencyObjectTraits<CCommandBarOverflowPresenter>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CommandBarOverflowPresenter;
};
class CContentDialog;
template<>
struct DependencyObjectTraits<CContentDialog>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ContentDialog;
};
class CFlipViewAutomationPeer;
template<>
struct DependencyObjectTraits<CFlipViewAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FlipViewAutomationPeer;
};
class CFlyoutPresenter;
template<>
struct DependencyObjectTraits<CFlyoutPresenter>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FlyoutPresenter;
};
class CFrame;
template<>
struct DependencyObjectTraits<CFrame>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Frame;
};
class CGridViewItemDataAutomationPeer;
template<>
struct DependencyObjectTraits<CGridViewItemDataAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GridViewItemDataAutomationPeer;
};
class CGridViewItemChrome;
template<>
struct DependencyObjectTraits<CGridViewItemChrome>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GridViewItemPresenter;
};
class CGroupItem;
template<>
struct DependencyObjectTraits<CGroupItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GroupItem;
};
class CInlineCollection;
template<>
struct DependencyObjectTraits<CInlineCollection>
{
    static const KnownTypeIndex Index = KnownTypeIndex::InlineCollection;
};
class CItemsStackPanel;
template<>
struct DependencyObjectTraits<CItemsStackPanel>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ItemsStackPanel;
};
class CItemsWrapGrid;
template<>
struct DependencyObjectTraits<CItemsWrapGrid>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ItemsWrapGrid;
};
class CListBoxAutomationPeer;
template<>
struct DependencyObjectTraits<CListBoxAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListBoxAutomationPeer;
};
class CListViewBaseAutomationPeer;
template<>
struct DependencyObjectTraits<CListViewBaseAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewBaseAutomationPeer;
};
class CListViewBaseHeaderItem;
template<>
struct DependencyObjectTraits<CListViewBaseHeaderItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewBaseHeaderItem;
};
class CListViewItemDataAutomationPeer;
template<>
struct DependencyObjectTraits<CListViewItemDataAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewItemDataAutomationPeer;
};
class CListViewItemChrome;
template<>
struct DependencyObjectTraits<CListViewItemChrome>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewItemPresenter;
};
class CMenuFlyoutItem;
template<>
struct DependencyObjectTraits<CMenuFlyoutItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MenuFlyoutItem;
};
class CMenuFlyoutPresenter;
template<>
struct DependencyObjectTraits<CMenuFlyoutPresenter>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MenuFlyoutPresenter;
};
class CMenuFlyoutSeparator;
template<>
struct DependencyObjectTraits<CMenuFlyoutSeparator>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MenuFlyoutSeparator;
};
class CMenuFlyoutSubItem;
template<>
struct DependencyObjectTraits<CMenuFlyoutSubItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::MenuFlyoutSubItem;
};
class COrientedVirtualizingPanel;
template<>
struct DependencyObjectTraits<COrientedVirtualizingPanel>
{
    static const KnownTypeIndex Index = KnownTypeIndex::OrientedVirtualizingPanel;
};
class CPage;
template<>
struct DependencyObjectTraits<CPage>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Page;
};
class CPopupRoot;
template<>
struct DependencyObjectTraits<CPopupRoot>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PopupRoot;
};
class CPrintRoot;
template<>
struct DependencyObjectTraits<CPrintRoot>
{
    static const KnownTypeIndex Index = KnownTypeIndex::PrintRoot;
};
class CRadioButtonAutomationPeer;
template<>
struct DependencyObjectTraits<CRadioButtonAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RadioButtonAutomationPeer;
};
class CScrollBar;
template<>
struct DependencyObjectTraits<CScrollBar>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ScrollBar;
};
class CScrollContentControl;
template<>
struct DependencyObjectTraits<CScrollContentControl>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ScrollContentControl;
};
class CSeekSliderAutomationPeer;
template<>
struct DependencyObjectTraits<CSeekSliderAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SeekSliderAutomationPeer;
};
class CSelector;
template<>
struct DependencyObjectTraits<CSelector>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Selector;
};
class CSelectorItem;
template<>
struct DependencyObjectTraits<CSelectorItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SelectorItem;
};
class CSlider;
template<>
struct DependencyObjectTraits<CSlider>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Slider;
};
class CSwapChainBackgroundPanel;
template<>
struct DependencyObjectTraits<CSwapChainBackgroundPanel>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SwapChainBackgroundPanel;
};
class CSwapChainPanel;
template<>
struct DependencyObjectTraits<CSwapChainPanel>
{
    static const KnownTypeIndex Index = KnownTypeIndex::SwapChainPanel;
};
class CTextSelectionGripper;
template<>
struct DependencyObjectTraits<CTextSelectionGripper>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TextSelectionGripper;
};
class CToolTip;
template<>
struct DependencyObjectTraits<CToolTip>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ToolTip;
};
class CTransitionRoot;
template<>
struct DependencyObjectTraits<CTransitionRoot>
{
    static const KnownTypeIndex Index = KnownTypeIndex::TransitionRoot;
};
class CWindowChrome;
template<>
struct DependencyObjectTraits<CWindowChrome>
{
    static const KnownTypeIndex Index = KnownTypeIndex::WindowChrome;
};
class CButton;
template<>
struct DependencyObjectTraits<CButton>
{
    static const KnownTypeIndex Index = KnownTypeIndex::Button;
};
class CComboBox;
template<>
struct DependencyObjectTraits<CComboBox>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ComboBox;
};
class CComboBoxItem;
template<>
struct DependencyObjectTraits<CComboBoxItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ComboBoxItem;
};
class CCommandBar;
template<>
struct DependencyObjectTraits<CCommandBar>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CommandBar;
};
class CFlipView;
template<>
struct DependencyObjectTraits<CFlipView>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FlipView;
};
class CFlipViewItem;
template<>
struct DependencyObjectTraits<CFlipViewItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::FlipViewItem;
};
class CGridViewAutomationPeer;
template<>
struct DependencyObjectTraits<CGridViewAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GridViewAutomationPeer;
};
class CGridViewHeaderItem;
template<>
struct DependencyObjectTraits<CGridViewHeaderItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GridViewHeaderItem;
};
class CHyperlinkButton;
template<>
struct DependencyObjectTraits<CHyperlinkButton>
{
    static const KnownTypeIndex Index = KnownTypeIndex::HyperlinkButton;
};
class CListBox;
template<>
struct DependencyObjectTraits<CListBox>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListBox;
};
class CListBoxItem;
template<>
struct DependencyObjectTraits<CListBoxItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListBoxItem;
};
class CListViewAutomationPeer;
template<>
struct DependencyObjectTraits<CListViewAutomationPeer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewAutomationPeer;
};
class CListViewBase;
template<>
struct DependencyObjectTraits<CListViewBase>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewBase;
};
class CListViewBaseItem;
template<>
struct DependencyObjectTraits<CListViewBaseItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewBaseItem;
};
class CListViewHeaderItem;
template<>
struct DependencyObjectTraits<CListViewHeaderItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewHeaderItem;
};
class CRepeatButton;
template<>
struct DependencyObjectTraits<CRepeatButton>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RepeatButton;
};
class CScrollViewer;
template<>
struct DependencyObjectTraits<CScrollViewer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ScrollViewer;
};
class CToggleButton;
template<>
struct DependencyObjectTraits<CToggleButton>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ToggleButton;
};
class CToggleMenuFlyoutItem;
template<>
struct DependencyObjectTraits<CToggleMenuFlyoutItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ToggleMenuFlyoutItem;
};
class CVirtualizingStackPanel;
template<>
struct DependencyObjectTraits<CVirtualizingStackPanel>
{
    static const KnownTypeIndex Index = KnownTypeIndex::VirtualizingStackPanel;
};
class CWrapGrid;
template<>
struct DependencyObjectTraits<CWrapGrid>
{
    static const KnownTypeIndex Index = KnownTypeIndex::WrapGrid;
};
class CAppBarButton;
template<>
struct DependencyObjectTraits<CAppBarButton>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AppBarButton;
};
class CAppBarToggleButton;
template<>
struct DependencyObjectTraits<CAppBarToggleButton>
{
    static const KnownTypeIndex Index = KnownTypeIndex::AppBarToggleButton;
};
class CCheckBox;
template<>
struct DependencyObjectTraits<CCheckBox>
{
    static const KnownTypeIndex Index = KnownTypeIndex::CheckBox;
};
class CGridView;
template<>
struct DependencyObjectTraits<CGridView>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GridView;
};
class CGridViewItem;
template<>
struct DependencyObjectTraits<CGridViewItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::GridViewItem;
};
class CListView;
template<>
struct DependencyObjectTraits<CListView>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListView;
};
class CListViewItem;
template<>
struct DependencyObjectTraits<CListViewItem>
{
    static const KnownTypeIndex Index = KnownTypeIndex::ListViewItem;
};
class CRadioButton;
template<>
struct DependencyObjectTraits<CRadioButton>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RadioButton;
};
class CRootScrollViewer;
template<>
struct DependencyObjectTraits<CRootScrollViewer>
{
    static const KnownTypeIndex Index = KnownTypeIndex::RootScrollViewer;
};
