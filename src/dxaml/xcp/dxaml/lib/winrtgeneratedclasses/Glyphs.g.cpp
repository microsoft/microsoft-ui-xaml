// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "Glyphs.g.h"
#include "Brush.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::Glyphs::Glyphs()
{
}

DirectUI::Glyphs::~Glyphs()
{
}

HRESULT DirectUI::Glyphs::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::Glyphs)))
    {
        *ppObject = static_cast<DirectUI::Glyphs*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Documents::IGlyphs)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Documents::IGlyphs*>(this);
    }
    else
    {
        RRETURN(DirectUI::FrameworkElement::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::Glyphs::get_ColorFontPaletteIndex(_Out_ INT* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::Glyphs_ColorFontPaletteIndex, pValue));
}
IFACEMETHODIMP DirectUI::Glyphs::put_ColorFontPaletteIndex(_In_ INT value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::Glyphs_ColorFontPaletteIndex, value));
}
IFACEMETHODIMP DirectUI::Glyphs::get_Fill(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IBrush** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::Glyphs_Fill, ppValue));
}
IFACEMETHODIMP DirectUI::Glyphs::put_Fill(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IBrush* pValue)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::Glyphs_Fill, pValue));
}
IFACEMETHODIMP DirectUI::Glyphs::get_FontRenderingEmSize(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::Glyphs_FontRenderingEmSize, pValue));
}
IFACEMETHODIMP DirectUI::Glyphs::put_FontRenderingEmSize(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::Glyphs_FontRenderingEmSize, value));
}
IFACEMETHODIMP DirectUI::Glyphs::get_FontUri(_Outptr_result_maybenull_ ABI::Windows::Foundation::IUriRuntimeClass** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::Glyphs_FontUri, ppValue));
}
IFACEMETHODIMP DirectUI::Glyphs::put_FontUri(_In_opt_ ABI::Windows::Foundation::IUriRuntimeClass* pValue)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::Glyphs_FontUri, pValue));
}
IFACEMETHODIMP DirectUI::Glyphs::get_Indices(_Out_ HSTRING* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::Glyphs_Indices, pValue));
}
IFACEMETHODIMP DirectUI::Glyphs::put_Indices(_In_opt_ HSTRING value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::Glyphs_Indices, value));
}
IFACEMETHODIMP DirectUI::Glyphs::get_IsColorFontEnabled(_Out_ BOOLEAN* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::Glyphs_IsColorFontEnabled, pValue));
}
IFACEMETHODIMP DirectUI::Glyphs::put_IsColorFontEnabled(_In_ BOOLEAN value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::Glyphs_IsColorFontEnabled, value));
}
IFACEMETHODIMP DirectUI::Glyphs::get_OriginX(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::Glyphs_OriginX, pValue));
}
IFACEMETHODIMP DirectUI::Glyphs::put_OriginX(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::Glyphs_OriginX, value));
}
IFACEMETHODIMP DirectUI::Glyphs::get_OriginY(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::Glyphs_OriginY, pValue));
}
IFACEMETHODIMP DirectUI::Glyphs::put_OriginY(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::Glyphs_OriginY, value));
}
IFACEMETHODIMP DirectUI::Glyphs::get_StyleSimulations(_Out_ ABI::Microsoft::UI::Xaml::Media::StyleSimulations* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::Glyphs_StyleSimulations, pValue));
}
IFACEMETHODIMP DirectUI::Glyphs::put_StyleSimulations(_In_ ABI::Microsoft::UI::Xaml::Media::StyleSimulations value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::Glyphs_StyleSimulations, value));
}
IFACEMETHODIMP DirectUI::Glyphs::get_UnicodeString(_Out_ HSTRING* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::Glyphs_UnicodeString, pValue));
}
IFACEMETHODIMP DirectUI::Glyphs::put_UnicodeString(_In_opt_ HSTRING value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::Glyphs_UnicodeString, value));
}

// Events.

// Methods.
_Check_return_ HRESULT DirectUI::Glyphs::SetFontSource(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pDownloader, _In_ HSTRING partName)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        XamlTelemetry::PublicApiCall(true, reinterpret_cast<uint64_t>(this), "Glyphs_SetFontSource", 0);
    }
    ARG_NOTNULL(pDownloader, "downloader");
    ARG_NOTNULL(partName, "partName");
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        XamlTelemetry::PublicApiCall(false, reinterpret_cast<uint64_t>(this), "Glyphs_SetFontSource", hr);
    }
    RRETURN(hr);
}

HRESULT DirectUI::GlyphsFactory::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Documents::IGlyphsStatics)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Documents::IGlyphsStatics*>(this);
    }
    else
    {
        RRETURN(ctl::BetterCoreObjectActivationFactory::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}


// Factory methods.

// Dependency properties.
IFACEMETHODIMP DirectUI::GlyphsFactory::get_UnicodeStringProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::Glyphs_UnicodeString, ppValue));
}
IFACEMETHODIMP DirectUI::GlyphsFactory::get_IndicesProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::Glyphs_Indices, ppValue));
}
IFACEMETHODIMP DirectUI::GlyphsFactory::get_FontUriProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::Glyphs_FontUri, ppValue));
}
IFACEMETHODIMP DirectUI::GlyphsFactory::get_StyleSimulationsProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::Glyphs_StyleSimulations, ppValue));
}
IFACEMETHODIMP DirectUI::GlyphsFactory::get_FontRenderingEmSizeProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::Glyphs_FontRenderingEmSize, ppValue));
}
IFACEMETHODIMP DirectUI::GlyphsFactory::get_OriginXProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::Glyphs_OriginX, ppValue));
}
IFACEMETHODIMP DirectUI::GlyphsFactory::get_OriginYProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::Glyphs_OriginY, ppValue));
}
IFACEMETHODIMP DirectUI::GlyphsFactory::get_FillProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::Glyphs_Fill, ppValue));
}
IFACEMETHODIMP DirectUI::GlyphsFactory::get_IsColorFontEnabledProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::Glyphs_IsColorFontEnabled, ppValue));
}
IFACEMETHODIMP DirectUI::GlyphsFactory::get_ColorFontPaletteIndexProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::Glyphs_ColorFontPaletteIndex, ppValue));
}

// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_Glyphs()
    {
        RRETURN(ctl::ActivationFactoryCreator<GlyphsFactory>::CreateActivationFactory());
    }
}
