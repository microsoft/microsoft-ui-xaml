// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "RoutedEventArgs.g.h"

#define __ScrollEventArgs_GUID "2333f37b-d79f-4a68-a2de-ffe767d7171d"

namespace DirectUI
{
    class ScrollEventArgs;

    class __declspec(novtable) ScrollEventArgsGenerated :
        public ABI::Microsoft::UI::Xaml::Controls::Primitives::IScrollEventArgs,
        public DirectUI::RoutedEventArgs
    {
        friend class DirectUI::ScrollEventArgs;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs");

        BEGIN_INTERFACE_MAP(ScrollEventArgsGenerated, DirectUI::RoutedEventArgs)
            INTERFACE_ENTRY(ScrollEventArgsGenerated, ABI::Microsoft::UI::Xaml::Controls::Primitives::IScrollEventArgs)
        END_INTERFACE_MAP(ScrollEventArgsGenerated, DirectUI::RoutedEventArgs)

    public:
        ScrollEventArgsGenerated();
        ~ScrollEventArgsGenerated() override;

        // Properties.
        IFACEMETHOD(get_NewValue)(_Out_ DOUBLE* pValue) override;
        _Check_return_ HRESULT put_NewValue(_In_ DOUBLE value);
        IFACEMETHOD(get_ScrollEventType)(_Out_ ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollEventType* pValue) override;
        _Check_return_ HRESULT put_ScrollEventType(_In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollEventType value);

        // Methods.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "ScrollEventArgs_Partial.h"

