// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __ElementFactoryRecycleArgs_GUID "47dd5be5-8a0d-4f61-9219-efc20b6fcaf0"

namespace DirectUI
{
    class ElementFactoryRecycleArgs;
    class UIElement;

    class __declspec(novtable) __declspec(uuid(__ElementFactoryRecycleArgs_GUID)) ElementFactoryRecycleArgs:
        public ctl::WeakReferenceSource
        , public ABI::Microsoft::UI::Xaml::IElementFactoryRecycleArgs
    {

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.ElementFactoryRecycleArgs");

        BEGIN_INTERFACE_MAP(ElementFactoryRecycleArgs, ctl::WeakReferenceSource)
            INTERFACE_ENTRY(ElementFactoryRecycleArgs, ABI::Microsoft::UI::Xaml::IElementFactoryRecycleArgs)
        END_INTERFACE_MAP(ElementFactoryRecycleArgs, ctl::WeakReferenceSource)

    public:
        ElementFactoryRecycleArgs();
        ~ElementFactoryRecycleArgs() override;

        // Event source typedefs.


        // Properties.
        IFACEMETHOD(get_Element)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IUIElement** ppValue) override;
        IFACEMETHOD(put_Element)(_In_opt_ ABI::Microsoft::UI::Xaml::IUIElement* pValue) override;
        IFACEMETHOD(get_Parent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IUIElement** ppValue) override;
        IFACEMETHOD(put_Parent)(_In_opt_ ABI::Microsoft::UI::Xaml::IUIElement* pValue) override;

        // Events.

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:
        // Customized properties.

        // Customized methods.

        // Fields.
        TrackerPtr<ABI::Microsoft::UI::Xaml::IUIElement> m_pElement;
        TrackerPtr<ABI::Microsoft::UI::Xaml::IUIElement> m_pParent;
    };
}


namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) ElementFactoryRecycleArgsFactory:
       public ctl::AggregableActivationFactory<DirectUI::ElementFactoryRecycleArgs>
        , public ABI::Microsoft::UI::Xaml::IElementFactoryRecycleArgsFactory
    {
        BEGIN_INTERFACE_MAP(ElementFactoryRecycleArgsFactory, ctl::AggregableActivationFactory<DirectUI::ElementFactoryRecycleArgs>)
            INTERFACE_ENTRY(ElementFactoryRecycleArgsFactory, ABI::Microsoft::UI::Xaml::IElementFactoryRecycleArgsFactory)
        END_INTERFACE_MAP(ElementFactoryRecycleArgsFactory, ctl::AggregableActivationFactory<DirectUI::ElementFactoryRecycleArgs>)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::IElementFactoryRecycleArgs** ppInstance);

        // Static properties.

        // Dependency properties.

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;



    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
