// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "XamlSourceFocusNavigationRequest.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::XamlSourceFocusNavigationRequestGenerated::XamlSourceFocusNavigationRequestGenerated()
{
}

DirectUI::XamlSourceFocusNavigationRequestGenerated::~XamlSourceFocusNavigationRequestGenerated()
{
}

HRESULT DirectUI::XamlSourceFocusNavigationRequestGenerated::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::XamlSourceFocusNavigationRequest)))
    {
        *ppObject = static_cast<DirectUI::XamlSourceFocusNavigationRequest*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Hosting::IXamlSourceFocusNavigationRequest)))
    {
        *ppObject = ctl::interface_cast<ABI::Microsoft::UI::Xaml::Hosting::IXamlSourceFocusNavigationRequest>(this);
    }
    else
    {
        RRETURN(ctl::WeakReferenceSource::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
_Check_return_ HRESULT STDMETHODCALLTYPE DirectUI::XamlSourceFocusNavigationRequestGenerated::get_CorrelationId(_Out_ GUID* pValue)
{
    HRESULT hr = S_OK;
    ARG_VALIDRETURNPOINTER(pValue);
    
    IFC(static_cast<XamlSourceFocusNavigationRequest*>(this)->get_CorrelationIdImpl(pValue));
Cleanup:
    RRETURN(hr);
}
_Check_return_ HRESULT STDMETHODCALLTYPE DirectUI::XamlSourceFocusNavigationRequestGenerated::get_HintRect(_Out_ ABI::Windows::Foundation::Rect* pValue)
{
    HRESULT hr = S_OK;
    ARG_VALIDRETURNPOINTER(pValue);
    
    IFC(static_cast<XamlSourceFocusNavigationRequest*>(this)->get_HintRectImpl(pValue));
Cleanup:
    RRETURN(hr);
}
_Check_return_ HRESULT STDMETHODCALLTYPE DirectUI::XamlSourceFocusNavigationRequestGenerated::get_Reason(_Out_ ABI::Microsoft::UI::Xaml::Hosting::XamlSourceFocusNavigationReason* pValue)
{
    HRESULT hr = S_OK;
    ARG_VALIDRETURNPOINTER(pValue);
    
    IFC(static_cast<XamlSourceFocusNavigationRequest*>(this)->get_ReasonImpl(pValue));
Cleanup:
    RRETURN(hr);
}

// Events.

// Methods.

HRESULT DirectUI::XamlSourceFocusNavigationRequestFactory::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Hosting::IXamlSourceFocusNavigationRequestFactory)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Hosting::IXamlSourceFocusNavigationRequestFactory*>(this);
    }
    else
    {
        RRETURN(ctl::AbstractActivationFactory::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

_Check_return_ HRESULT DirectUI::XamlSourceFocusNavigationRequestFactory::CheckActivationAllowed()
{
    RRETURN(S_OK);
}

// Factory methods.
IFACEMETHODIMP DirectUI::XamlSourceFocusNavigationRequestFactory::CreateInstance(_In_ ABI::Microsoft::UI::Xaml::Hosting::XamlSourceFocusNavigationReason reason, _Outptr_ ABI::Microsoft::UI::Xaml::Hosting::IXamlSourceFocusNavigationRequest** ppInstance)
{
    HRESULT hr = S_OK;
    
    ARG_VALIDRETURNPOINTER(ppInstance);
    IFC(CreateInstanceImpl(reason, ppInstance));
Cleanup:
    return hr;
}
IFACEMETHODIMP DirectUI::XamlSourceFocusNavigationRequestFactory::CreateInstanceWithHintRect(_In_ ABI::Microsoft::UI::Xaml::Hosting::XamlSourceFocusNavigationReason reason, _In_ ABI::Windows::Foundation::Rect hintRect, _Outptr_ ABI::Microsoft::UI::Xaml::Hosting::IXamlSourceFocusNavigationRequest** ppInstance)
{
    HRESULT hr = S_OK;
    
    ARG_VALIDRETURNPOINTER(ppInstance);
    IFC(CreateInstanceWithHintRectImpl(reason, hintRect, ppInstance));
Cleanup:
    return hr;
}
IFACEMETHODIMP DirectUI::XamlSourceFocusNavigationRequestFactory::CreateInstanceWithHintRectAndCorrelationId(_In_ ABI::Microsoft::UI::Xaml::Hosting::XamlSourceFocusNavigationReason reason, _In_ ABI::Windows::Foundation::Rect hintRect, _In_ GUID correlationId, _Outptr_ ABI::Microsoft::UI::Xaml::Hosting::IXamlSourceFocusNavigationRequest** ppInstance)
{
    HRESULT hr = S_OK;
    
    ARG_VALIDRETURNPOINTER(ppInstance);
    IFC(CreateInstanceWithHintRectAndCorrelationIdImpl(reason, hintRect, correlationId, ppInstance));
Cleanup:
    return hr;
}

// Dependency properties.

// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_XamlSourceFocusNavigationRequest()
    {
        RRETURN(ctl::ActivationFactoryCreator<XamlSourceFocusNavigationRequestFactory>::CreateActivationFactory());
    }
}
