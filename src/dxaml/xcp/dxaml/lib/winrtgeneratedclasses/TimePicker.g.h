// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "Control.g.h"
#include <FeatureFlags.h>
#if WI_IS_FEATURE_PRESENT(Feature_HeaderPlacement) 
#define FEATURE_HEADERPLACEMENT_OVERRIDE override
#else
#define FEATURE_HEADERPLACEMENT_OVERRIDE
#endif
#define __TimePicker_GUID "a7c4ae46-6dae-4d6e-a957-eb1fa53f3049"

namespace DirectUI
{
    class TimePicker;
    class DataTemplate;

    class __declspec(novtable) TimePickerGenerated:
        public DirectUI::Control
        , public ABI::Microsoft::UI::Xaml::Controls::ITimePicker
#if WI_IS_FEATURE_PRESENT(Feature_HeaderPlacement)
        , public ABI::Microsoft::UI::Xaml::Controls::ITimePickerFeature_HeaderPlacement
#endif
    {
        friend class DirectUI::TimePicker;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.TimePicker");

        BEGIN_INTERFACE_MAP(TimePickerGenerated, DirectUI::Control)
            INTERFACE_ENTRY(TimePickerGenerated, ABI::Microsoft::UI::Xaml::Controls::ITimePicker)
#if WI_IS_FEATURE_PRESENT(Feature_HeaderPlacement)
            INTERFACE_ENTRY(TimePickerGenerated, ABI::Microsoft::UI::Xaml::Controls::ITimePickerFeature_HeaderPlacement)
#endif
        END_INTERFACE_MAP(TimePickerGenerated, DirectUI::Control)

    public:
        TimePickerGenerated();
        ~TimePickerGenerated() override;

        // Event source typedefs.
        typedef CEventSource<ABI::Windows::Foundation::IEventHandler<ABI::Microsoft::UI::Xaml::Controls::TimePickerValueChangedEventArgs*>, IInspectable, ABI::Microsoft::UI::Xaml::Controls::ITimePickerValueChangedEventArgs> TimeChangedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::TimePicker*, ABI::Microsoft::UI::Xaml::Controls::TimePickerSelectedValueChangedEventArgs*>, ABI::Microsoft::UI::Xaml::Controls::ITimePicker, ABI::Microsoft::UI::Xaml::Controls::ITimePickerSelectedValueChangedEventArgs> SelectedTimeChangedEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::TimePicker;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::TimePicker;
        }

        // Properties.
        IFACEMETHOD(get_ClockIdentifier)(_Out_ HSTRING* pValue) override;
        IFACEMETHOD(put_ClockIdentifier)(_In_opt_ HSTRING value) override;
        IFACEMETHOD(get_Header)(_Outptr_result_maybenull_ IInspectable** ppValue) override;
        IFACEMETHOD(put_Header)(_In_opt_ IInspectable* pValue) override;
        IFACEMETHOD(get_HeaderPlacement)(_Out_ ABI::Microsoft::UI::Xaml::Controls::ControlHeaderPlacement* pValue) FEATURE_HEADERPLACEMENT_OVERRIDE;
        IFACEMETHOD(put_HeaderPlacement)(_In_ ABI::Microsoft::UI::Xaml::Controls::ControlHeaderPlacement value) FEATURE_HEADERPLACEMENT_OVERRIDE;
        IFACEMETHOD(get_HeaderTemplate)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDataTemplate** ppValue) override;
        IFACEMETHOD(put_HeaderTemplate)(_In_opt_ ABI::Microsoft::UI::Xaml::IDataTemplate* pValue) override;
        IFACEMETHOD(get_LightDismissOverlayMode)(_Out_ ABI::Microsoft::UI::Xaml::Controls::LightDismissOverlayMode* pValue) override;
        IFACEMETHOD(put_LightDismissOverlayMode)(_In_ ABI::Microsoft::UI::Xaml::Controls::LightDismissOverlayMode value) override;
        IFACEMETHOD(get_MinuteIncrement)(_Out_ INT* pValue) override;
        IFACEMETHOD(put_MinuteIncrement)(_In_ INT value) override;
        IFACEMETHOD(get_SelectedTime)(_Out_ ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::TimeSpan>** ppValue) override;
        IFACEMETHOD(put_SelectedTime)(_In_ ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::TimeSpan>* pValue) override;
        IFACEMETHOD(get_Time)(_Out_ ABI::Windows::Foundation::TimeSpan* pValue) override;
        IFACEMETHOD(put_Time)(_In_ ABI::Windows::Foundation::TimeSpan value) override;

        // Events.
        _Check_return_ HRESULT GetSelectedTimeChangedEventSourceNoRef(_Outptr_ SelectedTimeChangedEventSourceType** ppEventSource);
        IFACEMETHOD(add_SelectedTimeChanged)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::TimePicker*, ABI::Microsoft::UI::Xaml::Controls::TimePickerSelectedValueChangedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_SelectedTimeChanged)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetTimeChangedEventSourceNoRef(_Outptr_ TimeChangedEventSourceType** ppEventSource);
        IFACEMETHOD(add_TimeChanged)(_In_ ABI::Windows::Foundation::IEventHandler<ABI::Microsoft::UI::Xaml::Controls::TimePickerValueChangedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_TimeChanged)(_In_ EventRegistrationToken token) override;

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;
        _Check_return_ HRESULT EventAddHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler, _In_ BOOLEAN handledEventsToo) override;
        _Check_return_ HRESULT EventRemoveHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler) override;

    private:

        // Fields.
    };
}

#include "TimePicker_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) TimePickerFactory:
       public ctl::BetterAggregableCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Controls::ITimePickerFactory
        , public ABI::Microsoft::UI::Xaml::Controls::ITimePickerStatics
#if WI_IS_FEATURE_PRESENT(Feature_HeaderPlacement)
        , public ABI::Microsoft::UI::Xaml::Controls::ITimePickerStaticsFeature_HeaderPlacement
#endif
    {
        BEGIN_INTERFACE_MAP(TimePickerFactory, ctl::BetterAggregableCoreObjectActivationFactory)
            INTERFACE_ENTRY(TimePickerFactory, ABI::Microsoft::UI::Xaml::Controls::ITimePickerFactory)
            INTERFACE_ENTRY(TimePickerFactory, ABI::Microsoft::UI::Xaml::Controls::ITimePickerStatics)
#if WI_IS_FEATURE_PRESENT(Feature_HeaderPlacement)
            INTERFACE_ENTRY(TimePickerFactory, ABI::Microsoft::UI::Xaml::Controls::ITimePickerStaticsFeature_HeaderPlacement)
#endif
        END_INTERFACE_MAP(TimePickerFactory, ctl::BetterAggregableCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::ITimePicker** ppInstance);

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_HeaderProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_HeaderTemplateProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ClockIdentifierProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_MinuteIncrementProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_TimeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_LightDismissOverlayModeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_SelectedTimeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_HeaderPlacementProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) FEATURE_HEADERPLACEMENT_OVERRIDE;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::TimePicker;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
