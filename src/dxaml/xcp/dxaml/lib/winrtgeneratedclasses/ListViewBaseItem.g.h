// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "SelectorItem.g.h"
#include "ITransitionContextProvider.g.h"

#define __ListViewBaseItem_GUID "d91e6ee3-8fa0-430b-a59f-93a24e9f89f4"

namespace DirectUI
{
    class ListViewBaseItem;

    class __declspec(novtable) ListViewBaseItemGenerated:
        public DirectUI::SelectorItem
        , public DirectUI::ITransitionContextProvider
    {
        friend class DirectUI::ListViewBaseItem;



    public:
        ListViewBaseItemGenerated();
        ~ListViewBaseItemGenerated() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::ListViewBaseItem;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::ListViewBaseItem;
        }

        // Properties.
        _Check_return_ HRESULT get_IsDraggable(_Out_ BOOLEAN* pValue);
        _Check_return_ HRESULT put_IsDraggable(_In_ BOOLEAN value);

        // Events.

        // Methods.
        IFACEMETHOD(GetCurrentTransitionContext)(_In_ INT LayoutTickId, _Out_ DirectUI::ThemeTransitionContext* pReturnValue) = 0;
        IFACEMETHOD(GetDropOffsetToRoot)(_Out_ ABI::Windows::Foundation::Point* pReturnValue) = 0;
        IFACEMETHOD(IsCollectionMutatingFast)(_Out_ BOOLEAN* pReturnValue) = 0;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "ListViewBaseItem_Partial.h"

