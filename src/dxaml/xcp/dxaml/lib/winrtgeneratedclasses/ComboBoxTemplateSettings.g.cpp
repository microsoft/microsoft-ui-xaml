// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "ComboBoxTemplateSettings.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::ComboBoxTemplateSettings::ComboBoxTemplateSettings()
{
}

DirectUI::ComboBoxTemplateSettings::~ComboBoxTemplateSettings()
{
}

HRESULT DirectUI::ComboBoxTemplateSettings::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::ComboBoxTemplateSettings)))
    {
        *ppObject = static_cast<DirectUI::ComboBoxTemplateSettings*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IComboBoxTemplateSettings)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::IComboBoxTemplateSettings*>(this);
    }
    else
    {
        RRETURN(DirectUI::DependencyObject::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::ComboBoxTemplateSettings::get_DropDownClosedHeight(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::ComboBoxTemplateSettings_DropDownClosedHeight, pValue));
}
_Check_return_ HRESULT DirectUI::ComboBoxTemplateSettings::put_DropDownClosedHeight(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::ComboBoxTemplateSettings_DropDownClosedHeight, value));
}
IFACEMETHODIMP DirectUI::ComboBoxTemplateSettings::get_DropDownContentMinWidth(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::ComboBoxTemplateSettings_DropDownContentMinWidth, pValue));
}
_Check_return_ HRESULT DirectUI::ComboBoxTemplateSettings::put_DropDownContentMinWidth(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::ComboBoxTemplateSettings_DropDownContentMinWidth, value));
}
IFACEMETHODIMP DirectUI::ComboBoxTemplateSettings::get_DropDownOffset(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::ComboBoxTemplateSettings_DropDownOffset, pValue));
}
_Check_return_ HRESULT DirectUI::ComboBoxTemplateSettings::put_DropDownOffset(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::ComboBoxTemplateSettings_DropDownOffset, value));
}
IFACEMETHODIMP DirectUI::ComboBoxTemplateSettings::get_DropDownOpenedHeight(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::ComboBoxTemplateSettings_DropDownOpenedHeight, pValue));
}
_Check_return_ HRESULT DirectUI::ComboBoxTemplateSettings::put_DropDownOpenedHeight(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::ComboBoxTemplateSettings_DropDownOpenedHeight, value));
}
IFACEMETHODIMP DirectUI::ComboBoxTemplateSettings::get_SelectedItemDirection(_Out_ ABI::Microsoft::UI::Xaml::Controls::Primitives::AnimationDirection* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::ComboBoxTemplateSettings_SelectedItemDirection, pValue));
}
_Check_return_ HRESULT DirectUI::ComboBoxTemplateSettings::put_SelectedItemDirection(_In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::AnimationDirection value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::ComboBoxTemplateSettings_SelectedItemDirection, value));
}

// Events.

// Methods.

// Factory methods.

// Dependency properties.






// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_ComboBoxTemplateSettings()
    {
        RRETURN(ctl::ActivationFactoryCreator<ComboBoxTemplateSettingsFactory>::CreateActivationFactory());
    }
}
