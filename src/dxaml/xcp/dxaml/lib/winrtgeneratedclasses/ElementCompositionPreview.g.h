// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once




namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) ElementCompositionPreviewFactory:
       public ctl::AbstractActivationFactory
        , public ABI::Microsoft::UI::Xaml::Hosting::IElementCompositionPreviewStatics
    {
        BEGIN_INTERFACE_MAP(ElementCompositionPreviewFactory, ctl::AbstractActivationFactory)
            INTERFACE_ENTRY(ElementCompositionPreviewFactory, ABI::Microsoft::UI::Xaml::Hosting::IElementCompositionPreviewStatics)
        END_INTERFACE_MAP(ElementCompositionPreviewFactory, ctl::AbstractActivationFactory)

    public:
        // Factory methods.

        // Static properties.

        // Dependency properties.

        // Attached properties.

        // Static methods.
        IFACEMETHOD(GetElementVisual)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_ ABI::Microsoft::UI::Composition::IVisual** ppResult) override;
        IFACEMETHOD(GetElementChildVisual)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_ ABI::Microsoft::UI::Composition::IVisual** ppResult) override;
        IFACEMETHOD(SetElementChildVisual)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ ABI::Microsoft::UI::Composition::IVisual* pVisual) override;
        IFACEMETHOD(GetScrollViewerManipulationPropertySet)(_In_ ABI::Microsoft::UI::Xaml::Controls::IScrollViewer* pScrollViewer, _Outptr_ ABI::Microsoft::UI::Composition::ICompositionPropertySet** ppResult) override;
        IFACEMETHOD(SetImplicitShowAnimation)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ ABI::Microsoft::UI::Composition::ICompositionAnimationBase* pAnimation) override;
        IFACEMETHOD(SetImplicitHideAnimation)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ ABI::Microsoft::UI::Composition::ICompositionAnimationBase* pAnimation) override;
        IFACEMETHOD(SetIsTranslationEnabled)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value) override;
        IFACEMETHOD(GetPointerPositionPropertySet)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pTargetElement, _Outptr_ ABI::Microsoft::UI::Composition::ICompositionPropertySet** ppResult) override;

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::ElementCompositionPreview;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
         _Check_return_ HRESULT GetElementVisualImpl(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_ ABI::Microsoft::UI::Composition::IVisual** ppResult); 
         _Check_return_ HRESULT GetElementChildVisualImpl(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_ ABI::Microsoft::UI::Composition::IVisual** ppResult); 
         _Check_return_ HRESULT SetElementChildVisualImpl(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ ABI::Microsoft::UI::Composition::IVisual* pVisual); 
         _Check_return_ HRESULT GetScrollViewerManipulationPropertySetImpl(_In_ ABI::Microsoft::UI::Xaml::Controls::IScrollViewer* pScrollViewer, _Outptr_ ABI::Microsoft::UI::Composition::ICompositionPropertySet** ppResult); 
         _Check_return_ HRESULT SetImplicitShowAnimationImpl(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ ABI::Microsoft::UI::Composition::ICompositionAnimationBase* pAnimation); 
         _Check_return_ HRESULT SetImplicitHideAnimationImpl(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ ABI::Microsoft::UI::Composition::ICompositionAnimationBase* pAnimation); 
         _Check_return_ HRESULT SetIsTranslationEnabledImpl(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value); 
         _Check_return_ HRESULT GetPointerPositionPropertySetImpl(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pTargetElement, _Outptr_ ABI::Microsoft::UI::Composition::ICompositionPropertySet** ppResult); 
    };
}
