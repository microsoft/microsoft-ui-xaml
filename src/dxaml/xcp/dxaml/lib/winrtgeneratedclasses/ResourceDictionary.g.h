// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __ResourceDictionary_GUID "22f9304f-eff6-4368-a49c-f193daf642b1"

namespace DirectUI
{
    class ResourceDictionary;

    class __declspec(novtable) ResourceDictionaryGenerated:
        public DirectUI::PresentationFrameworkCollection<ABI::Microsoft::UI::Xaml::DependencyObject*>
        , public ABI::Microsoft::UI::Xaml::IResourceDictionary
        , public ABI::Windows::Foundation::Collections::IMap<IInspectable*, IInspectable*>
    {
        friend class DirectUI::ResourceDictionary;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.ResourceDictionary");

        BEGIN_INTERFACE_MAP(ResourceDictionaryGenerated, DirectUI::PresentationFrameworkCollection<ABI::Microsoft::UI::Xaml::DependencyObject*>)
            INTERFACE_ENTRY(ResourceDictionaryGenerated, ABI::Microsoft::UI::Xaml::IResourceDictionary)
            INTERFACE_ENTRY(ResourceDictionaryGenerated, ABI::Windows::Foundation::Collections::IMap<IInspectable* COMMA IInspectable*>)
        END_INTERFACE_MAP(ResourceDictionaryGenerated, DirectUI::PresentationFrameworkCollection<ABI::Microsoft::UI::Xaml::DependencyObject*>)

    public:
        ResourceDictionaryGenerated();
        ~ResourceDictionaryGenerated() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::ResourceDictionary;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::ResourceDictionary;
        }

        // Properties.
        _Check_return_ HRESULT get_ContentProperty(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue);
        _Check_return_ HRESULT put_ContentProperty(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue);
        IFACEMETHOD(get_MergedDictionaries)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::ResourceDictionary*>** ppValue) override;
        IFACEMETHOD(get_Source)(_Outptr_result_maybenull_ ABI::Windows::Foundation::IUriRuntimeClass** ppValue) override;
        IFACEMETHOD(put_Source)(_In_opt_ ABI::Windows::Foundation::IUriRuntimeClass* pValue) override;
        IFACEMETHOD(get_ThemeDictionaries)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IMap<IInspectable*, IInspectable*>** ppValue) override;

        // Events.

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "ResourceDictionary_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) ResourceDictionaryFactory:
       public ctl::BetterAggregableCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::IResourceDictionaryFactory
    {
        BEGIN_INTERFACE_MAP(ResourceDictionaryFactory, ctl::BetterAggregableCoreObjectActivationFactory)
            INTERFACE_ENTRY(ResourceDictionaryFactory, ABI::Microsoft::UI::Xaml::IResourceDictionaryFactory)
        END_INTERFACE_MAP(ResourceDictionaryFactory, ctl::BetterAggregableCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::IResourceDictionary** ppInstance);

        // Static properties.

        // Dependency properties.
        
        
        
        

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::ResourceDictionary;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
