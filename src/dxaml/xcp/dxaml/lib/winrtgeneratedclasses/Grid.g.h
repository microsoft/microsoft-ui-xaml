// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "Panel.g.h"
#include "CornerRadius.g.h"
#include "Thickness.g.h"

#define __Grid_GUID "e23a1571-80e7-4fb5-a754-3e513559137a"

namespace DirectUI
{
    class Grid;
    class Brush;
    class ColumnDefinitionCollection;
    class RowDefinitionCollection;

    class __declspec(novtable) __declspec(uuid(__Grid_GUID)) Grid:
        public DirectUI::Panel
        , public ABI::Microsoft::UI::Xaml::Controls::IGrid
    {

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.Grid");

        BEGIN_INTERFACE_MAP(Grid, DirectUI::Panel)
            INTERFACE_ENTRY(Grid, ABI::Microsoft::UI::Xaml::Controls::IGrid)
        END_INTERFACE_MAP(Grid, DirectUI::Panel)

    public:
        Grid();
        ~Grid() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Grid;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::Grid;
        }

        // Properties.
        IFACEMETHOD(get_BackgroundSizing)(_Out_ ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing* pValue) override;
        IFACEMETHOD(put_BackgroundSizing)(_In_ ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing value) override;
        IFACEMETHOD(get_BorderBrush)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IBrush** ppValue) override;
        IFACEMETHOD(put_BorderBrush)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IBrush* pValue) override;
        IFACEMETHOD(get_BorderThickness)(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue) override;
        IFACEMETHOD(put_BorderThickness)(_In_ ABI::Microsoft::UI::Xaml::Thickness value) override;
        IFACEMETHOD(get_ColumnDefinitions)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Controls::ColumnDefinition*>** ppValue) override;
        IFACEMETHOD(get_ColumnSpacing)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_ColumnSpacing)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_CornerRadius)(_Out_ ABI::Microsoft::UI::Xaml::CornerRadius* pValue) override;
        IFACEMETHOD(put_CornerRadius)(_In_ ABI::Microsoft::UI::Xaml::CornerRadius value) override;
        IFACEMETHOD(get_Padding)(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue) override;
        IFACEMETHOD(put_Padding)(_In_ ABI::Microsoft::UI::Xaml::Thickness value) override;
        IFACEMETHOD(get_RowDefinitions)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Controls::RowDefinition*>** ppValue) override;
        IFACEMETHOD(get_RowSpacing)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_RowSpacing)(_In_ DOUBLE value) override;

        // Events.

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:
        // Customized properties.

        // Customized methods.

        // Fields.
    };
}


namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) GridFactory:
       public ctl::BetterAggregableCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IGridFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IGridStatics
    {
        BEGIN_INTERFACE_MAP(GridFactory, ctl::BetterAggregableCoreObjectActivationFactory)
            INTERFACE_ENTRY(GridFactory, ABI::Microsoft::UI::Xaml::Controls::IGridFactory)
            INTERFACE_ENTRY(GridFactory, ABI::Microsoft::UI::Xaml::Controls::IGridStatics)
        END_INTERFACE_MAP(GridFactory, ctl::BetterAggregableCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::IGrid** ppInstance);

        // Static properties.

        // Dependency properties.
        
        
        IFACEMETHOD(get_BackgroundSizingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_BorderBrushProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_BorderThicknessProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_CornerRadiusProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_PaddingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_RowSpacingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ColumnSpacingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.
        static _Check_return_ HRESULT GetRowStatic(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _Out_ INT* pValue);
        static _Check_return_ HRESULT SetRowStatic(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _In_ INT value);
        IFACEMETHOD(get_RowProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetRow)(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _Out_ INT* pValue);
        IFACEMETHOD(SetRow)(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _In_ INT value);
        static _Check_return_ HRESULT GetColumnStatic(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _Out_ INT* pValue);
        static _Check_return_ HRESULT SetColumnStatic(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _In_ INT value);
        IFACEMETHOD(get_ColumnProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetColumn)(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _Out_ INT* pValue);
        IFACEMETHOD(SetColumn)(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _In_ INT value);
        static _Check_return_ HRESULT GetRowSpanStatic(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _Out_ INT* pValue);
        static _Check_return_ HRESULT SetRowSpanStatic(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _In_ INT value);
        IFACEMETHOD(get_RowSpanProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetRowSpan)(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _Out_ INT* pValue);
        IFACEMETHOD(SetRowSpan)(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _In_ INT value);
        static _Check_return_ HRESULT GetColumnSpanStatic(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _Out_ INT* pValue);
        static _Check_return_ HRESULT SetColumnSpanStatic(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _In_ INT value);
        IFACEMETHOD(get_ColumnSpanProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetColumnSpan)(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _Out_ INT* pValue);
        IFACEMETHOD(SetColumnSpan)(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _In_ INT value);

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Grid;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
