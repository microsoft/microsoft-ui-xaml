// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "Transition.g.h"

#define __EntranceThemeTransition_GUID "05a43c68-3f61-4e3d-b3f7-05da43a21ce8"

namespace DirectUI
{
    class EntranceThemeTransition;

    class __declspec(novtable) EntranceThemeTransitionGenerated:
        public DirectUI::Transition
        , public ABI::Microsoft::UI::Xaml::Media::Animation::IEntranceThemeTransition
    {
        friend class DirectUI::EntranceThemeTransition;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition");

        BEGIN_INTERFACE_MAP(EntranceThemeTransitionGenerated, DirectUI::Transition)
            INTERFACE_ENTRY(EntranceThemeTransitionGenerated, ABI::Microsoft::UI::Xaml::Media::Animation::IEntranceThemeTransition)
        END_INTERFACE_MAP(EntranceThemeTransitionGenerated, DirectUI::Transition)

    public:
        EntranceThemeTransitionGenerated();
        ~EntranceThemeTransitionGenerated() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::EntranceThemeTransition;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::EntranceThemeTransition;
        }

        // Properties.
        IFACEMETHOD(get_FromHorizontalOffset)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_FromHorizontalOffset)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_FromVerticalOffset)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_FromVerticalOffset)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_IsStaggeringEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsStaggeringEnabled)(_In_ BOOLEAN value) override;

        // Events.

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "EntranceThemeTransition_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) EntranceThemeTransitionFactory:
       public ctl::BetterCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Media::Animation::IEntranceThemeTransitionStatics
    {
        BEGIN_INTERFACE_MAP(EntranceThemeTransitionFactory, ctl::BetterCoreObjectActivationFactory)
            INTERFACE_ENTRY(EntranceThemeTransitionFactory, ABI::Microsoft::UI::Xaml::Media::Animation::IEntranceThemeTransitionStatics)
        END_INTERFACE_MAP(EntranceThemeTransitionFactory, ctl::BetterCoreObjectActivationFactory)

    public:
        // Factory methods.

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_FromHorizontalOffsetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FromVerticalOffsetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsStaggeringEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::EntranceThemeTransition;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
