// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "Duration.g.h"
#include "RepeatBehavior.g.h"

#define __Timeline_GUID "9947b284-352a-4dc9-9358-7796d1e96ee1"

namespace DirectUI
{
    class Timeline;
    class TimelineCollection;

    class __declspec(novtable) TimelineGenerated:
        public DirectUI::DependencyObject
        , public ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline
    {
        friend class DirectUI::Timeline;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Media.Animation.Timeline");

        BEGIN_INTERFACE_MAP(TimelineGenerated, DirectUI::DependencyObject)
            INTERFACE_ENTRY(TimelineGenerated, ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline)
        END_INTERFACE_MAP(TimelineGenerated, DirectUI::DependencyObject)

    public:
        TimelineGenerated();
        ~TimelineGenerated() override;

        // Event source typedefs.
        typedef CEventSource<ABI::Windows::Foundation::IEventHandler<IInspectable*>, IInspectable, IInspectable> CompletedEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Timeline;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::Timeline;
        }

        // Properties.
        IFACEMETHOD(get_AutoReverse)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_AutoReverse)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_BeginTime)(_Out_ ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::TimeSpan>** ppValue) override;
        IFACEMETHOD(put_BeginTime)(_In_ ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::TimeSpan>* pValue) override;
        IFACEMETHOD(get_Duration)(_Out_ ABI::Microsoft::UI::Xaml::Duration* pValue) override;
        IFACEMETHOD(put_Duration)(_In_ ABI::Microsoft::UI::Xaml::Duration value) override;
        IFACEMETHOD(get_FillBehavior)(_Out_ ABI::Microsoft::UI::Xaml::Media::Animation::FillBehavior* pValue) override;
        IFACEMETHOD(put_FillBehavior)(_In_ ABI::Microsoft::UI::Xaml::Media::Animation::FillBehavior value) override;
        IFACEMETHOD(get_RepeatBehavior)(_Out_ ABI::Microsoft::UI::Xaml::Media::Animation::RepeatBehavior* pValue) override;
        IFACEMETHOD(put_RepeatBehavior)(_In_ ABI::Microsoft::UI::Xaml::Media::Animation::RepeatBehavior value) override;
        IFACEMETHOD(get_SpeedRatio)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_SpeedRatio)(_In_ DOUBLE value) override;

        // Events.
        _Check_return_ HRESULT GetCompletedEventSourceNoRef(_Outptr_ CompletedEventSourceType** ppEventSource);
        IFACEMETHOD(add_Completed)(_In_ ABI::Windows::Foundation::IEventHandler<IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_Completed)(_In_ EventRegistrationToken token) override;

        // Methods.
        virtual _Check_return_ HRESULT CreateTimelines(_In_ BOOLEAN onlyGenerateSteadyState, _In_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Timeline*>* pTimelineCollection) = 0;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "Timeline_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) TimelineFactory:
       public ctl::BetterAggregableAbstractCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Media::Animation::ITimelineFactory
        , public ABI::Microsoft::UI::Xaml::Media::Animation::ITimelineStatics
    {
        BEGIN_INTERFACE_MAP(TimelineFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)
            INTERFACE_ENTRY(TimelineFactory, ABI::Microsoft::UI::Xaml::Media::Animation::ITimelineFactory)
            INTERFACE_ENTRY(TimelineFactory, ABI::Microsoft::UI::Xaml::Media::Animation::ITimelineStatics)
        END_INTERFACE_MAP(TimelineFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline** ppInstance);

        // Static properties.
        IFACEMETHOD(get_AllowDependentAnimations)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_AllowDependentAnimations)(_In_ BOOLEAN value) override;

        // Dependency properties.
        IFACEMETHOD(get_AutoReverseProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_BeginTimeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_DurationProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_SpeedRatioProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FillBehaviorProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_RepeatBehaviorProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Timeline;
        }


    private:

        // Customized static properties.
         _Check_return_ HRESULT get_AllowDependentAnimationsImpl(_Out_ BOOLEAN* pValue); 
         _Check_return_ HRESULT put_AllowDependentAnimationsImpl(_In_ BOOLEAN value); 

        // Customized static  methods.
    };
}
