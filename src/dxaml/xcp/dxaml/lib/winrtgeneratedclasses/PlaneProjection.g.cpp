// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "PlaneProjection.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::PlaneProjection::PlaneProjection()
{
}

DirectUI::PlaneProjection::~PlaneProjection()
{
}

HRESULT DirectUI::PlaneProjection::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::PlaneProjection)))
    {
        *ppObject = static_cast<DirectUI::PlaneProjection*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Media::IPlaneProjection)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Media::IPlaneProjection*>(this);
    }
    else
    {
        RRETURN(DirectUI::Projection::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::PlaneProjection::get_CenterOfRotationX(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_CenterOfRotationX, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::put_CenterOfRotationX(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_CenterOfRotationX, value));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::get_CenterOfRotationXAnimation(_Outptr_result_maybenull_ IInspectable** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_CenterOfRotationXAnimation, ppValue));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::put_CenterOfRotationXAnimation(_In_opt_ IInspectable* pValue)
{
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_CenterOfRotationXAnimation, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::get_CenterOfRotationY(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_CenterOfRotationY, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::put_CenterOfRotationY(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_CenterOfRotationY, value));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::get_CenterOfRotationYAnimation(_Outptr_result_maybenull_ IInspectable** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_CenterOfRotationYAnimation, ppValue));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::put_CenterOfRotationYAnimation(_In_opt_ IInspectable* pValue)
{
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_CenterOfRotationYAnimation, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::get_CenterOfRotationZ(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_CenterOfRotationZ, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::put_CenterOfRotationZ(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_CenterOfRotationZ, value));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::get_CenterOfRotationZAnimation(_Outptr_result_maybenull_ IInspectable** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_CenterOfRotationZAnimation, ppValue));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::put_CenterOfRotationZAnimation(_In_opt_ IInspectable* pValue)
{
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_CenterOfRotationZAnimation, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::get_GlobalOffsetX(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_GlobalOffsetX, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::put_GlobalOffsetX(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_GlobalOffsetX, value));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::get_GlobalOffsetXAnimation(_Outptr_result_maybenull_ IInspectable** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_GlobalOffsetXAnimation, ppValue));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::put_GlobalOffsetXAnimation(_In_opt_ IInspectable* pValue)
{
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_GlobalOffsetXAnimation, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::get_GlobalOffsetY(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_GlobalOffsetY, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::put_GlobalOffsetY(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_GlobalOffsetY, value));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::get_GlobalOffsetYAnimation(_Outptr_result_maybenull_ IInspectable** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_GlobalOffsetYAnimation, ppValue));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::put_GlobalOffsetYAnimation(_In_opt_ IInspectable* pValue)
{
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_GlobalOffsetYAnimation, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::get_GlobalOffsetZ(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_GlobalOffsetZ, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::put_GlobalOffsetZ(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_GlobalOffsetZ, value));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::get_GlobalOffsetZAnimation(_Outptr_result_maybenull_ IInspectable** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_GlobalOffsetZAnimation, ppValue));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::put_GlobalOffsetZAnimation(_In_opt_ IInspectable* pValue)
{
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_GlobalOffsetZAnimation, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::get_LocalOffsetX(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_LocalOffsetX, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::put_LocalOffsetX(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_LocalOffsetX, value));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::get_LocalOffsetXAnimation(_Outptr_result_maybenull_ IInspectable** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_LocalOffsetXAnimation, ppValue));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::put_LocalOffsetXAnimation(_In_opt_ IInspectable* pValue)
{
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_LocalOffsetXAnimation, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::get_LocalOffsetY(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_LocalOffsetY, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::put_LocalOffsetY(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_LocalOffsetY, value));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::get_LocalOffsetYAnimation(_Outptr_result_maybenull_ IInspectable** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_LocalOffsetYAnimation, ppValue));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::put_LocalOffsetYAnimation(_In_opt_ IInspectable* pValue)
{
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_LocalOffsetYAnimation, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::get_LocalOffsetZ(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_LocalOffsetZ, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::put_LocalOffsetZ(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_LocalOffsetZ, value));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::get_LocalOffsetZAnimation(_Outptr_result_maybenull_ IInspectable** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_LocalOffsetZAnimation, ppValue));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::put_LocalOffsetZAnimation(_In_opt_ IInspectable* pValue)
{
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_LocalOffsetZAnimation, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::get_ProjectionMatrix(_Out_ ABI::Microsoft::UI::Xaml::Media::Media3D::Matrix3D* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_ProjectionMatrix, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::get_RotationX(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_RotationX, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::put_RotationX(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_RotationX, value));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::get_RotationXAnimation(_Outptr_result_maybenull_ IInspectable** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_RotationXAnimation, ppValue));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::put_RotationXAnimation(_In_opt_ IInspectable* pValue)
{
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_RotationXAnimation, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::get_RotationY(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_RotationY, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::put_RotationY(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_RotationY, value));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::get_RotationYAnimation(_Outptr_result_maybenull_ IInspectable** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_RotationYAnimation, ppValue));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::put_RotationYAnimation(_In_opt_ IInspectable* pValue)
{
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_RotationYAnimation, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::get_RotationZ(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_RotationZ, pValue));
}
IFACEMETHODIMP DirectUI::PlaneProjection::put_RotationZ(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_RotationZ, value));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::get_RotationZAnimation(_Outptr_result_maybenull_ IInspectable** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_RotationZAnimation, ppValue));
}
_Check_return_ HRESULT DirectUI::PlaneProjection::put_RotationZAnimation(_In_opt_ IInspectable* pValue)
{
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PlaneProjection_RotationZAnimation, pValue));
}

// Events.

// Methods.

HRESULT DirectUI::PlaneProjectionFactory::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Media::IPlaneProjectionStatics)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Media::IPlaneProjectionStatics*>(this);
    }
    else
    {
        RRETURN(ctl::BetterCoreObjectActivationFactory::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}


// Factory methods.

// Dependency properties.
IFACEMETHODIMP DirectUI::PlaneProjectionFactory::get_LocalOffsetXProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PlaneProjection_LocalOffsetX, ppValue));
}

IFACEMETHODIMP DirectUI::PlaneProjectionFactory::get_LocalOffsetYProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PlaneProjection_LocalOffsetY, ppValue));
}

IFACEMETHODIMP DirectUI::PlaneProjectionFactory::get_LocalOffsetZProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PlaneProjection_LocalOffsetZ, ppValue));
}

IFACEMETHODIMP DirectUI::PlaneProjectionFactory::get_RotationXProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PlaneProjection_RotationX, ppValue));
}

IFACEMETHODIMP DirectUI::PlaneProjectionFactory::get_RotationYProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PlaneProjection_RotationY, ppValue));
}

IFACEMETHODIMP DirectUI::PlaneProjectionFactory::get_RotationZProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PlaneProjection_RotationZ, ppValue));
}

IFACEMETHODIMP DirectUI::PlaneProjectionFactory::get_CenterOfRotationXProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PlaneProjection_CenterOfRotationX, ppValue));
}

IFACEMETHODIMP DirectUI::PlaneProjectionFactory::get_CenterOfRotationYProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PlaneProjection_CenterOfRotationY, ppValue));
}

IFACEMETHODIMP DirectUI::PlaneProjectionFactory::get_CenterOfRotationZProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PlaneProjection_CenterOfRotationZ, ppValue));
}

IFACEMETHODIMP DirectUI::PlaneProjectionFactory::get_GlobalOffsetXProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PlaneProjection_GlobalOffsetX, ppValue));
}

IFACEMETHODIMP DirectUI::PlaneProjectionFactory::get_GlobalOffsetYProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PlaneProjection_GlobalOffsetY, ppValue));
}

IFACEMETHODIMP DirectUI::PlaneProjectionFactory::get_GlobalOffsetZProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PlaneProjection_GlobalOffsetZ, ppValue));
}

IFACEMETHODIMP DirectUI::PlaneProjectionFactory::get_ProjectionMatrixProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PlaneProjection_ProjectionMatrix, ppValue));
}

// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_PlaneProjection()
    {
        RRETURN(ctl::ActivationFactoryCreator<PlaneProjectionFactory>::CreateActivationFactory());
    }
}
