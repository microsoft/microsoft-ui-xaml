// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __DataContextChangedEventArgs_GUID "bbbaab17-9f2e-4f8f-843a-58cdad3243b3"

namespace DirectUI
{
    class DataContextChangedEventArgs;

    class __declspec(novtable) __declspec(uuid(__DataContextChangedEventArgs_GUID)) DataContextChangedEventArgs:
        public ctl::WeakReferenceSource
        , public ABI::Microsoft::UI::Xaml::IDataContextChangedEventArgs
    {

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.DataContextChangedEventArgs");

        BEGIN_INTERFACE_MAP(DataContextChangedEventArgs, ctl::WeakReferenceSource)
            INTERFACE_ENTRY(DataContextChangedEventArgs, ABI::Microsoft::UI::Xaml::IDataContextChangedEventArgs)
        END_INTERFACE_MAP(DataContextChangedEventArgs, ctl::WeakReferenceSource)

    public:
        DataContextChangedEventArgs();
        ~DataContextChangedEventArgs() override;

        // Event source typedefs.


        // Properties.
        IFACEMETHOD(get_Handled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_Handled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_NewValue)(_Outptr_result_maybenull_ IInspectable** ppValue) override;
        _Check_return_ HRESULT put_NewValue(_In_opt_ IInspectable* pValue);

        // Events.

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:
        // Customized properties.

        // Customized methods.

        // Fields.
        BOOLEAN m_handled;
        TrackerPtr<IInspectable> m_pNewValue;
    };
}


