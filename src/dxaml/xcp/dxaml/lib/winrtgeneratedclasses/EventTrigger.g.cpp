// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "EventTrigger.g.h"
#include "RoutedEvent.g.h"
#include "TriggerActionCollection.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::EventTriggerGenerated::EventTriggerGenerated()
{
}

DirectUI::EventTriggerGenerated::~EventTriggerGenerated()
{
}

HRESULT DirectUI::EventTriggerGenerated::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::EventTrigger)))
    {
        *ppObject = static_cast<DirectUI::EventTrigger*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::IEventTrigger)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::IEventTrigger*>(this);
    }
    else
    {
        RRETURN(DirectUI::TriggerBase::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::EventTriggerGenerated::get_Actions(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::TriggerAction*>** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::EventTrigger_Actions, ppValue));
}
IFACEMETHODIMP DirectUI::EventTriggerGenerated::get_RoutedEvent(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue)
{
    HRESULT hr = S_OK;
    ARG_VALIDRETURNPOINTER(ppValue);
    IFC(CheckThread());
    IFC(static_cast<EventTrigger*>(this)->get_RoutedEventImpl(ppValue));
Cleanup:
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::EventTriggerGenerated::put_RoutedEvent(_In_opt_ ABI::Microsoft::UI::Xaml::IRoutedEvent* pValue)
{
    HRESULT hr = S_OK;
    
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<EventTrigger*>(this)->put_RoutedEventImpl(pValue));
Cleanup:
    RRETURN(hr);
}

// Events.

// Methods.

// Factory methods.

// Dependency properties.



// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_EventTrigger()
    {
        RRETURN(ctl::ActivationFactoryCreator<EventTriggerFactory>::CreateActivationFactory());
    }
}
