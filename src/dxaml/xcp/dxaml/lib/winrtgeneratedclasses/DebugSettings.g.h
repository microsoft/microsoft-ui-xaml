// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __DebugSettings_GUID "818dd7e4-0203-478d-a556-6b89215287e0"

#pragma region forwarders
namespace ctl
{
    template<typename impl_type>
    class interface_forwarder< ABI::Microsoft::UI::Xaml::IDebugSettings2, impl_type> final
        : public ctl::iinspectable_forwarder_base< ABI::Microsoft::UI::Xaml::IDebugSettings2, impl_type>
    {
        impl_type* This() { return this->This_helper<impl_type>(); }
        IFACEMETHOD(get_IsXamlResourceReferenceTracingEnabled)(_Out_ BOOLEAN* pValue) override { return This()->get_IsXamlResourceReferenceTracingEnabled(pValue); }
        IFACEMETHOD(put_IsXamlResourceReferenceTracingEnabled)(_In_ BOOLEAN value) override { return This()->put_IsXamlResourceReferenceTracingEnabled(value); }
        IFACEMETHOD(add_XamlResourceReferenceFailed)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::DebugSettings*, ABI::Microsoft::UI::Xaml::XamlResourceReferenceFailedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override { return This()->add_XamlResourceReferenceFailed(pValue, pToken); }
        IFACEMETHOD(remove_XamlResourceReferenceFailed)(_In_ EventRegistrationToken token) override { return This()->remove_XamlResourceReferenceFailed(token); }
    };
    template<typename impl_type>
    class interface_forwarder< ABI::Microsoft::UI::Xaml::IDebugSettings3, impl_type> final
        : public ctl::iinspectable_forwarder_base< ABI::Microsoft::UI::Xaml::IDebugSettings3, impl_type>
    {
        impl_type* This() { return this->This_helper<impl_type>(); }
        IFACEMETHOD(get_LayoutCycleDebugBreakLevel)(_Out_ ABI::Microsoft::UI::Xaml::LayoutCycleDebugBreakLevel* pValue) override { return This()->get_LayoutCycleDebugBreakLevel(pValue); }
        IFACEMETHOD(put_LayoutCycleDebugBreakLevel)(_In_ ABI::Microsoft::UI::Xaml::LayoutCycleDebugBreakLevel value) override { return This()->put_LayoutCycleDebugBreakLevel(value); }
        IFACEMETHOD(get_LayoutCycleTracingLevel)(_Out_ ABI::Microsoft::UI::Xaml::LayoutCycleTracingLevel* pValue) override { return This()->get_LayoutCycleTracingLevel(pValue); }
        IFACEMETHOD(put_LayoutCycleTracingLevel)(_In_ ABI::Microsoft::UI::Xaml::LayoutCycleTracingLevel value) override { return This()->put_LayoutCycleTracingLevel(value); }
    };
}
#pragma endregion

namespace DirectUI
{
    class DebugSettings;

    class __declspec(novtable) DebugSettingsGenerated:
        public DirectUI::DependencyObject
        , public ABI::Microsoft::UI::Xaml::IDebugSettings
        , public ctl::forwarder_holder< ABI::Microsoft::UI::Xaml::IDebugSettings2, DebugSettingsGenerated >
        , public ctl::forwarder_holder< ABI::Microsoft::UI::Xaml::IDebugSettings3, DebugSettingsGenerated >
    {
        friend class DirectUI::DebugSettings;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.DebugSettings");

        BEGIN_INTERFACE_MAP(DebugSettingsGenerated, DirectUI::DependencyObject)
            INTERFACE_ENTRY(DebugSettingsGenerated, ABI::Microsoft::UI::Xaml::IDebugSettings)
            INTERFACE_ENTRY(DebugSettingsGenerated, ABI::Microsoft::UI::Xaml::IDebugSettings2)
            INTERFACE_ENTRY(DebugSettingsGenerated, ABI::Microsoft::UI::Xaml::IDebugSettings3)
        END_INTERFACE_MAP(DebugSettingsGenerated, DirectUI::DependencyObject)

    public:
        DebugSettingsGenerated();
        ~DebugSettingsGenerated() override;

        // Event source typedefs.
        typedef CEventSource<ABI::Microsoft::UI::Xaml::IBindingFailedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::IBindingFailedEventArgs> BindingFailedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::DebugSettings*, ABI::Microsoft::UI::Xaml::XamlResourceReferenceFailedEventArgs*>, ABI::Microsoft::UI::Xaml::IDebugSettings, ABI::Microsoft::UI::Xaml::IXamlResourceReferenceFailedEventArgs> XamlResourceReferenceFailedEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::DebugSettings;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::DebugSettings;
        }

        // Properties.
        IFACEMETHOD(get_EnableFrameRateCounter)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_EnableFrameRateCounter)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_FailFastOnErrors)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_FailFastOnErrors)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsBindingTracingEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsBindingTracingEnabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsTextPerformanceVisualizationEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsTextPerformanceVisualizationEnabled)(_In_ BOOLEAN value) override;
        _Check_return_ HRESULT STDMETHODCALLTYPE get_IsXamlResourceReferenceTracingEnabled(_Out_ BOOLEAN* pValue);
        _Check_return_ HRESULT STDMETHODCALLTYPE put_IsXamlResourceReferenceTracingEnabled(_In_ BOOLEAN value);
        _Check_return_ HRESULT STDMETHODCALLTYPE get_LayoutCycleDebugBreakLevel(_Out_ ABI::Microsoft::UI::Xaml::LayoutCycleDebugBreakLevel* pValue);
        _Check_return_ HRESULT STDMETHODCALLTYPE put_LayoutCycleDebugBreakLevel(_In_ ABI::Microsoft::UI::Xaml::LayoutCycleDebugBreakLevel value);
        _Check_return_ HRESULT STDMETHODCALLTYPE get_LayoutCycleTracingLevel(_Out_ ABI::Microsoft::UI::Xaml::LayoutCycleTracingLevel* pValue);
        _Check_return_ HRESULT STDMETHODCALLTYPE put_LayoutCycleTracingLevel(_In_ ABI::Microsoft::UI::Xaml::LayoutCycleTracingLevel value);

        // Events.
        _Check_return_ HRESULT GetBindingFailedEventSourceNoRef(_Outptr_ BindingFailedEventSourceType** ppEventSource);
        IFACEMETHOD(add_BindingFailed)(_In_ ABI::Microsoft::UI::Xaml::IBindingFailedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_BindingFailed)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetXamlResourceReferenceFailedEventSourceNoRef(_Outptr_ XamlResourceReferenceFailedEventSourceType** ppEventSource);
        _Check_return_ HRESULT STDMETHODCALLTYPE add_XamlResourceReferenceFailed(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::DebugSettings*, ABI::Microsoft::UI::Xaml::XamlResourceReferenceFailedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT STDMETHODCALLTYPE remove_XamlResourceReferenceFailed(_In_ EventRegistrationToken token);

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "DebugSettings_Partial.h"

