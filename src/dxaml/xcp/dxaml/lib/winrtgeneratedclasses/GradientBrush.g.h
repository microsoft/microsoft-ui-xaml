// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "Brush.g.h"

#define __GradientBrush_GUID "63608038-2b62-4e58-9caf-a8a20f2fab2b"

namespace DirectUI
{
    class GradientBrush;
    class GradientStopCollection;

    class __declspec(novtable) __declspec(uuid(__GradientBrush_GUID)) GradientBrush:
        public DirectUI::Brush
        , public ABI::Microsoft::UI::Xaml::Media::IGradientBrush
    {

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Media.GradientBrush");

        BEGIN_INTERFACE_MAP(GradientBrush, DirectUI::Brush)
            INTERFACE_ENTRY(GradientBrush, ABI::Microsoft::UI::Xaml::Media::IGradientBrush)
        END_INTERFACE_MAP(GradientBrush, DirectUI::Brush)

    public:
        GradientBrush();
        ~GradientBrush() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::GradientBrush;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::GradientBrush;
        }

        // Properties.
        IFACEMETHOD(get_ColorInterpolationMode)(_Out_ ABI::Microsoft::UI::Xaml::Media::ColorInterpolationMode* pValue) override;
        IFACEMETHOD(put_ColorInterpolationMode)(_In_ ABI::Microsoft::UI::Xaml::Media::ColorInterpolationMode value) override;
        IFACEMETHOD(get_GradientStops)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::GradientStop*>** ppValue) override;
        IFACEMETHOD(put_GradientStops)(_In_opt_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::GradientStop*>* pValue) override;
        IFACEMETHOD(get_MappingMode)(_Out_ ABI::Microsoft::UI::Xaml::Media::BrushMappingMode* pValue) override;
        IFACEMETHOD(put_MappingMode)(_In_ ABI::Microsoft::UI::Xaml::Media::BrushMappingMode value) override;
        IFACEMETHOD(get_SpreadMethod)(_Out_ ABI::Microsoft::UI::Xaml::Media::GradientSpreadMethod* pValue) override;
        IFACEMETHOD(put_SpreadMethod)(_In_ ABI::Microsoft::UI::Xaml::Media::GradientSpreadMethod value) override;

        // Events.

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:
        // Customized properties.

        // Customized methods.

        // Fields.
    };
}


namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) GradientBrushFactory:
       public ctl::BetterAggregableAbstractCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Media::IGradientBrushFactory
        , public ABI::Microsoft::UI::Xaml::Media::IGradientBrushStatics
    {
        BEGIN_INTERFACE_MAP(GradientBrushFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)
            INTERFACE_ENTRY(GradientBrushFactory, ABI::Microsoft::UI::Xaml::Media::IGradientBrushFactory)
            INTERFACE_ENTRY(GradientBrushFactory, ABI::Microsoft::UI::Xaml::Media::IGradientBrushStatics)
        END_INTERFACE_MAP(GradientBrushFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Media::IGradientBrush** ppInstance);

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_SpreadMethodProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_MappingModeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ColorInterpolationModeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_GradientStopsProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::GradientBrush;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
