// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "RoutedEventArgs.g.h"

#define __ContextMenuEventArgs_GUID "d466a9ef-ec4f-4570-a8ad-918d31dd6965"

namespace DirectUI
{
    class ContextMenuEventArgs;

    class __declspec(novtable) ContextMenuEventArgsGenerated :
        public ABI::Microsoft::UI::Xaml::Controls::IContextMenuEventArgs,
        public DirectUI::RoutedEventArgs
    {
        friend class DirectUI::ContextMenuEventArgs;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.ContextMenuEventArgs");

        BEGIN_INTERFACE_MAP(ContextMenuEventArgsGenerated, DirectUI::RoutedEventArgs)
            INTERFACE_ENTRY(ContextMenuEventArgsGenerated, ABI::Microsoft::UI::Xaml::Controls::IContextMenuEventArgs)
        END_INTERFACE_MAP(ContextMenuEventArgsGenerated, DirectUI::RoutedEventArgs)

    public:
        ContextMenuEventArgsGenerated();
        ~ContextMenuEventArgsGenerated() override;

        // Properties.
        IFACEMETHOD(get_Handled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_Handled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_CursorLeft)(_Out_ DOUBLE* pValue) override;
        _Check_return_ HRESULT put_CursorLeft(_In_ DOUBLE value);
        IFACEMETHOD(get_CursorTop)(_Out_ DOUBLE* pValue) override;
        _Check_return_ HRESULT put_CursorTop(_In_ DOUBLE value);

        // Methods.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "ContextMenuEventArgs_Partial.h"

