// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "RowDefinition.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::RowDefinition::RowDefinition()
{
}

DirectUI::RowDefinition::~RowDefinition()
{
}

HRESULT DirectUI::RowDefinition::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::RowDefinition)))
    {
        *ppObject = static_cast<DirectUI::RowDefinition*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Controls::IRowDefinition)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Controls::IRowDefinition*>(this);
    }
    else
    {
        RRETURN(DirectUI::DependencyObject::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::RowDefinition::get_ActualHeight(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::RowDefinition_ActualHeight, pValue));
}
IFACEMETHODIMP DirectUI::RowDefinition::get_Height(_Out_ ABI::Microsoft::UI::Xaml::GridLength* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::RowDefinition_Height, pValue));
}
IFACEMETHODIMP DirectUI::RowDefinition::put_Height(_In_ ABI::Microsoft::UI::Xaml::GridLength value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::RowDefinition_Height, value));
}
IFACEMETHODIMP DirectUI::RowDefinition::get_MaxHeight(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::RowDefinition_MaxHeight, pValue));
}
IFACEMETHODIMP DirectUI::RowDefinition::put_MaxHeight(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::RowDefinition_MaxHeight, value));
}
IFACEMETHODIMP DirectUI::RowDefinition::get_MinHeight(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::RowDefinition_MinHeight, pValue));
}
IFACEMETHODIMP DirectUI::RowDefinition::put_MinHeight(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::RowDefinition_MinHeight, value));
}

// Events.

// Methods.

HRESULT DirectUI::RowDefinitionFactory::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Controls::IRowDefinitionStatics)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Controls::IRowDefinitionStatics*>(this);
    }
    else
    {
        RRETURN(ctl::BetterCoreObjectActivationFactory::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}


// Factory methods.

// Dependency properties.
IFACEMETHODIMP DirectUI::RowDefinitionFactory::get_HeightProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::RowDefinition_Height, ppValue));
}
IFACEMETHODIMP DirectUI::RowDefinitionFactory::get_MaxHeightProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::RowDefinition_MaxHeight, ppValue));
}
IFACEMETHODIMP DirectUI::RowDefinitionFactory::get_MinHeightProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::RowDefinition_MinHeight, ppValue));
}


// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_RowDefinition()
    {
        RRETURN(ctl::ActivationFactoryCreator<RowDefinitionFactory>::CreateActivationFactory());
    }
}
