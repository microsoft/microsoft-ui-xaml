// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "precomp.h"

REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::Peers::AccessibilityView, L"Microsoft.UI.Xaml.Automation.Peers.AccessibilityView");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::AlignmentX, L"Microsoft.UI.Xaml.Media.AlignmentX");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::AlignmentY, L"Microsoft.UI.Xaml.Media.AlignmentY");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::AnimationDirection, L"Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::AnnotationType, L"Microsoft.UI.Xaml.Automation.AnnotationType");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::AppBarClosedDisplayMode, L"Microsoft.UI.Xaml.Controls.AppBarClosedDisplayMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::ApplicationHighContrastAdjustment, L"Microsoft.UI.Xaml.ApplicationHighContrastAdjustment");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::ApplicationRequiresPointerMode, L"Microsoft.UI.Xaml.ApplicationRequiresPointerMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::ApplicationTheme, L"Microsoft.UI.Xaml.ApplicationTheme");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::AutomationActiveEnd, L"Microsoft.UI.Xaml.Automation.AutomationActiveEnd");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::AutomationAnimationStyle, L"Microsoft.UI.Xaml.Automation.AutomationAnimationStyle");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::AutomationBulletStyle, L"Microsoft.UI.Xaml.Automation.AutomationBulletStyle");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::AutomationCaretBidiMode, L"Microsoft.UI.Xaml.Automation.AutomationCaretBidiMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::AutomationCaretPosition, L"Microsoft.UI.Xaml.Automation.AutomationCaretPosition");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationControlType, L"Microsoft.UI.Xaml.Automation.Peers.AutomationControlType");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationEvents, L"Microsoft.UI.Xaml.Automation.Peers.AutomationEvents");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::AutomationFlowDirections, L"Microsoft.UI.Xaml.Automation.AutomationFlowDirections");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationHeadingLevel, L"Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLandmarkType, L"Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLiveSetting, L"Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNavigationDirection, L"Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationKind, L"Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationProcessing, L"Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationOrientation, L"Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::AutomationOutlineStyles, L"Microsoft.UI.Xaml.Automation.AutomationOutlineStyles");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationStructureChangeType, L"Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::AutomationStyleId, L"Microsoft.UI.Xaml.Automation.AutomationStyleId");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::AutomationTextDecorationLineStyle, L"Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::AutomationTextEditChangeType, L"Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::AutoSuggestionBoxTextChangeReason, L"Microsoft.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing, L"Microsoft.UI.Xaml.Controls.BackgroundSizing");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Data::BindingMode, L"Microsoft.UI.Xaml.Data.BindingMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::Imaging::BitmapCreateOptions, L"Microsoft.UI.Xaml.Media.Imaging.BitmapCreateOptions");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::BrushMappingMode, L"Microsoft.UI.Xaml.Media.BrushMappingMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::CalendarViewDisplayMode, L"Microsoft.UI.Xaml.Controls.CalendarViewDisplayMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::CalendarViewSelectionMode, L"Microsoft.UI.Xaml.Controls.CalendarViewSelectionMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::CandidateWindowAlignment, L"Microsoft.UI.Xaml.Controls.CandidateWindowAlignment");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::CharacterCasing, L"Microsoft.UI.Xaml.Controls.CharacterCasing");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::ClickMode, L"Microsoft.UI.Xaml.Controls.ClickMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::Animation::ClockState, L"Microsoft.UI.Xaml.Media.Animation.ClockState");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Windows::Foundation::Collections::CollectionChange, L"Windows.Foundation.Collections.CollectionChange");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::ColorInterpolationMode, L"Microsoft.UI.Xaml.Media.ColorInterpolationMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::ComboBoxSelectionChangedTrigger, L"Microsoft.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::CommandBarDefaultLabelPosition, L"Microsoft.UI.Xaml.Controls.CommandBarDefaultLabelPosition");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::CommandBarDynamicOverflowAction, L"Microsoft.UI.Xaml.Controls.CommandBarDynamicOverflowAction");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::CommandBarLabelPosition, L"Microsoft.UI.Xaml.Controls.CommandBarLabelPosition");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::CommandBarOverflowButtonVisibility, L"Microsoft.UI.Xaml.Controls.CommandBarOverflowButtonVisibility");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::ComponentResourceLocation, L"Microsoft.UI.Xaml.Controls.Primitives.ComponentResourceLocation");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::Animation::ConnectedAnimationComponent, L"Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::ContentDialogButton, L"Microsoft.UI.Xaml.Controls.ContentDialogButton");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::ContentDialogPlacement, L"Microsoft.UI.Xaml.Controls.ContentDialogPlacement");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::ContentDialogResult, L"Microsoft.UI.Xaml.Controls.ContentDialogResult");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::ControlHeaderPlacement, L"Microsoft.UI.Xaml.Controls.ControlHeaderPlacement");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Windows::UI::Core::CoreCursorType, L"Windows.UI.Core.CoreCursorType");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation, L"Windows.ApplicationModel.DataTransfer.DataPackageOperation");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Windows::Globalization::DayOfWeek, L"Windows.Globalization.DayOfWeek");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::Imaging::DecodePixelType, L"Microsoft.UI.Xaml.Media.Imaging.DecodePixelType");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::DisabledFormattingAccelerators, L"Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::DockPosition, L"Microsoft.UI.Xaml.Automation.DockPosition");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::Animation::EasingMode, L"Microsoft.UI.Xaml.Media.Animation.EasingMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::EdgeTransitionLocation, L"Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::ElementCompositeMode, L"Microsoft.UI.Xaml.Media.ElementCompositeMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::ElementHighContrastAdjustment, L"Microsoft.UI.Xaml.ElementHighContrastAdjustment");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::ElementSoundKind, L"Microsoft.UI.Xaml.ElementSoundKind");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::ElementSoundMode, L"Microsoft.UI.Xaml.ElementSoundMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::ElementSoundPlayerState, L"Microsoft.UI.Xaml.ElementSoundPlayerState");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::ElementSpatialAudioMode, L"Microsoft.UI.Xaml.ElementSpatialAudioMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::ElementTheme, L"Microsoft.UI.Xaml.ElementTheme");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::ExpandCollapseState, L"Microsoft.UI.Xaml.Automation.ExpandCollapseState");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Windows::Media::Playback::FailedMediaStreamKind, L"Windows.Media.Playback.FailedMediaStreamKind");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::FastPlayFallbackBehaviour, L"Microsoft.UI.Xaml.Media.FastPlayFallbackBehaviour");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::Animation::FillBehavior, L"Microsoft.UI.Xaml.Media.Animation.FillBehavior");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::FillRule, L"Microsoft.UI.Xaml.Media.FillRule");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::FlowDirection, L"Microsoft.UI.Xaml.FlowDirection");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutPlacementMode, L"Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutShowMode, L"Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Input::FocusInputDeviceKind, L"Microsoft.UI.Xaml.Input.FocusInputDeviceKind");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Input::FocusNavigationDirection, L"Microsoft.UI.Xaml.Input.FocusNavigationDirection");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::FocusState, L"Microsoft.UI.Xaml.FocusState");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::FocusVisualKind, L"Microsoft.UI.Xaml.FocusVisualKind");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::FontCapitals, L"Microsoft.UI.Xaml.FontCapitals");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::FontEastAsianLanguage, L"Microsoft.UI.Xaml.FontEastAsianLanguage");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::FontEastAsianWidths, L"Microsoft.UI.Xaml.FontEastAsianWidths");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::FontFraction, L"Microsoft.UI.Xaml.FontFraction");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::FontNumeralAlignment, L"Microsoft.UI.Xaml.FontNumeralAlignment");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::FontNumeralStyle, L"Microsoft.UI.Xaml.FontNumeralStyle");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Windows::UI::Text::FontStretch, L"Windows.UI.Text.FontStretch");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Windows::UI::Text::FontStyle, L"Windows.UI.Text.FontStyle");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::FontVariants, L"Microsoft.UI.Xaml.FontVariants");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::GeneratorDirection, L"Microsoft.UI.Xaml.Controls.Primitives.GeneratorDirection");
REFERENCE_ELEMENT_NAME_IMPL(DirectUI::GestureModes, L"");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::GradientSpreadMethod, L"Microsoft.UI.Xaml.Media.GradientSpreadMethod");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::GridUnitType, L"Microsoft.UI.Xaml.GridUnitType");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::GroupHeaderPlacement, L"Microsoft.UI.Xaml.Controls.Primitives.GroupHeaderPlacement");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Input::HoldingState, L"Microsoft.UI.Input.HoldingState");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::HorizontalAlignment, L"Microsoft.UI.Xaml.HorizontalAlignment");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::IncrementalLoadingTrigger, L"Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Input::InputScopeNameValue, L"Microsoft.UI.Xaml.Input.InputScopeNameValue");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::InputValidationErrorEventAction, L"Microsoft.UI.Xaml.Controls.InputValidationErrorEventAction");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::InputValidationKind, L"Microsoft.UI.Xaml.Controls.InputValidationKind");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::InputValidationMode, L"Microsoft.UI.Xaml.Controls.InputValidationMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::ItemsUpdatingScrollMode, L"Microsoft.UI.Xaml.Controls.ItemsUpdatingScrollMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Input::KeyboardAcceleratorPlacementMode, L"Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Input::KeyboardNavigationMode, L"Microsoft.UI.Xaml.Input.KeyboardNavigationMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Input::KeyTipPlacementMode, L"Microsoft.UI.Xaml.Input.KeyTipPlacementMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::LightDismissOverlayMode, L"Microsoft.UI.Xaml.Controls.LightDismissOverlayMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::LineStackingStrategy, L"Microsoft.UI.Xaml.LineStackingStrategy");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::ListViewItemPresenterCheckMode, L"Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::ListViewItemPresenterSelectionIndicatorMode, L"Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterSelectionIndicatorMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::ListViewReorderMode, L"Microsoft.UI.Xaml.Controls.ListViewReorderMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::ListViewSelectionMode, L"Microsoft.UI.Xaml.Controls.ListViewSelectionMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::LoadedImageSourceLoadStatus, L"Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Documents::LogicalDirection, L"Microsoft.UI.Xaml.Documents.LogicalDirection");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Input::ManipulationModes, L"Microsoft.UI.Xaml.Input.ManipulationModes");
REFERENCE_ELEMENT_NAME_IMPL(DirectUI::MarkupExtensionType, L"");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Navigation::NavigationCacheMode, L"Microsoft.UI.Xaml.Navigation.NavigationCacheMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Navigation::NavigationMode, L"Microsoft.UI.Xaml.Navigation.NavigationMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Interop::NotifyCollectionChangedAction, L"Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::OpticalMarginAlignment, L"Microsoft.UI.Xaml.OpticalMarginAlignment");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Orientation, L"Microsoft.UI.Xaml.Controls.Orientation");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::PanelScrollingDirection, L"Microsoft.UI.Xaml.Controls.PanelScrollingDirection");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::PasswordRevealMode, L"Microsoft.UI.Xaml.Controls.PasswordRevealMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::Peers::PatternInterface, L"Microsoft.UI.Xaml.Automation.Peers.PatternInterface");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::PenLineCap, L"Microsoft.UI.Xaml.Media.PenLineCap");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::PenLineJoin, L"Microsoft.UI.Xaml.Media.PenLineJoin");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::PlacementMode, L"Microsoft.UI.Xaml.Controls.Primitives.PlacementMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Input::PointerDeviceType, L"Microsoft.UI.Input.PointerDeviceType");
REFERENCE_ELEMENT_NAME_IMPL(DirectUI::PointerDirection, L"");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::PopupPlacementMode, L"Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Printing::PreviewPageCountType, L"Microsoft.UI.Xaml.Printing.PreviewPageCountType");
REFERENCE_ELEMENT_NAME_IMPL(DirectUI::PrintDocumentFormat, L"");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Data::RelativeSourceMode, L"Microsoft.UI.Xaml.Data.RelativeSourceMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::RequiresPointer, L"Microsoft.UI.Xaml.Controls.RequiresPointer");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::RichEditClipboardFormat, L"Microsoft.UI.Xaml.Controls.RichEditClipboardFormat");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::RowOrColumnMajor, L"Microsoft.UI.Xaml.Automation.RowOrColumnMajor");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::ScrollAmount, L"Microsoft.UI.Xaml.Automation.ScrollAmount");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::ScrollBarVisibility, L"Microsoft.UI.Xaml.Controls.ScrollBarVisibility");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollEventType, L"Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollingIndicatorMode, L"Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::ScrollIntoViewAlignment, L"Microsoft.UI.Xaml.Controls.ScrollIntoViewAlignment");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::ScrollMode, L"Microsoft.UI.Xaml.Controls.ScrollMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::SelectionMode, L"Microsoft.UI.Xaml.Controls.SelectionMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::SliderSnapsTo, L"Microsoft.UI.Xaml.Controls.Primitives.SliderSnapsTo");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::SnapPointsAlignment, L"Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::SnapPointsType, L"Microsoft.UI.Xaml.Controls.SnapPointsType");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::SplitViewDisplayMode, L"Microsoft.UI.Xaml.Controls.SplitViewDisplayMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::SplitViewPanePlacement, L"Microsoft.UI.Xaml.Controls.SplitViewPanePlacement");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Input::StandardUICommandKind, L"Microsoft.UI.Xaml.Input.StandardUICommandKind");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::Stretch, L"Microsoft.UI.Xaml.Media.Stretch");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::StretchDirection, L"Microsoft.UI.Xaml.Controls.StretchDirection");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::StyleSimulations, L"Microsoft.UI.Xaml.Media.StyleSimulations");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::SupportedTextSelection, L"Microsoft.UI.Xaml.Automation.SupportedTextSelection");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSourceLoadStatus, L"Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceLoadStatus");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Media::SweepDirection, L"Microsoft.UI.Xaml.Media.SweepDirection");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Symbol, L"Microsoft.UI.Xaml.Controls.Symbol");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::SynchronizedInputType, L"Microsoft.UI.Xaml.Automation.SynchronizedInputType");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::TextAlignment, L"Microsoft.UI.Xaml.TextAlignment");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Windows::UI::Text::TextDecorations, L"Windows.UI.Text.TextDecorations");
REFERENCE_ELEMENT_NAME_IMPL(DirectUI::TextFormattingMode, L"");
REFERENCE_ELEMENT_NAME_IMPL(DirectUI::TextHintingMode, L"");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::TextLineBounds, L"Microsoft.UI.Xaml.TextLineBounds");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::TextReadingOrder, L"Microsoft.UI.Xaml.TextReadingOrder");
REFERENCE_ELEMENT_NAME_IMPL(DirectUI::TextRenderingMode, L"");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::TextTrimming, L"Microsoft.UI.Xaml.TextTrimming");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::TextWrapping, L"Microsoft.UI.Xaml.TextWrapping");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::Primitives::TickPlacement, L"Microsoft.UI.Xaml.Controls.Primitives.TickPlacement");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::ToggleState, L"Microsoft.UI.Xaml.Automation.ToggleState");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Windows::UI::Xaml::Interop::TypeKind, L"Windows.UI.Xaml.Interop.TypeKind");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Documents::UnderlineStyle, L"Microsoft.UI.Xaml.Documents.UnderlineStyle");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Data::UpdateSourceTrigger, L"Microsoft.UI.Xaml.Data.UpdateSourceTrigger");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Vector3TransitionComponents, L"Microsoft.UI.Xaml.Vector3TransitionComponents");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::VerticalAlignment, L"Microsoft.UI.Xaml.VerticalAlignment");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::VirtualizationMode, L"Microsoft.UI.Xaml.Controls.VirtualizationMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Windows::System::VirtualKey, L"Windows.System.VirtualKey");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Windows::System::VirtualKeyModifiers, L"Windows.System.VirtualKeyModifiers");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Visibility, L"Microsoft.UI.Xaml.Visibility");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::WindowInteractionState, L"Microsoft.UI.Xaml.Automation.WindowInteractionState");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::WindowVisualState, L"Microsoft.UI.Xaml.Automation.WindowVisualState");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Input::XYFocusKeyboardNavigationMode, L"Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy, L"Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategyOverride, L"Microsoft.UI.Xaml.Input.XYFocusNavigationStrategyOverride");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Controls::ZoomMode, L"Microsoft.UI.Xaml.Controls.ZoomMode");
REFERENCE_ELEMENT_NAME_IMPL(ABI::Microsoft::UI::Xaml::Automation::ZoomUnit, L"Microsoft.UI.Xaml.Automation.ZoomUnit");

// This pattern (GetValueFor_<typename>) may look weird at first, and weirder still because we're specifically
// asking for __declspec(noinline).  But there's a reason!  The microsoft toolchain is very clever about folding
// together functions with identical bodies (COMDAT folding), but it can't do the same for blocks within functions
// yet.  Thus, by factoring this out into functions that'll end up being identical in their optimized, compiled
// form, we save a noticeable amount of binary size.


__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AccessibilityView(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AccessibilityView>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::Peers::AccessibilityView value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AlignmentX(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::AlignmentX>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::AlignmentX value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AlignmentY(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::AlignmentY>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::AlignmentY value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AnimationDirection(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::AnimationDirection>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::AnimationDirection value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AnnotationType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AnnotationType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::AnnotationType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AppBarClosedDisplayMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::AppBarClosedDisplayMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::AppBarClosedDisplayMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ApplicationHighContrastAdjustment(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ApplicationHighContrastAdjustment>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::ApplicationHighContrastAdjustment value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ApplicationRequiresPointerMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ApplicationRequiresPointerMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::ApplicationRequiresPointerMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ApplicationTheme(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ApplicationTheme>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::ApplicationTheme value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationActiveEnd(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationActiveEnd>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::AutomationActiveEnd value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationAnimationStyle(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationAnimationStyle>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::AutomationAnimationStyle value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationBulletStyle(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationBulletStyle>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::AutomationBulletStyle value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationCaretBidiMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationCaretBidiMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::AutomationCaretBidiMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationCaretPosition(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationCaretPosition>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::AutomationCaretPosition value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationControlType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationControlType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationControlType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationEvents(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationEvents>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationEvents value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationFlowDirections(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationFlowDirections>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::AutomationFlowDirections value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationHeadingLevel(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationHeadingLevel>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationHeadingLevel value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationLandmarkType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLandmarkType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLandmarkType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationLiveSetting(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLiveSetting>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLiveSetting value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationNavigationDirection(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNavigationDirection>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNavigationDirection value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationNotificationKind(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationKind>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationKind value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationNotificationProcessing(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationProcessing>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationProcessing value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationOrientation(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationOrientation>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationOrientation value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationOutlineStyles(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationOutlineStyles>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::AutomationOutlineStyles value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationStructureChangeType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationStructureChangeType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationStructureChangeType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationStyleId(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationStyleId>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::AutomationStyleId value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationTextDecorationLineStyle(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationTextDecorationLineStyle>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::AutomationTextDecorationLineStyle value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutomationTextEditChangeType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::AutomationTextEditChangeType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::AutomationTextEditChangeType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_AutoSuggestionBoxTextChangeReason(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::AutoSuggestionBoxTextChangeReason>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::AutoSuggestionBoxTextChangeReason value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_BackgroundSizing(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_BindingMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Data::BindingMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Data::BindingMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_BitmapCreateOptions(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Imaging::BitmapCreateOptions>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::Imaging::BitmapCreateOptions value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_BrushMappingMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::BrushMappingMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::BrushMappingMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_CalendarViewDisplayMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CalendarViewDisplayMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::CalendarViewDisplayMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_CalendarViewSelectionMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CalendarViewSelectionMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::CalendarViewSelectionMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_CandidateWindowAlignment(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CandidateWindowAlignment>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::CandidateWindowAlignment value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_CharacterCasing(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CharacterCasing>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::CharacterCasing value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ClickMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ClickMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::ClickMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ClockState(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Animation::ClockState>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::Animation::ClockState value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_CollectionChange(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Collections::CollectionChange>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Windows::Foundation::Collections::CollectionChange value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ColorInterpolationMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::ColorInterpolationMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::ColorInterpolationMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ComboBoxSelectionChangedTrigger(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ComboBoxSelectionChangedTrigger>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::ComboBoxSelectionChangedTrigger value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_CommandBarDefaultLabelPosition(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CommandBarDefaultLabelPosition>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::CommandBarDefaultLabelPosition value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_CommandBarDynamicOverflowAction(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CommandBarDynamicOverflowAction>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::CommandBarDynamicOverflowAction value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_CommandBarLabelPosition(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CommandBarLabelPosition>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::CommandBarLabelPosition value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_CommandBarOverflowButtonVisibility(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::CommandBarOverflowButtonVisibility>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::CommandBarOverflowButtonVisibility value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ComponentResourceLocation(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ComponentResourceLocation>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::ComponentResourceLocation value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ConnectedAnimationComponent(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Animation::ConnectedAnimationComponent>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::Animation::ConnectedAnimationComponent value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ContentDialogButton(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ContentDialogButton>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::ContentDialogButton value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ContentDialogPlacement(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ContentDialogPlacement>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::ContentDialogPlacement value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ContentDialogResult(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ContentDialogResult>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::ContentDialogResult value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ControlHeaderPlacement(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ControlHeaderPlacement>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::ControlHeaderPlacement value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_CoreCursorType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Windows::UI::Core::CoreCursorType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Windows::UI::Core::CoreCursorType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_DataPackageOperation(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_DayOfWeek(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Windows::Globalization::DayOfWeek>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Windows::Globalization::DayOfWeek value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_DecodePixelType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Imaging::DecodePixelType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::Imaging::DecodePixelType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_DisabledFormattingAccelerators(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::DisabledFormattingAccelerators>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::DisabledFormattingAccelerators value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_DockPosition(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::DockPosition>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::DockPosition value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_EasingMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Animation::EasingMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::Animation::EasingMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_EdgeTransitionLocation(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::EdgeTransitionLocation>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::EdgeTransitionLocation value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ElementCompositeMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::ElementCompositeMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::ElementCompositeMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ElementHighContrastAdjustment(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ElementHighContrastAdjustment>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::ElementHighContrastAdjustment value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ElementSoundKind(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ElementSoundKind>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::ElementSoundKind value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ElementSoundMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ElementSoundMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::ElementSoundMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ElementSoundPlayerState(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ElementSoundPlayerState>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::ElementSoundPlayerState value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ElementSpatialAudioMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ElementSpatialAudioMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::ElementSpatialAudioMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ElementTheme(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::ElementTheme>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::ElementTheme value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ExpandCollapseState(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::ExpandCollapseState>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::ExpandCollapseState value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FailedMediaStreamKind(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Windows::Media::Playback::FailedMediaStreamKind>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Windows::Media::Playback::FailedMediaStreamKind value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FastPlayFallbackBehaviour(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::FastPlayFallbackBehaviour>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::FastPlayFallbackBehaviour value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FillBehavior(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Animation::FillBehavior>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::Animation::FillBehavior value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FillRule(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::FillRule>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::FillRule value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FlowDirection(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FlowDirection>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::FlowDirection value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FlyoutPlacementMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutPlacementMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutPlacementMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FlyoutShowMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutShowMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutShowMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FocusInputDeviceKind(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::FocusInputDeviceKind>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Input::FocusInputDeviceKind value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FocusNavigationDirection(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::FocusNavigationDirection>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Input::FocusNavigationDirection value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FocusState(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FocusState>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::FocusState value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FocusVisualKind(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FocusVisualKind>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::FocusVisualKind value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FontCapitals(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontCapitals>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::FontCapitals value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FontEastAsianLanguage(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontEastAsianLanguage>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::FontEastAsianLanguage value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FontEastAsianWidths(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontEastAsianWidths>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::FontEastAsianWidths value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FontFraction(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontFraction>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::FontFraction value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FontNumeralAlignment(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontNumeralAlignment>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::FontNumeralAlignment value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FontNumeralStyle(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontNumeralStyle>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::FontNumeralStyle value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FontStretch(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Windows::UI::Text::FontStretch>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Windows::UI::Text::FontStretch value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FontStyle(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Windows::UI::Text::FontStyle>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Windows::UI::Text::FontStyle value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_FontVariants(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::FontVariants>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::FontVariants value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_GeneratorDirection(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::GeneratorDirection>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::GeneratorDirection value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_GestureModes(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<DirectUI::GestureModes>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    DirectUI::GestureModes value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_GradientSpreadMethod(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::GradientSpreadMethod>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::GradientSpreadMethod value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_GridUnitType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::GridUnitType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::GridUnitType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_GroupHeaderPlacement(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::GroupHeaderPlacement>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::GroupHeaderPlacement value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_HoldingState(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Input::HoldingState>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Input::HoldingState value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_HorizontalAlignment(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::HorizontalAlignment>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::HorizontalAlignment value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_IncrementalLoadingTrigger(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::IncrementalLoadingTrigger>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::IncrementalLoadingTrigger value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_InputScopeNameValue(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::InputScopeNameValue>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Input::InputScopeNameValue value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_InputValidationErrorEventAction(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::InputValidationErrorEventAction>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::InputValidationErrorEventAction value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_InputValidationKind(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::InputValidationKind>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::InputValidationKind value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_InputValidationMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::InputValidationMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::InputValidationMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ItemsUpdatingScrollMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ItemsUpdatingScrollMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::ItemsUpdatingScrollMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_KeyboardAcceleratorPlacementMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::KeyboardAcceleratorPlacementMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Input::KeyboardAcceleratorPlacementMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_KeyboardNavigationMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::KeyboardNavigationMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Input::KeyboardNavigationMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_KeyTipPlacementMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::KeyTipPlacementMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Input::KeyTipPlacementMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_LightDismissOverlayMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::LightDismissOverlayMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::LightDismissOverlayMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_LineStackingStrategy(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::LineStackingStrategy>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::LineStackingStrategy value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ListViewItemPresenterCheckMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ListViewItemPresenterCheckMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::ListViewItemPresenterCheckMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ListViewItemPresenterSelectionIndicatorMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ListViewItemPresenterSelectionIndicatorMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::ListViewItemPresenterSelectionIndicatorMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ListViewReorderMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ListViewReorderMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::ListViewReorderMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ListViewSelectionMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ListViewSelectionMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::ListViewSelectionMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_LoadedImageSourceLoadStatus(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::LoadedImageSourceLoadStatus>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::LoadedImageSourceLoadStatus value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_LogicalDirection(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Documents::LogicalDirection>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Documents::LogicalDirection value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ManipulationModes(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::ManipulationModes>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Input::ManipulationModes value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_MarkupExtensionType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<DirectUI::MarkupExtensionType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    DirectUI::MarkupExtensionType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_NavigationCacheMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Navigation::NavigationCacheMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Navigation::NavigationCacheMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_NavigationMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Navigation::NavigationMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Navigation::NavigationMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_NotifyCollectionChangedAction(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Interop::NotifyCollectionChangedAction>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Interop::NotifyCollectionChangedAction value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_OpticalMarginAlignment(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::OpticalMarginAlignment>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::OpticalMarginAlignment value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_Orientation(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Orientation>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Orientation value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_PanelScrollingDirection(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::PanelScrollingDirection>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::PanelScrollingDirection value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_PasswordRevealMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::PasswordRevealMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::PasswordRevealMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_PatternInterface(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::Peers::PatternInterface>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::Peers::PatternInterface value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_PenLineCap(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::PenLineCap>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::PenLineCap value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_PenLineJoin(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::PenLineJoin>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::PenLineJoin value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_PlacementMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::PlacementMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::PlacementMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_PointerDeviceType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Input::PointerDeviceType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Input::PointerDeviceType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_PointerDirection(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<DirectUI::PointerDirection>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    DirectUI::PointerDirection value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_PopupPlacementMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::PopupPlacementMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::PopupPlacementMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_PreviewPageCountType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Printing::PreviewPageCountType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Printing::PreviewPageCountType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_PrintDocumentFormat(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<DirectUI::PrintDocumentFormat>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    DirectUI::PrintDocumentFormat value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_RelativeSourceMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Data::RelativeSourceMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Data::RelativeSourceMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_RequiresPointer(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::RequiresPointer>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::RequiresPointer value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_RichEditClipboardFormat(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::RichEditClipboardFormat>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::RichEditClipboardFormat value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_RowOrColumnMajor(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::RowOrColumnMajor>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::RowOrColumnMajor value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ScrollAmount(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::ScrollAmount>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::ScrollAmount value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ScrollBarVisibility(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ScrollBarVisibility>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::ScrollBarVisibility value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ScrollEventType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollEventType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollEventType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ScrollingIndicatorMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollingIndicatorMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollingIndicatorMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ScrollIntoViewAlignment(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ScrollIntoViewAlignment>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::ScrollIntoViewAlignment value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ScrollMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ScrollMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::ScrollMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_SelectionMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::SelectionMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::SelectionMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_SliderSnapsTo(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::SliderSnapsTo>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::SliderSnapsTo value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_SnapPointsAlignment(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::SnapPointsAlignment>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::SnapPointsAlignment value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_SnapPointsType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::SnapPointsType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::SnapPointsType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_SplitViewDisplayMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::SplitViewDisplayMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::SplitViewDisplayMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_SplitViewPanePlacement(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::SplitViewPanePlacement>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::SplitViewPanePlacement value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_StandardUICommandKind(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::StandardUICommandKind>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Input::StandardUICommandKind value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_Stretch(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Stretch>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::Stretch value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_StretchDirection(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::StretchDirection>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::StretchDirection value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_StyleSimulations(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::StyleSimulations>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::StyleSimulations value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_SupportedTextSelection(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::SupportedTextSelection>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::SupportedTextSelection value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_SvgImageSourceLoadStatus(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSourceLoadStatus>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSourceLoadStatus value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_SweepDirection(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Media::SweepDirection>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Media::SweepDirection value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_Symbol(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Symbol>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Symbol value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_SynchronizedInputType(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::SynchronizedInputType>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::SynchronizedInputType value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_TextAlignment(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::TextAlignment>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::TextAlignment value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_TextDecorations(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Windows::UI::Text::TextDecorations>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Windows::UI::Text::TextDecorations value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_TextFormattingMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<DirectUI::TextFormattingMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    DirectUI::TextFormattingMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_TextHintingMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<DirectUI::TextHintingMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    DirectUI::TextHintingMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_TextLineBounds(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::TextLineBounds>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::TextLineBounds value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_TextReadingOrder(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::TextReadingOrder>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::TextReadingOrder value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_TextRenderingMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<DirectUI::TextRenderingMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    DirectUI::TextRenderingMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_TextTrimming(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::TextTrimming>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::TextTrimming value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_TextWrapping(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::TextWrapping>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::TextWrapping value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_TickPlacement(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::TickPlacement>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::Primitives::TickPlacement value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ToggleState(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::ToggleState>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::ToggleState value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_TypeKind(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Windows::UI::Xaml::Interop::TypeKind>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Windows::UI::Xaml::Interop::TypeKind value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_UnderlineStyle(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Documents::UnderlineStyle>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Documents::UnderlineStyle value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_UpdateSourceTrigger(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Data::UpdateSourceTrigger>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Data::UpdateSourceTrigger value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_Vector3TransitionComponents(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Vector3TransitionComponents>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Vector3TransitionComponents value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_VerticalAlignment(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::VerticalAlignment>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::VerticalAlignment value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_VirtualizationMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::VirtualizationMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::VirtualizationMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_VirtualKey(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Windows::System::VirtualKey>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Windows::System::VirtualKey value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_VirtualKeyModifiers(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Windows::System::VirtualKeyModifiers>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Windows::System::VirtualKeyModifiers value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_Visibility(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Visibility>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Visibility value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_WindowInteractionState(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::WindowInteractionState>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::WindowInteractionState value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_WindowVisualState(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::WindowVisualState>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::WindowVisualState value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_XYFocusKeyboardNavigationMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::XYFocusKeyboardNavigationMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Input::XYFocusKeyboardNavigationMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_XYFocusNavigationStrategy(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_XYFocusNavigationStrategyOverride(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategyOverride>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategyOverride value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ZoomMode(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Controls::ZoomMode>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Controls::ZoomMode value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

__declspec(noinline) HRESULT GetValueFor_KnownTypeIndex_ZoomUnit(_In_ IInspectable* pBox, REFIID guid, _Out_ UINT* pnValue)
{
    HRESULT hr = S_OK;
    ABI::Windows::Foundation::IReference<ABI::Microsoft::UI::Xaml::Automation::ZoomUnit>* ptr = nullptr;
    IFC(pBox->QueryInterface(guid, reinterpret_cast<void**>(&ptr)));
    ABI::Microsoft::UI::Xaml::Automation::ZoomUnit value;
    IFC(ptr->get_Value(&value));
    *pnValue = static_cast<uint32_t>(value);
Cleanup:
    ReleaseInterfaceNoNULL(ptr);
    return hr;
}

_Check_return_ HRESULT GetEnumValueFromKnownWinRTBox(_In_ IInspectable* pBox, _In_ const CClassInfo* pType, _Out_ UINT* pnValue)
{
    REFIID typeGuid = pType->GetGuid();

    *pnValue = 0;
    switch (pType->GetIndex())
    {
        case KnownTypeIndex::AccessibilityView:
            return GetValueFor_KnownTypeIndex_AccessibilityView(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AlignmentX:
            return GetValueFor_KnownTypeIndex_AlignmentX(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AlignmentY:
            return GetValueFor_KnownTypeIndex_AlignmentY(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AnimationDirection:
            return GetValueFor_KnownTypeIndex_AnimationDirection(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AnnotationType:
            return GetValueFor_KnownTypeIndex_AnnotationType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AppBarClosedDisplayMode:
            return GetValueFor_KnownTypeIndex_AppBarClosedDisplayMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ApplicationHighContrastAdjustment:
            return GetValueFor_KnownTypeIndex_ApplicationHighContrastAdjustment(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ApplicationRequiresPointerMode:
            return GetValueFor_KnownTypeIndex_ApplicationRequiresPointerMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ApplicationTheme:
            return GetValueFor_KnownTypeIndex_ApplicationTheme(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationActiveEnd:
            return GetValueFor_KnownTypeIndex_AutomationActiveEnd(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationAnimationStyle:
            return GetValueFor_KnownTypeIndex_AutomationAnimationStyle(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationBulletStyle:
            return GetValueFor_KnownTypeIndex_AutomationBulletStyle(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationCaretBidiMode:
            return GetValueFor_KnownTypeIndex_AutomationCaretBidiMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationCaretPosition:
            return GetValueFor_KnownTypeIndex_AutomationCaretPosition(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationControlType:
            return GetValueFor_KnownTypeIndex_AutomationControlType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationEvents:
            return GetValueFor_KnownTypeIndex_AutomationEvents(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationFlowDirections:
            return GetValueFor_KnownTypeIndex_AutomationFlowDirections(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationHeadingLevel:
            return GetValueFor_KnownTypeIndex_AutomationHeadingLevel(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationLandmarkType:
            return GetValueFor_KnownTypeIndex_AutomationLandmarkType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationLiveSetting:
            return GetValueFor_KnownTypeIndex_AutomationLiveSetting(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationNavigationDirection:
            return GetValueFor_KnownTypeIndex_AutomationNavigationDirection(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationNotificationKind:
            return GetValueFor_KnownTypeIndex_AutomationNotificationKind(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationNotificationProcessing:
            return GetValueFor_KnownTypeIndex_AutomationNotificationProcessing(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationOrientation:
            return GetValueFor_KnownTypeIndex_AutomationOrientation(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationOutlineStyles:
            return GetValueFor_KnownTypeIndex_AutomationOutlineStyles(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationStructureChangeType:
            return GetValueFor_KnownTypeIndex_AutomationStructureChangeType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationStyleId:
            return GetValueFor_KnownTypeIndex_AutomationStyleId(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationTextDecorationLineStyle:
            return GetValueFor_KnownTypeIndex_AutomationTextDecorationLineStyle(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutomationTextEditChangeType:
            return GetValueFor_KnownTypeIndex_AutomationTextEditChangeType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::AutoSuggestionBoxTextChangeReason:
            return GetValueFor_KnownTypeIndex_AutoSuggestionBoxTextChangeReason(pBox, typeGuid, pnValue);
        case KnownTypeIndex::BackgroundSizing:
            return GetValueFor_KnownTypeIndex_BackgroundSizing(pBox, typeGuid, pnValue);
        case KnownTypeIndex::BindingMode:
            return GetValueFor_KnownTypeIndex_BindingMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::BitmapCreateOptions:
            return GetValueFor_KnownTypeIndex_BitmapCreateOptions(pBox, typeGuid, pnValue);
        case KnownTypeIndex::BrushMappingMode:
            return GetValueFor_KnownTypeIndex_BrushMappingMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::CalendarViewDisplayMode:
            return GetValueFor_KnownTypeIndex_CalendarViewDisplayMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::CalendarViewSelectionMode:
            return GetValueFor_KnownTypeIndex_CalendarViewSelectionMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::CandidateWindowAlignment:
            return GetValueFor_KnownTypeIndex_CandidateWindowAlignment(pBox, typeGuid, pnValue);
        case KnownTypeIndex::CharacterCasing:
            return GetValueFor_KnownTypeIndex_CharacterCasing(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ClickMode:
            return GetValueFor_KnownTypeIndex_ClickMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ClockState:
            return GetValueFor_KnownTypeIndex_ClockState(pBox, typeGuid, pnValue);
        case KnownTypeIndex::CollectionChange:
            return GetValueFor_KnownTypeIndex_CollectionChange(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ColorInterpolationMode:
            return GetValueFor_KnownTypeIndex_ColorInterpolationMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ComboBoxSelectionChangedTrigger:
            return GetValueFor_KnownTypeIndex_ComboBoxSelectionChangedTrigger(pBox, typeGuid, pnValue);
        case KnownTypeIndex::CommandBarDefaultLabelPosition:
            return GetValueFor_KnownTypeIndex_CommandBarDefaultLabelPosition(pBox, typeGuid, pnValue);
        case KnownTypeIndex::CommandBarDynamicOverflowAction:
            return GetValueFor_KnownTypeIndex_CommandBarDynamicOverflowAction(pBox, typeGuid, pnValue);
        case KnownTypeIndex::CommandBarLabelPosition:
            return GetValueFor_KnownTypeIndex_CommandBarLabelPosition(pBox, typeGuid, pnValue);
        case KnownTypeIndex::CommandBarOverflowButtonVisibility:
            return GetValueFor_KnownTypeIndex_CommandBarOverflowButtonVisibility(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ComponentResourceLocation:
            return GetValueFor_KnownTypeIndex_ComponentResourceLocation(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ConnectedAnimationComponent:
            return GetValueFor_KnownTypeIndex_ConnectedAnimationComponent(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ContentDialogButton:
            return GetValueFor_KnownTypeIndex_ContentDialogButton(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ContentDialogPlacement:
            return GetValueFor_KnownTypeIndex_ContentDialogPlacement(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ContentDialogResult:
            return GetValueFor_KnownTypeIndex_ContentDialogResult(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ControlHeaderPlacement:
            return GetValueFor_KnownTypeIndex_ControlHeaderPlacement(pBox, typeGuid, pnValue);
        case KnownTypeIndex::CoreCursorType:
            return GetValueFor_KnownTypeIndex_CoreCursorType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::DataPackageOperation:
            return GetValueFor_KnownTypeIndex_DataPackageOperation(pBox, typeGuid, pnValue);
        case KnownTypeIndex::DayOfWeek:
            return GetValueFor_KnownTypeIndex_DayOfWeek(pBox, typeGuid, pnValue);
        case KnownTypeIndex::DecodePixelType:
            return GetValueFor_KnownTypeIndex_DecodePixelType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::DisabledFormattingAccelerators:
            return GetValueFor_KnownTypeIndex_DisabledFormattingAccelerators(pBox, typeGuid, pnValue);
        case KnownTypeIndex::DockPosition:
            return GetValueFor_KnownTypeIndex_DockPosition(pBox, typeGuid, pnValue);
        case KnownTypeIndex::EasingMode:
            return GetValueFor_KnownTypeIndex_EasingMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::EdgeTransitionLocation:
            return GetValueFor_KnownTypeIndex_EdgeTransitionLocation(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ElementCompositeMode:
            return GetValueFor_KnownTypeIndex_ElementCompositeMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ElementHighContrastAdjustment:
            return GetValueFor_KnownTypeIndex_ElementHighContrastAdjustment(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ElementSoundKind:
            return GetValueFor_KnownTypeIndex_ElementSoundKind(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ElementSoundMode:
            return GetValueFor_KnownTypeIndex_ElementSoundMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ElementSoundPlayerState:
            return GetValueFor_KnownTypeIndex_ElementSoundPlayerState(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ElementSpatialAudioMode:
            return GetValueFor_KnownTypeIndex_ElementSpatialAudioMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ElementTheme:
            return GetValueFor_KnownTypeIndex_ElementTheme(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ExpandCollapseState:
            return GetValueFor_KnownTypeIndex_ExpandCollapseState(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FailedMediaStreamKind:
            return GetValueFor_KnownTypeIndex_FailedMediaStreamKind(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FastPlayFallbackBehaviour:
            return GetValueFor_KnownTypeIndex_FastPlayFallbackBehaviour(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FillBehavior:
            return GetValueFor_KnownTypeIndex_FillBehavior(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FillRule:
            return GetValueFor_KnownTypeIndex_FillRule(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FlowDirection:
            return GetValueFor_KnownTypeIndex_FlowDirection(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FlyoutPlacementMode:
            return GetValueFor_KnownTypeIndex_FlyoutPlacementMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FlyoutShowMode:
            return GetValueFor_KnownTypeIndex_FlyoutShowMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FocusInputDeviceKind:
            return GetValueFor_KnownTypeIndex_FocusInputDeviceKind(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FocusNavigationDirection:
            return GetValueFor_KnownTypeIndex_FocusNavigationDirection(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FocusState:
            return GetValueFor_KnownTypeIndex_FocusState(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FocusVisualKind:
            return GetValueFor_KnownTypeIndex_FocusVisualKind(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FontCapitals:
            return GetValueFor_KnownTypeIndex_FontCapitals(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FontEastAsianLanguage:
            return GetValueFor_KnownTypeIndex_FontEastAsianLanguage(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FontEastAsianWidths:
            return GetValueFor_KnownTypeIndex_FontEastAsianWidths(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FontFraction:
            return GetValueFor_KnownTypeIndex_FontFraction(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FontNumeralAlignment:
            return GetValueFor_KnownTypeIndex_FontNumeralAlignment(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FontNumeralStyle:
            return GetValueFor_KnownTypeIndex_FontNumeralStyle(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FontStretch:
            return GetValueFor_KnownTypeIndex_FontStretch(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FontStyle:
            return GetValueFor_KnownTypeIndex_FontStyle(pBox, typeGuid, pnValue);
        case KnownTypeIndex::FontVariants:
            return GetValueFor_KnownTypeIndex_FontVariants(pBox, typeGuid, pnValue);
        case KnownTypeIndex::GeneratorDirection:
            return GetValueFor_KnownTypeIndex_GeneratorDirection(pBox, typeGuid, pnValue);
        case KnownTypeIndex::GestureModes:
            return GetValueFor_KnownTypeIndex_GestureModes(pBox, typeGuid, pnValue);
        case KnownTypeIndex::GradientSpreadMethod:
            return GetValueFor_KnownTypeIndex_GradientSpreadMethod(pBox, typeGuid, pnValue);
        case KnownTypeIndex::GridUnitType:
            return GetValueFor_KnownTypeIndex_GridUnitType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::GroupHeaderPlacement:
            return GetValueFor_KnownTypeIndex_GroupHeaderPlacement(pBox, typeGuid, pnValue);
        case KnownTypeIndex::HoldingState:
            return GetValueFor_KnownTypeIndex_HoldingState(pBox, typeGuid, pnValue);
        case KnownTypeIndex::HorizontalAlignment:
            return GetValueFor_KnownTypeIndex_HorizontalAlignment(pBox, typeGuid, pnValue);
        case KnownTypeIndex::IncrementalLoadingTrigger:
            return GetValueFor_KnownTypeIndex_IncrementalLoadingTrigger(pBox, typeGuid, pnValue);
        case KnownTypeIndex::InputScopeNameValue:
            return GetValueFor_KnownTypeIndex_InputScopeNameValue(pBox, typeGuid, pnValue);
        case KnownTypeIndex::InputValidationErrorEventAction:
            return GetValueFor_KnownTypeIndex_InputValidationErrorEventAction(pBox, typeGuid, pnValue);
        case KnownTypeIndex::InputValidationKind:
            return GetValueFor_KnownTypeIndex_InputValidationKind(pBox, typeGuid, pnValue);
        case KnownTypeIndex::InputValidationMode:
            return GetValueFor_KnownTypeIndex_InputValidationMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ItemsUpdatingScrollMode:
            return GetValueFor_KnownTypeIndex_ItemsUpdatingScrollMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::KeyboardAcceleratorPlacementMode:
            return GetValueFor_KnownTypeIndex_KeyboardAcceleratorPlacementMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::KeyboardNavigationMode:
            return GetValueFor_KnownTypeIndex_KeyboardNavigationMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::KeyTipPlacementMode:
            return GetValueFor_KnownTypeIndex_KeyTipPlacementMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::LightDismissOverlayMode:
            return GetValueFor_KnownTypeIndex_LightDismissOverlayMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::LineStackingStrategy:
            return GetValueFor_KnownTypeIndex_LineStackingStrategy(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ListViewItemPresenterCheckMode:
            return GetValueFor_KnownTypeIndex_ListViewItemPresenterCheckMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ListViewItemPresenterSelectionIndicatorMode:
            return GetValueFor_KnownTypeIndex_ListViewItemPresenterSelectionIndicatorMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ListViewReorderMode:
            return GetValueFor_KnownTypeIndex_ListViewReorderMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ListViewSelectionMode:
            return GetValueFor_KnownTypeIndex_ListViewSelectionMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::LoadedImageSourceLoadStatus:
            return GetValueFor_KnownTypeIndex_LoadedImageSourceLoadStatus(pBox, typeGuid, pnValue);
        case KnownTypeIndex::LogicalDirection:
            return GetValueFor_KnownTypeIndex_LogicalDirection(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ManipulationModes:
            return GetValueFor_KnownTypeIndex_ManipulationModes(pBox, typeGuid, pnValue);
        case KnownTypeIndex::MarkupExtensionType:
            return GetValueFor_KnownTypeIndex_MarkupExtensionType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::NavigationCacheMode:
            return GetValueFor_KnownTypeIndex_NavigationCacheMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::NavigationMode:
            return GetValueFor_KnownTypeIndex_NavigationMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::NotifyCollectionChangedAction:
            return GetValueFor_KnownTypeIndex_NotifyCollectionChangedAction(pBox, typeGuid, pnValue);
        case KnownTypeIndex::OpticalMarginAlignment:
            return GetValueFor_KnownTypeIndex_OpticalMarginAlignment(pBox, typeGuid, pnValue);
        case KnownTypeIndex::Orientation:
            return GetValueFor_KnownTypeIndex_Orientation(pBox, typeGuid, pnValue);
        case KnownTypeIndex::PanelScrollingDirection:
            return GetValueFor_KnownTypeIndex_PanelScrollingDirection(pBox, typeGuid, pnValue);
        case KnownTypeIndex::PasswordRevealMode:
            return GetValueFor_KnownTypeIndex_PasswordRevealMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::PatternInterface:
            return GetValueFor_KnownTypeIndex_PatternInterface(pBox, typeGuid, pnValue);
        case KnownTypeIndex::PenLineCap:
            return GetValueFor_KnownTypeIndex_PenLineCap(pBox, typeGuid, pnValue);
        case KnownTypeIndex::PenLineJoin:
            return GetValueFor_KnownTypeIndex_PenLineJoin(pBox, typeGuid, pnValue);
        case KnownTypeIndex::PlacementMode:
            return GetValueFor_KnownTypeIndex_PlacementMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::PointerDeviceType:
            return GetValueFor_KnownTypeIndex_PointerDeviceType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::PointerDirection:
            return GetValueFor_KnownTypeIndex_PointerDirection(pBox, typeGuid, pnValue);
        case KnownTypeIndex::PopupPlacementMode:
            return GetValueFor_KnownTypeIndex_PopupPlacementMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::PreviewPageCountType:
            return GetValueFor_KnownTypeIndex_PreviewPageCountType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::PrintDocumentFormat:
            return GetValueFor_KnownTypeIndex_PrintDocumentFormat(pBox, typeGuid, pnValue);
        case KnownTypeIndex::RelativeSourceMode:
            return GetValueFor_KnownTypeIndex_RelativeSourceMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::RequiresPointer:
            return GetValueFor_KnownTypeIndex_RequiresPointer(pBox, typeGuid, pnValue);
        case KnownTypeIndex::RichEditClipboardFormat:
            return GetValueFor_KnownTypeIndex_RichEditClipboardFormat(pBox, typeGuid, pnValue);
        case KnownTypeIndex::RowOrColumnMajor:
            return GetValueFor_KnownTypeIndex_RowOrColumnMajor(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ScrollAmount:
            return GetValueFor_KnownTypeIndex_ScrollAmount(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ScrollBarVisibility:
            return GetValueFor_KnownTypeIndex_ScrollBarVisibility(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ScrollEventType:
            return GetValueFor_KnownTypeIndex_ScrollEventType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ScrollingIndicatorMode:
            return GetValueFor_KnownTypeIndex_ScrollingIndicatorMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ScrollIntoViewAlignment:
            return GetValueFor_KnownTypeIndex_ScrollIntoViewAlignment(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ScrollMode:
            return GetValueFor_KnownTypeIndex_ScrollMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::SelectionMode:
            return GetValueFor_KnownTypeIndex_SelectionMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::SliderSnapsTo:
            return GetValueFor_KnownTypeIndex_SliderSnapsTo(pBox, typeGuid, pnValue);
        case KnownTypeIndex::SnapPointsAlignment:
            return GetValueFor_KnownTypeIndex_SnapPointsAlignment(pBox, typeGuid, pnValue);
        case KnownTypeIndex::SnapPointsType:
            return GetValueFor_KnownTypeIndex_SnapPointsType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::SplitViewDisplayMode:
            return GetValueFor_KnownTypeIndex_SplitViewDisplayMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::SplitViewPanePlacement:
            return GetValueFor_KnownTypeIndex_SplitViewPanePlacement(pBox, typeGuid, pnValue);
        case KnownTypeIndex::StandardUICommandKind:
            return GetValueFor_KnownTypeIndex_StandardUICommandKind(pBox, typeGuid, pnValue);
        case KnownTypeIndex::Stretch:
            return GetValueFor_KnownTypeIndex_Stretch(pBox, typeGuid, pnValue);
        case KnownTypeIndex::StretchDirection:
            return GetValueFor_KnownTypeIndex_StretchDirection(pBox, typeGuid, pnValue);
        case KnownTypeIndex::StyleSimulations:
            return GetValueFor_KnownTypeIndex_StyleSimulations(pBox, typeGuid, pnValue);
        case KnownTypeIndex::SupportedTextSelection:
            return GetValueFor_KnownTypeIndex_SupportedTextSelection(pBox, typeGuid, pnValue);
        case KnownTypeIndex::SvgImageSourceLoadStatus:
            return GetValueFor_KnownTypeIndex_SvgImageSourceLoadStatus(pBox, typeGuid, pnValue);
        case KnownTypeIndex::SweepDirection:
            return GetValueFor_KnownTypeIndex_SweepDirection(pBox, typeGuid, pnValue);
        case KnownTypeIndex::Symbol:
            return GetValueFor_KnownTypeIndex_Symbol(pBox, typeGuid, pnValue);
        case KnownTypeIndex::SynchronizedInputType:
            return GetValueFor_KnownTypeIndex_SynchronizedInputType(pBox, typeGuid, pnValue);
        case KnownTypeIndex::TextAlignment:
            return GetValueFor_KnownTypeIndex_TextAlignment(pBox, typeGuid, pnValue);
        case KnownTypeIndex::TextDecorations:
            return GetValueFor_KnownTypeIndex_TextDecorations(pBox, typeGuid, pnValue);
        case KnownTypeIndex::TextFormattingMode:
            return GetValueFor_KnownTypeIndex_TextFormattingMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::TextHintingMode:
            return GetValueFor_KnownTypeIndex_TextHintingMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::TextLineBounds:
            return GetValueFor_KnownTypeIndex_TextLineBounds(pBox, typeGuid, pnValue);
        case KnownTypeIndex::TextReadingOrder:
            return GetValueFor_KnownTypeIndex_TextReadingOrder(pBox, typeGuid, pnValue);
        case KnownTypeIndex::TextRenderingMode:
            return GetValueFor_KnownTypeIndex_TextRenderingMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::TextTrimming:
            return GetValueFor_KnownTypeIndex_TextTrimming(pBox, typeGuid, pnValue);
        case KnownTypeIndex::TextWrapping:
            return GetValueFor_KnownTypeIndex_TextWrapping(pBox, typeGuid, pnValue);
        case KnownTypeIndex::TickPlacement:
            return GetValueFor_KnownTypeIndex_TickPlacement(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ToggleState:
            return GetValueFor_KnownTypeIndex_ToggleState(pBox, typeGuid, pnValue);
        case KnownTypeIndex::TypeKind:
            return GetValueFor_KnownTypeIndex_TypeKind(pBox, typeGuid, pnValue);
        case KnownTypeIndex::UnderlineStyle:
            return GetValueFor_KnownTypeIndex_UnderlineStyle(pBox, typeGuid, pnValue);
        case KnownTypeIndex::UpdateSourceTrigger:
            return GetValueFor_KnownTypeIndex_UpdateSourceTrigger(pBox, typeGuid, pnValue);
        case KnownTypeIndex::Vector3TransitionComponents:
            return GetValueFor_KnownTypeIndex_Vector3TransitionComponents(pBox, typeGuid, pnValue);
        case KnownTypeIndex::VerticalAlignment:
            return GetValueFor_KnownTypeIndex_VerticalAlignment(pBox, typeGuid, pnValue);
        case KnownTypeIndex::VirtualizationMode:
            return GetValueFor_KnownTypeIndex_VirtualizationMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::VirtualKey:
            return GetValueFor_KnownTypeIndex_VirtualKey(pBox, typeGuid, pnValue);
        case KnownTypeIndex::VirtualKeyModifiers:
            return GetValueFor_KnownTypeIndex_VirtualKeyModifiers(pBox, typeGuid, pnValue);
        case KnownTypeIndex::Visibility:
            return GetValueFor_KnownTypeIndex_Visibility(pBox, typeGuid, pnValue);
        case KnownTypeIndex::WindowInteractionState:
            return GetValueFor_KnownTypeIndex_WindowInteractionState(pBox, typeGuid, pnValue);
        case KnownTypeIndex::WindowVisualState:
            return GetValueFor_KnownTypeIndex_WindowVisualState(pBox, typeGuid, pnValue);
        case KnownTypeIndex::XYFocusKeyboardNavigationMode:
            return GetValueFor_KnownTypeIndex_XYFocusKeyboardNavigationMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::XYFocusNavigationStrategy:
            return GetValueFor_KnownTypeIndex_XYFocusNavigationStrategy(pBox, typeGuid, pnValue);
        case KnownTypeIndex::XYFocusNavigationStrategyOverride:
            return GetValueFor_KnownTypeIndex_XYFocusNavigationStrategyOverride(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ZoomMode:
            return GetValueFor_KnownTypeIndex_ZoomMode(pBox, typeGuid, pnValue);
        case KnownTypeIndex::ZoomUnit:
            return GetValueFor_KnownTypeIndex_ZoomUnit(pBox, typeGuid, pnValue);
        default:
            // Unsupported enum type.
            IFC_RETURN(E_NOTIMPL);
    }

    return S_OK;
}

_Check_return_ HRESULT GetKnownWinRTBoxFromEnumValue(_In_ UINT nValue, _In_ const CClassInfo* pType, _Outptr_ IInspectable** ppBox)
{
    *ppBox = nullptr;
    switch (pType->GetIndex())
    {
        case KnownTypeIndex::AccessibilityView:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AccessibilityView>(static_cast<ABI::Microsoft::UI::Xaml::Automation::Peers::AccessibilityView>(nValue), ppBox);
        case KnownTypeIndex::AlignmentX:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::AlignmentX>(static_cast<ABI::Microsoft::UI::Xaml::Media::AlignmentX>(nValue), ppBox);
        case KnownTypeIndex::AlignmentY:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::AlignmentY>(static_cast<ABI::Microsoft::UI::Xaml::Media::AlignmentY>(nValue), ppBox);
        case KnownTypeIndex::AnimationDirection:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::AnimationDirection>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::AnimationDirection>(nValue), ppBox);
        case KnownTypeIndex::AnnotationType:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::AnnotationType>(static_cast<ABI::Microsoft::UI::Xaml::Automation::AnnotationType>(nValue), ppBox);
        case KnownTypeIndex::AppBarClosedDisplayMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::AppBarClosedDisplayMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::AppBarClosedDisplayMode>(nValue), ppBox);
        case KnownTypeIndex::ApplicationHighContrastAdjustment:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::ApplicationHighContrastAdjustment>(static_cast<ABI::Microsoft::UI::Xaml::ApplicationHighContrastAdjustment>(nValue), ppBox);
        case KnownTypeIndex::ApplicationRequiresPointerMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::ApplicationRequiresPointerMode>(static_cast<ABI::Microsoft::UI::Xaml::ApplicationRequiresPointerMode>(nValue), ppBox);
        case KnownTypeIndex::ApplicationTheme:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::ApplicationTheme>(static_cast<ABI::Microsoft::UI::Xaml::ApplicationTheme>(nValue), ppBox);
        case KnownTypeIndex::AutomationActiveEnd:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::AutomationActiveEnd>(static_cast<ABI::Microsoft::UI::Xaml::Automation::AutomationActiveEnd>(nValue), ppBox);
        case KnownTypeIndex::AutomationAnimationStyle:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::AutomationAnimationStyle>(static_cast<ABI::Microsoft::UI::Xaml::Automation::AutomationAnimationStyle>(nValue), ppBox);
        case KnownTypeIndex::AutomationBulletStyle:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::AutomationBulletStyle>(static_cast<ABI::Microsoft::UI::Xaml::Automation::AutomationBulletStyle>(nValue), ppBox);
        case KnownTypeIndex::AutomationCaretBidiMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::AutomationCaretBidiMode>(static_cast<ABI::Microsoft::UI::Xaml::Automation::AutomationCaretBidiMode>(nValue), ppBox);
        case KnownTypeIndex::AutomationCaretPosition:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::AutomationCaretPosition>(static_cast<ABI::Microsoft::UI::Xaml::Automation::AutomationCaretPosition>(nValue), ppBox);
        case KnownTypeIndex::AutomationControlType:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationControlType>(static_cast<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationControlType>(nValue), ppBox);
        case KnownTypeIndex::AutomationEvents:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationEvents>(static_cast<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationEvents>(nValue), ppBox);
        case KnownTypeIndex::AutomationFlowDirections:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::AutomationFlowDirections>(static_cast<ABI::Microsoft::UI::Xaml::Automation::AutomationFlowDirections>(nValue), ppBox);
        case KnownTypeIndex::AutomationHeadingLevel:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationHeadingLevel>(static_cast<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationHeadingLevel>(nValue), ppBox);
        case KnownTypeIndex::AutomationLandmarkType:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLandmarkType>(static_cast<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLandmarkType>(nValue), ppBox);
        case KnownTypeIndex::AutomationLiveSetting:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLiveSetting>(static_cast<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLiveSetting>(nValue), ppBox);
        case KnownTypeIndex::AutomationNavigationDirection:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNavigationDirection>(static_cast<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNavigationDirection>(nValue), ppBox);
        case KnownTypeIndex::AutomationNotificationKind:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationKind>(static_cast<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationKind>(nValue), ppBox);
        case KnownTypeIndex::AutomationNotificationProcessing:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationProcessing>(static_cast<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationProcessing>(nValue), ppBox);
        case KnownTypeIndex::AutomationOrientation:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationOrientation>(static_cast<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationOrientation>(nValue), ppBox);
        case KnownTypeIndex::AutomationOutlineStyles:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::AutomationOutlineStyles>(static_cast<ABI::Microsoft::UI::Xaml::Automation::AutomationOutlineStyles>(nValue), ppBox);
        case KnownTypeIndex::AutomationStructureChangeType:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationStructureChangeType>(static_cast<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationStructureChangeType>(nValue), ppBox);
        case KnownTypeIndex::AutomationStyleId:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::AutomationStyleId>(static_cast<ABI::Microsoft::UI::Xaml::Automation::AutomationStyleId>(nValue), ppBox);
        case KnownTypeIndex::AutomationTextDecorationLineStyle:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::AutomationTextDecorationLineStyle>(static_cast<ABI::Microsoft::UI::Xaml::Automation::AutomationTextDecorationLineStyle>(nValue), ppBox);
        case KnownTypeIndex::AutomationTextEditChangeType:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::AutomationTextEditChangeType>(static_cast<ABI::Microsoft::UI::Xaml::Automation::AutomationTextEditChangeType>(nValue), ppBox);
        case KnownTypeIndex::AutoSuggestionBoxTextChangeReason:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::AutoSuggestionBoxTextChangeReason>(static_cast<ABI::Microsoft::UI::Xaml::Controls::AutoSuggestionBoxTextChangeReason>(nValue), ppBox);
        case KnownTypeIndex::BackgroundSizing:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing>(static_cast<ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing>(nValue), ppBox);
        case KnownTypeIndex::BindingMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Data::BindingMode>(static_cast<ABI::Microsoft::UI::Xaml::Data::BindingMode>(nValue), ppBox);
        case KnownTypeIndex::BitmapCreateOptions:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::Imaging::BitmapCreateOptions>(static_cast<ABI::Microsoft::UI::Xaml::Media::Imaging::BitmapCreateOptions>(nValue), ppBox);
        case KnownTypeIndex::BrushMappingMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::BrushMappingMode>(static_cast<ABI::Microsoft::UI::Xaml::Media::BrushMappingMode>(nValue), ppBox);
        case KnownTypeIndex::CalendarViewDisplayMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::CalendarViewDisplayMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::CalendarViewDisplayMode>(nValue), ppBox);
        case KnownTypeIndex::CalendarViewSelectionMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::CalendarViewSelectionMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::CalendarViewSelectionMode>(nValue), ppBox);
        case KnownTypeIndex::CandidateWindowAlignment:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::CandidateWindowAlignment>(static_cast<ABI::Microsoft::UI::Xaml::Controls::CandidateWindowAlignment>(nValue), ppBox);
        case KnownTypeIndex::CharacterCasing:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::CharacterCasing>(static_cast<ABI::Microsoft::UI::Xaml::Controls::CharacterCasing>(nValue), ppBox);
        case KnownTypeIndex::ClickMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::ClickMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::ClickMode>(nValue), ppBox);
        case KnownTypeIndex::ClockState:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::Animation::ClockState>(static_cast<ABI::Microsoft::UI::Xaml::Media::Animation::ClockState>(nValue), ppBox);
        case KnownTypeIndex::CollectionChange:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Windows::Foundation::Collections::CollectionChange>(static_cast<ABI::Windows::Foundation::Collections::CollectionChange>(nValue), ppBox);
        case KnownTypeIndex::ColorInterpolationMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::ColorInterpolationMode>(static_cast<ABI::Microsoft::UI::Xaml::Media::ColorInterpolationMode>(nValue), ppBox);
        case KnownTypeIndex::ComboBoxSelectionChangedTrigger:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::ComboBoxSelectionChangedTrigger>(static_cast<ABI::Microsoft::UI::Xaml::Controls::ComboBoxSelectionChangedTrigger>(nValue), ppBox);
        case KnownTypeIndex::CommandBarDefaultLabelPosition:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::CommandBarDefaultLabelPosition>(static_cast<ABI::Microsoft::UI::Xaml::Controls::CommandBarDefaultLabelPosition>(nValue), ppBox);
        case KnownTypeIndex::CommandBarDynamicOverflowAction:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::CommandBarDynamicOverflowAction>(static_cast<ABI::Microsoft::UI::Xaml::Controls::CommandBarDynamicOverflowAction>(nValue), ppBox);
        case KnownTypeIndex::CommandBarLabelPosition:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::CommandBarLabelPosition>(static_cast<ABI::Microsoft::UI::Xaml::Controls::CommandBarLabelPosition>(nValue), ppBox);
        case KnownTypeIndex::CommandBarOverflowButtonVisibility:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::CommandBarOverflowButtonVisibility>(static_cast<ABI::Microsoft::UI::Xaml::Controls::CommandBarOverflowButtonVisibility>(nValue), ppBox);
        case KnownTypeIndex::ComponentResourceLocation:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ComponentResourceLocation>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::ComponentResourceLocation>(nValue), ppBox);
        case KnownTypeIndex::ConnectedAnimationComponent:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::Animation::ConnectedAnimationComponent>(static_cast<ABI::Microsoft::UI::Xaml::Media::Animation::ConnectedAnimationComponent>(nValue), ppBox);
        case KnownTypeIndex::ContentDialogButton:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::ContentDialogButton>(static_cast<ABI::Microsoft::UI::Xaml::Controls::ContentDialogButton>(nValue), ppBox);
        case KnownTypeIndex::ContentDialogPlacement:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::ContentDialogPlacement>(static_cast<ABI::Microsoft::UI::Xaml::Controls::ContentDialogPlacement>(nValue), ppBox);
        case KnownTypeIndex::ContentDialogResult:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::ContentDialogResult>(static_cast<ABI::Microsoft::UI::Xaml::Controls::ContentDialogResult>(nValue), ppBox);
        case KnownTypeIndex::ControlHeaderPlacement:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::ControlHeaderPlacement>(static_cast<ABI::Microsoft::UI::Xaml::Controls::ControlHeaderPlacement>(nValue), ppBox);
        case KnownTypeIndex::CoreCursorType:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Windows::UI::Core::CoreCursorType>(static_cast<ABI::Windows::UI::Core::CoreCursorType>(nValue), ppBox);
        case KnownTypeIndex::DataPackageOperation:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation>(static_cast<ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation>(nValue), ppBox);
        case KnownTypeIndex::DayOfWeek:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Windows::Globalization::DayOfWeek>(static_cast<ABI::Windows::Globalization::DayOfWeek>(nValue), ppBox);
        case KnownTypeIndex::DecodePixelType:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::Imaging::DecodePixelType>(static_cast<ABI::Microsoft::UI::Xaml::Media::Imaging::DecodePixelType>(nValue), ppBox);
        case KnownTypeIndex::DisabledFormattingAccelerators:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::DisabledFormattingAccelerators>(static_cast<ABI::Microsoft::UI::Xaml::Controls::DisabledFormattingAccelerators>(nValue), ppBox);
        case KnownTypeIndex::DockPosition:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::DockPosition>(static_cast<ABI::Microsoft::UI::Xaml::Automation::DockPosition>(nValue), ppBox);
        case KnownTypeIndex::EasingMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::Animation::EasingMode>(static_cast<ABI::Microsoft::UI::Xaml::Media::Animation::EasingMode>(nValue), ppBox);
        case KnownTypeIndex::EdgeTransitionLocation:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::EdgeTransitionLocation>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::EdgeTransitionLocation>(nValue), ppBox);
        case KnownTypeIndex::ElementCompositeMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::ElementCompositeMode>(static_cast<ABI::Microsoft::UI::Xaml::Media::ElementCompositeMode>(nValue), ppBox);
        case KnownTypeIndex::ElementHighContrastAdjustment:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::ElementHighContrastAdjustment>(static_cast<ABI::Microsoft::UI::Xaml::ElementHighContrastAdjustment>(nValue), ppBox);
        case KnownTypeIndex::ElementSoundKind:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::ElementSoundKind>(static_cast<ABI::Microsoft::UI::Xaml::ElementSoundKind>(nValue), ppBox);
        case KnownTypeIndex::ElementSoundMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::ElementSoundMode>(static_cast<ABI::Microsoft::UI::Xaml::ElementSoundMode>(nValue), ppBox);
        case KnownTypeIndex::ElementSoundPlayerState:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::ElementSoundPlayerState>(static_cast<ABI::Microsoft::UI::Xaml::ElementSoundPlayerState>(nValue), ppBox);
        case KnownTypeIndex::ElementSpatialAudioMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::ElementSpatialAudioMode>(static_cast<ABI::Microsoft::UI::Xaml::ElementSpatialAudioMode>(nValue), ppBox);
        case KnownTypeIndex::ElementTheme:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::ElementTheme>(static_cast<ABI::Microsoft::UI::Xaml::ElementTheme>(nValue), ppBox);
        case KnownTypeIndex::ExpandCollapseState:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::ExpandCollapseState>(static_cast<ABI::Microsoft::UI::Xaml::Automation::ExpandCollapseState>(nValue), ppBox);
        case KnownTypeIndex::FailedMediaStreamKind:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Windows::Media::Playback::FailedMediaStreamKind>(static_cast<ABI::Windows::Media::Playback::FailedMediaStreamKind>(nValue), ppBox);
        case KnownTypeIndex::FastPlayFallbackBehaviour:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::FastPlayFallbackBehaviour>(static_cast<ABI::Microsoft::UI::Xaml::Media::FastPlayFallbackBehaviour>(nValue), ppBox);
        case KnownTypeIndex::FillBehavior:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::Animation::FillBehavior>(static_cast<ABI::Microsoft::UI::Xaml::Media::Animation::FillBehavior>(nValue), ppBox);
        case KnownTypeIndex::FillRule:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::FillRule>(static_cast<ABI::Microsoft::UI::Xaml::Media::FillRule>(nValue), ppBox);
        case KnownTypeIndex::FlowDirection:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::FlowDirection>(static_cast<ABI::Microsoft::UI::Xaml::FlowDirection>(nValue), ppBox);
        case KnownTypeIndex::FlyoutPlacementMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutPlacementMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutPlacementMode>(nValue), ppBox);
        case KnownTypeIndex::FlyoutShowMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutShowMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutShowMode>(nValue), ppBox);
        case KnownTypeIndex::FocusInputDeviceKind:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Input::FocusInputDeviceKind>(static_cast<ABI::Microsoft::UI::Xaml::Input::FocusInputDeviceKind>(nValue), ppBox);
        case KnownTypeIndex::FocusNavigationDirection:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Input::FocusNavigationDirection>(static_cast<ABI::Microsoft::UI::Xaml::Input::FocusNavigationDirection>(nValue), ppBox);
        case KnownTypeIndex::FocusState:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::FocusState>(static_cast<ABI::Microsoft::UI::Xaml::FocusState>(nValue), ppBox);
        case KnownTypeIndex::FocusVisualKind:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::FocusVisualKind>(static_cast<ABI::Microsoft::UI::Xaml::FocusVisualKind>(nValue), ppBox);
        case KnownTypeIndex::FontCapitals:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::FontCapitals>(static_cast<ABI::Microsoft::UI::Xaml::FontCapitals>(nValue), ppBox);
        case KnownTypeIndex::FontEastAsianLanguage:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::FontEastAsianLanguage>(static_cast<ABI::Microsoft::UI::Xaml::FontEastAsianLanguage>(nValue), ppBox);
        case KnownTypeIndex::FontEastAsianWidths:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::FontEastAsianWidths>(static_cast<ABI::Microsoft::UI::Xaml::FontEastAsianWidths>(nValue), ppBox);
        case KnownTypeIndex::FontFraction:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::FontFraction>(static_cast<ABI::Microsoft::UI::Xaml::FontFraction>(nValue), ppBox);
        case KnownTypeIndex::FontNumeralAlignment:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::FontNumeralAlignment>(static_cast<ABI::Microsoft::UI::Xaml::FontNumeralAlignment>(nValue), ppBox);
        case KnownTypeIndex::FontNumeralStyle:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::FontNumeralStyle>(static_cast<ABI::Microsoft::UI::Xaml::FontNumeralStyle>(nValue), ppBox);
        case KnownTypeIndex::FontStretch:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Windows::UI::Text::FontStretch>(static_cast<ABI::Windows::UI::Text::FontStretch>(nValue), ppBox);
        case KnownTypeIndex::FontStyle:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Windows::UI::Text::FontStyle>(static_cast<ABI::Windows::UI::Text::FontStyle>(nValue), ppBox);
        case KnownTypeIndex::FontVariants:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::FontVariants>(static_cast<ABI::Microsoft::UI::Xaml::FontVariants>(nValue), ppBox);
        case KnownTypeIndex::GeneratorDirection:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::GeneratorDirection>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::GeneratorDirection>(nValue), ppBox);
        case KnownTypeIndex::GestureModes:
            return DirectUI::PropertyValue::CreateEnumReference<DirectUI::GestureModes>(static_cast<DirectUI::GestureModes>(nValue), ppBox);
        case KnownTypeIndex::GradientSpreadMethod:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::GradientSpreadMethod>(static_cast<ABI::Microsoft::UI::Xaml::Media::GradientSpreadMethod>(nValue), ppBox);
        case KnownTypeIndex::GridUnitType:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::GridUnitType>(static_cast<ABI::Microsoft::UI::Xaml::GridUnitType>(nValue), ppBox);
        case KnownTypeIndex::GroupHeaderPlacement:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::GroupHeaderPlacement>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::GroupHeaderPlacement>(nValue), ppBox);
        case KnownTypeIndex::HoldingState:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Input::HoldingState>(static_cast<ABI::Microsoft::UI::Input::HoldingState>(nValue), ppBox);
        case KnownTypeIndex::HorizontalAlignment:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::HorizontalAlignment>(static_cast<ABI::Microsoft::UI::Xaml::HorizontalAlignment>(nValue), ppBox);
        case KnownTypeIndex::IncrementalLoadingTrigger:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::IncrementalLoadingTrigger>(static_cast<ABI::Microsoft::UI::Xaml::Controls::IncrementalLoadingTrigger>(nValue), ppBox);
        case KnownTypeIndex::InputScopeNameValue:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Input::InputScopeNameValue>(static_cast<ABI::Microsoft::UI::Xaml::Input::InputScopeNameValue>(nValue), ppBox);
        case KnownTypeIndex::InputValidationErrorEventAction:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::InputValidationErrorEventAction>(static_cast<ABI::Microsoft::UI::Xaml::Controls::InputValidationErrorEventAction>(nValue), ppBox);
        case KnownTypeIndex::InputValidationKind:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::InputValidationKind>(static_cast<ABI::Microsoft::UI::Xaml::Controls::InputValidationKind>(nValue), ppBox);
        case KnownTypeIndex::InputValidationMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::InputValidationMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::InputValidationMode>(nValue), ppBox);
        case KnownTypeIndex::ItemsUpdatingScrollMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::ItemsUpdatingScrollMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::ItemsUpdatingScrollMode>(nValue), ppBox);
        case KnownTypeIndex::KeyboardAcceleratorPlacementMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Input::KeyboardAcceleratorPlacementMode>(static_cast<ABI::Microsoft::UI::Xaml::Input::KeyboardAcceleratorPlacementMode>(nValue), ppBox);
        case KnownTypeIndex::KeyboardNavigationMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Input::KeyboardNavigationMode>(static_cast<ABI::Microsoft::UI::Xaml::Input::KeyboardNavigationMode>(nValue), ppBox);
        case KnownTypeIndex::KeyTipPlacementMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Input::KeyTipPlacementMode>(static_cast<ABI::Microsoft::UI::Xaml::Input::KeyTipPlacementMode>(nValue), ppBox);
        case KnownTypeIndex::LightDismissOverlayMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::LightDismissOverlayMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::LightDismissOverlayMode>(nValue), ppBox);
        case KnownTypeIndex::LineStackingStrategy:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::LineStackingStrategy>(static_cast<ABI::Microsoft::UI::Xaml::LineStackingStrategy>(nValue), ppBox);
        case KnownTypeIndex::ListViewItemPresenterCheckMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ListViewItemPresenterCheckMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::ListViewItemPresenterCheckMode>(nValue), ppBox);
        case KnownTypeIndex::ListViewItemPresenterSelectionIndicatorMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ListViewItemPresenterSelectionIndicatorMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::ListViewItemPresenterSelectionIndicatorMode>(nValue), ppBox);
        case KnownTypeIndex::ListViewReorderMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::ListViewReorderMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::ListViewReorderMode>(nValue), ppBox);
        case KnownTypeIndex::ListViewSelectionMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::ListViewSelectionMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::ListViewSelectionMode>(nValue), ppBox);
        case KnownTypeIndex::LoadedImageSourceLoadStatus:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::LoadedImageSourceLoadStatus>(static_cast<ABI::Microsoft::UI::Xaml::Media::LoadedImageSourceLoadStatus>(nValue), ppBox);
        case KnownTypeIndex::LogicalDirection:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Documents::LogicalDirection>(static_cast<ABI::Microsoft::UI::Xaml::Documents::LogicalDirection>(nValue), ppBox);
        case KnownTypeIndex::ManipulationModes:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Input::ManipulationModes>(static_cast<ABI::Microsoft::UI::Xaml::Input::ManipulationModes>(nValue), ppBox);
        case KnownTypeIndex::MarkupExtensionType:
            return DirectUI::PropertyValue::CreateEnumReference<DirectUI::MarkupExtensionType>(static_cast<DirectUI::MarkupExtensionType>(nValue), ppBox);
        case KnownTypeIndex::NavigationCacheMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Navigation::NavigationCacheMode>(static_cast<ABI::Microsoft::UI::Xaml::Navigation::NavigationCacheMode>(nValue), ppBox);
        case KnownTypeIndex::NavigationMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Navigation::NavigationMode>(static_cast<ABI::Microsoft::UI::Xaml::Navigation::NavigationMode>(nValue), ppBox);
        case KnownTypeIndex::NotifyCollectionChangedAction:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Interop::NotifyCollectionChangedAction>(static_cast<ABI::Microsoft::UI::Xaml::Interop::NotifyCollectionChangedAction>(nValue), ppBox);
        case KnownTypeIndex::OpticalMarginAlignment:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::OpticalMarginAlignment>(static_cast<ABI::Microsoft::UI::Xaml::OpticalMarginAlignment>(nValue), ppBox);
        case KnownTypeIndex::Orientation:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Orientation>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Orientation>(nValue), ppBox);
        case KnownTypeIndex::PanelScrollingDirection:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::PanelScrollingDirection>(static_cast<ABI::Microsoft::UI::Xaml::Controls::PanelScrollingDirection>(nValue), ppBox);
        case KnownTypeIndex::PasswordRevealMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::PasswordRevealMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::PasswordRevealMode>(nValue), ppBox);
        case KnownTypeIndex::PatternInterface:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::Peers::PatternInterface>(static_cast<ABI::Microsoft::UI::Xaml::Automation::Peers::PatternInterface>(nValue), ppBox);
        case KnownTypeIndex::PenLineCap:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::PenLineCap>(static_cast<ABI::Microsoft::UI::Xaml::Media::PenLineCap>(nValue), ppBox);
        case KnownTypeIndex::PenLineJoin:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::PenLineJoin>(static_cast<ABI::Microsoft::UI::Xaml::Media::PenLineJoin>(nValue), ppBox);
        case KnownTypeIndex::PlacementMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::PlacementMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::PlacementMode>(nValue), ppBox);
        case KnownTypeIndex::PointerDeviceType:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Input::PointerDeviceType>(static_cast<ABI::Microsoft::UI::Input::PointerDeviceType>(nValue), ppBox);
        case KnownTypeIndex::PointerDirection:
            return DirectUI::PropertyValue::CreateEnumReference<DirectUI::PointerDirection>(static_cast<DirectUI::PointerDirection>(nValue), ppBox);
        case KnownTypeIndex::PopupPlacementMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::PopupPlacementMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::PopupPlacementMode>(nValue), ppBox);
        case KnownTypeIndex::PreviewPageCountType:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Printing::PreviewPageCountType>(static_cast<ABI::Microsoft::UI::Xaml::Printing::PreviewPageCountType>(nValue), ppBox);
        case KnownTypeIndex::PrintDocumentFormat:
            return DirectUI::PropertyValue::CreateEnumReference<DirectUI::PrintDocumentFormat>(static_cast<DirectUI::PrintDocumentFormat>(nValue), ppBox);
        case KnownTypeIndex::RelativeSourceMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Data::RelativeSourceMode>(static_cast<ABI::Microsoft::UI::Xaml::Data::RelativeSourceMode>(nValue), ppBox);
        case KnownTypeIndex::RequiresPointer:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::RequiresPointer>(static_cast<ABI::Microsoft::UI::Xaml::Controls::RequiresPointer>(nValue), ppBox);
        case KnownTypeIndex::RichEditClipboardFormat:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::RichEditClipboardFormat>(static_cast<ABI::Microsoft::UI::Xaml::Controls::RichEditClipboardFormat>(nValue), ppBox);
        case KnownTypeIndex::RowOrColumnMajor:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::RowOrColumnMajor>(static_cast<ABI::Microsoft::UI::Xaml::Automation::RowOrColumnMajor>(nValue), ppBox);
        case KnownTypeIndex::ScrollAmount:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::ScrollAmount>(static_cast<ABI::Microsoft::UI::Xaml::Automation::ScrollAmount>(nValue), ppBox);
        case KnownTypeIndex::ScrollBarVisibility:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::ScrollBarVisibility>(static_cast<ABI::Microsoft::UI::Xaml::Controls::ScrollBarVisibility>(nValue), ppBox);
        case KnownTypeIndex::ScrollEventType:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollEventType>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollEventType>(nValue), ppBox);
        case KnownTypeIndex::ScrollingIndicatorMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollingIndicatorMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::ScrollingIndicatorMode>(nValue), ppBox);
        case KnownTypeIndex::ScrollIntoViewAlignment:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::ScrollIntoViewAlignment>(static_cast<ABI::Microsoft::UI::Xaml::Controls::ScrollIntoViewAlignment>(nValue), ppBox);
        case KnownTypeIndex::ScrollMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::ScrollMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::ScrollMode>(nValue), ppBox);
        case KnownTypeIndex::SelectionMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::SelectionMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::SelectionMode>(nValue), ppBox);
        case KnownTypeIndex::SliderSnapsTo:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::SliderSnapsTo>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::SliderSnapsTo>(nValue), ppBox);
        case KnownTypeIndex::SnapPointsAlignment:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::SnapPointsAlignment>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::SnapPointsAlignment>(nValue), ppBox);
        case KnownTypeIndex::SnapPointsType:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::SnapPointsType>(static_cast<ABI::Microsoft::UI::Xaml::Controls::SnapPointsType>(nValue), ppBox);
        case KnownTypeIndex::SplitViewDisplayMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::SplitViewDisplayMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::SplitViewDisplayMode>(nValue), ppBox);
        case KnownTypeIndex::SplitViewPanePlacement:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::SplitViewPanePlacement>(static_cast<ABI::Microsoft::UI::Xaml::Controls::SplitViewPanePlacement>(nValue), ppBox);
        case KnownTypeIndex::StandardUICommandKind:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Input::StandardUICommandKind>(static_cast<ABI::Microsoft::UI::Xaml::Input::StandardUICommandKind>(nValue), ppBox);
        case KnownTypeIndex::Stretch:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::Stretch>(static_cast<ABI::Microsoft::UI::Xaml::Media::Stretch>(nValue), ppBox);
        case KnownTypeIndex::StretchDirection:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::StretchDirection>(static_cast<ABI::Microsoft::UI::Xaml::Controls::StretchDirection>(nValue), ppBox);
        case KnownTypeIndex::StyleSimulations:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::StyleSimulations>(static_cast<ABI::Microsoft::UI::Xaml::Media::StyleSimulations>(nValue), ppBox);
        case KnownTypeIndex::SupportedTextSelection:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::SupportedTextSelection>(static_cast<ABI::Microsoft::UI::Xaml::Automation::SupportedTextSelection>(nValue), ppBox);
        case KnownTypeIndex::SvgImageSourceLoadStatus:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSourceLoadStatus>(static_cast<ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSourceLoadStatus>(nValue), ppBox);
        case KnownTypeIndex::SweepDirection:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Media::SweepDirection>(static_cast<ABI::Microsoft::UI::Xaml::Media::SweepDirection>(nValue), ppBox);
        case KnownTypeIndex::Symbol:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Symbol>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Symbol>(nValue), ppBox);
        case KnownTypeIndex::SynchronizedInputType:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::SynchronizedInputType>(static_cast<ABI::Microsoft::UI::Xaml::Automation::SynchronizedInputType>(nValue), ppBox);
        case KnownTypeIndex::TextAlignment:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::TextAlignment>(static_cast<ABI::Microsoft::UI::Xaml::TextAlignment>(nValue), ppBox);
        case KnownTypeIndex::TextDecorations:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Windows::UI::Text::TextDecorations>(static_cast<ABI::Windows::UI::Text::TextDecorations>(nValue), ppBox);
        case KnownTypeIndex::TextFormattingMode:
            return DirectUI::PropertyValue::CreateEnumReference<DirectUI::TextFormattingMode>(static_cast<DirectUI::TextFormattingMode>(nValue), ppBox);
        case KnownTypeIndex::TextHintingMode:
            return DirectUI::PropertyValue::CreateEnumReference<DirectUI::TextHintingMode>(static_cast<DirectUI::TextHintingMode>(nValue), ppBox);
        case KnownTypeIndex::TextLineBounds:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::TextLineBounds>(static_cast<ABI::Microsoft::UI::Xaml::TextLineBounds>(nValue), ppBox);
        case KnownTypeIndex::TextReadingOrder:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::TextReadingOrder>(static_cast<ABI::Microsoft::UI::Xaml::TextReadingOrder>(nValue), ppBox);
        case KnownTypeIndex::TextRenderingMode:
            return DirectUI::PropertyValue::CreateEnumReference<DirectUI::TextRenderingMode>(static_cast<DirectUI::TextRenderingMode>(nValue), ppBox);
        case KnownTypeIndex::TextTrimming:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::TextTrimming>(static_cast<ABI::Microsoft::UI::Xaml::TextTrimming>(nValue), ppBox);
        case KnownTypeIndex::TextWrapping:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::TextWrapping>(static_cast<ABI::Microsoft::UI::Xaml::TextWrapping>(nValue), ppBox);
        case KnownTypeIndex::TickPlacement:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::Primitives::TickPlacement>(static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::TickPlacement>(nValue), ppBox);
        case KnownTypeIndex::ToggleState:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::ToggleState>(static_cast<ABI::Microsoft::UI::Xaml::Automation::ToggleState>(nValue), ppBox);
        case KnownTypeIndex::TypeKind:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Windows::UI::Xaml::Interop::TypeKind>(static_cast<ABI::Windows::UI::Xaml::Interop::TypeKind>(nValue), ppBox);
        case KnownTypeIndex::UnderlineStyle:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Documents::UnderlineStyle>(static_cast<ABI::Microsoft::UI::Xaml::Documents::UnderlineStyle>(nValue), ppBox);
        case KnownTypeIndex::UpdateSourceTrigger:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Data::UpdateSourceTrigger>(static_cast<ABI::Microsoft::UI::Xaml::Data::UpdateSourceTrigger>(nValue), ppBox);
        case KnownTypeIndex::Vector3TransitionComponents:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Vector3TransitionComponents>(static_cast<ABI::Microsoft::UI::Xaml::Vector3TransitionComponents>(nValue), ppBox);
        case KnownTypeIndex::VerticalAlignment:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::VerticalAlignment>(static_cast<ABI::Microsoft::UI::Xaml::VerticalAlignment>(nValue), ppBox);
        case KnownTypeIndex::VirtualizationMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::VirtualizationMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::VirtualizationMode>(nValue), ppBox);
        case KnownTypeIndex::VirtualKey:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Windows::System::VirtualKey>(static_cast<ABI::Windows::System::VirtualKey>(nValue), ppBox);
        case KnownTypeIndex::VirtualKeyModifiers:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Windows::System::VirtualKeyModifiers>(static_cast<ABI::Windows::System::VirtualKeyModifiers>(nValue), ppBox);
        case KnownTypeIndex::Visibility:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Visibility>(static_cast<ABI::Microsoft::UI::Xaml::Visibility>(nValue), ppBox);
        case KnownTypeIndex::WindowInteractionState:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::WindowInteractionState>(static_cast<ABI::Microsoft::UI::Xaml::Automation::WindowInteractionState>(nValue), ppBox);
        case KnownTypeIndex::WindowVisualState:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::WindowVisualState>(static_cast<ABI::Microsoft::UI::Xaml::Automation::WindowVisualState>(nValue), ppBox);
        case KnownTypeIndex::XYFocusKeyboardNavigationMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Input::XYFocusKeyboardNavigationMode>(static_cast<ABI::Microsoft::UI::Xaml::Input::XYFocusKeyboardNavigationMode>(nValue), ppBox);
        case KnownTypeIndex::XYFocusNavigationStrategy:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy>(static_cast<ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy>(nValue), ppBox);
        case KnownTypeIndex::XYFocusNavigationStrategyOverride:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategyOverride>(static_cast<ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategyOverride>(nValue), ppBox);
        case KnownTypeIndex::ZoomMode:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Controls::ZoomMode>(static_cast<ABI::Microsoft::UI::Xaml::Controls::ZoomMode>(nValue), ppBox);
        case KnownTypeIndex::ZoomUnit:
            return DirectUI::PropertyValue::CreateEnumReference<ABI::Microsoft::UI::Xaml::Automation::ZoomUnit>(static_cast<ABI::Microsoft::UI::Xaml::Automation::ZoomUnit>(nValue), ppBox);
        default:
            // Unsupported enum type.
            IFC_RETURN(E_NOTIMPL);
    }

    return S_OK;
}
