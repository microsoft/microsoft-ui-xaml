// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "CollectionViewSource.g.h"
#include "PropertyPath.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::CollectionViewSourceGenerated::CollectionViewSourceGenerated()
{
}

DirectUI::CollectionViewSourceGenerated::~CollectionViewSourceGenerated()
{
}

HRESULT DirectUI::CollectionViewSourceGenerated::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::CollectionViewSource)))
    {
        *ppObject = static_cast<DirectUI::CollectionViewSource*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Data::ICollectionViewSource)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Data::ICollectionViewSource*>(this);
    }
    else
    {
        RRETURN(DirectUI::DependencyObject::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::CollectionViewSourceGenerated::get_IsSourceGrouped(_Out_ BOOLEAN* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::CollectionViewSource_IsSourceGrouped, pValue));
}
IFACEMETHODIMP DirectUI::CollectionViewSourceGenerated::put_IsSourceGrouped(_In_ BOOLEAN value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::CollectionViewSource_IsSourceGrouped, value));
}
IFACEMETHODIMP DirectUI::CollectionViewSourceGenerated::get_ItemsPath(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IPropertyPath** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::CollectionViewSource_ItemsPath, ppValue));
}
IFACEMETHODIMP DirectUI::CollectionViewSourceGenerated::put_ItemsPath(_In_opt_ ABI::Microsoft::UI::Xaml::IPropertyPath* pValue)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::CollectionViewSource_ItemsPath, pValue));
}
IFACEMETHODIMP DirectUI::CollectionViewSourceGenerated::get_Source(_Outptr_result_maybenull_ IInspectable** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::CollectionViewSource_Source, ppValue));
}
IFACEMETHODIMP DirectUI::CollectionViewSourceGenerated::put_Source(_In_opt_ IInspectable* pValue)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::CollectionViewSource_Source, pValue));
}
IFACEMETHODIMP DirectUI::CollectionViewSourceGenerated::get_View(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Data::ICollectionView** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::CollectionViewSource_View, ppValue));
}

// Events.

// Methods.

HRESULT DirectUI::CollectionViewSourceFactory::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Data::ICollectionViewSourceStatics)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Data::ICollectionViewSourceStatics*>(this);
    }
    else
    {
        RRETURN(ctl::BetterCoreObjectActivationFactory::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}


// Factory methods.

// Dependency properties.
IFACEMETHODIMP DirectUI::CollectionViewSourceFactory::get_SourceProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::CollectionViewSource_Source, ppValue));
}
IFACEMETHODIMP DirectUI::CollectionViewSourceFactory::get_ViewProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::CollectionViewSource_View, ppValue));
}
IFACEMETHODIMP DirectUI::CollectionViewSourceFactory::get_IsSourceGroupedProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::CollectionViewSource_IsSourceGrouped, ppValue));
}
IFACEMETHODIMP DirectUI::CollectionViewSourceFactory::get_ItemsPathProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::CollectionViewSource_ItemsPath, ppValue));
}

// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_CollectionViewSource()
    {
        RRETURN(ctl::ActivationFactoryCreator<CollectionViewSourceFactory>::CreateActivationFactory());
    }
}
