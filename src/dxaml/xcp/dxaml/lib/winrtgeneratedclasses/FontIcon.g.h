// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "IconElement.g.h"

#define __FontIcon_GUID "e552d78b-fadf-4e3f-b438-e14b1fab23ea"

namespace DirectUI
{
    class FontIcon;
    class FontFamily;

    class __declspec(novtable) __declspec(uuid(__FontIcon_GUID)) FontIcon:
        public DirectUI::IconElement
        , public ABI::Microsoft::UI::Xaml::Controls::IFontIcon
    {

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.FontIcon");

        BEGIN_INTERFACE_MAP(FontIcon, DirectUI::IconElement)
            INTERFACE_ENTRY(FontIcon, ABI::Microsoft::UI::Xaml::Controls::IFontIcon)
        END_INTERFACE_MAP(FontIcon, DirectUI::IconElement)

    public:
        FontIcon();
        ~FontIcon() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::FontIcon;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::FontIcon;
        }

        // Properties.
        IFACEMETHOD(get_FontFamily)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IFontFamily** ppValue) override;
        IFACEMETHOD(put_FontFamily)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IFontFamily* pValue) override;
        IFACEMETHOD(get_FontSize)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_FontSize)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_FontStyle)(_Out_ ABI::Windows::UI::Text::FontStyle* pValue) override;
        IFACEMETHOD(put_FontStyle)(_In_ ABI::Windows::UI::Text::FontStyle value) override;
        IFACEMETHOD(get_FontWeight)(_Out_ ABI::Windows::UI::Text::FontWeight* pValue) override;
        IFACEMETHOD(put_FontWeight)(_In_ ABI::Windows::UI::Text::FontWeight value) override;
        IFACEMETHOD(get_Glyph)(_Out_ HSTRING* pValue) override;
        IFACEMETHOD(put_Glyph)(_In_opt_ HSTRING value) override;
        IFACEMETHOD(get_IsTextScaleFactorEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsTextScaleFactorEnabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_MirroredWhenRightToLeft)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_MirroredWhenRightToLeft)(_In_ BOOLEAN value) override;

        // Events.

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:
        // Customized properties.

        // Customized methods.

        // Fields.
    };
}


namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) FontIconFactory:
       public ctl::BetterAggregableCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IFontIconFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IFontIconStatics
    {
        BEGIN_INTERFACE_MAP(FontIconFactory, ctl::BetterAggregableCoreObjectActivationFactory)
            INTERFACE_ENTRY(FontIconFactory, ABI::Microsoft::UI::Xaml::Controls::IFontIconFactory)
            INTERFACE_ENTRY(FontIconFactory, ABI::Microsoft::UI::Xaml::Controls::IFontIconStatics)
        END_INTERFACE_MAP(FontIconFactory, ctl::BetterAggregableCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::IFontIcon** ppInstance);

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_GlyphProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FontSizeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FontFamilyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FontWeightProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FontStyleProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsTextScaleFactorEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_MirroredWhenRightToLeftProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::FontIcon;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
