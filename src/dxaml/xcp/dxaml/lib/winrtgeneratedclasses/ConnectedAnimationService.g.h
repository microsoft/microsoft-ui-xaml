// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __ConnectedAnimationService_GUID "7396109d-2c53-4e35-9051-2e80350547bb"

namespace DirectUI
{
    class ConnectedAnimationService;
    class ConnectedAnimation;
    class UIElement;

    class __declspec(novtable) ConnectedAnimationServiceGenerated:
        public DirectUI::DependencyObject
        , public ABI::Microsoft::UI::Xaml::Media::Animation::IConnectedAnimationService
    {
        friend class DirectUI::ConnectedAnimationService;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService");

        BEGIN_INTERFACE_MAP(ConnectedAnimationServiceGenerated, DirectUI::DependencyObject)
            INTERFACE_ENTRY(ConnectedAnimationServiceGenerated, ABI::Microsoft::UI::Xaml::Media::Animation::IConnectedAnimationService)
        END_INTERFACE_MAP(ConnectedAnimationServiceGenerated, DirectUI::DependencyObject)

    public:
        ConnectedAnimationServiceGenerated();
        ~ConnectedAnimationServiceGenerated() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::ConnectedAnimationService;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::ConnectedAnimationService;
        }

        // Properties.
        IFACEMETHOD(get_DefaultDuration)(_Out_ ABI::Windows::Foundation::TimeSpan* pValue) override;
        IFACEMETHOD(put_DefaultDuration)(_In_ ABI::Windows::Foundation::TimeSpan value) override;
        IFACEMETHOD(get_DefaultEasingFunction)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Composition::ICompositionEasingFunction** ppValue) override;
        IFACEMETHOD(put_DefaultEasingFunction)(_In_opt_ ABI::Microsoft::UI::Composition::ICompositionEasingFunction* pValue) override;

        // Events.

        // Methods.
        IFACEMETHOD(GetAnimation)(_In_ HSTRING key, _Outptr_ ABI::Microsoft::UI::Xaml::Media::Animation::IConnectedAnimation** ppReturnValue) override;
        IFACEMETHOD(PrepareToAnimate)(_In_ HSTRING key, _In_ ABI::Microsoft::UI::Xaml::IUIElement* pSource, _Outptr_ ABI::Microsoft::UI::Xaml::Media::Animation::IConnectedAnimation** ppReturnValue) override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "ConnectedAnimationService_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) ConnectedAnimationServiceFactory:
       public ctl::AbstractActivationFactory
        , public ABI::Microsoft::UI::Xaml::Media::Animation::IConnectedAnimationServiceStatics
    {
        BEGIN_INTERFACE_MAP(ConnectedAnimationServiceFactory, ctl::AbstractActivationFactory)
            INTERFACE_ENTRY(ConnectedAnimationServiceFactory, ABI::Microsoft::UI::Xaml::Media::Animation::IConnectedAnimationServiceStatics)
        END_INTERFACE_MAP(ConnectedAnimationServiceFactory, ctl::AbstractActivationFactory)

    public:
        // Factory methods.

        // Static properties.

        // Dependency properties.

        // Attached properties.

        // Static methods.
        IFACEMETHOD(GetForCurrentView)(_Outptr_ ABI::Microsoft::UI::Xaml::Media::Animation::IConnectedAnimationService** ppReturnValue) override;

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::ConnectedAnimationService;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
         _Check_return_ HRESULT GetForCurrentViewImpl(_Outptr_ ABI::Microsoft::UI::Xaml::Media::Animation::IConnectedAnimationService** ppReturnValue); 
    };
}
