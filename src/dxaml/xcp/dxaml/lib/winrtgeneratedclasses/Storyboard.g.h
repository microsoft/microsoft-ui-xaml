// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "ParallelTimeline.g.h"

#define __Storyboard_GUID "443444f4-43ab-4998-a25d-8c502de96de4"

namespace DirectUI
{
    class Storyboard;
    class Timeline;
    class TimelineCollection;

    class __declspec(novtable) StoryboardGenerated:
        public DirectUI::ParallelTimeline
        , public ABI::Microsoft::UI::Xaml::Media::Animation::IStoryboard
    {
        friend class DirectUI::Storyboard;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Media.Animation.Storyboard");

        BEGIN_INTERFACE_MAP(StoryboardGenerated, DirectUI::ParallelTimeline)
            INTERFACE_ENTRY(StoryboardGenerated, ABI::Microsoft::UI::Xaml::Media::Animation::IStoryboard)
        END_INTERFACE_MAP(StoryboardGenerated, DirectUI::ParallelTimeline)

    public:
        StoryboardGenerated();
        ~StoryboardGenerated() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Storyboard;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::Storyboard;
        }

        // Properties.
        IFACEMETHOD(get_Children)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Timeline*>** ppValue) override;
        _Check_return_ HRESULT get_IsEssential(_Out_ BOOLEAN* pValue);
        _Check_return_ HRESULT put_IsEssential(_In_ BOOLEAN value);

        // Events.

        // Methods.
        IFACEMETHOD(Begin)() override;
        IFACEMETHOD(GetCurrentState)(_Out_ ABI::Microsoft::UI::Xaml::Media::Animation::ClockState* pReturnValue) override;
        IFACEMETHOD(GetCurrentTime)(_Out_ ABI::Windows::Foundation::TimeSpan* pReturnValue) override;
        IFACEMETHOD(Pause)() override;
        IFACEMETHOD(Resume)() override;
        IFACEMETHOD(Seek)(_In_ ABI::Windows::Foundation::TimeSpan offset) override;
        IFACEMETHOD(SeekAlignedToLastTick)(_In_ ABI::Windows::Foundation::TimeSpan offset) override;
        IFACEMETHOD(SkipToFill)() override;
        IFACEMETHOD(Stop)() override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "Storyboard_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) StoryboardFactory:
       public ctl::BetterCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Media::Animation::IStoryboardStatics
    {
        BEGIN_INTERFACE_MAP(StoryboardFactory, ctl::BetterCoreObjectActivationFactory)
            INTERFACE_ENTRY(StoryboardFactory, ABI::Microsoft::UI::Xaml::Media::Animation::IStoryboardStatics)
        END_INTERFACE_MAP(StoryboardFactory, ctl::BetterCoreObjectActivationFactory)

    public:
        // Factory methods.

        // Static properties.

        // Dependency properties.
        
        

        // Attached properties.
        static _Check_return_ HRESULT GetTargetPropertyStatic(_In_ ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline* pElement, _Out_ HSTRING* pPath);
        static _Check_return_ HRESULT SetTargetPropertyStatic(_In_ ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline* pElement, _In_opt_ HSTRING path);
        IFACEMETHOD(get_TargetPropertyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetTargetProperty)(_In_ ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline* pElement, _Out_ HSTRING* pPath);
        IFACEMETHOD(SetTargetProperty)(_In_ ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline* pElement, _In_opt_ HSTRING path);
        static _Check_return_ HRESULT GetTargetNameStatic(_In_ ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline* pElement, _Out_ HSTRING* pName);
        static _Check_return_ HRESULT SetTargetNameStatic(_In_ ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline* pElement, _In_opt_ HSTRING name);
        IFACEMETHOD(get_TargetNameProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetTargetName)(_In_ ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline* pElement, _Out_ HSTRING* pName);
        IFACEMETHOD(SetTargetName)(_In_ ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline* pElement, _In_opt_ HSTRING name);

        // Static methods.
        IFACEMETHOD(SetTarget)(_In_ ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline* pTimeline, _In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pTarget) override;

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Storyboard;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
         _Check_return_ HRESULT SetTargetImpl(_In_ ABI::Microsoft::UI::Xaml::Media::Animation::ITimeline* pTimeline, _In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pTarget); 
    };
}
