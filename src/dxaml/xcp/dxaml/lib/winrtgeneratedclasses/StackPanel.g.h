// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "Panel.g.h"
#include "CornerRadius.g.h"
#include "IItemLookupPanel.g.h"
#include "IPaginatedPanel.g.h"
#include "IScrollInfo.g.h"
#include "Thickness.g.h"

#define __StackPanel_GUID "3f9d740b-365e-415d-bef4-abaf69d407dd"

namespace DirectUI
{
    class StackPanel;
    class Brush;

    class __declspec(novtable) StackPanelGenerated:
        public DirectUI::Panel
        , public ABI::Microsoft::UI::Xaml::Controls::IStackPanel
        , public ABI::Microsoft::UI::Xaml::Controls::IInsertionPanel
        , public ABI::Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointsInfo
        , public DirectUI::IItemLookupPanel
        , public DirectUI::IPaginatedPanel
    {
        friend class DirectUI::StackPanel;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.StackPanel");

        BEGIN_INTERFACE_MAP(StackPanelGenerated, DirectUI::Panel)
            INTERFACE_ENTRY(StackPanelGenerated, ABI::Microsoft::UI::Xaml::Controls::IStackPanel)
            INTERFACE_ENTRY(StackPanelGenerated, ABI::Microsoft::UI::Xaml::Controls::IInsertionPanel)
            INTERFACE_ENTRY(StackPanelGenerated, ABI::Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointsInfo)
            INTERFACE_ENTRY(StackPanelGenerated, DirectUI::IItemLookupPanel)
            INTERFACE_ENTRY(StackPanelGenerated, DirectUI::IPaginatedPanel)
        END_INTERFACE_MAP(StackPanelGenerated, DirectUI::Panel)

    public:
        StackPanelGenerated();
        ~StackPanelGenerated() override;

        // Event source typedefs.
        typedef CEventSource<ABI::Windows::Foundation::IEventHandler<IInspectable*>, IInspectable, IInspectable> HorizontalSnapPointsChangedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::IEventHandler<IInspectable*>, IInspectable, IInspectable> VerticalSnapPointsChangedEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::StackPanel;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::StackPanel;
        }

        // Properties.
        IFACEMETHOD(get_AreHorizontalSnapPointsRegular)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(get_AreScrollSnapPointsRegular)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_AreScrollSnapPointsRegular)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_AreVerticalSnapPointsRegular)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(get_BackgroundSizing)(_Out_ ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing* pValue) override;
        IFACEMETHOD(put_BackgroundSizing)(_In_ ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing value) override;
        IFACEMETHOD(get_BorderBrush)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IBrush** ppValue) override;
        IFACEMETHOD(put_BorderBrush)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IBrush* pValue) override;
        IFACEMETHOD(get_BorderThickness)(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue) override;
        IFACEMETHOD(put_BorderThickness)(_In_ ABI::Microsoft::UI::Xaml::Thickness value) override;
        IFACEMETHOD(get_CornerRadius)(_Out_ ABI::Microsoft::UI::Xaml::CornerRadius* pValue) override;
        IFACEMETHOD(put_CornerRadius)(_In_ ABI::Microsoft::UI::Xaml::CornerRadius value) override;
        IFACEMETHOD(get_Orientation)(_Out_ ABI::Microsoft::UI::Xaml::Controls::Orientation* pValue) override;
        IFACEMETHOD(put_Orientation)(_In_ ABI::Microsoft::UI::Xaml::Controls::Orientation value) override;
        IFACEMETHOD(get_Padding)(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue) override;
        IFACEMETHOD(put_Padding)(_In_ ABI::Microsoft::UI::Xaml::Thickness value) override;
        IFACEMETHOD(get_Spacing)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_Spacing)(_In_ DOUBLE value) override;

        // Events.
        _Check_return_ HRESULT GetHorizontalSnapPointsChangedEventSourceNoRef(_Outptr_ HorizontalSnapPointsChangedEventSourceType** ppEventSource);
        IFACEMETHOD(add_HorizontalSnapPointsChanged)(_In_ ABI::Windows::Foundation::IEventHandler<IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_HorizontalSnapPointsChanged)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetVerticalSnapPointsChangedEventSourceNoRef(_Outptr_ VerticalSnapPointsChangedEventSourceType** ppEventSource);
        IFACEMETHOD(add_VerticalSnapPointsChanged)(_In_ ABI::Windows::Foundation::IEventHandler<IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_VerticalSnapPointsChanged)(_In_ EventRegistrationToken token) override;

        // Methods.
        IFACEMETHOD(GetClosestElementInfo)(_In_ ABI::Windows::Foundation::Point position, _Out_ ABI::Microsoft::UI::Xaml::Controls::Primitives::ElementInfo* pReturnValue) = 0;
        IFACEMETHOD(GetInsertionIndex)(_In_ ABI::Windows::Foundation::Point position, _Out_ INT* pReturnValue) = 0;
        IFACEMETHOD(GetInsertionIndexes)(_In_ ABI::Windows::Foundation::Point position, _Out_ INT* pFirst, _Out_ INT* pSecond) override;
        IFACEMETHOD(GetIrregularSnapPoints)(_In_ ABI::Microsoft::UI::Xaml::Controls::Orientation orientation, _In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::SnapPointsAlignment alignment, _Outptr_ ABI::Windows::Foundation::Collections::IVectorView<FLOAT>** ppReturnValue) override;
        IFACEMETHOD(GetItemsBounds)(_Out_ ABI::Windows::Foundation::Rect* pReturnValue) = 0;
        IFACEMETHOD(GetItemsPerPage)(_In_ DirectUI::IScrollInfo* pScrollInfo, _Out_ DOUBLE* pReturnValue) = 0;
        IFACEMETHOD(GetLastItemIndexInViewport)(_In_ DirectUI::IScrollInfo* pScrollInfo, _Out_ INT* pReturnValue) = 0;
        IFACEMETHOD(GetRegularSnapPoints)(_In_ ABI::Microsoft::UI::Xaml::Controls::Orientation orientation, _In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::SnapPointsAlignment alignment, _Out_ FLOAT* pOffset, _Out_ FLOAT* pReturnValue) override;
        IFACEMETHOD(IsLayoutBoundary)(_In_ INT index, _Out_ BOOLEAN* pIsLeftBoundary, _Out_ BOOLEAN* pIsTopBoundary, _Out_ BOOLEAN* pIsRightBoundary, _Out_ BOOLEAN* pIsBottomBoundary) = 0;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;
        _Check_return_ HRESULT EventAddHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler, _In_ BOOLEAN handledEventsToo) override;
        _Check_return_ HRESULT EventRemoveHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler) override;

    private:

        // Fields.
    };
}

#include "StackPanel_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) StackPanelFactory:
       public ctl::BetterAggregableCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IStackPanelFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IStackPanelStatics
    {
        BEGIN_INTERFACE_MAP(StackPanelFactory, ctl::BetterAggregableCoreObjectActivationFactory)
            INTERFACE_ENTRY(StackPanelFactory, ABI::Microsoft::UI::Xaml::Controls::IStackPanelFactory)
            INTERFACE_ENTRY(StackPanelFactory, ABI::Microsoft::UI::Xaml::Controls::IStackPanelStatics)
        END_INTERFACE_MAP(StackPanelFactory, ctl::BetterAggregableCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::IStackPanel** ppInstance);

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_AreScrollSnapPointsRegularProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_OrientationProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_BackgroundSizingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_BorderBrushProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_BorderThicknessProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_CornerRadiusProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_PaddingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_SpacingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::StackPanel;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
