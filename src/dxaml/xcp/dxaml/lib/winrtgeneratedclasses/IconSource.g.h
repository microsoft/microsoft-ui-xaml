// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __IconSource_GUID "88ff135c-c572-4613-81af-714261917d2b"

namespace DirectUI
{
    class IconSource;
    class Brush;
    class IconElement;

    class __declspec(novtable) IconSourceGenerated:
        public DirectUI::DependencyObject
        , public ABI::Microsoft::UI::Xaml::Controls::IIconSource
        , public ABI::Microsoft::UI::Xaml::Controls::IIconSourceOverrides
    {
        friend class DirectUI::IconSource;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.IconSource");

        BEGIN_INTERFACE_MAP(IconSourceGenerated, DirectUI::DependencyObject)
            INTERFACE_ENTRY(IconSourceGenerated, ABI::Microsoft::UI::Xaml::Controls::IIconSource)
            INTERFACE_ENTRY(IconSourceGenerated, ABI::Microsoft::UI::Xaml::Controls::IIconSourceOverrides)
        END_INTERFACE_MAP(IconSourceGenerated, DirectUI::DependencyObject)

    public:
        IconSourceGenerated();
        ~IconSourceGenerated() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::IconSource;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::IconSource;
        }

        // Properties.
        IFACEMETHOD(get_Foreground)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IBrush** ppValue) override;
        IFACEMETHOD(put_Foreground)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IBrush* pValue) override;

        // Events.

        // Methods.
        IFACEMETHOD(CreateIconElement)(_Outptr_ ABI::Microsoft::UI::Xaml::Controls::IIconElement** ppReturnValue) override;
        IFACEMETHOD(CreateIconElementCore)(_Outptr_ ABI::Microsoft::UI::Xaml::Controls::IIconElement** ppReturnValue) override;
        IFACEMETHOD(GetIconElementPropertyCore)(_In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pIconSourceProperty, _Outptr_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppReturnValue) override;
        _Check_return_ HRESULT GetIconElementPropertyCoreProtected(_In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pIconSourceProperty, _Outptr_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppReturnValue);


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "IconSource_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) IconSourceFactory:
       public ctl::BetterAggregableAbstractCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IIconSourceFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IIconSourceStatics
    {
        BEGIN_INTERFACE_MAP(IconSourceFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)
            INTERFACE_ENTRY(IconSourceFactory, ABI::Microsoft::UI::Xaml::Controls::IIconSourceFactory)
            INTERFACE_ENTRY(IconSourceFactory, ABI::Microsoft::UI::Xaml::Controls::IIconSourceStatics)
        END_INTERFACE_MAP(IconSourceFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)

    public:
        // Factory methods.

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_ForegroundProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::IconSource;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
