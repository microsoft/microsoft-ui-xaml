// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __TextElement_GUID "012e43a8-2a9f-4bb9-8da7-554da9a2f147"

namespace DirectUI
{
    class TextElement;
    class AutomationPeer;
    class Brush;
    class FontFamily;
    class TextPointer;
    class XamlRoot;

    class __declspec(novtable) TextElementGenerated:
        public DirectUI::DependencyObject
        , public ABI::Microsoft::UI::Xaml::Documents::ITextElement
        , public ABI::Microsoft::UI::Xaml::Documents::ITextElementOverrides
    {
        friend class DirectUI::TextElement;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Documents.TextElement");

        BEGIN_INTERFACE_MAP(TextElementGenerated, DirectUI::DependencyObject)
            INTERFACE_ENTRY(TextElementGenerated, ABI::Microsoft::UI::Xaml::Documents::ITextElement)
            INTERFACE_ENTRY(TextElementGenerated, ABI::Microsoft::UI::Xaml::Documents::ITextElementOverrides)
        END_INTERFACE_MAP(TextElementGenerated, DirectUI::DependencyObject)

    public:
        TextElementGenerated();
        ~TextElementGenerated() override;

        // Event source typedefs.
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Documents::TextElement*, ABI::Microsoft::UI::Xaml::Input::AccessKeyDisplayRequestedEventArgs*>, ABI::Microsoft::UI::Xaml::Documents::ITextElement, ABI::Microsoft::UI::Xaml::Input::IAccessKeyDisplayRequestedEventArgs> AccessKeyDisplayRequestedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Documents::TextElement*, ABI::Microsoft::UI::Xaml::Input::AccessKeyDisplayDismissedEventArgs*>, ABI::Microsoft::UI::Xaml::Documents::ITextElement, ABI::Microsoft::UI::Xaml::Input::IAccessKeyDisplayDismissedEventArgs> AccessKeyDisplayDismissedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Documents::TextElement*, ABI::Microsoft::UI::Xaml::Input::AccessKeyInvokedEventArgs*>, ABI::Microsoft::UI::Xaml::Documents::ITextElement, ABI::Microsoft::UI::Xaml::Input::IAccessKeyInvokedEventArgs> AccessKeyInvokedEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::TextElement;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::TextElement;
        }

        // Properties.
        IFACEMETHOD(get_AccessKey)(_Out_ HSTRING* pValue) override;
        IFACEMETHOD(put_AccessKey)(_In_opt_ HSTRING value) override;
        IFACEMETHOD(get_AccessKeyScopeOwner)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_AccessKeyScopeOwner)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_AllowFocusOnInteraction)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_AllowFocusOnInteraction)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_CharacterSpacing)(_Out_ INT* pValue) override;
        IFACEMETHOD(put_CharacterSpacing)(_In_ INT value) override;
        IFACEMETHOD(get_ContentEnd)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Documents::ITextPointer** ppValue) override;
        IFACEMETHOD(get_ContentStart)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Documents::ITextPointer** ppValue) override;
        IFACEMETHOD(get_ElementEnd)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Documents::ITextPointer** ppValue) override;
        IFACEMETHOD(get_ElementStart)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Documents::ITextPointer** ppValue) override;
        IFACEMETHOD(get_ExitDisplayModeOnAccessKeyInvoked)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_ExitDisplayModeOnAccessKeyInvoked)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_FontFamily)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IFontFamily** ppValue) override;
        IFACEMETHOD(put_FontFamily)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IFontFamily* pValue) override;
        IFACEMETHOD(get_FontSize)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_FontSize)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_FontStretch)(_Out_ ABI::Windows::UI::Text::FontStretch* pValue) override;
        IFACEMETHOD(put_FontStretch)(_In_ ABI::Windows::UI::Text::FontStretch value) override;
        IFACEMETHOD(get_FontStyle)(_Out_ ABI::Windows::UI::Text::FontStyle* pValue) override;
        IFACEMETHOD(put_FontStyle)(_In_ ABI::Windows::UI::Text::FontStyle value) override;
        IFACEMETHOD(get_FontWeight)(_Out_ ABI::Windows::UI::Text::FontWeight* pValue) override;
        IFACEMETHOD(put_FontWeight)(_In_ ABI::Windows::UI::Text::FontWeight value) override;
        IFACEMETHOD(get_Foreground)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IBrush** ppValue) override;
        IFACEMETHOD(put_Foreground)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IBrush* pValue) override;
        IFACEMETHOD(get_IsAccessKeyScope)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsAccessKeyScope)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsTextScaleFactorEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsTextScaleFactorEnabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_KeyTipHorizontalOffset)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_KeyTipHorizontalOffset)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_KeyTipPlacementMode)(_Out_ ABI::Microsoft::UI::Xaml::Input::KeyTipPlacementMode* pValue) override;
        IFACEMETHOD(put_KeyTipPlacementMode)(_In_ ABI::Microsoft::UI::Xaml::Input::KeyTipPlacementMode value) override;
        IFACEMETHOD(get_KeyTipVerticalOffset)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_KeyTipVerticalOffset)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_Language)(_Out_ HSTRING* pValue) override;
        IFACEMETHOD(put_Language)(_In_opt_ HSTRING value) override;
        IFACEMETHOD(get_Name)(_Out_ HSTRING* pValue) override;
        IFACEMETHOD(get_TextDecorations)(_Out_ ABI::Windows::UI::Text::TextDecorations* pValue) override;
        IFACEMETHOD(put_TextDecorations)(_In_ ABI::Windows::UI::Text::TextDecorations value) override;
        IFACEMETHOD(get_XamlRoot)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IXamlRoot** ppValue) override;
        IFACEMETHOD(put_XamlRoot)(_In_opt_ ABI::Microsoft::UI::Xaml::IXamlRoot* pValue) override;

        // Events.
        _Check_return_ HRESULT GetAccessKeyDisplayDismissedEventSourceNoRef(_Outptr_ AccessKeyDisplayDismissedEventSourceType** ppEventSource);
        IFACEMETHOD(add_AccessKeyDisplayDismissed)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Documents::TextElement*, ABI::Microsoft::UI::Xaml::Input::AccessKeyDisplayDismissedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_AccessKeyDisplayDismissed)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetAccessKeyDisplayRequestedEventSourceNoRef(_Outptr_ AccessKeyDisplayRequestedEventSourceType** ppEventSource);
        IFACEMETHOD(add_AccessKeyDisplayRequested)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Documents::TextElement*, ABI::Microsoft::UI::Xaml::Input::AccessKeyDisplayRequestedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_AccessKeyDisplayRequested)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetAccessKeyInvokedEventSourceNoRef(_Outptr_ AccessKeyInvokedEventSourceType** ppEventSource);
        IFACEMETHOD(add_AccessKeyInvoked)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Documents::TextElement*, ABI::Microsoft::UI::Xaml::Input::AccessKeyInvokedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_AccessKeyInvoked)(_In_ EventRegistrationToken token) override;

        // Methods.
        IFACEMETHOD(FindName)(_In_ HSTRING name, _Outptr_ IInspectable** ppReturnValue) override;
        virtual _Check_return_ HRESULT OnCreateAutomationPeer(_Outptr_ ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** ppReturnValue);
        IFACEMETHOD(OnDisconnectVisualChildren)() override;
        _Check_return_ HRESULT OnDisconnectVisualChildrenProtected();


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "TextElement_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) TextElementFactory:
       public ctl::BetterAggregableAbstractCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Documents::ITextElementFactory
        , public ABI::Microsoft::UI::Xaml::Documents::ITextElementStatics
    {
        BEGIN_INTERFACE_MAP(TextElementFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)
            INTERFACE_ENTRY(TextElementFactory, ABI::Microsoft::UI::Xaml::Documents::ITextElementFactory)
            INTERFACE_ENTRY(TextElementFactory, ABI::Microsoft::UI::Xaml::Documents::ITextElementStatics)
        END_INTERFACE_MAP(TextElementFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)

    public:
        // Factory methods.

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_FontSizeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FontFamilyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FontWeightProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FontStyleProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FontStretchProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_CharacterSpacingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ForegroundProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_LanguageProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsTextScaleFactorEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_TextDecorationsProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_AllowFocusOnInteractionProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_AccessKeyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ExitDisplayModeOnAccessKeyInvokedProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsAccessKeyScopeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_AccessKeyScopeOwnerProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_KeyTipPlacementModeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_KeyTipHorizontalOffsetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_KeyTipVerticalOffsetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::TextElement;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
