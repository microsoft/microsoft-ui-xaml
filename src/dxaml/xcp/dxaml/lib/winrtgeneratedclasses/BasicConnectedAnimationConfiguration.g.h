// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "ConnectedAnimationConfiguration.g.h"

#define __BasicConnectedAnimationConfiguration_GUID "f6142b10-7957-4f44-bc46-e3a8cd5c0383"

namespace DirectUI
{
    class BasicConnectedAnimationConfiguration;

    class __declspec(novtable) BasicConnectedAnimationConfigurationGenerated:
        public DirectUI::ConnectedAnimationConfiguration
        , public ABI::Microsoft::UI::Xaml::Media::Animation::IBasicConnectedAnimationConfiguration
    {
        friend class DirectUI::BasicConnectedAnimationConfiguration;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Media.Animation.BasicConnectedAnimationConfiguration");

        BEGIN_INTERFACE_MAP(BasicConnectedAnimationConfigurationGenerated, DirectUI::ConnectedAnimationConfiguration)
            INTERFACE_ENTRY(BasicConnectedAnimationConfigurationGenerated, ABI::Microsoft::UI::Xaml::Media::Animation::IBasicConnectedAnimationConfiguration)
        END_INTERFACE_MAP(BasicConnectedAnimationConfigurationGenerated, DirectUI::ConnectedAnimationConfiguration)

    public:
        BasicConnectedAnimationConfigurationGenerated();
        ~BasicConnectedAnimationConfigurationGenerated() override;

        // Event source typedefs.


        // Properties.

        // Events.

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "BasicConnectedAnimationConfiguration_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) BasicConnectedAnimationConfigurationFactory:
       public ctl::AggregableActivationFactory<DirectUI::BasicConnectedAnimationConfiguration>
        , public ABI::Microsoft::UI::Xaml::Media::Animation::IBasicConnectedAnimationConfigurationFactory
    {
        BEGIN_INTERFACE_MAP(BasicConnectedAnimationConfigurationFactory, ctl::AggregableActivationFactory<DirectUI::BasicConnectedAnimationConfiguration>)
            INTERFACE_ENTRY(BasicConnectedAnimationConfigurationFactory, ABI::Microsoft::UI::Xaml::Media::Animation::IBasicConnectedAnimationConfigurationFactory)
        END_INTERFACE_MAP(BasicConnectedAnimationConfigurationFactory, ctl::AggregableActivationFactory<DirectUI::BasicConnectedAnimationConfiguration>)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Media::Animation::IBasicConnectedAnimationConfiguration** ppInstance);

        // Static properties.

        // Dependency properties.

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;



    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
