// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "SplitCloseThemeAnimation.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::SplitCloseThemeAnimationGenerated::SplitCloseThemeAnimationGenerated()
{
}

DirectUI::SplitCloseThemeAnimationGenerated::~SplitCloseThemeAnimationGenerated()
{
}

HRESULT DirectUI::SplitCloseThemeAnimationGenerated::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::SplitCloseThemeAnimation)))
    {
        *ppObject = static_cast<DirectUI::SplitCloseThemeAnimation*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ISplitCloseThemeAnimation)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Media::Animation::ISplitCloseThemeAnimation*>(this);
    }
    else
    {
        RRETURN(DirectUI::DynamicTimeline::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::get_ClosedLength(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ClosedLength, pValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::put_ClosedLength(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ClosedLength, value));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::get_ClosedTarget(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ClosedTarget, ppValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::put_ClosedTarget(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ClosedTarget, pValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::get_ClosedTargetName(_Out_ HSTRING* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ClosedTargetName, pValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::put_ClosedTargetName(_In_opt_ HSTRING value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ClosedTargetName, value));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::get_ContentTarget(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ContentTarget, ppValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::put_ContentTarget(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ContentTarget, pValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::get_ContentTargetName(_Out_ HSTRING* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ContentTargetName, pValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::put_ContentTargetName(_In_opt_ HSTRING value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ContentTargetName, value));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::get_ContentTranslationDirection(_Out_ ABI::Microsoft::UI::Xaml::Controls::Primitives::AnimationDirection* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ContentTranslationDirection, pValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::put_ContentTranslationDirection(_In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::AnimationDirection value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ContentTranslationDirection, value));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::get_ContentTranslationOffset(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ContentTranslationOffset, pValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::put_ContentTranslationOffset(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_ContentTranslationOffset, value));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::get_OffsetFromCenter(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_OffsetFromCenter, pValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::put_OffsetFromCenter(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_OffsetFromCenter, value));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::get_OpenedLength(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_OpenedLength, pValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::put_OpenedLength(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_OpenedLength, value));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::get_OpenedTarget(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_OpenedTarget, ppValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::put_OpenedTarget(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_OpenedTarget, pValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::get_OpenedTargetName(_Out_ HSTRING* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_OpenedTargetName, pValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationGenerated::put_OpenedTargetName(_In_opt_ HSTRING value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::SplitCloseThemeAnimation_OpenedTargetName, value));
}

// Events.

// Methods.

HRESULT DirectUI::SplitCloseThemeAnimationFactory::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::ISplitCloseThemeAnimationStatics)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Media::Animation::ISplitCloseThemeAnimationStatics*>(this);
    }
    else
    {
        RRETURN(ctl::BetterCoreObjectActivationFactory::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}


// Factory methods.

// Dependency properties.
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationFactory::get_OpenedTargetNameProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::SplitCloseThemeAnimation_OpenedTargetName, ppValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationFactory::get_OpenedTargetProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::SplitCloseThemeAnimation_OpenedTarget, ppValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationFactory::get_ClosedTargetNameProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::SplitCloseThemeAnimation_ClosedTargetName, ppValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationFactory::get_ClosedTargetProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::SplitCloseThemeAnimation_ClosedTarget, ppValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationFactory::get_ContentTargetNameProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::SplitCloseThemeAnimation_ContentTargetName, ppValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationFactory::get_ContentTargetProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::SplitCloseThemeAnimation_ContentTarget, ppValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationFactory::get_OpenedLengthProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::SplitCloseThemeAnimation_OpenedLength, ppValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationFactory::get_ClosedLengthProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::SplitCloseThemeAnimation_ClosedLength, ppValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationFactory::get_OffsetFromCenterProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::SplitCloseThemeAnimation_OffsetFromCenter, ppValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationFactory::get_ContentTranslationDirectionProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::SplitCloseThemeAnimation_ContentTranslationDirection, ppValue));
}
IFACEMETHODIMP DirectUI::SplitCloseThemeAnimationFactory::get_ContentTranslationOffsetProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::SplitCloseThemeAnimation_ContentTranslationOffset, ppValue));
}

// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_SplitCloseThemeAnimation()
    {
        RRETURN(ctl::ActivationFactoryCreator<SplitCloseThemeAnimationFactory>::CreateActivationFactory());
    }
}
