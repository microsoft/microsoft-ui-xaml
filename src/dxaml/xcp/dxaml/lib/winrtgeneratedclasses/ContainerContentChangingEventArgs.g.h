// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __ContainerContentChangingEventArgs_GUID "0d8167a7-2068-4f26-8c4e-0ba30b29f895"

namespace DirectUI
{
    class ContainerContentChangingEventArgs;
    class SelectorItem;

    class __declspec(novtable) ContainerContentChangingEventArgsGenerated:
        public ctl::WeakReferenceSource
        , public ABI::Microsoft::UI::Xaml::Controls::IContainerContentChangingEventArgs
    {
        friend class DirectUI::ContainerContentChangingEventArgs;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs");

        BEGIN_INTERFACE_MAP(ContainerContentChangingEventArgsGenerated, ctl::WeakReferenceSource)
            INTERFACE_ENTRY(ContainerContentChangingEventArgsGenerated, ABI::Microsoft::UI::Xaml::Controls::IContainerContentChangingEventArgs)
        END_INTERFACE_MAP(ContainerContentChangingEventArgsGenerated, ctl::WeakReferenceSource)

    public:
        ContainerContentChangingEventArgsGenerated();
        ~ContainerContentChangingEventArgsGenerated() override;

        // Event source typedefs.


        // Properties.
        _Check_return_ HRESULT get_Callback(_Outptr_result_maybenull_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::ListViewBase*, ABI::Microsoft::UI::Xaml::Controls::ContainerContentChangingEventArgs*>** ppValue);
        _Check_return_ HRESULT put_Callback(_In_opt_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::ListViewBase*, ABI::Microsoft::UI::Xaml::Controls::ContainerContentChangingEventArgs*>* pValue);
        _Check_return_ HRESULT get_ContentShouldBeSet(_Out_ BOOLEAN* pValue);
        _Check_return_ HRESULT put_ContentShouldBeSet(_In_ BOOLEAN value);
        IFACEMETHOD(get_Handled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_Handled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_InRecycleQueue)(_Out_ BOOLEAN* pValue) override;
        _Check_return_ HRESULT put_InRecycleQueue(_In_ BOOLEAN value);
        IFACEMETHOD(get_Item)(_Outptr_result_maybenull_ IInspectable** ppValue) override;
        _Check_return_ HRESULT put_Item(_In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_ItemContainer)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Controls::Primitives::ISelectorItem** ppValue) override;
        IFACEMETHOD(get_ItemIndex)(_Out_ INT* pValue) override;
        _Check_return_ HRESULT put_ItemIndex(_In_ INT value);
        IFACEMETHOD(get_Phase)(_Out_ UINT* pValue) override;
        _Check_return_ HRESULT put_Phase(_In_ UINT value);
        _Check_return_ HRESULT get_WantsCallBack(_Out_ BOOLEAN* pValue);
        _Check_return_ HRESULT put_WantsCallBack(_In_ BOOLEAN value);

        // Events.

        // Methods.
        IFACEMETHOD(RegisterUpdateCallback)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::ListViewBase*, ABI::Microsoft::UI::Xaml::Controls::ContainerContentChangingEventArgs*>* pCallback) override;
        IFACEMETHOD(RegisterUpdateCallbackWithPhase)(_In_ UINT callbackPhase, _In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::ListViewBase*, ABI::Microsoft::UI::Xaml::Controls::ContainerContentChangingEventArgs*>* pCallback) override;
        _Check_return_ HRESULT ResetLifetime();


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
        TrackerPtr<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::ListViewBase*, ABI::Microsoft::UI::Xaml::Controls::ContainerContentChangingEventArgs*>> m_pCallback;
        BOOLEAN m_contentShouldBeSet;
        BOOLEAN m_handled;
        BOOLEAN m_inRecycleQueue;
        TrackerPtr<IInspectable> m_pItem;
        INT m_itemIndex;
        UINT m_phase;
        BOOLEAN m_wantsCallBack;
    };
}

#include "ContainerContentChangingEventArgs_Partial.h"

