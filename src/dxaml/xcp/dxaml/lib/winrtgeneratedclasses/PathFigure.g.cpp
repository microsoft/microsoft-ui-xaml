// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "PathFigure.g.h"
#include "PathSegmentCollection.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::PathFigure::PathFigure()
{
}

DirectUI::PathFigure::~PathFigure()
{
}

HRESULT DirectUI::PathFigure::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::PathFigure)))
    {
        *ppObject = static_cast<DirectUI::PathFigure*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Media::IPathFigure)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Media::IPathFigure*>(this);
    }
    else
    {
        RRETURN(DirectUI::DependencyObject::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::PathFigure::get_IsClosed(_Out_ BOOLEAN* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PathFigure_IsClosed, pValue));
}
IFACEMETHODIMP DirectUI::PathFigure::put_IsClosed(_In_ BOOLEAN value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PathFigure_IsClosed, value));
}
IFACEMETHODIMP DirectUI::PathFigure::get_IsFilled(_Out_ BOOLEAN* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PathFigure_IsFilled, pValue));
}
IFACEMETHODIMP DirectUI::PathFigure::put_IsFilled(_In_ BOOLEAN value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PathFigure_IsFilled, value));
}
IFACEMETHODIMP DirectUI::PathFigure::get_Segments(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::PathSegment*>** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PathFigure_Segments, ppValue));
}
IFACEMETHODIMP DirectUI::PathFigure::put_Segments(_In_opt_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::PathSegment*>* pValue)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PathFigure_Segments, pValue));
}
IFACEMETHODIMP DirectUI::PathFigure::get_StartPoint(_Out_ ABI::Windows::Foundation::Point* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PathFigure_StartPoint, pValue));
}
IFACEMETHODIMP DirectUI::PathFigure::put_StartPoint(_In_ ABI::Windows::Foundation::Point value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PathFigure_StartPoint, value));
}

// Events.

// Methods.

HRESULT DirectUI::PathFigureFactory::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Media::IPathFigureStatics)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Media::IPathFigureStatics*>(this);
    }
    else
    {
        RRETURN(ctl::BetterCoreObjectActivationFactory::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}


// Factory methods.

// Dependency properties.
IFACEMETHODIMP DirectUI::PathFigureFactory::get_SegmentsProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PathFigure_Segments, ppValue));
}
IFACEMETHODIMP DirectUI::PathFigureFactory::get_StartPointProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PathFigure_StartPoint, ppValue));
}
IFACEMETHODIMP DirectUI::PathFigureFactory::get_IsClosedProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PathFigure_IsClosed, ppValue));
}
IFACEMETHODIMP DirectUI::PathFigureFactory::get_IsFilledProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::PathFigure_IsFilled, ppValue));
}

// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_PathFigure()
    {
        RRETURN(ctl::ActivationFactoryCreator<PathFigureFactory>::CreateActivationFactory());
    }
}
