// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "Control.g.h"

#define __ContentControl_GUID "5a0b869f-3144-4ee6-bea5-9fa5f4ba5009"

namespace DirectUI
{
    class ContentControl;
    class DataTemplate;
    class DataTemplateSelector;
    class TransitionCollection;
    class UIElement;

    class __declspec(novtable) ContentControlGenerated:
        public DirectUI::Control
        , public ABI::Microsoft::UI::Xaml::Controls::IContentControl
        , public ABI::Microsoft::UI::Xaml::Controls::IContentControlOverrides
        , public ABI::Microsoft::UI::Xaml::Controls::IContentControlPrivate
    {
        friend class DirectUI::ContentControl;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.ContentControl");

        BEGIN_INTERFACE_MAP(ContentControlGenerated, DirectUI::Control)
            INTERFACE_ENTRY(ContentControlGenerated, ABI::Microsoft::UI::Xaml::Controls::IContentControl)
            INTERFACE_ENTRY(ContentControlGenerated, ABI::Microsoft::UI::Xaml::Controls::IContentControlOverrides)
            INTERFACE_ENTRY(ContentControlGenerated, ABI::Microsoft::UI::Xaml::Controls::IContentControlPrivate)
        END_INTERFACE_MAP(ContentControlGenerated, DirectUI::Control)

    public:
        ContentControlGenerated();
        ~ContentControlGenerated() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::ContentControl;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::ContentControl;
        }

        // Properties.
        IFACEMETHOD(get_Content)(_Outptr_result_maybenull_ IInspectable** ppValue) override;
        IFACEMETHOD(put_Content)(_In_opt_ IInspectable* pValue) override;
        IFACEMETHOD(get_ContentTemplate)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDataTemplate** ppValue) override;
        IFACEMETHOD(put_ContentTemplate)(_In_opt_ ABI::Microsoft::UI::Xaml::IDataTemplate* pValue) override;
        IFACEMETHOD(get_ContentTemplateRoot)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IUIElement** ppValue) override;
        IFACEMETHOD(get_ContentTemplateSelector)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Controls::IDataTemplateSelector** ppValue) override;
        IFACEMETHOD(put_ContentTemplateSelector)(_In_opt_ ABI::Microsoft::UI::Xaml::Controls::IDataTemplateSelector* pValue) override;
        IFACEMETHOD(get_ContentTransitions)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Transition*>** ppValue) override;
        IFACEMETHOD(put_ContentTransitions)(_In_opt_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Transition*>* pValue) override;
        _Check_return_ HRESULT get_SelectedContentTemplate(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDataTemplate** ppValue);
        _Check_return_ HRESULT put_SelectedContentTemplate(_In_opt_ ABI::Microsoft::UI::Xaml::IDataTemplate* pValue);

        // Events.

        // Methods.
        IFACEMETHOD(GetGlobalBounds)(_Out_ ABI::Windows::Foundation::Rect* pResult) override;
        IFACEMETHOD(GetRasterizationScale)(_Out_ FLOAT* pResult) override;
        IFACEMETHOD(OnContentChanged)(_In_opt_ IInspectable* pOldContent, _In_opt_ IInspectable* pNewContent) override;
        _Check_return_ HRESULT OnContentChangedProtected(_In_opt_ IInspectable* pOldContent, _In_opt_ IInspectable* pNewContent);
        IFACEMETHOD(OnContentTemplateChanged)(_In_opt_ ABI::Microsoft::UI::Xaml::IDataTemplate* pOldContentTemplate, _In_opt_ ABI::Microsoft::UI::Xaml::IDataTemplate* pNewContentTemplate) override;
        _Check_return_ HRESULT OnContentTemplateChangedProtected(_In_opt_ ABI::Microsoft::UI::Xaml::IDataTemplate* pOldContentTemplate, _In_opt_ ABI::Microsoft::UI::Xaml::IDataTemplate* pNewContentTemplate);
        IFACEMETHOD(OnContentTemplateSelectorChanged)(_In_opt_ ABI::Microsoft::UI::Xaml::Controls::IDataTemplateSelector* pOldContentTemplateSelector, _In_opt_ ABI::Microsoft::UI::Xaml::Controls::IDataTemplateSelector* pNewContentTemplateSelector) override;
        _Check_return_ HRESULT OnContentTemplateSelectorChangedProtected(_In_opt_ ABI::Microsoft::UI::Xaml::Controls::IDataTemplateSelector* pOldContentTemplateSelector, _In_opt_ ABI::Microsoft::UI::Xaml::Controls::IDataTemplateSelector* pNewContentTemplateSelector);


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "ContentControl_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) ContentControlFactory:
       public ctl::BetterAggregableCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IContentControlFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IContentControlStatics
    {
        BEGIN_INTERFACE_MAP(ContentControlFactory, ctl::BetterAggregableCoreObjectActivationFactory)
            INTERFACE_ENTRY(ContentControlFactory, ABI::Microsoft::UI::Xaml::Controls::IContentControlFactory)
            INTERFACE_ENTRY(ContentControlFactory, ABI::Microsoft::UI::Xaml::Controls::IContentControlStatics)
        END_INTERFACE_MAP(ContentControlFactory, ctl::BetterAggregableCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::IContentControl** ppInstance);

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_ContentProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ContentTemplateProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ContentTemplateSelectorProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        IFACEMETHOD(get_ContentTransitionsProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::ContentControl;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
