// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "DynamicTimeline.g.h"

#define __SplitCloseThemeAnimation_GUID "fbc108e3-d1c2-430f-bba9-98975de0d107"

namespace DirectUI
{
    class SplitCloseThemeAnimation;

    class __declspec(novtable) SplitCloseThemeAnimationGenerated:
        public DirectUI::DynamicTimeline
        , public ABI::Microsoft::UI::Xaml::Media::Animation::ISplitCloseThemeAnimation
    {
        friend class DirectUI::SplitCloseThemeAnimation;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation");

        BEGIN_INTERFACE_MAP(SplitCloseThemeAnimationGenerated, DirectUI::DynamicTimeline)
            INTERFACE_ENTRY(SplitCloseThemeAnimationGenerated, ABI::Microsoft::UI::Xaml::Media::Animation::ISplitCloseThemeAnimation)
        END_INTERFACE_MAP(SplitCloseThemeAnimationGenerated, DirectUI::DynamicTimeline)

    public:
        SplitCloseThemeAnimationGenerated();
        ~SplitCloseThemeAnimationGenerated() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::SplitCloseThemeAnimation;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::SplitCloseThemeAnimation;
        }

        // Properties.
        IFACEMETHOD(get_ClosedLength)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_ClosedLength)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_ClosedTarget)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_ClosedTarget)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_ClosedTargetName)(_Out_ HSTRING* pValue) override;
        IFACEMETHOD(put_ClosedTargetName)(_In_opt_ HSTRING value) override;
        IFACEMETHOD(get_ContentTarget)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_ContentTarget)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_ContentTargetName)(_Out_ HSTRING* pValue) override;
        IFACEMETHOD(put_ContentTargetName)(_In_opt_ HSTRING value) override;
        IFACEMETHOD(get_ContentTranslationDirection)(_Out_ ABI::Microsoft::UI::Xaml::Controls::Primitives::AnimationDirection* pValue) override;
        IFACEMETHOD(put_ContentTranslationDirection)(_In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::AnimationDirection value) override;
        IFACEMETHOD(get_ContentTranslationOffset)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_ContentTranslationOffset)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_OffsetFromCenter)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_OffsetFromCenter)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_OpenedLength)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_OpenedLength)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_OpenedTarget)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_OpenedTarget)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_OpenedTargetName)(_Out_ HSTRING* pValue) override;
        IFACEMETHOD(put_OpenedTargetName)(_In_opt_ HSTRING value) override;

        // Events.

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "SplitCloseThemeAnimation_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) SplitCloseThemeAnimationFactory:
       public ctl::BetterCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Media::Animation::ISplitCloseThemeAnimationStatics
    {
        BEGIN_INTERFACE_MAP(SplitCloseThemeAnimationFactory, ctl::BetterCoreObjectActivationFactory)
            INTERFACE_ENTRY(SplitCloseThemeAnimationFactory, ABI::Microsoft::UI::Xaml::Media::Animation::ISplitCloseThemeAnimationStatics)
        END_INTERFACE_MAP(SplitCloseThemeAnimationFactory, ctl::BetterCoreObjectActivationFactory)

    public:
        // Factory methods.

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_OpenedTargetNameProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_OpenedTargetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ClosedTargetNameProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ClosedTargetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ContentTargetNameProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ContentTargetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_OpenedLengthProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ClosedLengthProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_OffsetFromCenterProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ContentTranslationDirectionProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ContentTranslationOffsetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::SplitCloseThemeAnimation;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
