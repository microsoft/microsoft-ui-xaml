// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "ImageSource.g.h"

#define __SvgImageSource_GUID "ac4f05ec-fcf4-4f11-8b65-60bd35b59e5f"

namespace DirectUI
{
    class SvgImageSource;

    class __declspec(novtable) SvgImageSourceGenerated:
        public DirectUI::ImageSource
        , public ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSource
    {
        friend class DirectUI::SvgImageSource;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Media.Imaging.SvgImageSource");

        BEGIN_INTERFACE_MAP(SvgImageSourceGenerated, DirectUI::ImageSource)
            INTERFACE_ENTRY(SvgImageSourceGenerated, ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSource)
        END_INTERFACE_MAP(SvgImageSourceGenerated, DirectUI::ImageSource)

    public:
        SvgImageSourceGenerated();
        ~SvgImageSourceGenerated() override;

        // Event source typedefs.
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSource*, ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSourceOpenedEventArgs*>, ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSource, ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSourceOpenedEventArgs> OpenedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSource*, ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSourceFailedEventArgs*>, ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSource, ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSourceFailedEventArgs> OpenFailedEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::SvgImageSource;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::SvgImageSource;
        }

        // Properties.
        IFACEMETHOD(get_RasterizePixelHeight)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_RasterizePixelHeight)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_RasterizePixelWidth)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_RasterizePixelWidth)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_UriSource)(_Outptr_result_maybenull_ ABI::Windows::Foundation::IUriRuntimeClass** ppValue) override;
        IFACEMETHOD(put_UriSource)(_In_opt_ ABI::Windows::Foundation::IUriRuntimeClass* pValue) override;

        // Events.
        _Check_return_ HRESULT GetOpenedEventSourceNoRef(_Outptr_ OpenedEventSourceType** ppEventSource);
        IFACEMETHOD(add_Opened)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSource*, ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSourceOpenedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_Opened)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetOpenFailedEventSourceNoRef(_Outptr_ OpenFailedEventSourceType** ppEventSource);
        IFACEMETHOD(add_OpenFailed)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSource*, ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSourceFailedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_OpenFailed)(_In_ EventRegistrationToken token) override;

        // Methods.
        IFACEMETHOD(SetSourceAsync)(_In_ ABI::Windows::Storage::Streams::IRandomAccessStream* pStreamSource, _Outptr_ ABI::Windows::Foundation::IAsyncOperation<ABI::Microsoft::UI::Xaml::Media::Imaging::SvgImageSourceLoadStatus>** ppReturnValue) override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "SvgImageSource_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) SvgImageSourceFactory:
       public ctl::BetterAggregableCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSourceFactory
        , public ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSourceStatics
    {
        BEGIN_INTERFACE_MAP(SvgImageSourceFactory, ctl::BetterAggregableCoreObjectActivationFactory)
            INTERFACE_ENTRY(SvgImageSourceFactory, ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSourceFactory)
            INTERFACE_ENTRY(SvgImageSourceFactory, ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSourceStatics)
        END_INTERFACE_MAP(SvgImageSourceFactory, ctl::BetterAggregableCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSource** ppInstance);
        IFACEMETHOD(CreateInstanceWithUriSource)(_In_ ABI::Windows::Foundation::IUriRuntimeClass* pUriSource, _In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSource** ppInstance);

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_UriSourceProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_RasterizePixelWidthProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_RasterizePixelHeightProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::SvgImageSource;
        }


    private:
        _Check_return_ HRESULT CreateInstanceWithUriSourceImpl(_In_ ABI::Windows::Foundation::IUriRuntimeClass* pUriSource, _In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Media::Imaging::ISvgImageSource** ppInstance);

        // Customized static properties.

        // Customized static  methods.
    };
}
