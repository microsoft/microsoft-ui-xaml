// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "AppBar.g.h"

#define __CommandBar_GUID "07a2d60d-8cd0-4673-a1af-7897772c0c48"

namespace DirectUI
{
    class CommandBar;
    class CommandBarTemplateSettings;
    class Style;
    class XamlRoot;

    class __declspec(novtable) CommandBarGenerated:
        public DirectUI::AppBar
        , public ABI::Microsoft::UI::Xaml::Controls::ICommandBar
        , public ABI::Microsoft::UI::Xaml::Controls::IMenu
    {
        friend class DirectUI::CommandBar;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.CommandBar");

        BEGIN_INTERFACE_MAP(CommandBarGenerated, DirectUI::AppBar)
            INTERFACE_ENTRY(CommandBarGenerated, ABI::Microsoft::UI::Xaml::Controls::ICommandBar)
            INTERFACE_ENTRY(CommandBarGenerated, ABI::Microsoft::UI::Xaml::Controls::IMenu)
        END_INTERFACE_MAP(CommandBarGenerated, DirectUI::AppBar)

    public:
        CommandBarGenerated();
        ~CommandBarGenerated() override;

        // Event source typedefs.
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::CommandBar*, ABI::Microsoft::UI::Xaml::Controls::DynamicOverflowItemsChangingEventArgs*>, ABI::Microsoft::UI::Xaml::Controls::ICommandBar, ABI::Microsoft::UI::Xaml::Controls::IDynamicOverflowItemsChangingEventArgs> DynamicOverflowItemsChangingEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::CommandBar;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::CommandBar;
        }

        // Properties.
        IFACEMETHOD(get_CommandBarOverflowPresenterStyle)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IStyle** ppValue) override;
        IFACEMETHOD(put_CommandBarOverflowPresenterStyle)(_In_opt_ ABI::Microsoft::UI::Xaml::IStyle* pValue) override;
        IFACEMETHOD(get_CommandBarTemplateSettings)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Controls::Primitives::ICommandBarTemplateSettings** ppValue) override;
        _Check_return_ HRESULT put_CommandBarTemplateSettings(_In_opt_ ABI::Microsoft::UI::Xaml::Controls::Primitives::ICommandBarTemplateSettings* pValue);
        IFACEMETHOD(get_DefaultLabelPosition)(_Out_ ABI::Microsoft::UI::Xaml::Controls::CommandBarDefaultLabelPosition* pValue) override;
        IFACEMETHOD(put_DefaultLabelPosition)(_In_ ABI::Microsoft::UI::Xaml::Controls::CommandBarDefaultLabelPosition value) override;
        IFACEMETHOD(get_IsDynamicOverflowEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsDynamicOverflowEnabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_OverflowButtonVisibility)(_Out_ ABI::Microsoft::UI::Xaml::Controls::CommandBarOverflowButtonVisibility* pValue) override;
        IFACEMETHOD(put_OverflowButtonVisibility)(_In_ ABI::Microsoft::UI::Xaml::Controls::CommandBarOverflowButtonVisibility value) override;
        IFACEMETHOD(get_ParentMenu)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Controls::IMenu** ppValue) override;
        IFACEMETHOD(put_ParentMenu)(_In_opt_ ABI::Microsoft::UI::Xaml::Controls::IMenu* pValue) override;
        IFACEMETHOD(get_PrimaryCommands)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IObservableVector<ABI::Microsoft::UI::Xaml::Controls::ICommandBarElement*>** ppValue) override;
        IFACEMETHOD(get_SecondaryCommands)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IObservableVector<ABI::Microsoft::UI::Xaml::Controls::ICommandBarElement*>** ppValue) override;

        // Events.
        _Check_return_ HRESULT GetDynamicOverflowItemsChangingEventSourceNoRef(_Outptr_ DynamicOverflowItemsChangingEventSourceType** ppEventSource);
        IFACEMETHOD(add_DynamicOverflowItemsChanging)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::CommandBar*, ABI::Microsoft::UI::Xaml::Controls::DynamicOverflowItemsChangingEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_DynamicOverflowItemsChanging)(_In_ EventRegistrationToken token) override;

        // Methods.
        IFACEMETHOD(Close)() override;

        IFACEMETHOD(OnApplyTemplate)() override;

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;
        _Check_return_ HRESULT EventAddHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler, _In_ BOOLEAN handledEventsToo) override;
        _Check_return_ HRESULT EventRemoveHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler) override;

    private:

        // Fields.
        TrackerPtr<ABI::Microsoft::UI::Xaml::Controls::IItemsControl> m_tpPrimaryItemsControlPart;
        TrackerPtr<ABI::Microsoft::UI::Xaml::Controls::IItemsControl> m_tpSecondaryItemsControlPart;
    };
}

#include "CommandBar_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) CommandBarFactory:
       public ctl::BetterAggregableCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Controls::ICommandBarFactory
        , public ABI::Microsoft::UI::Xaml::Controls::ICommandBarStatics
        , public ABI::Microsoft::UI::Xaml::Controls::ICommandBarStaticsPrivate
    {
        BEGIN_INTERFACE_MAP(CommandBarFactory, ctl::BetterAggregableCoreObjectActivationFactory)
            INTERFACE_ENTRY(CommandBarFactory, ABI::Microsoft::UI::Xaml::Controls::ICommandBarFactory)
            INTERFACE_ENTRY(CommandBarFactory, ABI::Microsoft::UI::Xaml::Controls::ICommandBarStatics)
            INTERFACE_ENTRY(CommandBarFactory, ABI::Microsoft::UI::Xaml::Controls::ICommandBarStaticsPrivate)
        END_INTERFACE_MAP(CommandBarFactory, ctl::BetterAggregableCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::ICommandBar** ppInstance);

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_PrimaryCommandsProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_SecondaryCommandsProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_CommandBarOverflowPresenterStyleProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        IFACEMETHOD(get_DefaultLabelPositionProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_OverflowButtonVisibilityProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsDynamicOverflowEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.
        IFACEMETHOD(GetCurrentBottomCommandBar)(_In_ ABI::Microsoft::UI::Xaml::IXamlRoot* pXamlRoot, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::ICommandBar** ppResult) override;

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::CommandBar;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
         _Check_return_ HRESULT GetCurrentBottomCommandBarImpl(_In_ ABI::Microsoft::UI::Xaml::IXamlRoot* pXamlRoot, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::ICommandBar** ppResult); 
    };
}
