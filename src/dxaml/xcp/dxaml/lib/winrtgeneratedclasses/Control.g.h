// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "FrameworkElement.g.h"
#include "CornerRadius.g.h"
#include "Thickness.g.h"

#define __Control_GUID "7ef20697-b515-4ddc-903d-5605d6dfae81"

namespace DirectUI
{
    class Control;
    class Brush;
    class CharacterReceivedRoutedEventArgs;
    class ControlTemplate;
    class DoubleTappedRoutedEventArgs;
    class DragEventArgs;
    class FontFamily;
    class HoldingRoutedEventArgs;
    class KeyRoutedEventArgs;
    class ManipulationCompletedRoutedEventArgs;
    class ManipulationDeltaRoutedEventArgs;
    class ManipulationInertiaStartingRoutedEventArgs;
    class ManipulationStartedRoutedEventArgs;
    class ManipulationStartingRoutedEventArgs;
    class PointerRoutedEventArgs;
    class RightTappedRoutedEventArgs;
    class RoutedEventArgs;
    class TappedRoutedEventArgs;
    class UIElement;

    class __declspec(novtable) ControlGenerated:
        public DirectUI::FrameworkElement
        , public ABI::Microsoft::UI::Xaml::Controls::IControl
        , public ABI::Microsoft::UI::Xaml::Controls::IControlProtected
        , public ABI::Microsoft::UI::Xaml::Controls::IControlOverrides
    {
        friend class DirectUI::Control;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.Control");

        BEGIN_INTERFACE_MAP(ControlGenerated, DirectUI::FrameworkElement)
            INTERFACE_ENTRY(ControlGenerated, ABI::Microsoft::UI::Xaml::Controls::IControl)
            INTERFACE_ENTRY(ControlGenerated, ABI::Microsoft::UI::Xaml::Controls::IControlProtected)
            INTERFACE_ENTRY(ControlGenerated, ABI::Microsoft::UI::Xaml::Controls::IControlOverrides)
        END_INTERFACE_MAP(ControlGenerated, DirectUI::FrameworkElement)

    public:
        ControlGenerated();
        ~ControlGenerated() override;

        // Event source typedefs.
        typedef CRoutedEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::Control*, ABI::Microsoft::UI::Xaml::Controls::FocusEngagedEventArgs*>, ABI::Microsoft::UI::Xaml::Controls::IControl, ABI::Microsoft::UI::Xaml::Controls::IFocusEngagedEventArgs> FocusEngagedEventSourceType;
        typedef CRoutedEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::Control*, ABI::Microsoft::UI::Xaml::Controls::FocusDisengagedEventArgs*>, ABI::Microsoft::UI::Xaml::Controls::IControl, ABI::Microsoft::UI::Xaml::Controls::IFocusDisengagedEventArgs> FocusDisengagedEventSourceType;
        typedef CEventSource<ABI::Microsoft::UI::Xaml::IDependencyPropertyChangedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::IDependencyPropertyChangedEventArgs> InheritedPropertyChangedEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Control;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::Control;
        }

        // Properties.
        IFACEMETHOD(get_Background)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IBrush** ppValue) override;
        IFACEMETHOD(put_Background)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IBrush* pValue) override;
        IFACEMETHOD(get_BackgroundSizing)(_Out_ ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing* pValue) override;
        IFACEMETHOD(put_BackgroundSizing)(_In_ ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing value) override;
        IFACEMETHOD(get_BorderBrush)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IBrush** ppValue) override;
        IFACEMETHOD(put_BorderBrush)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IBrush* pValue) override;
        IFACEMETHOD(get_BorderThickness)(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue) override;
        IFACEMETHOD(put_BorderThickness)(_In_ ABI::Microsoft::UI::Xaml::Thickness value) override;
        IFACEMETHOD(get_CharacterSpacing)(_Out_ INT* pValue) override;
        IFACEMETHOD(put_CharacterSpacing)(_In_ INT value) override;
        IFACEMETHOD(get_CornerRadius)(_Out_ ABI::Microsoft::UI::Xaml::CornerRadius* pValue) override;
        IFACEMETHOD(put_CornerRadius)(_In_ ABI::Microsoft::UI::Xaml::CornerRadius value) override;
        IFACEMETHOD(get_DefaultStyleKey)(_Outptr_result_maybenull_ IInspectable** ppValue) override;
        IFACEMETHOD(put_DefaultStyleKey)(_In_opt_ IInspectable* pValue) override;
        IFACEMETHOD(get_DefaultStyleResourceUri)(_Outptr_result_maybenull_ ABI::Windows::Foundation::IUriRuntimeClass** ppValue) override;
        IFACEMETHOD(put_DefaultStyleResourceUri)(_In_opt_ ABI::Windows::Foundation::IUriRuntimeClass* pValue) override;
        IFACEMETHOD(get_ElementSoundMode)(_Out_ ABI::Microsoft::UI::Xaml::ElementSoundMode* pValue) override;
        IFACEMETHOD(put_ElementSoundMode)(_In_ ABI::Microsoft::UI::Xaml::ElementSoundMode value) override;
        _Check_return_ HRESULT get_FocusTargetDescendant(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IUIElement** ppValue);
        _Check_return_ HRESULT put_FocusTargetDescendant(_In_opt_ ABI::Microsoft::UI::Xaml::IUIElement* pValue);
        IFACEMETHOD(get_FontFamily)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IFontFamily** ppValue) override;
        IFACEMETHOD(put_FontFamily)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IFontFamily* pValue) override;
        IFACEMETHOD(get_FontSize)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_FontSize)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_FontStretch)(_Out_ ABI::Windows::UI::Text::FontStretch* pValue) override;
        IFACEMETHOD(put_FontStretch)(_In_ ABI::Windows::UI::Text::FontStretch value) override;
        IFACEMETHOD(get_FontStyle)(_Out_ ABI::Windows::UI::Text::FontStyle* pValue) override;
        IFACEMETHOD(put_FontStyle)(_In_ ABI::Windows::UI::Text::FontStyle value) override;
        IFACEMETHOD(get_FontWeight)(_Out_ ABI::Windows::UI::Text::FontWeight* pValue) override;
        IFACEMETHOD(put_FontWeight)(_In_ ABI::Windows::UI::Text::FontWeight value) override;
        IFACEMETHOD(get_Foreground)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IBrush** ppValue) override;
        IFACEMETHOD(put_Foreground)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IBrush* pValue) override;
        IFACEMETHOD(get_HorizontalContentAlignment)(_Out_ ABI::Microsoft::UI::Xaml::HorizontalAlignment* pValue) override;
        IFACEMETHOD(put_HorizontalContentAlignment)(_In_ ABI::Microsoft::UI::Xaml::HorizontalAlignment value) override;
        IFACEMETHOD(get_IsEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsEnabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsFocusEngaged)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsFocusEngaged)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsFocusEngagementEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsFocusEngagementEnabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsTextScaleFactorEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsTextScaleFactorEnabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_Padding)(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue) override;
        IFACEMETHOD(put_Padding)(_In_ ABI::Microsoft::UI::Xaml::Thickness value) override;
        IFACEMETHOD(get_RequiresPointer)(_Out_ ABI::Microsoft::UI::Xaml::Controls::RequiresPointer* pValue) override;
        IFACEMETHOD(put_RequiresPointer)(_In_ ABI::Microsoft::UI::Xaml::Controls::RequiresPointer value) override;
        IFACEMETHOD(get_TabNavigation)(_Out_ ABI::Microsoft::UI::Xaml::Input::KeyboardNavigationMode* pValue) override;
        IFACEMETHOD(put_TabNavigation)(_In_ ABI::Microsoft::UI::Xaml::Input::KeyboardNavigationMode value) override;
        IFACEMETHOD(get_Template)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Controls::IControlTemplate** ppValue) override;
        IFACEMETHOD(put_Template)(_In_opt_ ABI::Microsoft::UI::Xaml::Controls::IControlTemplate* pValue) override;
        _Check_return_ HRESULT get_TemplateKeyTipTarget(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IUIElement** ppValue);
        _Check_return_ HRESULT put_TemplateKeyTipTarget(_In_opt_ ABI::Microsoft::UI::Xaml::IUIElement* pValue);
        IFACEMETHOD(get_VerticalContentAlignment)(_Out_ ABI::Microsoft::UI::Xaml::VerticalAlignment* pValue) override;
        IFACEMETHOD(put_VerticalContentAlignment)(_In_ ABI::Microsoft::UI::Xaml::VerticalAlignment value) override;

        // Events.
        _Check_return_ HRESULT GetFocusDisengagedEventSourceNoRef(_Outptr_ FocusDisengagedEventSourceType** ppEventSource);
        IFACEMETHOD(add_FocusDisengaged)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::Control*, ABI::Microsoft::UI::Xaml::Controls::FocusDisengagedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_FocusDisengaged)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetFocusEngagedEventSourceNoRef(_Outptr_ FocusEngagedEventSourceType** ppEventSource);
        IFACEMETHOD(add_FocusEngaged)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::Control*, ABI::Microsoft::UI::Xaml::Controls::FocusEngagedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_FocusEngaged)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetInheritedPropertyChangedEventSourceNoRef(_Outptr_ InheritedPropertyChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT add_InheritedPropertyChanged(_In_ ABI::Microsoft::UI::Xaml::IDependencyPropertyChangedEventHandler* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT remove_InheritedPropertyChanged(_In_ EventRegistrationToken token);
        IFACEMETHOD(add_IsEnabledChanged)(_In_ ABI::Microsoft::UI::Xaml::IDependencyPropertyChangedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) = 0;
        IFACEMETHOD(remove_IsEnabledChanged)(_In_ EventRegistrationToken token) = 0;

        // Methods.
        IFACEMETHOD(ApplyTemplate)(_Out_ BOOLEAN* pReturnValue) override;
        _Check_return_ HRESULT GetImplementationRoot(_Outptr_ ABI::Microsoft::UI::Xaml::IUIElement** ppReturnValue);
        IFACEMETHOD(GetTemplateChild)(_In_ HSTRING childName, _Outptr_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppReturnValue) override;
        IFACEMETHOD(OnCharacterReceived)(_In_ ABI::Microsoft::UI::Xaml::Input::ICharacterReceivedRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnCharacterReceivedProtected(_In_ ABI::Microsoft::UI::Xaml::Input::ICharacterReceivedRoutedEventArgs* pE);
        IFACEMETHOD(OnDoubleTapped)(_In_ ABI::Microsoft::UI::Xaml::Input::IDoubleTappedRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnDoubleTappedProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IDoubleTappedRoutedEventArgs* pE);
        IFACEMETHOD(OnDragEnter)(_In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pE) override;
        _Check_return_ HRESULT OnDragEnterProtected(_In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pE);
        IFACEMETHOD(OnDragLeave)(_In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pE) override;
        _Check_return_ HRESULT OnDragLeaveProtected(_In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pE);
        IFACEMETHOD(OnDragOver)(_In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pE) override;
        _Check_return_ HRESULT OnDragOverProtected(_In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pE);
        IFACEMETHOD(OnDrop)(_In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pE) override;
        _Check_return_ HRESULT OnDropProtected(_In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pE);
        IFACEMETHOD(OnGotFocus)(_In_ ABI::Microsoft::UI::Xaml::IRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnGotFocusProtected(_In_ ABI::Microsoft::UI::Xaml::IRoutedEventArgs* pE);
        IFACEMETHOD(OnHolding)(_In_ ABI::Microsoft::UI::Xaml::Input::IHoldingRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnHoldingProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IHoldingRoutedEventArgs* pE);
        IFACEMETHOD(OnKeyDown)(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnKeyDownProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs* pE);
        IFACEMETHOD(OnKeyUp)(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnKeyUpProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs* pE);
        IFACEMETHOD(OnLostFocus)(_In_ ABI::Microsoft::UI::Xaml::IRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnLostFocusProtected(_In_ ABI::Microsoft::UI::Xaml::IRoutedEventArgs* pE);
        IFACEMETHOD(OnManipulationCompleted)(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationCompletedRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnManipulationCompletedProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationCompletedRoutedEventArgs* pE);
        IFACEMETHOD(OnManipulationDelta)(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationDeltaRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnManipulationDeltaProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationDeltaRoutedEventArgs* pE);
        IFACEMETHOD(OnManipulationInertiaStarting)(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationInertiaStartingRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnManipulationInertiaStartingProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationInertiaStartingRoutedEventArgs* pE);
        IFACEMETHOD(OnManipulationStarted)(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationStartedRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnManipulationStartedProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationStartedRoutedEventArgs* pE);
        IFACEMETHOD(OnManipulationStarting)(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationStartingRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnManipulationStartingProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationStartingRoutedEventArgs* pE);
        IFACEMETHOD(OnPointerCanceled)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnPointerCanceledProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE);
        IFACEMETHOD(OnPointerCaptureLost)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnPointerCaptureLostProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE);
        IFACEMETHOD(OnPointerEntered)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnPointerEnteredProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE);
        IFACEMETHOD(OnPointerExited)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnPointerExitedProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE);
        IFACEMETHOD(OnPointerMoved)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnPointerMovedProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE);
        IFACEMETHOD(OnPointerPressed)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnPointerPressedProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE);
        IFACEMETHOD(OnPointerReleased)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnPointerReleasedProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE);
        IFACEMETHOD(OnPointerWheelChanged)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnPointerWheelChangedProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pE);
        IFACEMETHOD(OnPreviewKeyDown)(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnPreviewKeyDownProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs* pE);
        IFACEMETHOD(OnPreviewKeyUp)(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnPreviewKeyUpProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs* pE);
        IFACEMETHOD(OnRightTapped)(_In_ ABI::Microsoft::UI::Xaml::Input::IRightTappedRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnRightTappedProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IRightTappedRoutedEventArgs* pE);
        virtual _Check_return_ HRESULT OnRightTappedUnhandled(_In_ ABI::Microsoft::UI::Xaml::Input::IRightTappedRoutedEventArgs* pE) = 0;
        IFACEMETHOD(OnTapped)(_In_ ABI::Microsoft::UI::Xaml::Input::ITappedRoutedEventArgs* pE) override;
        _Check_return_ HRESULT OnTappedProtected(_In_ ABI::Microsoft::UI::Xaml::Input::ITappedRoutedEventArgs* pE);
        IFACEMETHOD(RemoveFocusEngagement)() override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;
        _Check_return_ HRESULT EventAddHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler, _In_ BOOLEAN handledEventsToo) override;
        _Check_return_ HRESULT EventRemoveHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler) override;

    private:

        // Fields.
    };
}

#include "Control_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) ControlFactory:
       public ctl::BetterAggregableAbstractCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IControlFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IControlStatics
    {
        BEGIN_INTERFACE_MAP(ControlFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)
            INTERFACE_ENTRY(ControlFactory, ABI::Microsoft::UI::Xaml::Controls::IControlFactory)
            INTERFACE_ENTRY(ControlFactory, ABI::Microsoft::UI::Xaml::Controls::IControlStatics)
        END_INTERFACE_MAP(ControlFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::IControl** ppInstance);

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_IsFocusEngagementEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsFocusEngagedProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_RequiresPointerProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        IFACEMETHOD(get_FontSizeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FontFamilyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FontWeightProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FontStyleProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FontStretchProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_CharacterSpacingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ForegroundProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsTextScaleFactorEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_TabNavigationProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_TemplateProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_PaddingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_HorizontalContentAlignmentProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_VerticalContentAlignmentProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_BackgroundProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_BackgroundSizingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_BorderThicknessProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_BorderBrushProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_DefaultStyleKeyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_DefaultStyleResourceUriProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ElementSoundModeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        IFACEMETHOD(get_CornerRadiusProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.
        static _Check_return_ HRESULT GetIsTemplateFocusTargetStatic(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _Out_ BOOLEAN* pValue);
        static _Check_return_ HRESULT SetIsTemplateFocusTargetStatic(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _In_ BOOLEAN value);
        IFACEMETHOD(get_IsTemplateFocusTargetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetIsTemplateFocusTarget)(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _Out_ BOOLEAN* pValue);
        IFACEMETHOD(SetIsTemplateFocusTarget)(_In_ ABI::Microsoft::UI::Xaml::IFrameworkElement* pElement, _In_ BOOLEAN value);
        static _Check_return_ HRESULT GetIsTemplateKeyTipTargetStatic(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pElement, _Out_ BOOLEAN* pValue);
        static _Check_return_ HRESULT SetIsTemplateKeyTipTargetStatic(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pElement, _In_ BOOLEAN value);
        IFACEMETHOD(get_IsTemplateKeyTipTargetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetIsTemplateKeyTipTarget)(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pElement, _Out_ BOOLEAN* pValue);
        IFACEMETHOD(SetIsTemplateKeyTipTarget)(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pElement, _In_ BOOLEAN value);

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Control;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
