// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "Span.g.h"

#define __Hyperlink_GUID "a30a93ea-2114-4001-8093-b1b354950758"

namespace DirectUI
{
    class Hyperlink;

    class __declspec(novtable) HyperlinkGenerated:
        public DirectUI::Span
        , public ABI::Microsoft::UI::Xaml::Documents::IHyperlink
    {
        friend class DirectUI::Hyperlink;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Documents.Hyperlink");

        BEGIN_INTERFACE_MAP(HyperlinkGenerated, DirectUI::Span)
            INTERFACE_ENTRY(HyperlinkGenerated, ABI::Microsoft::UI::Xaml::Documents::IHyperlink)
        END_INTERFACE_MAP(HyperlinkGenerated, DirectUI::Span)

    public:
        HyperlinkGenerated();
        ~HyperlinkGenerated() override;

        // Event source typedefs.
        typedef CRoutedEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Documents::Hyperlink*, ABI::Microsoft::UI::Xaml::Documents::HyperlinkClickEventArgs*>, ABI::Microsoft::UI::Xaml::Documents::IHyperlink, ABI::Microsoft::UI::Xaml::Documents::IHyperlinkClickEventArgs> ClickEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::IRoutedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::IRoutedEventArgs> GotFocusEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::IRoutedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::IRoutedEventArgs> LostFocusEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Hyperlink;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::Hyperlink;
        }

        // Properties.
        IFACEMETHOD(get_ElementSoundMode)(_Out_ ABI::Microsoft::UI::Xaml::ElementSoundMode* pValue) override;
        IFACEMETHOD(put_ElementSoundMode)(_In_ ABI::Microsoft::UI::Xaml::ElementSoundMode value) override;
        IFACEMETHOD(get_FocusState)(_Out_ ABI::Microsoft::UI::Xaml::FocusState* pValue) override;
        IFACEMETHOD(get_IsTabStop)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsTabStop)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_NavigateUri)(_Outptr_result_maybenull_ ABI::Windows::Foundation::IUriRuntimeClass** ppValue) override;
        IFACEMETHOD(put_NavigateUri)(_In_opt_ ABI::Windows::Foundation::IUriRuntimeClass* pValue) override;
        IFACEMETHOD(get_TabIndex)(_Out_ INT* pValue) override;
        IFACEMETHOD(put_TabIndex)(_In_ INT value) override;
        IFACEMETHOD(get_UnderlineStyle)(_Out_ ABI::Microsoft::UI::Xaml::Documents::UnderlineStyle* pValue) override;
        IFACEMETHOD(put_UnderlineStyle)(_In_ ABI::Microsoft::UI::Xaml::Documents::UnderlineStyle value) override;
        IFACEMETHOD(get_XYFocusDown)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_XYFocusDown)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_XYFocusDownNavigationStrategy)(_Out_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy* pValue) override;
        IFACEMETHOD(put_XYFocusDownNavigationStrategy)(_In_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy value) override;
        IFACEMETHOD(get_XYFocusLeft)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_XYFocusLeft)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_XYFocusLeftNavigationStrategy)(_Out_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy* pValue) override;
        IFACEMETHOD(put_XYFocusLeftNavigationStrategy)(_In_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy value) override;
        IFACEMETHOD(get_XYFocusRight)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_XYFocusRight)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_XYFocusRightNavigationStrategy)(_Out_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy* pValue) override;
        IFACEMETHOD(put_XYFocusRightNavigationStrategy)(_In_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy value) override;
        IFACEMETHOD(get_XYFocusUp)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_XYFocusUp)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_XYFocusUpNavigationStrategy)(_Out_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy* pValue) override;
        IFACEMETHOD(put_XYFocusUpNavigationStrategy)(_In_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy value) override;

        // Events.
        _Check_return_ HRESULT GetClickEventSourceNoRef(_Outptr_ ClickEventSourceType** ppEventSource);
        IFACEMETHOD(add_Click)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Documents::Hyperlink*, ABI::Microsoft::UI::Xaml::Documents::HyperlinkClickEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_Click)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetGotFocusEventSourceNoRef(_Outptr_ GotFocusEventSourceType** ppEventSource);
        IFACEMETHOD(add_GotFocus)(_In_ ABI::Microsoft::UI::Xaml::IRoutedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_GotFocus)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetLostFocusEventSourceNoRef(_Outptr_ LostFocusEventSourceType** ppEventSource);
        IFACEMETHOD(add_LostFocus)(_In_ ABI::Microsoft::UI::Xaml::IRoutedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_LostFocus)(_In_ EventRegistrationToken token) override;

        // Methods.
        IFACEMETHOD(Focus)(_In_ ABI::Microsoft::UI::Xaml::FocusState value, _Out_ BOOLEAN* pReturnValue) override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "Hyperlink_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) HyperlinkFactory:
       public ctl::BetterCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Documents::IHyperlinkStatics
    {
        BEGIN_INTERFACE_MAP(HyperlinkFactory, ctl::BetterCoreObjectActivationFactory)
            INTERFACE_ENTRY(HyperlinkFactory, ABI::Microsoft::UI::Xaml::Documents::IHyperlinkStatics)
        END_INTERFACE_MAP(HyperlinkFactory, ctl::BetterCoreObjectActivationFactory)

    public:
        // Factory methods.

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_NavigateUriProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_UnderlineStyleProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusLeftProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusRightProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusUpProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusDownProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ElementSoundModeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FocusStateProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusUpNavigationStrategyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusDownNavigationStrategyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusLeftNavigationStrategyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusRightNavigationStrategyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsTabStopProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_TabIndexProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Hyperlink;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
