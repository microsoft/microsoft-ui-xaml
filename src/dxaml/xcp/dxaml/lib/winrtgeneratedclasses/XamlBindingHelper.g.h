// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once




namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) XamlBindingHelperFactoryGenerated:
       public ctl::AbstractActivationFactory
        , public ABI::Microsoft::UI::Xaml::Markup::IXamlBindingHelperStatics
    {
        BEGIN_INTERFACE_MAP(XamlBindingHelperFactoryGenerated, ctl::AbstractActivationFactory)
            INTERFACE_ENTRY(XamlBindingHelperFactoryGenerated, ABI::Microsoft::UI::Xaml::Markup::IXamlBindingHelperStatics)
        END_INTERFACE_MAP(XamlBindingHelperFactoryGenerated, ctl::AbstractActivationFactory)

    public:
        // Factory methods.

        // Static properties.

        // Dependency properties.

        // Attached properties.
        static _Check_return_ HRESULT GetDataTemplateComponentStatic(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pElement, _Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Markup::IDataTemplateComponent** ppValue);
        static _Check_return_ HRESULT SetDataTemplateComponentStatic(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pElement, _In_opt_ ABI::Microsoft::UI::Xaml::Markup::IDataTemplateComponent* pValue);
        IFACEMETHOD(get_DataTemplateComponentProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetDataTemplateComponent)(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pElement, _Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Markup::IDataTemplateComponent** ppValue);
        IFACEMETHOD(SetDataTemplateComponent)(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pElement, _In_opt_ ABI::Microsoft::UI::Xaml::Markup::IDataTemplateComponent* pValue);

        // Static methods.
        IFACEMETHOD(SuspendRendering)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pTarget) override;
        IFACEMETHOD(ResumeRendering)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pTarget) override;
        IFACEMETHOD(ConvertValue)(_In_ ABI::Windows::UI::Xaml::Interop::TypeName type, _In_ IInspectable* pValue, _Outptr_ IInspectable** ppReturnValue) override;
        IFACEMETHOD(SetPropertyFromString)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ HSTRING value) override;
        IFACEMETHOD(SetPropertyFromBoolean)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ BOOLEAN value) override;
        IFACEMETHOD(SetPropertyFromChar16)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ WCHAR value) override;
        IFACEMETHOD(SetPropertyFromDateTime)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ ABI::Windows::Foundation::DateTime value) override;
        IFACEMETHOD(SetPropertyFromDouble)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ DOUBLE value) override;
        IFACEMETHOD(SetPropertyFromInt32)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ INT value) override;
        IFACEMETHOD(SetPropertyFromUInt32)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ UINT value) override;
        IFACEMETHOD(SetPropertyFromInt64)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ INT64 value) override;
        IFACEMETHOD(SetPropertyFromUInt64)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ UINT64 value) override;
        IFACEMETHOD(SetPropertyFromSingle)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ FLOAT value) override;
        IFACEMETHOD(SetPropertyFromPoint)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ ABI::Windows::Foundation::Point value) override;
        IFACEMETHOD(SetPropertyFromRect)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ ABI::Windows::Foundation::Rect value) override;
        IFACEMETHOD(SetPropertyFromSize)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ ABI::Windows::Foundation::Size value) override;
        IFACEMETHOD(SetPropertyFromTimeSpan)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ ABI::Windows::Foundation::TimeSpan value) override;
        IFACEMETHOD(SetPropertyFromByte)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ BYTE value) override;
        IFACEMETHOD(SetPropertyFromUri)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ ABI::Windows::Foundation::IUriRuntimeClass* pValue) override;
        IFACEMETHOD(SetPropertyFromObject)(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ IInspectable* pValue) override;

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::XamlBindingHelper;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
         _Check_return_ HRESULT SuspendRenderingImpl(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pTarget); 
         _Check_return_ HRESULT ResumeRenderingImpl(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pTarget); 
         _Check_return_ HRESULT ConvertValueImpl(_In_ ABI::Windows::UI::Xaml::Interop::TypeName type, _In_ IInspectable* pValue, _Outptr_ IInspectable** ppReturnValue); 
         _Check_return_ HRESULT SetPropertyFromStringImpl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ HSTRING value); 
         _Check_return_ HRESULT SetPropertyFromBooleanImpl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ BOOLEAN value); 
         _Check_return_ HRESULT SetPropertyFromChar16Impl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ WCHAR value); 
         _Check_return_ HRESULT SetPropertyFromDateTimeImpl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ ABI::Windows::Foundation::DateTime value); 
         _Check_return_ HRESULT SetPropertyFromDoubleImpl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ DOUBLE value); 
         _Check_return_ HRESULT SetPropertyFromInt32Impl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ INT value); 
         _Check_return_ HRESULT SetPropertyFromUInt32Impl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ UINT value); 
         _Check_return_ HRESULT SetPropertyFromInt64Impl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ INT64 value); 
         _Check_return_ HRESULT SetPropertyFromUInt64Impl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ UINT64 value); 
         _Check_return_ HRESULT SetPropertyFromSingleImpl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ FLOAT value); 
         _Check_return_ HRESULT SetPropertyFromPointImpl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ ABI::Windows::Foundation::Point value); 
         _Check_return_ HRESULT SetPropertyFromRectImpl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ ABI::Windows::Foundation::Rect value); 
         _Check_return_ HRESULT SetPropertyFromSizeImpl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ ABI::Windows::Foundation::Size value); 
         _Check_return_ HRESULT SetPropertyFromTimeSpanImpl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ ABI::Windows::Foundation::TimeSpan value); 
         _Check_return_ HRESULT SetPropertyFromByteImpl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ BYTE value); 
         _Check_return_ HRESULT SetPropertyFromUriImpl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ ABI::Windows::Foundation::IUriRuntimeClass* pValue); 
         _Check_return_ HRESULT SetPropertyFromObjectImpl(_In_ IInspectable* pDependencyObject, _In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pPropertyToSet, _In_ IInspectable* pValue); 
    };
}

#include "XamlBindingHelperFactory_Partial.h"
