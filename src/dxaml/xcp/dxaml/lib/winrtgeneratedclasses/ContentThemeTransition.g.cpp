// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "ContentThemeTransition.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::ContentThemeTransitionGenerated::ContentThemeTransitionGenerated()
{
}

DirectUI::ContentThemeTransitionGenerated::~ContentThemeTransitionGenerated()
{
}

HRESULT DirectUI::ContentThemeTransitionGenerated::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::ContentThemeTransition)))
    {
        *ppObject = static_cast<DirectUI::ContentThemeTransition*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IContentThemeTransition)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Media::Animation::IContentThemeTransition*>(this);
    }
    else
    {
        RRETURN(DirectUI::Transition::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::ContentThemeTransitionGenerated::get_HorizontalOffset(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::ContentThemeTransition_HorizontalOffset, pValue));
}
IFACEMETHODIMP DirectUI::ContentThemeTransitionGenerated::put_HorizontalOffset(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::ContentThemeTransition_HorizontalOffset, value));
}
IFACEMETHODIMP DirectUI::ContentThemeTransitionGenerated::get_VerticalOffset(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::ContentThemeTransition_VerticalOffset, pValue));
}
IFACEMETHODIMP DirectUI::ContentThemeTransitionGenerated::put_VerticalOffset(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::ContentThemeTransition_VerticalOffset, value));
}

// Events.

// Methods.

HRESULT DirectUI::ContentThemeTransitionFactory::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Media::Animation::IContentThemeTransitionStatics)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Media::Animation::IContentThemeTransitionStatics*>(this);
    }
    else
    {
        RRETURN(ctl::BetterCoreObjectActivationFactory::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}


// Factory methods.

// Dependency properties.
IFACEMETHODIMP DirectUI::ContentThemeTransitionFactory::get_HorizontalOffsetProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::ContentThemeTransition_HorizontalOffset, ppValue));
}
IFACEMETHODIMP DirectUI::ContentThemeTransitionFactory::get_VerticalOffsetProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::ContentThemeTransition_VerticalOffset, ppValue));
}

// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_ContentThemeTransition()
    {
        RRETURN(ctl::ActivationFactoryCreator<ContentThemeTransitionFactory>::CreateActivationFactory());
    }
}
