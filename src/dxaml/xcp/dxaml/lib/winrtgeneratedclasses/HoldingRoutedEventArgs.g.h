// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "RoutedEventArgs.g.h"
#include "UIElement.g.h"

#define __HoldingRoutedEventArgs_GUID "3956fb95-4fbe-4a13-af5d-6702b46edf7b"

namespace DirectUI
{
    class HoldingRoutedEventArgs;

    class __declspec(novtable) __declspec(uuid(__HoldingRoutedEventArgs_GUID)) HoldingRoutedEventArgs :
        public ABI::Microsoft::UI::Xaml::Input::IHoldingRoutedEventArgs,
        public DirectUI::RoutedEventArgs
    {

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs");

        BEGIN_INTERFACE_MAP(HoldingRoutedEventArgs, DirectUI::RoutedEventArgs)
            INTERFACE_ENTRY(HoldingRoutedEventArgs, ABI::Microsoft::UI::Xaml::Input::IHoldingRoutedEventArgs)
        END_INTERFACE_MAP(HoldingRoutedEventArgs, DirectUI::RoutedEventArgs)

    public:
        HoldingRoutedEventArgs();
        ~HoldingRoutedEventArgs() override;

        // Properties.
        IFACEMETHOD(get_PointerDeviceType)(_Out_ ABI::Microsoft::UI::Input::PointerDeviceType* pValue) override;
        IFACEMETHOD(get_HoldingState)(_Out_ ABI::Microsoft::UI::Input::HoldingState* pValue) override;
        IFACEMETHOD(get_Handled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_Handled)(_In_ BOOLEAN value) override;

        // Methods.
        IFACEMETHOD(GetPosition)(_In_opt_ ABI::Microsoft::UI::Xaml::IUIElement* pRelativeTo, _Out_ ABI::Windows::Foundation::Point* pReturnValue) override;

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;
        CEventArgs* CreateCorePeer() override;

    private:
        // Customized properties.

        // Customized methods.

        // Fields.
    };
}


