// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "RoutedEventArgs.g.h"
#include "UIElement.g.h"

#define __ManipulationStartedRoutedEventArgs_GUID "15b33f27-58f4-4e3b-8bf5-77a3f1af4631"

namespace DirectUI
{
    class ManipulationStartedRoutedEventArgs;

    class __declspec(novtable) __declspec(uuid(__ManipulationStartedRoutedEventArgs_GUID)) ManipulationStartedRoutedEventArgs :
        public ABI::Microsoft::UI::Xaml::Input::IManipulationStartedRoutedEventArgs,
        public DirectUI::RoutedEventArgs
    {

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs");

        BEGIN_INTERFACE_MAP(ManipulationStartedRoutedEventArgs, DirectUI::RoutedEventArgs)
            INTERFACE_ENTRY(ManipulationStartedRoutedEventArgs, ABI::Microsoft::UI::Xaml::Input::IManipulationStartedRoutedEventArgs)
        END_INTERFACE_MAP(ManipulationStartedRoutedEventArgs, DirectUI::RoutedEventArgs)

    public:
        ManipulationStartedRoutedEventArgs();
        ~ManipulationStartedRoutedEventArgs() override;

        // Properties.
        IFACEMETHOD(get_Container)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IUIElement** ppValue) override;
        IFACEMETHOD(get_Position)(_Out_ ABI::Windows::Foundation::Point* pValue) override;
        IFACEMETHOD(get_Handled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_Handled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_PointerDeviceType)(_Out_ ABI::Microsoft::UI::Input::PointerDeviceType* pValue) override;
        IFACEMETHOD(get_Cumulative)(_Out_ ABI::Microsoft::UI::Input::ManipulationDelta* pValue) override;

        // Methods.
        IFACEMETHOD(Complete)() override;

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;
        CEventArgs* CreateCorePeer() override;

    private:
        // Customized properties.
         _Check_return_ HRESULT get_CumulativeImpl(_Out_ ABI::Microsoft::UI::Input::ManipulationDelta* pValue); 

        // Customized methods.

        // Fields.
    };
}


namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) ManipulationStartedRoutedEventArgsFactory:
       public ctl::AggregableActivationFactory<DirectUI::ManipulationStartedRoutedEventArgs>
        , public ABI::Microsoft::UI::Xaml::Input::IManipulationStartedRoutedEventArgsFactory
    {
        BEGIN_INTERFACE_MAP(ManipulationStartedRoutedEventArgsFactory, ctl::AggregableActivationFactory<DirectUI::ManipulationStartedRoutedEventArgs>)
            INTERFACE_ENTRY(ManipulationStartedRoutedEventArgsFactory, ABI::Microsoft::UI::Xaml::Input::IManipulationStartedRoutedEventArgsFactory)
        END_INTERFACE_MAP(ManipulationStartedRoutedEventArgsFactory, ctl::AggregableActivationFactory<DirectUI::ManipulationStartedRoutedEventArgs>)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Input::IManipulationStartedRoutedEventArgs** ppInstance);

        // Static properties.

        // Dependency properties.

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;



    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
