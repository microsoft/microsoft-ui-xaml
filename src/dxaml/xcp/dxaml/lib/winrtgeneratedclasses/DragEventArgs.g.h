// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "RoutedEventArgs.g.h"
#include "DragUIOverride.g.h"
#include "DragOperationDeferral.g.h"
#include "UIElement.g.h"

#define __DragEventArgs_GUID "9c6b4e13-b6b8-45f9-8a1b-250371c0aeae"

namespace DirectUI
{
    class DragEventArgs;

    class __declspec(novtable) DragEventArgsGenerated :
        public ABI::Microsoft::UI::Xaml::IDragEventArgs,
        public DirectUI::RoutedEventArgs
    {
        friend class DirectUI::DragEventArgs;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.DragEventArgs");

        BEGIN_INTERFACE_MAP(DragEventArgsGenerated, DirectUI::RoutedEventArgs)
            INTERFACE_ENTRY(DragEventArgsGenerated, ABI::Microsoft::UI::Xaml::IDragEventArgs)
        END_INTERFACE_MAP(DragEventArgsGenerated, DirectUI::RoutedEventArgs)

    public:
        DragEventArgsGenerated();
        ~DragEventArgsGenerated() override;

        // Properties.
        IFACEMETHOD(get_Handled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_Handled)(_In_ BOOLEAN value) override;
        _Check_return_ HRESULT get_FilePaths(_Out_ HSTRING* pValue);
        _Check_return_ HRESULT put_FilePaths(_In_opt_ HSTRING value);
        _Check_return_ HRESULT get_AllowDataAccess(_Out_ BOOLEAN* pValue);
        _Check_return_ HRESULT put_AllowDataAccess(_In_ BOOLEAN value);
        IFACEMETHOD(get_Data)(_Outptr_result_maybenull_ ABI::Windows::ApplicationModel::DataTransfer::IDataPackage** ppValue) override;
        IFACEMETHOD(put_Data)(_In_opt_ ABI::Windows::ApplicationModel::DataTransfer::IDataPackage* pValue) override;
        IFACEMETHOD(get_DataView)(_Outptr_result_maybenull_ ABI::Windows::ApplicationModel::DataTransfer::IDataPackageView** ppValue) override;
        IFACEMETHOD(get_DragUIOverride)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDragUIOverride** ppValue) override;
        IFACEMETHOD(get_Modifiers)(_Out_ ABI::Windows::ApplicationModel::DataTransfer::DragDrop::DragDropModifiers* pValue) override;
        IFACEMETHOD(get_AcceptedOperation)(_Out_ ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation* pValue) override;
        IFACEMETHOD(put_AcceptedOperation)(_In_ ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation value) override;
        IFACEMETHOD(get_AllowedOperations)(_Out_ ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation* pValue) override;
        _Check_return_ HRESULT put_AllowedOperations(_In_ ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation value);

        // Methods.
        IFACEMETHOD(GetDeferral)(_Outptr_ ABI::Microsoft::UI::Xaml::IDragOperationDeferral** ppReturnValue) override;
        IFACEMETHOD(GetPosition)(_In_opt_ ABI::Microsoft::UI::Xaml::IUIElement* pRelativeTo, _Out_ ABI::Windows::Foundation::Point* pReturnValue) override;

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
        Microsoft::WRL::Wrappers::HString m_filePaths;
    };
}

#include "DragEventArgs_Partial.h"

