// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "Matrix3D.g.h"
#include <FeatureFlags.h>
#if WI_IS_FEATURE_PRESENT(Feature_Xaml2018) 
#define FEATURE_XAML2018_OVERRIDE override
#else
#define FEATURE_XAML2018_OVERRIDE
#endif
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks) 
#define FEATURE_XAMLMOTIONSYSTEMHOLDBACKS_OVERRIDE override
#else
#define FEATURE_XAMLMOTIONSYSTEMHOLDBACKS_OVERRIDE
#endif
#define __UIElement_GUID "c47ebf2e-f068-42c2-996a-be695fa71839"

#pragma region forwarders
namespace ctl
{
    template<typename impl_type>
    class interface_forwarder< ABI::Microsoft::UI::Xaml::IUIElementFeature_Xaml2018, impl_type> final
        : public ctl::iinspectable_forwarder_base< ABI::Microsoft::UI::Xaml::IUIElementFeature_Xaml2018, impl_type>
    {
        impl_type* This() { return this->This_helper<impl_type>(); }
        IFACEMETHOD(get_Interactions)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::InteractionBase*>** ppValue) override { return This()->get_Interactions(ppValue); }
    };
    template<typename impl_type>
    class interface_forwarder< ABI::Microsoft::UI::Xaml::IUIElementFeature_XamlMotionSystemHoldbacks, impl_type> final
        : public ctl::iinspectable_forwarder_base< ABI::Microsoft::UI::Xaml::IUIElementFeature_XamlMotionSystemHoldbacks, impl_type>
    {
        impl_type* This() { return this->This_helper<impl_type>(); }
        IFACEMETHOD(add_CenterPointChanged)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override { return This()->add_CenterPointChanged(pValue, pToken); }
        IFACEMETHOD(remove_CenterPointChanged)(_In_ EventRegistrationToken token) override { return This()->remove_CenterPointChanged(token); }
        IFACEMETHOD(add_Hidden)(_In_ ABI::Windows::Foundation::IEventHandler<IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override { return This()->add_Hidden(pValue, pToken); }
        IFACEMETHOD(remove_Hidden)(_In_ EventRegistrationToken token) override { return This()->remove_Hidden(token); }
        IFACEMETHOD(add_RotationAxisChanged)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override { return This()->add_RotationAxisChanged(pValue, pToken); }
        IFACEMETHOD(remove_RotationAxisChanged)(_In_ EventRegistrationToken token) override { return This()->remove_RotationAxisChanged(token); }
        IFACEMETHOD(add_RotationChanged)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override { return This()->add_RotationChanged(pValue, pToken); }
        IFACEMETHOD(remove_RotationChanged)(_In_ EventRegistrationToken token) override { return This()->remove_RotationChanged(token); }
        IFACEMETHOD(add_ScaleChanged)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override { return This()->add_ScaleChanged(pValue, pToken); }
        IFACEMETHOD(remove_ScaleChanged)(_In_ EventRegistrationToken token) override { return This()->remove_ScaleChanged(token); }
        IFACEMETHOD(add_Shown)(_In_ ABI::Windows::Foundation::IEventHandler<IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override { return This()->add_Shown(pValue, pToken); }
        IFACEMETHOD(remove_Shown)(_In_ EventRegistrationToken token) override { return This()->remove_Shown(token); }
        IFACEMETHOD(add_TransformMatrixChanged)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override { return This()->add_TransformMatrixChanged(pValue, pToken); }
        IFACEMETHOD(remove_TransformMatrixChanged)(_In_ EventRegistrationToken token) override { return This()->remove_TransformMatrixChanged(token); }
        IFACEMETHOD(add_TranslationChanged)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override { return This()->add_TranslationChanged(pValue, pToken); }
        IFACEMETHOD(remove_TranslationChanged)(_In_ EventRegistrationToken token) override { return This()->remove_TranslationChanged(token); }
    };
}
#pragma endregion

namespace DirectUI
{
    class UIElement;
    class AutomationPeer;
    class BringIntoViewOptions;
    class BringIntoViewRequestedEventArgs;
    class CacheMode;
    class FlyoutBase;
    class GeneralTransform;
    class KeyboardAcceleratorInvokedEventArgs;
    class Pointer;
    class ProcessKeyboardAcceleratorEventArgs;
    class Projection;
    class RectangleGeometry;
    class RoutedEvent;
    class ScalarTransition;
    class Shadow;
    class Transform;
    class Transform3D;
    class TransitionCollection;
    class TransitionTarget;
    class UIElementCollection;
    class Vector3Transition;
    class XamlRoot;

    class __declspec(novtable) UIElementGenerated:
        public DirectUI::DependencyObject
        , public ABI::Microsoft::UI::Xaml::IUIElement
        , public ABI::Microsoft::UI::Xaml::IUIElementProtected
        , public ABI::Microsoft::UI::Xaml::IUIElementOverrides
        , public ABI::Microsoft::UI::Composition::IAnimationObject
        , public ABI::Microsoft::UI::Composition::IVisualElement
        , public ABI::Microsoft::UI::Composition::IVisualElement2
        , public ABI::Microsoft::UI::Xaml::IUIElementPrivate
#if WI_IS_FEATURE_PRESENT(Feature_Xaml2018)
        , public ctl::forwarder_holder< ABI::Microsoft::UI::Xaml::IUIElementFeature_Xaml2018, UIElementGenerated >
#endif
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        , public ctl::forwarder_holder< ABI::Microsoft::UI::Xaml::IUIElementFeature_XamlMotionSystemHoldbacks, UIElementGenerated >
#endif
    {
        friend class DirectUI::UIElement;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.UIElement");

        BEGIN_INTERFACE_MAP(UIElementGenerated, DirectUI::DependencyObject)
            INTERFACE_ENTRY(UIElementGenerated, ABI::Microsoft::UI::Xaml::IUIElement)
            INTERFACE_ENTRY(UIElementGenerated, ABI::Microsoft::UI::Xaml::IUIElementProtected)
            INTERFACE_ENTRY(UIElementGenerated, ABI::Microsoft::UI::Xaml::IUIElementOverrides)
            INTERFACE_ENTRY(UIElementGenerated, ABI::Microsoft::UI::Composition::IAnimationObject)
            INTERFACE_ENTRY(UIElementGenerated, ABI::Microsoft::UI::Composition::IVisualElement)
            INTERFACE_ENTRY(UIElementGenerated, ABI::Microsoft::UI::Composition::IVisualElement2)
            INTERFACE_ENTRY(UIElementGenerated, ABI::Microsoft::UI::Xaml::IUIElementPrivate)
#if WI_IS_FEATURE_PRESENT(Feature_Xaml2018)
            INTERFACE_ENTRY(UIElementGenerated, ABI::Microsoft::UI::Xaml::IUIElementFeature_Xaml2018)
#endif
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
            INTERFACE_ENTRY(UIElementGenerated, ABI::Microsoft::UI::Xaml::IUIElementFeature_XamlMotionSystemHoldbacks)
#endif
        END_INTERFACE_MAP(UIElementGenerated, DirectUI::DependencyObject)

    public:
        UIElementGenerated();
        ~UIElementGenerated() override;

        // Event source typedefs.
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IKeyEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs> KeyUpEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IKeyEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs> KeyDownEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::IRoutedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::IRoutedEventArgs> GotFocusEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::IRoutedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::IRoutedEventArgs> LostFocusEventSourceType;
        typedef CRoutedEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::DragStartingEventArgs*>, ABI::Microsoft::UI::Xaml::IUIElement, ABI::Microsoft::UI::Xaml::IDragStartingEventArgs> DragStartingEventSourceType;
        typedef CRoutedEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::DropCompletedEventArgs*>, ABI::Microsoft::UI::Xaml::IUIElement, ABI::Microsoft::UI::Xaml::IDropCompletedEventArgs> DropCompletedEventSourceType;
        typedef CRoutedEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::CharacterReceivedRoutedEventArgs*>, ABI::Microsoft::UI::Xaml::IUIElement, ABI::Microsoft::UI::Xaml::Input::ICharacterReceivedRoutedEventArgs> CharacterReceivedEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::IDragEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::IDragEventArgs> DragEnterEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::IDragEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::IDragEventArgs> DragLeaveEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::IDragEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::IDragEventArgs> DragOverEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::IDragEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::IDragEventArgs> DropEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs> PointerPressedEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs> PointerMovedEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs> PointerReleasedEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs> PointerEnteredEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs> PointerExitedEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs> PointerCaptureLostEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs> PointerCanceledEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs> PointerWheelChangedEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::ITappedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::ITappedRoutedEventArgs> TappedEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IDoubleTappedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IDoubleTappedRoutedEventArgs> DoubleTappedEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IHoldingEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IHoldingRoutedEventArgs> HoldingEventSourceType;
        typedef CRoutedEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::ContextRequestedEventArgs*>, ABI::Microsoft::UI::Xaml::IUIElement, ABI::Microsoft::UI::Xaml::Input::IContextRequestedEventArgs> ContextRequestedEventSourceType;
        typedef CRoutedEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::RoutedEventArgs*>, ABI::Microsoft::UI::Xaml::IUIElement, ABI::Microsoft::UI::Xaml::IRoutedEventArgs> ContextCanceledEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IRightTappedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IRightTappedRoutedEventArgs> RightTappedEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IManipulationStartingEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IManipulationStartingRoutedEventArgs> ManipulationStartingEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IManipulationInertiaStartingEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IManipulationInertiaStartingRoutedEventArgs> ManipulationInertiaStartingEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IManipulationStartedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IManipulationStartedRoutedEventArgs> ManipulationStartedEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IManipulationDeltaEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IManipulationDeltaRoutedEventArgs> ManipulationDeltaEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IManipulationCompletedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IManipulationCompletedRoutedEventArgs> ManipulationCompletedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::AccessKeyDisplayRequestedEventArgs*>, ABI::Microsoft::UI::Xaml::IUIElement, ABI::Microsoft::UI::Xaml::Input::IAccessKeyDisplayRequestedEventArgs> AccessKeyDisplayRequestedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::AccessKeyDisplayDismissedEventArgs*>, ABI::Microsoft::UI::Xaml::IUIElement, ABI::Microsoft::UI::Xaml::Input::IAccessKeyDisplayDismissedEventArgs> AccessKeyDisplayDismissedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::AccessKeyInvokedEventArgs*>, ABI::Microsoft::UI::Xaml::IUIElement, ABI::Microsoft::UI::Xaml::Input::IAccessKeyInvokedEventArgs> AccessKeyInvokedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::ProcessKeyboardAcceleratorEventArgs*>, ABI::Microsoft::UI::Xaml::IUIElement, ABI::Microsoft::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs> ProcessKeyboardAcceleratorsEventSourceType;
        typedef CRoutedEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::GettingFocusEventArgs*>, ABI::Microsoft::UI::Xaml::IUIElement, ABI::Microsoft::UI::Xaml::Input::IGettingFocusEventArgs> GettingFocusEventSourceType;
        typedef CRoutedEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::LosingFocusEventArgs*>, ABI::Microsoft::UI::Xaml::IUIElement, ABI::Microsoft::UI::Xaml::Input::ILosingFocusEventArgs> LosingFocusEventSourceType;
        typedef CRoutedEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::NoFocusCandidateFoundEventArgs*>, ABI::Microsoft::UI::Xaml::IUIElement, ABI::Microsoft::UI::Xaml::Input::INoFocusCandidateFoundEventArgs> NoFocusCandidateFoundEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IKeyEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs> PreviewKeyDownEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Input::IKeyEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs> PreviewKeyUpEventSourceType;
        typedef CRoutedEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::BringIntoViewRequestedEventArgs*>, ABI::Microsoft::UI::Xaml::IUIElement, ABI::Microsoft::UI::Xaml::IBringIntoViewRequestedEventArgs> BringIntoViewRequestedEventSourceType;
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IUIElement, IInspectable> TranslationChangedEventSourceType;
#endif
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IUIElement, IInspectable> AnimatedTranslationChangedEventSourceType;
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IUIElement, IInspectable> RotationChangedEventSourceType;
#endif
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IUIElement, IInspectable> AnimatedRotationChangedEventSourceType;
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IUIElement, IInspectable> ScaleChangedEventSourceType;
#endif
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IUIElement, IInspectable> AnimatedScaleChangedEventSourceType;
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IUIElement, IInspectable> TransformMatrixChangedEventSourceType;
#endif
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IUIElement, IInspectable> AnimatedTransformMatrixChangedEventSourceType;
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IUIElement, IInspectable> CenterPointChangedEventSourceType;
#endif
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IUIElement, IInspectable> AnimatedCenterPointChangedEventSourceType;
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IUIElement, IInspectable> RotationAxisChangedEventSourceType;
#endif
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IUIElement, IInspectable> AnimatedRotationAxisChangedEventSourceType;
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        typedef CEventSource<ABI::Windows::Foundation::IEventHandler<IInspectable*>, IInspectable, IInspectable> ShownEventSourceType;
#endif
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        typedef CEventSource<ABI::Windows::Foundation::IEventHandler<IInspectable*>, IInspectable, IInspectable> HiddenEventSourceType;
#endif

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::UIElement;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::UIElement;
        }

        // Properties.
        IFACEMETHOD(get_AccessKey)(_Out_ HSTRING* pValue) override;
        IFACEMETHOD(put_AccessKey)(_In_opt_ HSTRING value) override;
        IFACEMETHOD(get_AccessKeyScopeOwner)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_AccessKeyScopeOwner)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_ActualOffset)(_Out_ ABI::Windows::Foundation::Numerics::Vector3* pValue) override;
        IFACEMETHOD(get_ActualSize)(_Out_ ABI::Windows::Foundation::Numerics::Vector2* pValue) override;
        IFACEMETHOD(get_AllowDrop)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_AllowDrop)(_In_ BOOLEAN value) override;
        _Check_return_ HRESULT get_AnimatedCenterPoint(_Out_ ABI::Windows::Foundation::Numerics::Vector3* pValue);
        _Check_return_ HRESULT put_AnimatedCenterPoint(_In_ ABI::Windows::Foundation::Numerics::Vector3 value);
        _Check_return_ HRESULT get_AnimatedRotation(_Out_ FLOAT* pValue);
        _Check_return_ HRESULT put_AnimatedRotation(_In_ FLOAT value);
        _Check_return_ HRESULT get_AnimatedRotationAxis(_Out_ ABI::Windows::Foundation::Numerics::Vector3* pValue);
        _Check_return_ HRESULT put_AnimatedRotationAxis(_In_ ABI::Windows::Foundation::Numerics::Vector3 value);
        _Check_return_ HRESULT get_AnimatedScale(_Out_ ABI::Windows::Foundation::Numerics::Vector3* pValue);
        _Check_return_ HRESULT put_AnimatedScale(_In_ ABI::Windows::Foundation::Numerics::Vector3 value);
        _Check_return_ HRESULT get_AnimatedTransformMatrix(_Out_ ABI::Windows::Foundation::Numerics::Matrix4x4* pValue);
        _Check_return_ HRESULT put_AnimatedTransformMatrix(_In_ ABI::Windows::Foundation::Numerics::Matrix4x4 value);
        _Check_return_ HRESULT get_AnimatedTranslation(_Out_ ABI::Windows::Foundation::Numerics::Vector3* pValue);
        _Check_return_ HRESULT put_AnimatedTranslation(_In_ ABI::Windows::Foundation::Numerics::Vector3 value);
        IFACEMETHOD(get_CacheMode)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::ICacheMode** ppValue) override;
        IFACEMETHOD(put_CacheMode)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::ICacheMode* pValue) override;
        IFACEMETHOD(get_CanBeScrollAnchor)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_CanBeScrollAnchor)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_CanDrag)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_CanDrag)(_In_ BOOLEAN value) override;
        _Check_return_ HRESULT get_CanvasOffset(_Outptr_result_maybenull_ IInspectable** ppValue);
        _Check_return_ HRESULT put_CanvasOffset(_In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_CenterPoint)(_Out_ ABI::Windows::Foundation::Numerics::Vector3* pValue) override;
        IFACEMETHOD(put_CenterPoint)(_In_ ABI::Windows::Foundation::Numerics::Vector3 value) override;
        _Check_return_ HRESULT get_ChildrenInternal(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::UIElement*>** ppValue);
        _Check_return_ HRESULT put_ChildrenInternal(_In_opt_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::UIElement*>* pValue);
        IFACEMETHOD(get_Clip)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IRectangleGeometry** ppValue) override;
        IFACEMETHOD(put_Clip)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IRectangleGeometry* pValue) override;
        IFACEMETHOD(get_CompositeMode)(_Out_ ABI::Microsoft::UI::Xaml::Media::ElementCompositeMode* pValue) override;
        IFACEMETHOD(put_CompositeMode)(_In_ ABI::Microsoft::UI::Xaml::Media::ElementCompositeMode value) override;
        IFACEMETHOD(get_ContextFlyout)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Controls::Primitives::IFlyoutBase** ppValue) override;
        IFACEMETHOD(put_ContextFlyout)(_In_opt_ ABI::Microsoft::UI::Xaml::Controls::Primitives::IFlyoutBase* pValue) override;
        IFACEMETHOD(get_DesiredSize)(_Out_ ABI::Windows::Foundation::Size* pValue) override;
        _Check_return_ HRESULT get_DirectManipulationContainer(_Outptr_result_maybenull_ IInspectable** ppValue);
        _Check_return_ HRESULT put_DirectManipulationContainer(_In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_ExitDisplayModeOnAccessKeyInvoked)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_ExitDisplayModeOnAccessKeyInvoked)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_FocusState)(_Out_ ABI::Microsoft::UI::Xaml::FocusState* pValue) override;
        _Check_return_ HRESULT get_GlobalScaleFactor(_Out_ FLOAT* pValue);
        _Check_return_ HRESULT put_GlobalScaleFactor(_In_ FLOAT value);
        _Check_return_ HRESULT get_HandOffVisualClip(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IRectangleGeometry** ppValue);
        _Check_return_ HRESULT put_HandOffVisualClip(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IRectangleGeometry* pValue);
        _Check_return_ HRESULT get_HandOffVisualTransform(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::ITransform** ppValue);
        _Check_return_ HRESULT put_HandOffVisualTransform(_In_opt_ ABI::Microsoft::UI::Xaml::Media::ITransform* pValue);
        _Check_return_ HRESULT get_HandOffVisualTransformMatrix3D(_Out_ ABI::Microsoft::UI::Xaml::Media::Media3D::Matrix3D* pValue);
        _Check_return_ HRESULT put_HandOffVisualTransformMatrix3D(_In_ ABI::Microsoft::UI::Xaml::Media::Media3D::Matrix3D value);
        IFACEMETHOD(get_HighContrastAdjustment)(_Out_ ABI::Microsoft::UI::Xaml::ElementHighContrastAdjustment* pValue) override;
        IFACEMETHOD(put_HighContrastAdjustment)(_In_ ABI::Microsoft::UI::Xaml::ElementHighContrastAdjustment value) override;
        _Check_return_ HRESULT STDMETHODCALLTYPE get_Interactions(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::InteractionBase*>** ppValue);
        IFACEMETHOD(get_IsAccessKeyScope)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsAccessKeyScope)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsDoubleTapEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsDoubleTapEnabled)(_In_ BOOLEAN value) override;
        _Check_return_ HRESULT get_IsGamepadFocusCandidate(_Out_ BOOLEAN* pValue);
        _Check_return_ HRESULT put_IsGamepadFocusCandidate(_In_ BOOLEAN value);
        IFACEMETHOD(get_IsHitTestVisible)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsHitTestVisible)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsHoldingEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsHoldingEnabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsRightTapEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsRightTapEnabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsTabStop)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsTabStop)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsTapEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsTapEnabled)(_In_ BOOLEAN value) override;
        _Check_return_ HRESULT get_KeepAliveCount(_Out_ INT* pValue);
        _Check_return_ HRESULT put_KeepAliveCount(_In_ INT value);
        IFACEMETHOD(get_KeyboardAcceleratorPlacementMode)(_Out_ ABI::Microsoft::UI::Xaml::Input::KeyboardAcceleratorPlacementMode* pValue) override;
        IFACEMETHOD(put_KeyboardAcceleratorPlacementMode)(_In_ ABI::Microsoft::UI::Xaml::Input::KeyboardAcceleratorPlacementMode value) override;
        IFACEMETHOD(get_KeyboardAcceleratorPlacementTarget)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_KeyboardAcceleratorPlacementTarget)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_KeyboardAccelerators)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Input::KeyboardAccelerator*>** ppValue) override;
        IFACEMETHOD(get_KeyTipHorizontalOffset)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_KeyTipHorizontalOffset)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_KeyTipPlacementMode)(_Out_ ABI::Microsoft::UI::Xaml::Input::KeyTipPlacementMode* pValue) override;
        IFACEMETHOD(put_KeyTipPlacementMode)(_In_ ABI::Microsoft::UI::Xaml::Input::KeyTipPlacementMode value) override;
        IFACEMETHOD(get_KeyTipTarget)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_KeyTipTarget)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_KeyTipVerticalOffset)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_KeyTipVerticalOffset)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_Lights)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::XamlLight*>** ppValue) override;
        IFACEMETHOD(get_ManipulationMode)(_Out_ ABI::Microsoft::UI::Xaml::Input::ManipulationModes* pValue) override;
        IFACEMETHOD(put_ManipulationMode)(_In_ ABI::Microsoft::UI::Xaml::Input::ManipulationModes value) override;
        _Check_return_ HRESULT get_OffsetXAnimation(_Outptr_result_maybenull_ IInspectable** ppValue);
        _Check_return_ HRESULT put_OffsetXAnimation(_In_opt_ IInspectable* pValue);
        _Check_return_ HRESULT get_OffsetYAnimation(_Outptr_result_maybenull_ IInspectable** ppValue);
        _Check_return_ HRESULT put_OffsetYAnimation(_In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_Opacity)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_Opacity)(_In_ DOUBLE value) override;
        _Check_return_ HRESULT get_OpacityAnimation(_Outptr_result_maybenull_ IInspectable** ppValue);
        _Check_return_ HRESULT put_OpacityAnimation(_In_opt_ IInspectable* pValue);
        _Check_return_ HRESULT get_OpacityExpression(_Outptr_result_maybenull_ IInspectable** ppValue);
        _Check_return_ HRESULT put_OpacityExpression(_In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_OpacityTransition)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IScalarTransition** ppValue) override;
        IFACEMETHOD(put_OpacityTransition)(_In_opt_ ABI::Microsoft::UI::Xaml::IScalarTransition* pValue) override;
        IFACEMETHOD(get_PointerCaptures)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVectorView<ABI::Microsoft::UI::Xaml::Input::Pointer*>** ppValue) override;
        _Check_return_ HRESULT put_PointerCaptures(_In_opt_ ABI::Windows::Foundation::Collections::IVectorView<ABI::Microsoft::UI::Xaml::Input::Pointer*>* pValue);
        IFACEMETHOD(get_Projection)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IProjection** ppValue) override;
        IFACEMETHOD(put_Projection)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IProjection* pValue) override;
        IFACEMETHOD(get_ProtectedCursor)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Input::IInputCursor** ppValue) override;
        IFACEMETHOD(put_ProtectedCursor)(_In_opt_ ABI::Microsoft::UI::Input::IInputCursor* pValue) override;
        IFACEMETHOD(get_RasterizationScale)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_RasterizationScale)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_RenderSize)(_Out_ ABI::Windows::Foundation::Size* pValue) override;
        IFACEMETHOD(get_RenderTransform)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::ITransform** ppValue) override;
        IFACEMETHOD(put_RenderTransform)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::ITransform* pValue) override;
        IFACEMETHOD(get_RenderTransformOrigin)(_Out_ ABI::Windows::Foundation::Point* pValue) override;
        IFACEMETHOD(put_RenderTransformOrigin)(_In_ ABI::Windows::Foundation::Point value) override;
        IFACEMETHOD(get_Rotation)(_Out_ FLOAT* pValue) override;
        IFACEMETHOD(put_Rotation)(_In_ FLOAT value) override;
        IFACEMETHOD(get_RotationAxis)(_Out_ ABI::Windows::Foundation::Numerics::Vector3* pValue) override;
        IFACEMETHOD(put_RotationAxis)(_In_ ABI::Windows::Foundation::Numerics::Vector3 value) override;
        IFACEMETHOD(get_RotationTransition)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IScalarTransition** ppValue) override;
        IFACEMETHOD(put_RotationTransition)(_In_opt_ ABI::Microsoft::UI::Xaml::IScalarTransition* pValue) override;
        IFACEMETHOD(get_Scale)(_Out_ ABI::Windows::Foundation::Numerics::Vector3* pValue) override;
        IFACEMETHOD(put_Scale)(_In_ ABI::Windows::Foundation::Numerics::Vector3 value) override;
        IFACEMETHOD(get_ScaleTransition)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IVector3Transition** ppValue) override;
        IFACEMETHOD(put_ScaleTransition)(_In_opt_ ABI::Microsoft::UI::Xaml::IVector3Transition* pValue) override;
        IFACEMETHOD(get_Shadow)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IShadow** ppValue) override;
        IFACEMETHOD(put_Shadow)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IShadow* pValue) override;
        IFACEMETHOD(get_TabFocusNavigation)(_Out_ ABI::Microsoft::UI::Xaml::Input::KeyboardNavigationMode* pValue) override;
        IFACEMETHOD(put_TabFocusNavigation)(_In_ ABI::Microsoft::UI::Xaml::Input::KeyboardNavigationMode value) override;
        IFACEMETHOD(get_TabIndex)(_Out_ INT* pValue) override;
        IFACEMETHOD(put_TabIndex)(_In_ INT value) override;
        _Check_return_ HRESULT get_ThemeShadowReceiverCount(_Out_ INT* pValue);
        _Check_return_ HRESULT put_ThemeShadowReceiverCount(_In_ INT value);
        IFACEMETHOD(get_Transform3D)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::Media3D::ITransform3D** ppValue) override;
        IFACEMETHOD(put_Transform3D)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::Media3D::ITransform3D* pValue) override;
        IFACEMETHOD(get_TransformMatrix)(_Out_ ABI::Windows::Foundation::Numerics::Matrix4x4* pValue) override;
        IFACEMETHOD(put_TransformMatrix)(_In_ ABI::Windows::Foundation::Numerics::Matrix4x4 value) override;
        IFACEMETHOD(get_Transitions)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Transition*>** ppValue) override;
        IFACEMETHOD(put_Transitions)(_In_opt_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Transition*>* pValue) override;
        _Check_return_ HRESULT get_TransitionTarget(_Outptr_result_maybenull_ DirectUI::TransitionTarget** ppValue);
        _Check_return_ HRESULT put_TransitionTarget(_In_opt_ DirectUI::TransitionTarget* pValue);
        IFACEMETHOD(get_Translation)(_Out_ ABI::Windows::Foundation::Numerics::Vector3* pValue) override;
        IFACEMETHOD(put_Translation)(_In_ ABI::Windows::Foundation::Numerics::Vector3 value) override;
        IFACEMETHOD(get_TranslationTransition)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IVector3Transition** ppValue) override;
        IFACEMETHOD(put_TranslationTransition)(_In_opt_ ABI::Microsoft::UI::Xaml::IVector3Transition* pValue) override;
        IFACEMETHOD(get_UseLayoutRounding)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_UseLayoutRounding)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_UseSystemFocusVisuals)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_UseSystemFocusVisuals)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_Visibility)(_Out_ ABI::Microsoft::UI::Xaml::Visibility* pValue) override;
        IFACEMETHOD(put_Visibility)(_In_ ABI::Microsoft::UI::Xaml::Visibility value) override;
        IFACEMETHOD(get_XamlRoot)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IXamlRoot** ppValue) override;
        IFACEMETHOD(put_XamlRoot)(_In_opt_ ABI::Microsoft::UI::Xaml::IXamlRoot* pValue) override;
        IFACEMETHOD(get_XYFocusDown)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_XYFocusDown)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_XYFocusDownNavigationStrategy)(_Out_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy* pValue) override;
        IFACEMETHOD(put_XYFocusDownNavigationStrategy)(_In_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy value) override;
        IFACEMETHOD(get_XYFocusKeyboardNavigation)(_Out_ ABI::Microsoft::UI::Xaml::Input::XYFocusKeyboardNavigationMode* pValue) override;
        IFACEMETHOD(put_XYFocusKeyboardNavigation)(_In_ ABI::Microsoft::UI::Xaml::Input::XYFocusKeyboardNavigationMode value) override;
        IFACEMETHOD(get_XYFocusLeft)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_XYFocusLeft)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_XYFocusLeftNavigationStrategy)(_Out_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy* pValue) override;
        IFACEMETHOD(put_XYFocusLeftNavigationStrategy)(_In_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy value) override;
        IFACEMETHOD(get_XYFocusRight)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_XYFocusRight)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_XYFocusRightNavigationStrategy)(_Out_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy* pValue) override;
        IFACEMETHOD(put_XYFocusRightNavigationStrategy)(_In_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy value) override;
        IFACEMETHOD(get_XYFocusUp)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(put_XYFocusUp)(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue) override;
        IFACEMETHOD(get_XYFocusUpNavigationStrategy)(_Out_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy* pValue) override;
        IFACEMETHOD(put_XYFocusUpNavigationStrategy)(_In_ ABI::Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy value) override;

        // Events.
        _Check_return_ HRESULT GetAccessKeyDisplayDismissedEventSourceNoRef(_Outptr_ AccessKeyDisplayDismissedEventSourceType** ppEventSource);
        IFACEMETHOD(add_AccessKeyDisplayDismissed)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::AccessKeyDisplayDismissedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_AccessKeyDisplayDismissed)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetAccessKeyDisplayRequestedEventSourceNoRef(_Outptr_ AccessKeyDisplayRequestedEventSourceType** ppEventSource);
        IFACEMETHOD(add_AccessKeyDisplayRequested)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::AccessKeyDisplayRequestedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_AccessKeyDisplayRequested)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetAccessKeyInvokedEventSourceNoRef(_Outptr_ AccessKeyInvokedEventSourceType** ppEventSource);
        IFACEMETHOD(add_AccessKeyInvoked)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::AccessKeyInvokedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_AccessKeyInvoked)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetAnimatedCenterPointChangedEventSourceNoRef(_Outptr_ AnimatedCenterPointChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT add_AnimatedCenterPointChanged(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT remove_AnimatedCenterPointChanged(_In_ EventRegistrationToken token);
        _Check_return_ HRESULT GetAnimatedRotationAxisChangedEventSourceNoRef(_Outptr_ AnimatedRotationAxisChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT add_AnimatedRotationAxisChanged(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT remove_AnimatedRotationAxisChanged(_In_ EventRegistrationToken token);
        _Check_return_ HRESULT GetAnimatedRotationChangedEventSourceNoRef(_Outptr_ AnimatedRotationChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT add_AnimatedRotationChanged(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT remove_AnimatedRotationChanged(_In_ EventRegistrationToken token);
        _Check_return_ HRESULT GetAnimatedScaleChangedEventSourceNoRef(_Outptr_ AnimatedScaleChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT add_AnimatedScaleChanged(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT remove_AnimatedScaleChanged(_In_ EventRegistrationToken token);
        _Check_return_ HRESULT GetAnimatedTransformMatrixChangedEventSourceNoRef(_Outptr_ AnimatedTransformMatrixChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT add_AnimatedTransformMatrixChanged(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT remove_AnimatedTransformMatrixChanged(_In_ EventRegistrationToken token);
        _Check_return_ HRESULT GetAnimatedTranslationChangedEventSourceNoRef(_Outptr_ AnimatedTranslationChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT add_AnimatedTranslationChanged(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT remove_AnimatedTranslationChanged(_In_ EventRegistrationToken token);
        _Check_return_ HRESULT GetBringIntoViewRequestedEventSourceNoRef(_Outptr_ BringIntoViewRequestedEventSourceType** ppEventSource);
        IFACEMETHOD(add_BringIntoViewRequested)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::BringIntoViewRequestedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_BringIntoViewRequested)(_In_ EventRegistrationToken token) override;
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        _Check_return_ HRESULT GetCenterPointChangedEventSourceNoRef(_Outptr_ CenterPointChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT STDMETHODCALLTYPE add_CenterPointChanged(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT STDMETHODCALLTYPE remove_CenterPointChanged(_In_ EventRegistrationToken token);
#endif
        _Check_return_ HRESULT GetCharacterReceivedEventSourceNoRef(_Outptr_ CharacterReceivedEventSourceType** ppEventSource);
        IFACEMETHOD(add_CharacterReceived)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::CharacterReceivedRoutedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_CharacterReceived)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetContextCanceledEventSourceNoRef(_Outptr_ ContextCanceledEventSourceType** ppEventSource);
        IFACEMETHOD(add_ContextCanceled)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::RoutedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ContextCanceled)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetContextRequestedEventSourceNoRef(_Outptr_ ContextRequestedEventSourceType** ppEventSource);
        IFACEMETHOD(add_ContextRequested)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::ContextRequestedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ContextRequested)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetDoubleTappedEventSourceNoRef(_Outptr_ DoubleTappedEventSourceType** ppEventSource);
        IFACEMETHOD(add_DoubleTapped)(_In_ ABI::Microsoft::UI::Xaml::Input::IDoubleTappedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_DoubleTapped)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetDragEnterEventSourceNoRef(_Outptr_ DragEnterEventSourceType** ppEventSource);
        IFACEMETHOD(add_DragEnter)(_In_ ABI::Microsoft::UI::Xaml::IDragEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_DragEnter)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetDragLeaveEventSourceNoRef(_Outptr_ DragLeaveEventSourceType** ppEventSource);
        IFACEMETHOD(add_DragLeave)(_In_ ABI::Microsoft::UI::Xaml::IDragEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_DragLeave)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetDragOverEventSourceNoRef(_Outptr_ DragOverEventSourceType** ppEventSource);
        IFACEMETHOD(add_DragOver)(_In_ ABI::Microsoft::UI::Xaml::IDragEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_DragOver)(_In_ EventRegistrationToken token) override;
        virtual _Check_return_ HRESULT GetDragStartingEventSourceNoRef(_Outptr_ DragStartingEventSourceType** ppEventSource) = 0;
        IFACEMETHOD(add_DragStarting)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::DragStartingEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_DragStarting)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetDropEventSourceNoRef(_Outptr_ DropEventSourceType** ppEventSource);
        IFACEMETHOD(add_Drop)(_In_ ABI::Microsoft::UI::Xaml::IDragEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_Drop)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetDropCompletedEventSourceNoRef(_Outptr_ DropCompletedEventSourceType** ppEventSource);
        IFACEMETHOD(add_DropCompleted)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::DropCompletedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_DropCompleted)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetGettingFocusEventSourceNoRef(_Outptr_ GettingFocusEventSourceType** ppEventSource);
        IFACEMETHOD(add_GettingFocus)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::GettingFocusEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_GettingFocus)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetGotFocusEventSourceNoRef(_Outptr_ GotFocusEventSourceType** ppEventSource);
        IFACEMETHOD(add_GotFocus)(_In_ ABI::Microsoft::UI::Xaml::IRoutedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_GotFocus)(_In_ EventRegistrationToken token) override;
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        _Check_return_ HRESULT GetHiddenEventSourceNoRef(_Outptr_ HiddenEventSourceType** ppEventSource);
        virtual _Check_return_ HRESULT STDMETHODCALLTYPE add_Hidden(_In_ ABI::Windows::Foundation::IEventHandler<IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        virtual _Check_return_ HRESULT STDMETHODCALLTYPE remove_Hidden(_In_ EventRegistrationToken token);
#endif
        _Check_return_ HRESULT GetHoldingEventSourceNoRef(_Outptr_ HoldingEventSourceType** ppEventSource);
        IFACEMETHOD(add_Holding)(_In_ ABI::Microsoft::UI::Xaml::Input::IHoldingEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_Holding)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetKeyDownEventSourceNoRef(_Outptr_ KeyDownEventSourceType** ppEventSource);
        IFACEMETHOD(add_KeyDown)(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_KeyDown)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetKeyUpEventSourceNoRef(_Outptr_ KeyUpEventSourceType** ppEventSource);
        IFACEMETHOD(add_KeyUp)(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_KeyUp)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetLosingFocusEventSourceNoRef(_Outptr_ LosingFocusEventSourceType** ppEventSource);
        IFACEMETHOD(add_LosingFocus)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::LosingFocusEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_LosingFocus)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetLostFocusEventSourceNoRef(_Outptr_ LostFocusEventSourceType** ppEventSource);
        IFACEMETHOD(add_LostFocus)(_In_ ABI::Microsoft::UI::Xaml::IRoutedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_LostFocus)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetManipulationCompletedEventSourceNoRef(_Outptr_ ManipulationCompletedEventSourceType** ppEventSource);
        IFACEMETHOD(add_ManipulationCompleted)(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationCompletedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ManipulationCompleted)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetManipulationDeltaEventSourceNoRef(_Outptr_ ManipulationDeltaEventSourceType** ppEventSource);
        IFACEMETHOD(add_ManipulationDelta)(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationDeltaEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ManipulationDelta)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetManipulationInertiaStartingEventSourceNoRef(_Outptr_ ManipulationInertiaStartingEventSourceType** ppEventSource);
        IFACEMETHOD(add_ManipulationInertiaStarting)(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationInertiaStartingEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ManipulationInertiaStarting)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetManipulationStartedEventSourceNoRef(_Outptr_ ManipulationStartedEventSourceType** ppEventSource);
        IFACEMETHOD(add_ManipulationStarted)(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationStartedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ManipulationStarted)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetManipulationStartingEventSourceNoRef(_Outptr_ ManipulationStartingEventSourceType** ppEventSource);
        IFACEMETHOD(add_ManipulationStarting)(_In_ ABI::Microsoft::UI::Xaml::Input::IManipulationStartingEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ManipulationStarting)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetNoFocusCandidateFoundEventSourceNoRef(_Outptr_ NoFocusCandidateFoundEventSourceType** ppEventSource);
        IFACEMETHOD(add_NoFocusCandidateFound)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::NoFocusCandidateFoundEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_NoFocusCandidateFound)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetPointerCanceledEventSourceNoRef(_Outptr_ PointerCanceledEventSourceType** ppEventSource);
        IFACEMETHOD(add_PointerCanceled)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_PointerCanceled)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetPointerCaptureLostEventSourceNoRef(_Outptr_ PointerCaptureLostEventSourceType** ppEventSource);
        IFACEMETHOD(add_PointerCaptureLost)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_PointerCaptureLost)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetPointerEnteredEventSourceNoRef(_Outptr_ PointerEnteredEventSourceType** ppEventSource);
        IFACEMETHOD(add_PointerEntered)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_PointerEntered)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetPointerExitedEventSourceNoRef(_Outptr_ PointerExitedEventSourceType** ppEventSource);
        IFACEMETHOD(add_PointerExited)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_PointerExited)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetPointerMovedEventSourceNoRef(_Outptr_ PointerMovedEventSourceType** ppEventSource);
        IFACEMETHOD(add_PointerMoved)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_PointerMoved)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetPointerPressedEventSourceNoRef(_Outptr_ PointerPressedEventSourceType** ppEventSource);
        IFACEMETHOD(add_PointerPressed)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_PointerPressed)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetPointerReleasedEventSourceNoRef(_Outptr_ PointerReleasedEventSourceType** ppEventSource);
        IFACEMETHOD(add_PointerReleased)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_PointerReleased)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetPointerWheelChangedEventSourceNoRef(_Outptr_ PointerWheelChangedEventSourceType** ppEventSource);
        IFACEMETHOD(add_PointerWheelChanged)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointerEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_PointerWheelChanged)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetPreviewKeyDownEventSourceNoRef(_Outptr_ PreviewKeyDownEventSourceType** ppEventSource);
        IFACEMETHOD(add_PreviewKeyDown)(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_PreviewKeyDown)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetPreviewKeyUpEventSourceNoRef(_Outptr_ PreviewKeyUpEventSourceType** ppEventSource);
        IFACEMETHOD(add_PreviewKeyUp)(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_PreviewKeyUp)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetProcessKeyboardAcceleratorsEventSourceNoRef(_Outptr_ ProcessKeyboardAcceleratorsEventSourceType** ppEventSource);
        IFACEMETHOD(add_ProcessKeyboardAccelerators)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::Input::ProcessKeyboardAcceleratorEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ProcessKeyboardAccelerators)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetRightTappedEventSourceNoRef(_Outptr_ RightTappedEventSourceType** ppEventSource);
        IFACEMETHOD(add_RightTapped)(_In_ ABI::Microsoft::UI::Xaml::Input::IRightTappedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_RightTapped)(_In_ EventRegistrationToken token) override;
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        _Check_return_ HRESULT GetRotationAxisChangedEventSourceNoRef(_Outptr_ RotationAxisChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT STDMETHODCALLTYPE add_RotationAxisChanged(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT STDMETHODCALLTYPE remove_RotationAxisChanged(_In_ EventRegistrationToken token);
#endif
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        _Check_return_ HRESULT GetRotationChangedEventSourceNoRef(_Outptr_ RotationChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT STDMETHODCALLTYPE add_RotationChanged(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT STDMETHODCALLTYPE remove_RotationChanged(_In_ EventRegistrationToken token);
#endif
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        _Check_return_ HRESULT GetScaleChangedEventSourceNoRef(_Outptr_ ScaleChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT STDMETHODCALLTYPE add_ScaleChanged(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT STDMETHODCALLTYPE remove_ScaleChanged(_In_ EventRegistrationToken token);
#endif
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        _Check_return_ HRESULT GetShownEventSourceNoRef(_Outptr_ ShownEventSourceType** ppEventSource);
        virtual _Check_return_ HRESULT STDMETHODCALLTYPE add_Shown(_In_ ABI::Windows::Foundation::IEventHandler<IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        virtual _Check_return_ HRESULT STDMETHODCALLTYPE remove_Shown(_In_ EventRegistrationToken token);
#endif
        _Check_return_ HRESULT GetTappedEventSourceNoRef(_Outptr_ TappedEventSourceType** ppEventSource);
        IFACEMETHOD(add_Tapped)(_In_ ABI::Microsoft::UI::Xaml::Input::ITappedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_Tapped)(_In_ EventRegistrationToken token) override;
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        _Check_return_ HRESULT GetTransformMatrixChangedEventSourceNoRef(_Outptr_ TransformMatrixChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT STDMETHODCALLTYPE add_TransformMatrixChanged(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT STDMETHODCALLTYPE remove_TransformMatrixChanged(_In_ EventRegistrationToken token);
#endif
#if WI_IS_FEATURE_PRESENT(Feature_XamlMotionSystemHoldbacks)
        _Check_return_ HRESULT GetTranslationChangedEventSourceNoRef(_Outptr_ TranslationChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT STDMETHODCALLTYPE add_TranslationChanged(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::UIElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT STDMETHODCALLTYPE remove_TranslationChanged(_In_ EventRegistrationToken token);
#endif

        // Methods.
        IFACEMETHOD(AddHandler)(_In_ ABI::Microsoft::UI::Xaml::IRoutedEvent* pRoutedEvent, _In_ IInspectable* pHandler, _In_ BOOLEAN handledEventsToo) override;
        IFACEMETHOD(Arrange)(_In_ ABI::Windows::Foundation::Rect finalRect) override;
        IFACEMETHOD(CancelDirectManipulations)(_Out_ BOOLEAN* pReturnValue) override;
        _Check_return_ HRESULT CaptureMouse(_Out_ BOOLEAN* pReturnValue);
        IFACEMETHOD(CapturePointer)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointer* pValue, _Out_ BOOLEAN* pReturnValue) override;
        IFACEMETHOD(FindSubElementsForTouchTargeting)(_In_ ABI::Windows::Foundation::Point point, _In_ ABI::Windows::Foundation::Rect boundingRect, _Outptr_ ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Foundation::Point>*>** ppReturnValue) override;
        _Check_return_ HRESULT FindSubElementsForTouchTargetingProtected(_In_ ABI::Windows::Foundation::Point point, _In_ ABI::Windows::Foundation::Rect boundingRect, _Outptr_ ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Foundation::Point>*>** ppReturnValue);
        IFACEMETHOD(Focus)(_In_ ABI::Microsoft::UI::Xaml::FocusState value, _Out_ BOOLEAN* pReturnValue) override;
        IFACEMETHOD(FocusNoActivate)(_In_ ABI::Microsoft::UI::Xaml::FocusState value, _Out_ BOOLEAN* pResult) override;
        IFACEMETHOD(GetChildrenInTabFocusOrder)(_Outptr_ ABI::Windows::Foundation::Collections::IIterable<ABI::Microsoft::UI::Xaml::DependencyObject*>** ppReturnValue) override;
        _Check_return_ HRESULT GetChildrenInTabFocusOrderProtected(_Outptr_ ABI::Windows::Foundation::Collections::IIterable<ABI::Microsoft::UI::Xaml::DependencyObject*>** ppReturnValue);
        IFACEMETHOD(InvalidateArrange)() override;
        IFACEMETHOD(InvalidateMeasure)() override;
        _Check_return_ HRESULT LayoutRound(_In_ FLOAT value, _Out_ FLOAT* pReturnValue);
        IFACEMETHOD(Measure)(_In_ ABI::Windows::Foundation::Size availableSize) override;
        IFACEMETHOD(OnBringIntoViewRequested)(_In_ ABI::Microsoft::UI::Xaml::IBringIntoViewRequestedEventArgs* pE) override;
        _Check_return_ HRESULT OnBringIntoViewRequestedProtected(_In_ ABI::Microsoft::UI::Xaml::IBringIntoViewRequestedEventArgs* pE);
        IFACEMETHOD(OnCreateAutomationPeer)(_Outptr_ ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** ppReturnValue) override;
        _Check_return_ HRESULT OnCreateAutomationPeerProtected(_Outptr_ ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** ppReturnValue);
        IFACEMETHOD(OnDisconnectVisualChildren)() override;
        _Check_return_ HRESULT OnDisconnectVisualChildrenProtected();
        IFACEMETHOD(OnKeyboardAcceleratorInvoked)(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyboardAcceleratorInvokedEventArgs* pArgs) override;
        _Check_return_ HRESULT OnKeyboardAcceleratorInvokedProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IKeyboardAcceleratorInvokedEventArgs* pArgs);
        IFACEMETHOD(OnProcessKeyboardAccelerators)(_In_ ABI::Microsoft::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs* pArgs) override;
        _Check_return_ HRESULT OnProcessKeyboardAcceleratorsProtected(_In_ ABI::Microsoft::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs* pArgs);
        IFACEMETHOD(PopulatePropertyInfoOverride)(_In_ HSTRING propertyName, _In_ ABI::Microsoft::UI::Composition::IAnimationPropertyInfo* pAnimationPropertyInfo) override;
        _Check_return_ HRESULT PopulatePropertyInfoOverrideProtected(_In_ HSTRING propertyName, _In_ ABI::Microsoft::UI::Composition::IAnimationPropertyInfo* pAnimationPropertyInfo);
        _Check_return_ HRESULT ReleaseMouseCapture();
        IFACEMETHOD(ReleasePointerCapture)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointer* pValue) override;
        IFACEMETHOD(ReleasePointerCaptures)() override;
        IFACEMETHOD(RemoveHandler)(_In_ ABI::Microsoft::UI::Xaml::IRoutedEvent* pRoutedEvent, _In_ IInspectable* pHandler) override;
        _Check_return_ HRESULT ResetGlobalScaleFactor();
        IFACEMETHOD(StartAnimation)(_In_ ABI::Microsoft::UI::Composition::ICompositionAnimationBase* pAnimation) override;
        IFACEMETHOD(StartBringIntoView)() override;
        IFACEMETHOD(StartBringIntoViewWithOptions)(_In_ ABI::Microsoft::UI::Xaml::IBringIntoViewOptions* pOptions) override;
        IFACEMETHOD(StartDragAsync)(_In_ ABI::Microsoft::UI::Input::IPointerPoint* pPointerPoint, _Outptr_ ABI::Windows::Foundation::IAsyncOperation<ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation>** ppReturnValue) override;
        IFACEMETHOD(StopAnimation)(_In_ ABI::Microsoft::UI::Composition::ICompositionAnimationBase* pAnimation) override;
        IFACEMETHOD(TransformToVisual)(_In_opt_ ABI::Microsoft::UI::Xaml::IUIElement* pVisual, _Outptr_ ABI::Microsoft::UI::Xaml::Media::IGeneralTransform** ppReturnValue) override;
        IFACEMETHOD(TryInvokeKeyboardAccelerator)(_In_ ABI::Microsoft::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs* pArgs) override;
        IFACEMETHOD(UpdateLayout)() override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;
        virtual _Check_return_ HRESULT EventAddHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler, _In_ BOOLEAN handledEventsToo);
        virtual _Check_return_ HRESULT EventRemoveHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler);

    private:

        // Fields.
        // Simple property changed handlers.
        static void SimplePropertyChangedHandler_AnimatedCenterPointChanged(SimpleProperty::objid_t obj);
        static void SimplePropertyChangedHandler_AnimatedRotationAxisChanged(SimpleProperty::objid_t obj);
        static void SimplePropertyChangedHandler_AnimatedRotationChanged(SimpleProperty::objid_t obj);
        static void SimplePropertyChangedHandler_AnimatedScaleChanged(SimpleProperty::objid_t obj);
        static void SimplePropertyChangedHandler_AnimatedTransformMatrixChanged(SimpleProperty::objid_t obj);
        static void SimplePropertyChangedHandler_AnimatedTranslationChanged(SimpleProperty::objid_t obj);
        static void SimplePropertyChangedHandler_CenterPointChanged(SimpleProperty::objid_t obj);
        static void SimplePropertyChangedHandler_RotationAxisChanged(SimpleProperty::objid_t obj);
        static void SimplePropertyChangedHandler_RotationChanged(SimpleProperty::objid_t obj);
        static void SimplePropertyChangedHandler_ScaleChanged(SimpleProperty::objid_t obj);
        static void SimplePropertyChangedHandler_TransformMatrixChanged(SimpleProperty::objid_t obj);
        static void SimplePropertyChangedHandler_TranslationChanged(SimpleProperty::objid_t obj);
    };
}

#include "UIElement_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) UIElementFactory:
       public ctl::BetterAggregableAbstractCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::IUIElementFactory
        , public ABI::Microsoft::UI::Xaml::IUIElementStatics
        , public ABI::Microsoft::UI::Xaml::IUIElementStaticsPrivate
    {
        BEGIN_INTERFACE_MAP(UIElementFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)
            INTERFACE_ENTRY(UIElementFactory, ABI::Microsoft::UI::Xaml::IUIElementFactory)
            INTERFACE_ENTRY(UIElementFactory, ABI::Microsoft::UI::Xaml::IUIElementStatics)
            INTERFACE_ENTRY(UIElementFactory, ABI::Microsoft::UI::Xaml::IUIElementStaticsPrivate)
        END_INTERFACE_MAP(UIElementFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)

    public:
        // Factory methods.

        // Static properties.
        IFACEMETHOD(get_KeyDownEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_KeyUpEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_PointerEnteredEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_PointerPressedEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_PointerMovedEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_PointerReleasedEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_PointerExitedEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_PointerCaptureLostEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_PointerCanceledEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_PointerWheelChangedEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_TappedEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_DoubleTappedEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_HoldingEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_RightTappedEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        _Check_return_ HRESULT get_RightTappedUnhandledEvent(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue);
        IFACEMETHOD(get_ManipulationStartingEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_ManipulationInertiaStartingEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_ManipulationStartedEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_ManipulationDeltaEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_ManipulationCompletedEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_DragEnterEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_DragLeaveEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_DragOverEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_DropEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_GettingFocusEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_LosingFocusEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_NoFocusCandidateFoundEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_PreviewKeyDownEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_CharacterReceivedEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_PreviewKeyUpEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_BringIntoViewRequestedEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;
        IFACEMETHOD(get_ContextRequestedEvent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue) override;

        // Dependency properties.
        
        
        
        
        IFACEMETHOD(get_AllowDropProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_OpacityProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ClipProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_RenderTransformProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        
        
        
        
        
        IFACEMETHOD(get_ProjectionProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_Transform3DProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_RenderTransformOriginProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsHitTestVisibleProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_VisibilityProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        IFACEMETHOD(get_UseLayoutRoundingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_TransitionsProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_CacheModeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsTapEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsDoubleTapEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_CanDragProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        IFACEMETHOD(get_IsRightTapEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsHoldingEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ManipulationModeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_PointerCapturesProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ContextFlyoutProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_CompositeModeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        IFACEMETHOD(get_LightsProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        IFACEMETHOD(get_CanBeScrollAnchorProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ExitDisplayModeOnAccessKeyInvokedProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsAccessKeyScopeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_AccessKeyScopeOwnerProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_AccessKeyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        IFACEMETHOD(get_KeyTipPlacementModeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_KeyTipHorizontalOffsetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_KeyTipVerticalOffsetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_KeyTipTargetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusKeyboardNavigationProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusUpNavigationStrategyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusDownNavigationStrategyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusLeftNavigationStrategyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusRightNavigationStrategyProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        IFACEMETHOD(get_KeyboardAcceleratorPlacementTargetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_KeyboardAcceleratorPlacementModeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_HighContrastAdjustmentProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_TabFocusNavigationProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        
        
        
        
        
        IFACEMETHOD(get_ShadowProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FocusStateProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_UseSystemFocusVisualsProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusLeftProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusRightProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusUpProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_XYFocusDownProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsTabStopProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_TabIndexProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.
        IFACEMETHOD(TryStartDirectManipulation)(_In_ ABI::Microsoft::UI::Xaml::Input::IPointer* pValue, _Out_ BOOLEAN* pReturnValue) override;
        IFACEMETHOD(RegisterAsScrollPort)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement) override;
        IFACEMETHOD(InternalGetIsEnabled)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pResult) override;
        IFACEMETHOD(InternalPutIsEnabled)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value) override;

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::UIElement;
        }


    private:

        // Customized static properties.
         _Check_return_ HRESULT get_KeyDownEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_KeyUpEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_PointerEnteredEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_PointerPressedEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_PointerMovedEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_PointerReleasedEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_PointerExitedEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_PointerCaptureLostEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_PointerCanceledEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_PointerWheelChangedEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_TappedEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_DoubleTappedEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_HoldingEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_RightTappedEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_RightTappedUnhandledEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_ManipulationStartingEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_ManipulationInertiaStartingEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_ManipulationStartedEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_ManipulationDeltaEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_ManipulationCompletedEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_DragEnterEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_DragLeaveEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_DragOverEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_DropEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_GettingFocusEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_LosingFocusEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_NoFocusCandidateFoundEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_PreviewKeyDownEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_CharacterReceivedEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_PreviewKeyUpEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_BringIntoViewRequestedEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 
         _Check_return_ HRESULT get_ContextRequestedEventImpl(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IRoutedEvent** ppValue); 

        // Customized static  methods.
         _Check_return_ HRESULT TryStartDirectManipulationImpl(_In_ ABI::Microsoft::UI::Xaml::Input::IPointer* pValue, _Out_ BOOLEAN* pReturnValue); 
         _Check_return_ HRESULT RegisterAsScrollPortImpl(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement); 
         _Check_return_ HRESULT InternalGetIsEnabledImpl(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pResult); 
         _Check_return_ HRESULT InternalPutIsEnabledImpl(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value); 
    };
}
