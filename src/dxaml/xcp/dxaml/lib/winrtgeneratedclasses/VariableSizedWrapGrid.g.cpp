// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "VariableSizedWrapGrid.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::VariableSizedWrapGridGenerated::VariableSizedWrapGridGenerated()
{
}

DirectUI::VariableSizedWrapGridGenerated::~VariableSizedWrapGridGenerated()
{
}

HRESULT DirectUI::VariableSizedWrapGridGenerated::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::VariableSizedWrapGrid)))
    {
        *ppObject = static_cast<DirectUI::VariableSizedWrapGrid*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Controls::IVariableSizedWrapGrid)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Controls::IVariableSizedWrapGrid*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(DirectUI::IKeyboardNavigationPanel)))
    {
        *ppObject = static_cast<DirectUI::IKeyboardNavigationPanel*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(DirectUI::IOrientedPanel)))
    {
        *ppObject = static_cast<DirectUI::IOrientedPanel*>(this);
    }
    else
    {
        RRETURN(DirectUI::Panel::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::VariableSizedWrapGridGenerated::get_HorizontalChildrenAlignment(_Out_ ABI::Microsoft::UI::Xaml::HorizontalAlignment* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::VariableSizedWrapGrid_HorizontalChildrenAlignment, pValue));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridGenerated::put_HorizontalChildrenAlignment(_In_ ABI::Microsoft::UI::Xaml::HorizontalAlignment value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::VariableSizedWrapGrid_HorizontalChildrenAlignment, value));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridGenerated::get_ItemHeight(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::VariableSizedWrapGrid_ItemHeight, pValue));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridGenerated::put_ItemHeight(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::VariableSizedWrapGrid_ItemHeight, value));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridGenerated::get_ItemWidth(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::VariableSizedWrapGrid_ItemWidth, pValue));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridGenerated::put_ItemWidth(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::VariableSizedWrapGrid_ItemWidth, value));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridGenerated::get_MaximumRowsOrColumns(_Out_ INT* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::VariableSizedWrapGrid_MaximumRowsOrColumns, pValue));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridGenerated::put_MaximumRowsOrColumns(_In_ INT value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::VariableSizedWrapGrid_MaximumRowsOrColumns, value));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridGenerated::get_Orientation(_Out_ ABI::Microsoft::UI::Xaml::Controls::Orientation* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::VariableSizedWrapGrid_Orientation, pValue));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridGenerated::put_Orientation(_In_ ABI::Microsoft::UI::Xaml::Controls::Orientation value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::VariableSizedWrapGrid_Orientation, value));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridGenerated::get_VerticalChildrenAlignment(_Out_ ABI::Microsoft::UI::Xaml::VerticalAlignment* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::VariableSizedWrapGrid_VerticalChildrenAlignment, pValue));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridGenerated::put_VerticalChildrenAlignment(_In_ ABI::Microsoft::UI::Xaml::VerticalAlignment value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::VariableSizedWrapGrid_VerticalChildrenAlignment, value));
}

// Events.

// Methods.

HRESULT DirectUI::VariableSizedWrapGridFactory::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Controls::IVariableSizedWrapGridStatics)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Controls::IVariableSizedWrapGridStatics*>(this);
    }
    else
    {
        RRETURN(ctl::BetterCoreObjectActivationFactory::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}


// Factory methods.

// Dependency properties.
IFACEMETHODIMP DirectUI::VariableSizedWrapGridFactory::get_ItemHeightProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::VariableSizedWrapGrid_ItemHeight, ppValue));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridFactory::get_ItemWidthProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::VariableSizedWrapGrid_ItemWidth, ppValue));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridFactory::get_OrientationProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::VariableSizedWrapGrid_Orientation, ppValue));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridFactory::get_HorizontalChildrenAlignmentProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::VariableSizedWrapGrid_HorizontalChildrenAlignment, ppValue));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridFactory::get_VerticalChildrenAlignmentProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::VariableSizedWrapGrid_VerticalChildrenAlignment, ppValue));
}
IFACEMETHODIMP DirectUI::VariableSizedWrapGridFactory::get_MaximumRowsOrColumnsProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::VariableSizedWrapGrid_MaximumRowsOrColumns, ppValue));
}

// Attached properties.
_Check_return_ HRESULT DirectUI::VariableSizedWrapGridFactory::GetRowSpanStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ INT* pValue)
{
    RRETURN(DependencyObject::GetAttachedValueByKnownIndex(static_cast<DirectUI::UIElement*>(pElement), KnownPropertyIndex::VariableSizedWrapGrid_RowSpan, pValue));
}

_Check_return_ HRESULT DirectUI::VariableSizedWrapGridFactory::SetRowSpanStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ INT value)
{
    RRETURN(DependencyObject::SetAttachedValueByKnownIndex(static_cast<DirectUI::UIElement*>(pElement), KnownPropertyIndex::VariableSizedWrapGrid_RowSpan, value));
}


IFACEMETHODIMP DirectUI::VariableSizedWrapGridFactory::get_RowSpanProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::VariableSizedWrapGrid_RowSpan, ppValue));
}


IFACEMETHODIMP DirectUI::VariableSizedWrapGridFactory::GetRowSpan(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ INT* pValue)
{
    RRETURN(GetRowSpanStatic(pElement, pValue));
}

IFACEMETHODIMP DirectUI::VariableSizedWrapGridFactory::SetRowSpan(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ INT value)
{
    RRETURN(SetRowSpanStatic(pElement, value));
}
_Check_return_ HRESULT DirectUI::VariableSizedWrapGridFactory::GetColumnSpanStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ INT* pValue)
{
    RRETURN(DependencyObject::GetAttachedValueByKnownIndex(static_cast<DirectUI::UIElement*>(pElement), KnownPropertyIndex::VariableSizedWrapGrid_ColumnSpan, pValue));
}

_Check_return_ HRESULT DirectUI::VariableSizedWrapGridFactory::SetColumnSpanStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ INT value)
{
    RRETURN(DependencyObject::SetAttachedValueByKnownIndex(static_cast<DirectUI::UIElement*>(pElement), KnownPropertyIndex::VariableSizedWrapGrid_ColumnSpan, value));
}


IFACEMETHODIMP DirectUI::VariableSizedWrapGridFactory::get_ColumnSpanProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::VariableSizedWrapGrid_ColumnSpan, ppValue));
}


IFACEMETHODIMP DirectUI::VariableSizedWrapGridFactory::GetColumnSpan(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ INT* pValue)
{
    RRETURN(GetColumnSpanStatic(pElement, pValue));
}

IFACEMETHODIMP DirectUI::VariableSizedWrapGridFactory::SetColumnSpan(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ INT value)
{
    RRETURN(SetColumnSpanStatic(pElement, value));
}

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_VariableSizedWrapGrid()
    {
        RRETURN(ctl::ActivationFactoryCreator<VariableSizedWrapGridFactory>::CreateActivationFactory());
    }
}
