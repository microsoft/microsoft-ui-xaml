// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "Control.g.h"

#define __SemanticZoom_GUID "ce486330-0cc2-400f-8a75-945c018a8506"

namespace DirectUI
{
    class SemanticZoom;

    class __declspec(novtable) SemanticZoomGenerated:
        public DirectUI::Control
        , public ABI::Microsoft::UI::Xaml::Controls::ISemanticZoom
        , public ABI::Microsoft::Internal::FrameworkUdk::IBackButtonPressedListener
    {
        friend class DirectUI::SemanticZoom;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.SemanticZoom");

        BEGIN_INTERFACE_MAP(SemanticZoomGenerated, DirectUI::Control)
            INTERFACE_ENTRY(SemanticZoomGenerated, ABI::Microsoft::UI::Xaml::Controls::ISemanticZoom)
            INTERFACE_ENTRY(SemanticZoomGenerated, ABI::Microsoft::Internal::FrameworkUdk::IBackButtonPressedListener)
        END_INTERFACE_MAP(SemanticZoomGenerated, DirectUI::Control)

    public:
        SemanticZoomGenerated();
        ~SemanticZoomGenerated() override;

        // Event source typedefs.
        typedef CEventSource<ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomViewChangedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomViewChangedEventArgs> ViewChangeStartedEventSourceType;
        typedef CEventSource<ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomViewChangedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomViewChangedEventArgs> ViewChangeCompletedEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::SemanticZoom;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::SemanticZoom;
        }

        // Properties.
        IFACEMETHOD(get_CanChangeViews)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_CanChangeViews)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsZoomedInViewActive)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsZoomedInViewActive)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsZoomOutButtonEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsZoomOutButtonEnabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_ZoomedInView)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomInformation** ppValue) override;
        IFACEMETHOD(put_ZoomedInView)(_In_opt_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomInformation* pValue) override;
        IFACEMETHOD(get_ZoomedOutView)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomInformation** ppValue) override;
        IFACEMETHOD(put_ZoomedOutView)(_In_opt_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomInformation* pValue) override;

        // Events.
        _Check_return_ HRESULT GetViewChangeCompletedEventSourceNoRef(_Outptr_ ViewChangeCompletedEventSourceType** ppEventSource);
        IFACEMETHOD(add_ViewChangeCompleted)(_In_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomViewChangedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ViewChangeCompleted)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetViewChangeStartedEventSourceNoRef(_Outptr_ ViewChangeStartedEventSourceType** ppEventSource);
        IFACEMETHOD(add_ViewChangeStarted)(_In_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomViewChangedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ViewChangeStarted)(_In_ EventRegistrationToken token) override;

        // Methods.
        IFACEMETHOD(OnBackButtonPressed)(_Out_ BOOLEAN* pResult) override;
        IFACEMETHOD(ToggleActiveView)() override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;
        _Check_return_ HRESULT EventAddHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler, _In_ BOOLEAN handledEventsToo) override;
        _Check_return_ HRESULT EventRemoveHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler) override;

    private:

        // Fields.
    };
}

#include "SemanticZoom_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) SemanticZoomFactory:
       public ctl::BetterCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomStatics
    {
        BEGIN_INTERFACE_MAP(SemanticZoomFactory, ctl::BetterCoreObjectActivationFactory)
            INTERFACE_ENTRY(SemanticZoomFactory, ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomStatics)
        END_INTERFACE_MAP(SemanticZoomFactory, ctl::BetterCoreObjectActivationFactory)

    public:
        // Factory methods.

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_ZoomedInViewProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ZoomedOutViewProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsZoomedInViewActiveProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_CanChangeViewsProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsZoomOutButtonEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::SemanticZoom;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
