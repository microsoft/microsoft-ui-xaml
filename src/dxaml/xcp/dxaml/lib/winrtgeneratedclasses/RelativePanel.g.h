// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "Panel.g.h"
#include "CornerRadius.g.h"
#include "Thickness.g.h"

#define __RelativePanel_GUID "c5501c0d-6852-46f3-a28e-57c4aa63f503"

namespace DirectUI
{
    class RelativePanel;
    class Brush;

    class __declspec(novtable) __declspec(uuid(__RelativePanel_GUID)) RelativePanel:
        public DirectUI::Panel
        , public ABI::Microsoft::UI::Xaml::Controls::IRelativePanel
    {

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.RelativePanel");

        BEGIN_INTERFACE_MAP(RelativePanel, DirectUI::Panel)
            INTERFACE_ENTRY(RelativePanel, ABI::Microsoft::UI::Xaml::Controls::IRelativePanel)
        END_INTERFACE_MAP(RelativePanel, DirectUI::Panel)

    public:
        RelativePanel();
        ~RelativePanel() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::RelativePanel;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::RelativePanel;
        }

        // Properties.
        IFACEMETHOD(get_BackgroundSizing)(_Out_ ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing* pValue) override;
        IFACEMETHOD(put_BackgroundSizing)(_In_ ABI::Microsoft::UI::Xaml::Controls::BackgroundSizing value) override;
        IFACEMETHOD(get_BorderBrush)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IBrush** ppValue) override;
        IFACEMETHOD(put_BorderBrush)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IBrush* pValue) override;
        IFACEMETHOD(get_BorderThickness)(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue) override;
        IFACEMETHOD(put_BorderThickness)(_In_ ABI::Microsoft::UI::Xaml::Thickness value) override;
        IFACEMETHOD(get_CornerRadius)(_Out_ ABI::Microsoft::UI::Xaml::CornerRadius* pValue) override;
        IFACEMETHOD(put_CornerRadius)(_In_ ABI::Microsoft::UI::Xaml::CornerRadius value) override;
        IFACEMETHOD(get_Padding)(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue) override;
        IFACEMETHOD(put_Padding)(_In_ ABI::Microsoft::UI::Xaml::Thickness value) override;

        // Events.

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:
        // Customized properties.

        // Customized methods.

        // Fields.
    };
}


namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) RelativePanelFactory:
       public ctl::BetterAggregableCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IRelativePanelFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IRelativePanelStatics
    {
        BEGIN_INTERFACE_MAP(RelativePanelFactory, ctl::BetterAggregableCoreObjectActivationFactory)
            INTERFACE_ENTRY(RelativePanelFactory, ABI::Microsoft::UI::Xaml::Controls::IRelativePanelFactory)
            INTERFACE_ENTRY(RelativePanelFactory, ABI::Microsoft::UI::Xaml::Controls::IRelativePanelStatics)
        END_INTERFACE_MAP(RelativePanelFactory, ctl::BetterAggregableCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::IRelativePanel** ppInstance);

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_BackgroundSizingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_BorderBrushProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_BorderThicknessProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_CornerRadiusProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_PaddingProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.
        static _Check_return_ HRESULT GetLeftOfStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        static _Check_return_ HRESULT SetLeftOfStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_LeftOfProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetLeftOf)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        IFACEMETHOD(SetLeftOf)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        static _Check_return_ HRESULT GetAboveStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        static _Check_return_ HRESULT SetAboveStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_AboveProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetAbove)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        IFACEMETHOD(SetAbove)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        static _Check_return_ HRESULT GetRightOfStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        static _Check_return_ HRESULT SetRightOfStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_RightOfProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetRightOf)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        IFACEMETHOD(SetRightOf)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        static _Check_return_ HRESULT GetBelowStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        static _Check_return_ HRESULT SetBelowStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_BelowProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetBelow)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        IFACEMETHOD(SetBelow)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        static _Check_return_ HRESULT GetAlignHorizontalCenterWithStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        static _Check_return_ HRESULT SetAlignHorizontalCenterWithStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_AlignHorizontalCenterWithProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetAlignHorizontalCenterWith)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        IFACEMETHOD(SetAlignHorizontalCenterWith)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        static _Check_return_ HRESULT GetAlignVerticalCenterWithStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        static _Check_return_ HRESULT SetAlignVerticalCenterWithStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_AlignVerticalCenterWithProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetAlignVerticalCenterWith)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        IFACEMETHOD(SetAlignVerticalCenterWith)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        static _Check_return_ HRESULT GetAlignLeftWithStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        static _Check_return_ HRESULT SetAlignLeftWithStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_AlignLeftWithProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetAlignLeftWith)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        IFACEMETHOD(SetAlignLeftWith)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        static _Check_return_ HRESULT GetAlignTopWithStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        static _Check_return_ HRESULT SetAlignTopWithStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_AlignTopWithProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetAlignTopWith)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        IFACEMETHOD(SetAlignTopWith)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        static _Check_return_ HRESULT GetAlignRightWithStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        static _Check_return_ HRESULT SetAlignRightWithStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_AlignRightWithProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetAlignRightWith)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        IFACEMETHOD(SetAlignRightWith)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        static _Check_return_ HRESULT GetAlignBottomWithStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        static _Check_return_ HRESULT SetAlignBottomWithStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        IFACEMETHOD(get_AlignBottomWithProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetAlignBottomWith)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        IFACEMETHOD(SetAlignBottomWith)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        static _Check_return_ HRESULT GetAlignLeftWithPanelStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pValue);
        static _Check_return_ HRESULT SetAlignLeftWithPanelStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value);
        IFACEMETHOD(get_AlignLeftWithPanelProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetAlignLeftWithPanel)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pValue);
        IFACEMETHOD(SetAlignLeftWithPanel)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value);
        static _Check_return_ HRESULT GetAlignTopWithPanelStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pValue);
        static _Check_return_ HRESULT SetAlignTopWithPanelStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value);
        IFACEMETHOD(get_AlignTopWithPanelProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetAlignTopWithPanel)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pValue);
        IFACEMETHOD(SetAlignTopWithPanel)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value);
        static _Check_return_ HRESULT GetAlignRightWithPanelStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pValue);
        static _Check_return_ HRESULT SetAlignRightWithPanelStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value);
        IFACEMETHOD(get_AlignRightWithPanelProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetAlignRightWithPanel)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pValue);
        IFACEMETHOD(SetAlignRightWithPanel)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value);
        static _Check_return_ HRESULT GetAlignBottomWithPanelStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pValue);
        static _Check_return_ HRESULT SetAlignBottomWithPanelStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value);
        IFACEMETHOD(get_AlignBottomWithPanelProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetAlignBottomWithPanel)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pValue);
        IFACEMETHOD(SetAlignBottomWithPanel)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value);
        static _Check_return_ HRESULT GetAlignHorizontalCenterWithPanelStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pValue);
        static _Check_return_ HRESULT SetAlignHorizontalCenterWithPanelStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value);
        IFACEMETHOD(get_AlignHorizontalCenterWithPanelProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetAlignHorizontalCenterWithPanel)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pValue);
        IFACEMETHOD(SetAlignHorizontalCenterWithPanel)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value);
        static _Check_return_ HRESULT GetAlignVerticalCenterWithPanelStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pValue);
        static _Check_return_ HRESULT SetAlignVerticalCenterWithPanelStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value);
        IFACEMETHOD(get_AlignVerticalCenterWithPanelProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(GetAlignVerticalCenterWithPanel)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pValue);
        IFACEMETHOD(SetAlignVerticalCenterWithPanel)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value);

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::RelativePanel;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
