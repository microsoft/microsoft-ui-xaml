// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "Selector.g.h"
#include "ITreeBuilder.g.h"

#define __ListViewBase_GUID "f65935c3-3e16-412f-8cc3-30d2456d9b4b"

namespace DirectUI
{
    class ListViewBase;
    class ConnectedAnimation;
    class DataTemplate;
    class ItemIndexRange;
    class SemanticZoom;
    class SemanticZoomLocation;
    class TransitionCollection;

    class __declspec(novtable) ListViewBaseGenerated:
        public DirectUI::Selector
        , public ABI::Microsoft::UI::Xaml::Controls::IListViewBase
        , public ABI::Microsoft::Internal::FrameworkUdk::IBackButtonPressedListener
        , public ABI::Microsoft::UI::Xaml::Controls::IListViewBasePrivate
        , public ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomInformation
        , public DirectUI::ITreeBuilder
    {
        friend class DirectUI::ListViewBase;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.ListViewBase");

        BEGIN_INTERFACE_MAP(ListViewBaseGenerated, DirectUI::Selector)
            INTERFACE_ENTRY(ListViewBaseGenerated, ABI::Microsoft::UI::Xaml::Controls::IListViewBase)
            INTERFACE_ENTRY(ListViewBaseGenerated, ABI::Microsoft::Internal::FrameworkUdk::IBackButtonPressedListener)
            INTERFACE_ENTRY(ListViewBaseGenerated, ABI::Microsoft::UI::Xaml::Controls::IListViewBasePrivate)
            INTERFACE_ENTRY(ListViewBaseGenerated, ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomInformation)
            INTERFACE_ENTRY(ListViewBaseGenerated, DirectUI::ITreeBuilder)
        END_INTERFACE_MAP(ListViewBaseGenerated, DirectUI::Selector)

    public:
        ListViewBaseGenerated();
        ~ListViewBaseGenerated() override;

        // Event source typedefs.
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::Controls::IItemClickEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Controls::IItemClickEventArgs> ItemClickEventSourceType;
        typedef CEventSource<ABI::Microsoft::UI::Xaml::Controls::IDragItemsStartingEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Controls::IDragItemsStartingEventArgs> DragItemsStartingEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::ListViewBase*, ABI::Microsoft::UI::Xaml::Controls::DragItemsCompletedEventArgs*>, ABI::Microsoft::UI::Xaml::Controls::IListViewBase, ABI::Microsoft::UI::Xaml::Controls::IDragItemsCompletedEventArgs> DragItemsCompletedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::ListViewBase*, ABI::Microsoft::UI::Xaml::Controls::ContainerContentChangingEventArgs*>, ABI::Microsoft::UI::Xaml::Controls::IListViewBase, ABI::Microsoft::UI::Xaml::Controls::IContainerContentChangingEventArgs> ContainerContentChangingEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::ListViewBase*, ABI::Microsoft::UI::Xaml::Controls::ChoosingItemContainerEventArgs*>, ABI::Microsoft::UI::Xaml::Controls::IListViewBase, ABI::Microsoft::UI::Xaml::Controls::IChoosingItemContainerEventArgs> ChoosingItemContainerEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::ListViewBase*, ABI::Microsoft::UI::Xaml::Controls::ChoosingGroupHeaderContainerEventArgs*>, ABI::Microsoft::UI::Xaml::Controls::IListViewBase, ABI::Microsoft::UI::Xaml::Controls::IChoosingGroupHeaderContainerEventArgs> ChoosingGroupHeaderContainerEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::ListViewBase;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::ListViewBase;
        }

        // Properties.
        IFACEMETHOD(get_CanDragItems)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_CanDragItems)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_CanReorderItems)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_CanReorderItems)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_DataFetchSize)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_DataFetchSize)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_Footer)(_Outptr_result_maybenull_ IInspectable** ppValue) override;
        IFACEMETHOD(put_Footer)(_In_opt_ IInspectable* pValue) override;
        IFACEMETHOD(get_FooterTemplate)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDataTemplate** ppValue) override;
        IFACEMETHOD(put_FooterTemplate)(_In_opt_ ABI::Microsoft::UI::Xaml::IDataTemplate* pValue) override;
        IFACEMETHOD(get_FooterTransitions)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Transition*>** ppValue) override;
        IFACEMETHOD(put_FooterTransitions)(_In_opt_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Transition*>* pValue) override;
        IFACEMETHOD(get_Header)(_Outptr_result_maybenull_ IInspectable** ppValue) override;
        IFACEMETHOD(put_Header)(_In_opt_ IInspectable* pValue) override;
        IFACEMETHOD(get_HeaderTemplate)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDataTemplate** ppValue) override;
        IFACEMETHOD(put_HeaderTemplate)(_In_opt_ ABI::Microsoft::UI::Xaml::IDataTemplate* pValue) override;
        IFACEMETHOD(get_HeaderTransitions)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Transition*>** ppValue) override;
        IFACEMETHOD(put_HeaderTransitions)(_In_opt_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Transition*>* pValue) override;
        IFACEMETHOD(get_IncrementalLoadingThreshold)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_IncrementalLoadingThreshold)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_IncrementalLoadingTrigger)(_Out_ ABI::Microsoft::UI::Xaml::Controls::IncrementalLoadingTrigger* pValue) override;
        IFACEMETHOD(put_IncrementalLoadingTrigger)(_In_ ABI::Microsoft::UI::Xaml::Controls::IncrementalLoadingTrigger value) override;
        IFACEMETHOD(get_IsActiveView)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsActiveView)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsItemClickEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsItemClickEnabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsMultiSelectCheckBoxEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsMultiSelectCheckBoxEnabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsRegisteredForCallbacks)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsRegisteredForCallbacks)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsSwipeEnabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsSwipeEnabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_IsZoomedInView)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_IsZoomedInView)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_ReorderMode)(_Out_ ABI::Microsoft::UI::Xaml::Controls::ListViewReorderMode* pValue) override;
        IFACEMETHOD(put_ReorderMode)(_In_ ABI::Microsoft::UI::Xaml::Controls::ListViewReorderMode value) override;
        IFACEMETHOD(get_SelectedItems)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<IInspectable*>** ppValue) override;
        IFACEMETHOD(get_SelectedRanges)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVectorView<ABI::Microsoft::UI::Xaml::Data::ItemIndexRange*>** ppValue) override;
        IFACEMETHOD(get_SelectionMode)(_Out_ ABI::Microsoft::UI::Xaml::Controls::ListViewSelectionMode* pValue) override;
        IFACEMETHOD(put_SelectionMode)(_In_ ABI::Microsoft::UI::Xaml::Controls::ListViewSelectionMode value) override;
        IFACEMETHOD(get_SemanticZoomOwner)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoom** ppValue) override;
        IFACEMETHOD(put_SemanticZoomOwner)(_In_opt_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoom* pValue) override;
        IFACEMETHOD(get_ShowsScrollingPlaceholders)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_ShowsScrollingPlaceholders)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_SingleSelectionFollowsFocus)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_SingleSelectionFollowsFocus)(_In_ BOOLEAN value) override;

        // Events.
        _Check_return_ HRESULT GetChoosingGroupHeaderContainerEventSourceNoRef(_Outptr_ ChoosingGroupHeaderContainerEventSourceType** ppEventSource);
        IFACEMETHOD(add_ChoosingGroupHeaderContainer)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::ListViewBase*, ABI::Microsoft::UI::Xaml::Controls::ChoosingGroupHeaderContainerEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ChoosingGroupHeaderContainer)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetChoosingItemContainerEventSourceNoRef(_Outptr_ ChoosingItemContainerEventSourceType** ppEventSource);
        IFACEMETHOD(add_ChoosingItemContainer)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::ListViewBase*, ABI::Microsoft::UI::Xaml::Controls::ChoosingItemContainerEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ChoosingItemContainer)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetContainerContentChangingEventSourceNoRef(_Outptr_ ContainerContentChangingEventSourceType** ppEventSource);
        IFACEMETHOD(add_ContainerContentChanging)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::ListViewBase*, ABI::Microsoft::UI::Xaml::Controls::ContainerContentChangingEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ContainerContentChanging)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetDragItemsCompletedEventSourceNoRef(_Outptr_ DragItemsCompletedEventSourceType** ppEventSource);
        IFACEMETHOD(add_DragItemsCompleted)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::ListViewBase*, ABI::Microsoft::UI::Xaml::Controls::DragItemsCompletedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_DragItemsCompleted)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetDragItemsStartingEventSourceNoRef(_Outptr_ DragItemsStartingEventSourceType** ppEventSource);
        IFACEMETHOD(add_DragItemsStarting)(_In_ ABI::Microsoft::UI::Xaml::Controls::IDragItemsStartingEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_DragItemsStarting)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetItemClickEventSourceNoRef(_Outptr_ ItemClickEventSourceType** ppEventSource);
        IFACEMETHOD(add_ItemClick)(_In_ ABI::Microsoft::UI::Xaml::Controls::IItemClickEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ItemClick)(_In_ EventRegistrationToken token) override;

        // Methods.
        IFACEMETHOD(BuildTree)(_Out_ BOOLEAN* pReturnValue) override;
        IFACEMETHOD(CompleteViewChange)() override;
        IFACEMETHOD(CompleteViewChangeFrom)(_In_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomLocation* pSource, _In_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomLocation* pDestination) override;
        IFACEMETHOD(CompleteViewChangeTo)(_In_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomLocation* pSource, _In_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomLocation* pDestination) override;
        IFACEMETHOD(DeselectRange)(_In_ ABI::Microsoft::UI::Xaml::Data::IItemIndexRange* pItemIndexRange) override;
        _Check_return_ HRESULT GetRelativeScrollPosition(_In_ ABI::Microsoft::UI::Xaml::Controls::IListViewItemToKeyHandler* pItemToKeyProvider, _Out_ HSTRING* pReturnValue);
        IFACEMETHOD(InitializeViewChange)() override;
        IFACEMETHOD(IsBuildTreeSuspended)(_Out_ BOOLEAN* pReturnValue) override;
        IFACEMETHOD(IsDragSource)(_Out_ BOOLEAN* pReturnValue) override;
        IFACEMETHOD(LoadMoreItemsAsync)(_Outptr_ ABI::Windows::Foundation::IAsyncOperation<ABI::Microsoft::UI::Xaml::Data::LoadMoreItemsResult>** ppReturnValue) override;
        IFACEMETHOD(MakeVisible)(_In_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomLocation* pItem) override;
        IFACEMETHOD(OnBackButtonPressed)(_Out_ BOOLEAN* pResult) override;
        IFACEMETHOD(PrepareConnectedAnimation)(_In_ HSTRING key, _In_ IInspectable* pItem, _In_ HSTRING elementName, _Outptr_ ABI::Microsoft::UI::Xaml::Media::Animation::IConnectedAnimation** ppReturnValue) override;
        IFACEMETHOD(ScrollIntoView)(_In_opt_ IInspectable* pItem) override;
        IFACEMETHOD(ScrollIntoViewWithAlignment)(_In_ IInspectable* pItem, _In_ ABI::Microsoft::UI::Xaml::Controls::ScrollIntoViewAlignment alignment) override;
        IFACEMETHOD(ScrollIntoViewWithOptionalAnimation)(_In_ IInspectable* pItem, _In_ ABI::Microsoft::UI::Xaml::Controls::ScrollIntoViewAlignment alignment, _In_ BOOLEAN disableAnimation) override;
        IFACEMETHOD(SelectAll)() override;
        IFACEMETHOD(SelectRange)(_In_ ABI::Microsoft::UI::Xaml::Data::IItemIndexRange* pItemIndexRange) override;
        IFACEMETHOD(SetDesiredContainerUpdateDuration)(_In_ ABI::Windows::Foundation::TimeSpan duration) override;
        _Check_return_ HRESULT SetRelativeScrollPositionAsync(_In_ HSTRING relativeScrollPosition, _In_ ABI::Microsoft::UI::Xaml::Controls::IListViewKeyToItemHandler* pKeyToItemProvider, _Outptr_ ABI::Windows::Foundation::IAsyncAction** ppReturnValue);
        IFACEMETHOD(ShutDownDeferredWork)() override;
        IFACEMETHOD(StartViewChangeFrom)(_In_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomLocation* pSource, _In_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomLocation* pDestination) override;
        IFACEMETHOD(StartViewChangeTo)(_In_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomLocation* pSource, _In_ ABI::Microsoft::UI::Xaml::Controls::ISemanticZoomLocation* pDestination) override;
        IFACEMETHOD(TryStartConnectedAnimationAsync)(_In_ ABI::Microsoft::UI::Xaml::Media::Animation::IConnectedAnimation* pAnimation, _In_ IInspectable* pItem, _In_ HSTRING elementName, _Outptr_ ABI::Windows::Foundation::IAsyncOperation<bool>** ppReturnValue) override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;
        _Check_return_ HRESULT EventAddHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler, _In_ BOOLEAN handledEventsToo) override;
        _Check_return_ HRESULT EventRemoveHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler) override;

    private:

        // Fields.
        BOOLEAN m_isRegisteredForCallbacks;
    };
}

#include "ListViewBase_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) ListViewBaseFactory:
       public ctl::BetterAggregableAbstractCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IListViewBaseFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IListViewBaseStatics
    {
        BEGIN_INTERFACE_MAP(ListViewBaseFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)
            INTERFACE_ENTRY(ListViewBaseFactory, ABI::Microsoft::UI::Xaml::Controls::IListViewBaseFactory)
            INTERFACE_ENTRY(ListViewBaseFactory, ABI::Microsoft::UI::Xaml::Controls::IListViewBaseStatics)
        END_INTERFACE_MAP(ListViewBaseFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::IListViewBase** ppInstance);

        // Static properties.

        // Dependency properties.
        
        IFACEMETHOD(get_SelectionModeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsSwipeEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_CanDragItemsProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_CanReorderItemsProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsItemClickEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_DataFetchSizeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IncrementalLoadingThresholdProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IncrementalLoadingTriggerProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_HeaderProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_HeaderTemplateProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_HeaderTransitionsProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FooterProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FooterTemplateProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FooterTransitionsProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ShowsScrollingPlaceholdersProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ReorderModeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        IFACEMETHOD(get_IsMultiSelectCheckBoxEnabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_SingleSelectionFollowsFocusProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_SemanticZoomOwnerProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsActiveViewProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_IsZoomedInViewProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::ListViewBase;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
