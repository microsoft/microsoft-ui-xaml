// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "FrameworkElement.g.h"

#define __Shape_GUID "e8768ede-cdd5-4bc1-b75b-0b05e81da93e"

namespace DirectUI
{
    class Shape;
    class Brush;
    class DoubleCollection;
    class Transform;

    class __declspec(novtable) __declspec(uuid(__Shape_GUID)) Shape:
        public DirectUI::FrameworkElement
        , public ABI::Microsoft::UI::Xaml::Shapes::IShape
    {

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Shapes.Shape");

        BEGIN_INTERFACE_MAP(Shape, DirectUI::FrameworkElement)
            INTERFACE_ENTRY(Shape, ABI::Microsoft::UI::Xaml::Shapes::IShape)
        END_INTERFACE_MAP(Shape, DirectUI::FrameworkElement)

    public:
        Shape();
        ~Shape() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Shape;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::Shape;
        }

        // Properties.
        IFACEMETHOD(get_Fill)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IBrush** ppValue) override;
        IFACEMETHOD(put_Fill)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IBrush* pValue) override;
        IFACEMETHOD(get_GeometryTransform)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::ITransform** ppValue) override;
        IFACEMETHOD(get_Stretch)(_Out_ ABI::Microsoft::UI::Xaml::Media::Stretch* pValue) override;
        IFACEMETHOD(put_Stretch)(_In_ ABI::Microsoft::UI::Xaml::Media::Stretch value) override;
        IFACEMETHOD(get_Stroke)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IBrush** ppValue) override;
        IFACEMETHOD(put_Stroke)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IBrush* pValue) override;
        IFACEMETHOD(get_StrokeDashArray)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<DOUBLE>** ppValue) override;
        IFACEMETHOD(put_StrokeDashArray)(_In_opt_ ABI::Windows::Foundation::Collections::IVector<DOUBLE>* pValue) override;
        IFACEMETHOD(get_StrokeDashCap)(_Out_ ABI::Microsoft::UI::Xaml::Media::PenLineCap* pValue) override;
        IFACEMETHOD(put_StrokeDashCap)(_In_ ABI::Microsoft::UI::Xaml::Media::PenLineCap value) override;
        IFACEMETHOD(get_StrokeDashOffset)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_StrokeDashOffset)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_StrokeEndLineCap)(_Out_ ABI::Microsoft::UI::Xaml::Media::PenLineCap* pValue) override;
        IFACEMETHOD(put_StrokeEndLineCap)(_In_ ABI::Microsoft::UI::Xaml::Media::PenLineCap value) override;
        IFACEMETHOD(get_StrokeLineJoin)(_Out_ ABI::Microsoft::UI::Xaml::Media::PenLineJoin* pValue) override;
        IFACEMETHOD(put_StrokeLineJoin)(_In_ ABI::Microsoft::UI::Xaml::Media::PenLineJoin value) override;
        IFACEMETHOD(get_StrokeMiterLimit)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_StrokeMiterLimit)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_StrokeStartLineCap)(_Out_ ABI::Microsoft::UI::Xaml::Media::PenLineCap* pValue) override;
        IFACEMETHOD(put_StrokeStartLineCap)(_In_ ABI::Microsoft::UI::Xaml::Media::PenLineCap value) override;
        IFACEMETHOD(get_StrokeThickness)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_StrokeThickness)(_In_ DOUBLE value) override;

        // Events.

        // Methods.
        IFACEMETHOD(GetAlphaMask)(_Outptr_ ABI::Microsoft::UI::Composition::ICompositionBrush** ppReturnValue) override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:
        // Customized properties.

        // Customized methods.
         _Check_return_ HRESULT GetAlphaMaskImpl(_Outptr_ ABI::Microsoft::UI::Composition::ICompositionBrush** ppReturnValue); 

        // Fields.
    };
}


namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) ShapeFactory:
       public ctl::BetterAggregableAbstractCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Shapes::IShapeFactory
        , public ABI::Microsoft::UI::Xaml::Shapes::IShapeStatics
    {
        BEGIN_INTERFACE_MAP(ShapeFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)
            INTERFACE_ENTRY(ShapeFactory, ABI::Microsoft::UI::Xaml::Shapes::IShapeFactory)
            INTERFACE_ENTRY(ShapeFactory, ABI::Microsoft::UI::Xaml::Shapes::IShapeStatics)
        END_INTERFACE_MAP(ShapeFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Shapes::IShape** ppInstance);

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_FillProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_StrokeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_StrokeMiterLimitProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_StrokeThicknessProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_StrokeStartLineCapProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_StrokeEndLineCapProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_StrokeLineJoinProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_StrokeDashOffsetProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_StrokeDashCapProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_StrokeDashArrayProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_StretchProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Shape;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
