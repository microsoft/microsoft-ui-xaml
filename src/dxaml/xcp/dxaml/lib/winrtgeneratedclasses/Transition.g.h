// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __Transition_GUID "86c493cc-6096-4510-a9b5-4ba03fd412fd"

namespace DirectUI
{
    class Transition;
    class UIElement;

    class __declspec(novtable) TransitionGenerated:
        public DirectUI::DependencyObject
        , public ABI::Microsoft::UI::Xaml::Media::Animation::ITransition
        , public ABI::Microsoft::UI::Xaml::Media::Animation::ITransitionPrivate
    {
        friend class DirectUI::Transition;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Media.Animation.Transition");

        BEGIN_INTERFACE_MAP(TransitionGenerated, DirectUI::DependencyObject)
            INTERFACE_ENTRY(TransitionGenerated, ABI::Microsoft::UI::Xaml::Media::Animation::ITransition)
            INTERFACE_ENTRY(TransitionGenerated, ABI::Microsoft::UI::Xaml::Media::Animation::ITransitionPrivate)
        END_INTERFACE_MAP(TransitionGenerated, DirectUI::DependencyObject)

    public:
        TransitionGenerated();
        ~TransitionGenerated() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Transition;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::Transition;
        }

        // Properties.
        _Check_return_ HRESULT get_GeneratedStaggerFunction(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue);
        _Check_return_ HRESULT put_GeneratedStaggerFunction(_In_opt_ ABI::Microsoft::UI::Xaml::IDependencyObject* pValue);

        // Events.

        // Methods.
        IFACEMETHOD(CreateStoryboard)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ ABI::Windows::Foundation::Rect start, _In_ ABI::Windows::Foundation::Rect destination, _In_ ABI::Microsoft::UI::Xaml::TransitionTrigger transitionTrigger, _In_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Storyboard*>* pStoryboards, _Out_ ABI::Microsoft::UI::Xaml::TransitionParent* pParentForTransition) override;
        IFACEMETHOD(ParticipatesInTransition)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ ABI::Microsoft::UI::Xaml::TransitionTrigger transitonTrigger, _Out_ BOOLEAN* pResult) override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "Transition_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) TransitionFactory:
       public ctl::BetterAggregableCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Media::Animation::ITransitionFactory
        , public ABI::Microsoft::UI::Xaml::Media::Animation::ITransitionFactoryPrivate
    {
        BEGIN_INTERFACE_MAP(TransitionFactory, ctl::BetterAggregableCoreObjectActivationFactory)
            INTERFACE_ENTRY(TransitionFactory, ABI::Microsoft::UI::Xaml::Media::Animation::ITransitionFactory)
            INTERFACE_ENTRY(TransitionFactory, ABI::Microsoft::UI::Xaml::Media::Animation::ITransitionFactoryPrivate)
        END_INTERFACE_MAP(TransitionFactory, ctl::BetterAggregableCoreObjectActivationFactory)

    public:
        // Factory methods.

        // Static properties.

        // Dependency properties.
        

        // Attached properties.

        // Static methods.
        IFACEMETHOD(CreateInstance)(_In_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Media::Animation::ITransition** ppResult) override;

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::Transition;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
         _Check_return_ HRESULT CreateInstanceImpl(_In_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Media::Animation::ITransition** ppResult); 
    };
}
