// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __AutomationAnnotation_GUID "2960631e-e926-4f46-b1dc-45e8f240bb58"

namespace DirectUI
{
    class AutomationAnnotation;
    class UIElement;

    class __declspec(novtable) __declspec(uuid(__AutomationAnnotation_GUID)) AutomationAnnotation:
        public DirectUI::DependencyObject
        , public ABI::Microsoft::UI::Xaml::Automation::IAutomationAnnotation
    {

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Automation.AutomationAnnotation");

        BEGIN_INTERFACE_MAP(AutomationAnnotation, DirectUI::DependencyObject)
            INTERFACE_ENTRY(AutomationAnnotation, ABI::Microsoft::UI::Xaml::Automation::IAutomationAnnotation)
        END_INTERFACE_MAP(AutomationAnnotation, DirectUI::DependencyObject)

    public:
        AutomationAnnotation();
        ~AutomationAnnotation() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::AutomationAnnotation;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::AutomationAnnotation;
        }

        // Properties.
        IFACEMETHOD(get_Element)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IUIElement** ppValue) override;
        IFACEMETHOD(put_Element)(_In_opt_ ABI::Microsoft::UI::Xaml::IUIElement* pValue) override;
        IFACEMETHOD(get_Type)(_Out_ ABI::Microsoft::UI::Xaml::Automation::AnnotationType* pValue) override;
        IFACEMETHOD(put_Type)(_In_ ABI::Microsoft::UI::Xaml::Automation::AnnotationType value) override;

        // Events.

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:
        // Customized properties.

        // Customized methods.

        // Fields.
    };
}


namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) AutomationAnnotationFactory:
       public ctl::BetterCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Automation::IAutomationAnnotationFactory
        , public ABI::Microsoft::UI::Xaml::Automation::IAutomationAnnotationStatics
    {
        BEGIN_INTERFACE_MAP(AutomationAnnotationFactory, ctl::BetterCoreObjectActivationFactory)
            INTERFACE_ENTRY(AutomationAnnotationFactory, ABI::Microsoft::UI::Xaml::Automation::IAutomationAnnotationFactory)
            INTERFACE_ENTRY(AutomationAnnotationFactory, ABI::Microsoft::UI::Xaml::Automation::IAutomationAnnotationStatics)
        END_INTERFACE_MAP(AutomationAnnotationFactory, ctl::BetterCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_ ABI::Microsoft::UI::Xaml::Automation::AnnotationType type, _Outptr_ ABI::Microsoft::UI::Xaml::Automation::IAutomationAnnotation** ppInstance);
        IFACEMETHOD(CreateWithElementParameter)(_In_ ABI::Microsoft::UI::Xaml::Automation::AnnotationType type, _In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_ ABI::Microsoft::UI::Xaml::Automation::IAutomationAnnotation** ppInstance);

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_TypeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ElementProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::AutomationAnnotation;
        }


    private:
        _Check_return_ HRESULT CreateInstanceImpl(_In_ ABI::Microsoft::UI::Xaml::Automation::AnnotationType type, _Outptr_ ABI::Microsoft::UI::Xaml::Automation::IAutomationAnnotation** ppInstance);
        _Check_return_ HRESULT CreateWithElementParameterImpl(_In_ ABI::Microsoft::UI::Xaml::Automation::AnnotationType type, _In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_ ABI::Microsoft::UI::Xaml::Automation::IAutomationAnnotation** ppInstance);

        // Customized static properties.

        // Customized static  methods.
    };
}
