// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __FlyoutShowOptions_GUID "29fd3b8c-df98-437d-9761-8f1d3904739e"

namespace DirectUI
{
    class FlyoutShowOptions;

    class __declspec(novtable) FlyoutShowOptionsGenerated:
        public ctl::WeakReferenceSource
        , public ABI::Microsoft::UI::Xaml::Controls::Primitives::IFlyoutShowOptions
    {
        friend class DirectUI::FlyoutShowOptions;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions");

        BEGIN_INTERFACE_MAP(FlyoutShowOptionsGenerated, ctl::WeakReferenceSource)
            INTERFACE_ENTRY(FlyoutShowOptionsGenerated, ABI::Microsoft::UI::Xaml::Controls::Primitives::IFlyoutShowOptions)
        END_INTERFACE_MAP(FlyoutShowOptionsGenerated, ctl::WeakReferenceSource)

    public:
        FlyoutShowOptionsGenerated();
        ~FlyoutShowOptionsGenerated() override;

        // Event source typedefs.


        // Properties.
        IFACEMETHOD(get_ExclusionRect)(_Out_ ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Rect>** ppValue) override;
        IFACEMETHOD(put_ExclusionRect)(_In_ ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Rect>* pValue) override;
        IFACEMETHOD(get_Placement)(_Out_ ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutPlacementMode* pValue) override;
        IFACEMETHOD(put_Placement)(_In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutPlacementMode value) override;
        IFACEMETHOD(get_Position)(_Out_ ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Point>** ppValue) override;
        IFACEMETHOD(put_Position)(_In_ ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Point>* pValue) override;
        IFACEMETHOD(get_ShowMode)(_Out_ ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutShowMode* pValue) override;
        IFACEMETHOD(put_ShowMode)(_In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutShowMode value) override;

        // Events.

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
        TrackerPtr<ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Rect>> m_exclusionRect;
        ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutPlacementMode m_placement;
        TrackerPtr<ABI::Windows::Foundation::IReference<ABI::Windows::Foundation::Point>> m_position;
        ABI::Microsoft::UI::Xaml::Controls::Primitives::FlyoutShowMode m_showMode;
    };
}

#include "FlyoutShowOptions_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) FlyoutShowOptionsFactory:
       public ctl::AggregableActivationFactory<DirectUI::FlyoutShowOptions>
        , public ABI::Microsoft::UI::Xaml::Controls::Primitives::IFlyoutShowOptionsFactory
    {
        BEGIN_INTERFACE_MAP(FlyoutShowOptionsFactory, ctl::AggregableActivationFactory<DirectUI::FlyoutShowOptions>)
            INTERFACE_ENTRY(FlyoutShowOptionsFactory, ABI::Microsoft::UI::Xaml::Controls::Primitives::IFlyoutShowOptionsFactory)
        END_INTERFACE_MAP(FlyoutShowOptionsFactory, ctl::AggregableActivationFactory<DirectUI::FlyoutShowOptions>)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::Primitives::IFlyoutShowOptions** ppInstance);

        // Static properties.

        // Dependency properties.

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;



    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
