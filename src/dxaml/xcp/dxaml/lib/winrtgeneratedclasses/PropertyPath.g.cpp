// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "PropertyPath.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::PropertyPathGenerated::PropertyPathGenerated()
{
}

DirectUI::PropertyPathGenerated::~PropertyPathGenerated()
{
}

HRESULT DirectUI::PropertyPathGenerated::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::PropertyPath)))
    {
        *ppObject = static_cast<DirectUI::PropertyPath*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::IPropertyPath)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::IPropertyPath*>(this);
    }
    else
    {
        RRETURN(DirectUI::DependencyObject::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::PropertyPathGenerated::get_Path(_Out_ HSTRING* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::PropertyPath_Path, pValue));
}
_Check_return_ HRESULT DirectUI::PropertyPathGenerated::put_Path(_In_opt_ HSTRING value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::PropertyPath_Path, value));
}

// Events.

// Methods.

HRESULT DirectUI::PropertyPathFactory::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::IPropertyPathFactory)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::IPropertyPathFactory*>(this);
    }
    else
    {
        RRETURN(ctl::AbstractActivationFactory::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}


// Factory methods.
IFACEMETHODIMP DirectUI::PropertyPathFactory::CreateInstance(_In_opt_ HSTRING path, _Outptr_ ABI::Microsoft::UI::Xaml::IPropertyPath** ppInstance)
{
    HRESULT hr = S_OK;
    
    ARG_VALIDRETURNPOINTER(ppInstance);
    IFC(CreateInstanceImpl(path, ppInstance));
Cleanup:
    return hr;
}

// Dependency properties.


// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_PropertyPath()
    {
        RRETURN(ctl::ActivationFactoryCreator<PropertyPathFactory>::CreateActivationFactory());
    }
}
