// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "QuadraticBezierSegment.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::QuadraticBezierSegment::QuadraticBezierSegment()
{
}

DirectUI::QuadraticBezierSegment::~QuadraticBezierSegment()
{
}

HRESULT DirectUI::QuadraticBezierSegment::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::QuadraticBezierSegment)))
    {
        *ppObject = static_cast<DirectUI::QuadraticBezierSegment*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Media::IQuadraticBezierSegment)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Media::IQuadraticBezierSegment*>(this);
    }
    else
    {
        RRETURN(DirectUI::PathSegment::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::QuadraticBezierSegment::get_Point1(_Out_ ABI::Windows::Foundation::Point* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::QuadraticBezierSegment_Point1, pValue));
}
IFACEMETHODIMP DirectUI::QuadraticBezierSegment::put_Point1(_In_ ABI::Windows::Foundation::Point value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::QuadraticBezierSegment_Point1, value));
}
IFACEMETHODIMP DirectUI::QuadraticBezierSegment::get_Point2(_Out_ ABI::Windows::Foundation::Point* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::QuadraticBezierSegment_Point2, pValue));
}
IFACEMETHODIMP DirectUI::QuadraticBezierSegment::put_Point2(_In_ ABI::Windows::Foundation::Point value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::QuadraticBezierSegment_Point2, value));
}

// Events.

// Methods.

HRESULT DirectUI::QuadraticBezierSegmentFactory::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Media::IQuadraticBezierSegmentStatics)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Media::IQuadraticBezierSegmentStatics*>(this);
    }
    else
    {
        RRETURN(ctl::BetterCoreObjectActivationFactory::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}


// Factory methods.

// Dependency properties.
IFACEMETHODIMP DirectUI::QuadraticBezierSegmentFactory::get_Point1Property(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::QuadraticBezierSegment_Point1, ppValue));
}
IFACEMETHODIMP DirectUI::QuadraticBezierSegmentFactory::get_Point2Property(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::QuadraticBezierSegment_Point2, ppValue));
}

// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_QuadraticBezierSegment()
    {
        RRETURN(ctl::ActivationFactoryCreator<QuadraticBezierSegmentFactory>::CreateActivationFactory());
    }
}
