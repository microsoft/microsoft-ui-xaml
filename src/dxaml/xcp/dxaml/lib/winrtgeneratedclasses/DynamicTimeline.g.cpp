// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "DynamicTimeline.g.h"
#include "TimelineCollection.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::DynamicTimeline::DynamicTimeline()
{
}

DirectUI::DynamicTimeline::~DynamicTimeline()
{
}

HRESULT DirectUI::DynamicTimeline::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::DynamicTimeline)))
    {
        *ppObject = static_cast<DirectUI::DynamicTimeline*>(this);
    }
    else
    {
        RRETURN(DirectUI::Timeline::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
_Check_return_ HRESULT DirectUI::DynamicTimeline::get_Children(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Timeline*>** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::DynamicTimeline_Children, ppValue));
}
_Check_return_ HRESULT DirectUI::DynamicTimeline::put_Children(_In_opt_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Media::Animation::Timeline*>* pValue)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::DynamicTimeline_Children, pValue));
}

// Events.

// Methods.


