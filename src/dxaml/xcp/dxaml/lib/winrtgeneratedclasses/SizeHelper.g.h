// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once



#include "SizeHelper_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) SizeHelperFactory:
       public ctl::AbstractActivationFactory
        , public ABI::Microsoft::UI::Xaml::ISizeHelperStatics
    {
        BEGIN_INTERFACE_MAP(SizeHelperFactory, ctl::AbstractActivationFactory)
            INTERFACE_ENTRY(SizeHelperFactory, ABI::Microsoft::UI::Xaml::ISizeHelperStatics)
        END_INTERFACE_MAP(SizeHelperFactory, ctl::AbstractActivationFactory)

    public:
        // Factory methods.

        // Static properties.
        IFACEMETHOD(get_Empty)(_Out_ ABI::Windows::Foundation::Size* pValue) override;

        // Dependency properties.

        // Attached properties.

        // Static methods.
        IFACEMETHOD(FromDimensions)(_In_ FLOAT width, _In_ FLOAT height, _Out_ ABI::Windows::Foundation::Size* pReturnValue) override;
        IFACEMETHOD(GetIsEmpty)(_In_ ABI::Windows::Foundation::Size target, _Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(Equals)(_In_ ABI::Windows::Foundation::Size target, _In_ ABI::Windows::Foundation::Size value, _Out_ BOOLEAN* pReturnValue) override;

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;



    private:

        // Customized static properties.
         _Check_return_ HRESULT get_EmptyImpl(_Out_ ABI::Windows::Foundation::Size* pValue); 

        // Customized static  methods.
         _Check_return_ HRESULT FromDimensionsImpl(_In_ FLOAT width, _In_ FLOAT height, _Out_ ABI::Windows::Foundation::Size* pReturnValue); 
         _Check_return_ HRESULT GetIsEmptyImpl(_In_ ABI::Windows::Foundation::Size target, _Out_ BOOLEAN* pValue); 
         _Check_return_ HRESULT EqualsImpl(_In_ ABI::Windows::Foundation::Size target, _In_ ABI::Windows::Foundation::Size value, _Out_ BOOLEAN* pReturnValue); 
    };
}
