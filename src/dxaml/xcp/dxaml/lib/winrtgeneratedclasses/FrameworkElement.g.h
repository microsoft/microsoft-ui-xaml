// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "UIElement.g.h"
#include "Thickness.g.h"

#define __FrameworkElement_GUID "ca0bea2c-b556-4b05-8650-b9d1af48b953"

namespace DirectUI
{
    class FrameworkElement;
    class BindingBase;
    class BindingExpression;
    class Brush;
    class ResourceDictionary;
    class Style;
    class TriggerCollection;

    class __declspec(novtable) FrameworkElementGenerated:
        public DirectUI::UIElement
        , public ABI::Microsoft::UI::Xaml::IFrameworkElement
        , public ABI::Microsoft::UI::Xaml::IFrameworkElementProtected
        , public ABI::Microsoft::UI::Xaml::IFrameworkElementOverrides
    {
        friend class DirectUI::FrameworkElement;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.FrameworkElement");

        BEGIN_INTERFACE_MAP(FrameworkElementGenerated, DirectUI::UIElement)
            INTERFACE_ENTRY(FrameworkElementGenerated, ABI::Microsoft::UI::Xaml::IFrameworkElement)
            INTERFACE_ENTRY(FrameworkElementGenerated, ABI::Microsoft::UI::Xaml::IFrameworkElementProtected)
            INTERFACE_ENTRY(FrameworkElementGenerated, ABI::Microsoft::UI::Xaml::IFrameworkElementOverrides)
        END_INTERFACE_MAP(FrameworkElementGenerated, DirectUI::UIElement)

    public:
        FrameworkElementGenerated();
        ~FrameworkElementGenerated() override;

        // Event source typedefs.
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::IRoutedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::IRoutedEventArgs> LoadedEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::IRoutedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::IRoutedEventArgs> UnloadedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::FrameworkElement*, ABI::Microsoft::UI::Xaml::DataContextChangedEventArgs*>, ABI::Microsoft::UI::Xaml::IFrameworkElement, ABI::Microsoft::UI::Xaml::IDataContextChangedEventArgs> DataContextChangedEventSourceType;
        typedef CRoutedEventSource<ABI::Microsoft::UI::Xaml::ISizeChangedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::ISizeChangedEventArgs> SizeChangedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::IEventHandler<IInspectable*>, IInspectable, IInspectable> LayoutUpdatedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::FrameworkElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IFrameworkElement, IInspectable> LoadingEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::FrameworkElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IFrameworkElement, IInspectable> ActualThemeChangedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::FrameworkElement*, ABI::Microsoft::UI::Xaml::EffectiveViewportChangedEventArgs*>, ABI::Microsoft::UI::Xaml::IFrameworkElement, ABI::Microsoft::UI::Xaml::IEffectiveViewportChangedEventArgs> EffectiveViewportChangedEventSourceType;
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::FrameworkElement*, IInspectable*>, ABI::Microsoft::UI::Xaml::IFrameworkElement, IInspectable> HighContrastChangedEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::FrameworkElement;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::FrameworkElement;
        }

        // Properties.
        IFACEMETHOD(get_ActualHeight)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(get_ActualTheme)(_Out_ ABI::Microsoft::UI::Xaml::ElementTheme* pValue) override;
        IFACEMETHOD(get_ActualWidth)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(get_AllowFocusOnInteraction)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_AllowFocusOnInteraction)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_AllowFocusWhenDisabled)(_Out_ BOOLEAN* pValue) override;
        IFACEMETHOD(put_AllowFocusWhenDisabled)(_In_ BOOLEAN value) override;
        IFACEMETHOD(get_BaseUri)(_Outptr_result_maybenull_ ABI::Windows::Foundation::IUriRuntimeClass** ppValue) override;
        _Check_return_ HRESULT get_BringIntoViewDistanceX(_Out_ DOUBLE* pValue);
        _Check_return_ HRESULT put_BringIntoViewDistanceX(_In_ DOUBLE value);
        _Check_return_ HRESULT get_BringIntoViewDistanceY(_Out_ DOUBLE* pValue);
        _Check_return_ HRESULT put_BringIntoViewDistanceY(_In_ DOUBLE value);
        IFACEMETHOD(get_DataContext)(_Outptr_result_maybenull_ IInspectable** ppValue) override;
        IFACEMETHOD(put_DataContext)(_In_opt_ IInspectable* pValue) override;
        _Check_return_ HRESULT get_EffectiveViewport(_Out_ ABI::Windows::Foundation::Rect* pValue);
        _Check_return_ HRESULT put_EffectiveViewport(_In_ ABI::Windows::Foundation::Rect value);
        IFACEMETHOD(get_FlowDirection)(_Out_ ABI::Microsoft::UI::Xaml::FlowDirection* pValue) override;
        IFACEMETHOD(put_FlowDirection)(_In_ ABI::Microsoft::UI::Xaml::FlowDirection value) override;
        IFACEMETHOD(get_FocusVisualMargin)(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue) override;
        IFACEMETHOD(put_FocusVisualMargin)(_In_ ABI::Microsoft::UI::Xaml::Thickness value) override;
        IFACEMETHOD(get_FocusVisualPrimaryBrush)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IBrush** ppValue) override;
        IFACEMETHOD(put_FocusVisualPrimaryBrush)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IBrush* pValue) override;
        IFACEMETHOD(get_FocusVisualPrimaryThickness)(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue) override;
        IFACEMETHOD(put_FocusVisualPrimaryThickness)(_In_ ABI::Microsoft::UI::Xaml::Thickness value) override;
        IFACEMETHOD(get_FocusVisualSecondaryBrush)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::IBrush** ppValue) override;
        IFACEMETHOD(put_FocusVisualSecondaryBrush)(_In_opt_ ABI::Microsoft::UI::Xaml::Media::IBrush* pValue) override;
        IFACEMETHOD(get_FocusVisualSecondaryThickness)(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue) override;
        IFACEMETHOD(put_FocusVisualSecondaryThickness)(_In_ ABI::Microsoft::UI::Xaml::Thickness value) override;
        IFACEMETHOD(get_Height)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_Height)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_HorizontalAlignment)(_Out_ ABI::Microsoft::UI::Xaml::HorizontalAlignment* pValue) override;
        IFACEMETHOD(put_HorizontalAlignment)(_In_ ABI::Microsoft::UI::Xaml::HorizontalAlignment value) override;
        IFACEMETHOD(get_IsLoaded)(_Out_ BOOLEAN* pValue) override;
        _Check_return_ HRESULT get_IsTextScaleFactorEnabledInternal(_Out_ BOOLEAN* pValue);
        _Check_return_ HRESULT put_IsTextScaleFactorEnabledInternal(_In_ BOOLEAN value);
        IFACEMETHOD(get_Language)(_Out_ HSTRING* pValue) override;
        IFACEMETHOD(put_Language)(_In_opt_ HSTRING value) override;
        IFACEMETHOD(get_Margin)(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue) override;
        IFACEMETHOD(put_Margin)(_In_ ABI::Microsoft::UI::Xaml::Thickness value) override;
        IFACEMETHOD(get_MaxHeight)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_MaxHeight)(_In_ DOUBLE value) override;
        _Check_return_ HRESULT get_MaxViewport(_Out_ ABI::Windows::Foundation::Rect* pValue);
        _Check_return_ HRESULT put_MaxViewport(_In_ ABI::Windows::Foundation::Rect value);
        IFACEMETHOD(get_MaxWidth)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_MaxWidth)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_MinHeight)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_MinHeight)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_MinWidth)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_MinWidth)(_In_ DOUBLE value) override;
        IFACEMETHOD(get_Name)(_Out_ HSTRING* pValue) override;
        IFACEMETHOD(put_Name)(_In_opt_ HSTRING value) override;
        IFACEMETHOD(get_Parent)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppValue) override;
        IFACEMETHOD(get_RequestedTheme)(_Out_ ABI::Microsoft::UI::Xaml::ElementTheme* pValue) override;
        IFACEMETHOD(put_RequestedTheme)(_In_ ABI::Microsoft::UI::Xaml::ElementTheme value) override;
        IFACEMETHOD(get_Resources)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IResourceDictionary** ppValue) override;
        IFACEMETHOD(put_Resources)(_In_opt_ ABI::Microsoft::UI::Xaml::IResourceDictionary* pValue) override;
        IFACEMETHOD(get_Style)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IStyle** ppValue) override;
        IFACEMETHOD(put_Style)(_In_opt_ ABI::Microsoft::UI::Xaml::IStyle* pValue) override;
        IFACEMETHOD(get_Tag)(_Outptr_result_maybenull_ IInspectable** ppValue) override;
        IFACEMETHOD(put_Tag)(_In_opt_ IInspectable* pValue) override;
        IFACEMETHOD(get_Triggers)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::TriggerBase*>** ppValue) override;
        IFACEMETHOD(get_VerticalAlignment)(_Out_ ABI::Microsoft::UI::Xaml::VerticalAlignment* pValue) override;
        IFACEMETHOD(put_VerticalAlignment)(_In_ ABI::Microsoft::UI::Xaml::VerticalAlignment value) override;
        IFACEMETHOD(get_Width)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(put_Width)(_In_ DOUBLE value) override;

        // Events.
        _Check_return_ HRESULT GetActualThemeChangedEventSourceNoRef(_Outptr_ ActualThemeChangedEventSourceType** ppEventSource);
        IFACEMETHOD(add_ActualThemeChanged)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::FrameworkElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ActualThemeChanged)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetDataContextChangedEventSourceNoRef(_Outptr_ DataContextChangedEventSourceType** ppEventSource);
        IFACEMETHOD(add_DataContextChanged)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::FrameworkElement*, ABI::Microsoft::UI::Xaml::DataContextChangedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_DataContextChanged)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetEffectiveViewportChangedEventSourceNoRef(_Outptr_ EffectiveViewportChangedEventSourceType** ppEventSource);
        IFACEMETHOD(add_EffectiveViewportChanged)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::FrameworkElement*, ABI::Microsoft::UI::Xaml::EffectiveViewportChangedEventArgs*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_EffectiveViewportChanged)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetHighContrastChangedEventSourceNoRef(_Outptr_ HighContrastChangedEventSourceType** ppEventSource);
        _Check_return_ HRESULT add_HighContrastChanged(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::FrameworkElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken);
        _Check_return_ HRESULT remove_HighContrastChanged(_In_ EventRegistrationToken token);
        _Check_return_ HRESULT GetLayoutUpdatedEventSourceNoRef(_Outptr_ LayoutUpdatedEventSourceType** ppEventSource);
        IFACEMETHOD(add_LayoutUpdated)(_In_ ABI::Windows::Foundation::IEventHandler<IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_LayoutUpdated)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetLoadedEventSourceNoRef(_Outptr_ LoadedEventSourceType** ppEventSource);
        IFACEMETHOD(add_Loaded)(_In_ ABI::Microsoft::UI::Xaml::IRoutedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_Loaded)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetLoadingEventSourceNoRef(_Outptr_ LoadingEventSourceType** ppEventSource);
        IFACEMETHOD(add_Loading)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::FrameworkElement*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_Loading)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetSizeChangedEventSourceNoRef(_Outptr_ SizeChangedEventSourceType** ppEventSource);
        IFACEMETHOD(add_SizeChanged)(_In_ ABI::Microsoft::UI::Xaml::ISizeChangedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_SizeChanged)(_In_ EventRegistrationToken token) override;
        _Check_return_ HRESULT GetUnloadedEventSourceNoRef(_Outptr_ UnloadedEventSourceType** ppEventSource);
        IFACEMETHOD(add_Unloaded)(_In_ ABI::Microsoft::UI::Xaml::IRoutedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_Unloaded)(_In_ EventRegistrationToken token) override;

        // Methods.
        IFACEMETHOD(ArrangeOverride)(_In_ ABI::Windows::Foundation::Size finalSize, _Out_ ABI::Windows::Foundation::Size* pReturnValue) override;
        _Check_return_ HRESULT ArrangeOverrideProtected(_In_ ABI::Windows::Foundation::Size finalSize, _Out_ ABI::Windows::Foundation::Size* pReturnValue);
        IFACEMETHOD(FindName)(_In_ HSTRING name, _Outptr_ IInspectable** ppReturnValue) override;
        IFACEMETHOD(GetBindingExpression)(_In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pDp, _Outptr_ ABI::Microsoft::UI::Xaml::Data::IBindingExpression** ppReturnValue) override;
        IFACEMETHOD(GoToElementStateCore)(_In_ HSTRING stateName, _In_ BOOLEAN useTransitions, _Out_ BOOLEAN* pReturnValue) override;
        _Check_return_ HRESULT GoToElementStateCoreProtected(_In_ HSTRING stateName, _In_ BOOLEAN useTransitions, _Out_ BOOLEAN* pReturnValue);
        IFACEMETHOD(InvalidateViewport)() override;
        _Check_return_ HRESULT InvokeApplyTemplate(_Out_ BOOLEAN* pReturnValue);
        _Check_return_ HRESULT InvokeFocus(_In_ ABI::Microsoft::UI::Xaml::FocusState value, _Out_ BOOLEAN* pReturnValue);
        IFACEMETHOD(MeasureOverride)(_In_ ABI::Windows::Foundation::Size availableSize, _Out_ ABI::Windows::Foundation::Size* pReturnValue) override;
        _Check_return_ HRESULT MeasureOverrideProtected(_In_ ABI::Windows::Foundation::Size availableSize, _Out_ ABI::Windows::Foundation::Size* pReturnValue);
        IFACEMETHOD(OnApplyTemplate)() override;
        _Check_return_ HRESULT OnApplyTemplateProtected();
        IFACEMETHOD(SetBinding)(_In_ ABI::Microsoft::UI::Xaml::IDependencyProperty* pDp, _In_ ABI::Microsoft::UI::Xaml::Data::IBindingBase* pBinding) override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;
        _Check_return_ HRESULT EventAddHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler, _In_ BOOLEAN handledEventsToo) override;
        _Check_return_ HRESULT EventRemoveHandlerByIndex(_In_ KnownEventIndex nEventIndex, _In_ IInspectable* pHandler) override;

    private:

        // Fields.
    };
}

#include "FrameworkElement_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) FrameworkElementFactory:
       public ctl::BetterAggregableAbstractCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::IFrameworkElementFactory
        , public ABI::Microsoft::UI::Xaml::IFrameworkElementStatics
    {
        BEGIN_INTERFACE_MAP(FrameworkElementFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)
            INTERFACE_ENTRY(FrameworkElementFactory, ABI::Microsoft::UI::Xaml::IFrameworkElementFactory)
            INTERFACE_ENTRY(FrameworkElementFactory, ABI::Microsoft::UI::Xaml::IFrameworkElementStatics)
        END_INTERFACE_MAP(FrameworkElementFactory, ctl::BetterAggregableAbstractCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::IFrameworkElement** ppInstance);

        // Static properties.

        // Dependency properties.
        
        
        
        IFACEMETHOD(get_TagProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_LanguageProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        IFACEMETHOD(get_ActualWidthProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_ActualHeightProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_WidthProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_HeightProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_MinWidthProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_MaxWidthProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_MinHeightProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_MaxHeightProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_HorizontalAlignmentProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_VerticalAlignmentProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_MarginProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_NameProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_DataContextProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_AllowFocusOnInteractionProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FocusVisualMarginProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FocusVisualSecondaryThicknessProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FocusVisualPrimaryThicknessProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FocusVisualSecondaryBrushProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_FocusVisualPrimaryBrushProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_AllowFocusWhenDisabledProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_StyleProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        IFACEMETHOD(get_FlowDirectionProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_RequestedThemeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        
        
        
        
        IFACEMETHOD(get_ActualThemeProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.
        IFACEMETHOD(DeferTree)(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pElement) override;

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::FrameworkElement;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
         _Check_return_ HRESULT DeferTreeImpl(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pElement); 
    };
}
