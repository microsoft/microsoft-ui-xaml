// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __TransitionTarget_GUID "f8eb3653-4480-428b-9885-0b08605e6af4"

namespace DirectUI
{
    class TransitionTarget;
    class CompositeTransform;

    class __declspec(novtable) __declspec(uuid(__TransitionTarget_GUID)) TransitionTarget:
        public DirectUI::DependencyObject
    {



    public:
        TransitionTarget();
        ~TransitionTarget() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::TransitionTarget;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::TransitionTarget;
        }

        // Properties.
        _Check_return_ HRESULT get_ClipTransform(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::ICompositeTransform** ppValue);
        _Check_return_ HRESULT put_ClipTransform(_In_opt_ ABI::Microsoft::UI::Xaml::Media::ICompositeTransform* pValue);
        _Check_return_ HRESULT get_ClipTransformOrigin(_Out_ ABI::Windows::Foundation::Point* pValue);
        _Check_return_ HRESULT put_ClipTransformOrigin(_In_ ABI::Windows::Foundation::Point value);
        _Check_return_ HRESULT get_CompositeTransform(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Media::ICompositeTransform** ppValue);
        _Check_return_ HRESULT put_CompositeTransform(_In_opt_ ABI::Microsoft::UI::Xaml::Media::ICompositeTransform* pValue);
        _Check_return_ HRESULT get_Opacity(_Out_ DOUBLE* pValue);
        _Check_return_ HRESULT put_Opacity(_In_ DOUBLE value);
        _Check_return_ HRESULT get_OpacityAnimation(_Outptr_result_maybenull_ IInspectable** ppValue);
        _Check_return_ HRESULT put_OpacityAnimation(_In_opt_ IInspectable* pValue);
        _Check_return_ HRESULT get_TransformOrigin(_Out_ ABI::Windows::Foundation::Point* pValue);
        _Check_return_ HRESULT put_TransformOrigin(_In_ ABI::Windows::Foundation::Point value);

        // Events.

        // Methods.


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:
        // Customized properties.

        // Customized methods.

        // Fields.
    };
}


