// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "FlyoutBase.g.h"

#define __MenuFlyout_GUID "8eec1227-1eed-454b-baa3-6402349d57dd"

namespace DirectUI
{
    class MenuFlyout;
    class Style;
    class UIElement;

    class __declspec(novtable) MenuFlyoutGenerated:
        public DirectUI::FlyoutBase
        , public ABI::Microsoft::UI::Xaml::Controls::IMenuFlyout
        , public ABI::Microsoft::UI::Xaml::Controls::IMenu
    {
        friend class DirectUI::MenuFlyout;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.MenuFlyout");

        BEGIN_INTERFACE_MAP(MenuFlyoutGenerated, DirectUI::FlyoutBase)
            INTERFACE_ENTRY(MenuFlyoutGenerated, ABI::Microsoft::UI::Xaml::Controls::IMenuFlyout)
            INTERFACE_ENTRY(MenuFlyoutGenerated, ABI::Microsoft::UI::Xaml::Controls::IMenu)
        END_INTERFACE_MAP(MenuFlyoutGenerated, DirectUI::FlyoutBase)

    public:
        MenuFlyoutGenerated();
        ~MenuFlyoutGenerated() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::MenuFlyout;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::MenuFlyout;
        }

        // Properties.
        IFACEMETHOD(get_Items)(_Outptr_result_maybenull_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Controls::MenuFlyoutItemBase*>** ppValue) override;
        _Check_return_ HRESULT put_Items(_In_opt_ ABI::Windows::Foundation::Collections::IVector<ABI::Microsoft::UI::Xaml::Controls::MenuFlyoutItemBase*>* pValue);
        IFACEMETHOD(get_MenuFlyoutPresenterStyle)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IStyle** ppValue) override;
        IFACEMETHOD(put_MenuFlyoutPresenterStyle)(_In_opt_ ABI::Microsoft::UI::Xaml::IStyle* pValue) override;
        IFACEMETHOD(get_ParentMenu)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Controls::IMenu** ppValue) override;
        IFACEMETHOD(put_ParentMenu)(_In_opt_ ABI::Microsoft::UI::Xaml::Controls::IMenu* pValue) override;

        // Events.

        // Methods.
        IFACEMETHOD(Close)() override;
        IFACEMETHOD(ShowAt)(_In_opt_ ABI::Microsoft::UI::Xaml::IUIElement* pTargetElement, _In_ ABI::Windows::Foundation::Point point) override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "MenuFlyout_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) MenuFlyoutFactory:
       public ctl::BetterAggregableCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IMenuFlyoutFactory
        , public ABI::Microsoft::UI::Xaml::Controls::IMenuFlyoutStatics
    {
        BEGIN_INTERFACE_MAP(MenuFlyoutFactory, ctl::BetterAggregableCoreObjectActivationFactory)
            INTERFACE_ENTRY(MenuFlyoutFactory, ABI::Microsoft::UI::Xaml::Controls::IMenuFlyoutFactory)
            INTERFACE_ENTRY(MenuFlyoutFactory, ABI::Microsoft::UI::Xaml::Controls::IMenuFlyoutStatics)
        END_INTERFACE_MAP(MenuFlyoutFactory, ctl::BetterAggregableCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::IMenuFlyout** ppInstance);

        // Static properties.

        // Dependency properties.
        
        IFACEMETHOD(get_MenuFlyoutPresenterStyleProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::MenuFlyout;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
