// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __TextAdapter_GUID "5f84e62b-aebc-4977-a1ea-dac6ec4080ff"

namespace DirectUI
{
    class TextAdapter;
    class IRawElementProviderSimple;
    class UIElement;

    class __declspec(novtable) TextAdapterGenerated:
        public DirectUI::DependencyObject
        , public ABI::Microsoft::UI::Xaml::Automation::Provider::ITextProvider
    {
        friend class DirectUI::TextAdapter;


        BEGIN_INTERFACE_MAP(TextAdapterGenerated, DirectUI::DependencyObject)
            INTERFACE_ENTRY(TextAdapterGenerated, ABI::Microsoft::UI::Xaml::Automation::Provider::ITextProvider)
        END_INTERFACE_MAP(TextAdapterGenerated, DirectUI::DependencyObject)

    public:
        TextAdapterGenerated();
        ~TextAdapterGenerated() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::TextAdapter;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::TextAdapter;
        }

        // Properties.
        IFACEMETHOD(get_DocumentRange)(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::Automation::Provider::ITextRangeProvider** ppValue) override;
        _Check_return_ HRESULT get_Owner(_Outptr_result_maybenull_ ABI::Microsoft::UI::Xaml::IUIElement** ppValue);
        IFACEMETHOD(get_SupportedTextSelection)(_Out_ ABI::Microsoft::UI::Xaml::Automation::SupportedTextSelection* pValue) override;

        // Events.

        // Methods.
        IFACEMETHOD(GetSelection)(_Out_ UINT* pReturnValueCount, _Out_writes_to_ptr_(*pReturnValueCount) ABI::Microsoft::UI::Xaml::Automation::Provider::ITextRangeProvider*** ppReturnValue) override;
        IFACEMETHOD(GetVisibleRanges)(_Out_ UINT* pReturnValueCount, _Out_writes_to_ptr_(*pReturnValueCount) ABI::Microsoft::UI::Xaml::Automation::Provider::ITextRangeProvider*** ppReturnValue) override;
        IFACEMETHOD(RangeFromChild)(_In_ ABI::Microsoft::UI::Xaml::Automation::Provider::IIRawElementProviderSimple* pChildElement, _Outptr_ ABI::Microsoft::UI::Xaml::Automation::Provider::ITextRangeProvider** ppReturnValue) override;
        IFACEMETHOD(RangeFromPoint)(_In_ ABI::Windows::Foundation::Point screenLocation, _Outptr_ ABI::Microsoft::UI::Xaml::Automation::Provider::ITextRangeProvider** ppReturnValue) override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "TextAdapter_Partial.h"

