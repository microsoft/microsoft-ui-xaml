// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "SymbolIcon.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::SymbolIconGenerated::SymbolIconGenerated()
{
}

DirectUI::SymbolIconGenerated::~SymbolIconGenerated()
{
}

HRESULT DirectUI::SymbolIconGenerated::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::SymbolIcon)))
    {
        *ppObject = static_cast<DirectUI::SymbolIcon*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISymbolIcon)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Controls::ISymbolIcon*>(this);
    }
    else
    {
        RRETURN(DirectUI::IconElement::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::SymbolIconGenerated::get_Symbol(_Out_ ABI::Microsoft::UI::Xaml::Controls::Symbol* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::SymbolIcon_Symbol, pValue));
}
IFACEMETHODIMP DirectUI::SymbolIconGenerated::put_Symbol(_In_ ABI::Microsoft::UI::Xaml::Controls::Symbol value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::SymbolIcon_Symbol, value));
}

// Events.

// Methods.

HRESULT DirectUI::SymbolIconFactory::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISymbolIconFactory)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Controls::ISymbolIconFactory*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Controls::ISymbolIconStatics)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Controls::ISymbolIconStatics*>(this);
    }
    else
    {
        RRETURN(ctl::BetterCoreObjectActivationFactory::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}


// Factory methods.
IFACEMETHODIMP DirectUI::SymbolIconFactory::CreateInstanceWithSymbol(_In_ ABI::Microsoft::UI::Xaml::Controls::Symbol symbol, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::ISymbolIcon** ppInstance)
{
    HRESULT hr = S_OK;
    
    ARG_VALIDRETURNPOINTER(ppInstance);
    IFC(CreateInstanceWithSymbolImpl(symbol, ppInstance));
Cleanup:
    return hr;
}

// Dependency properties.
IFACEMETHODIMP DirectUI::SymbolIconFactory::get_SymbolProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::SymbolIcon_Symbol, ppValue));
}

// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_SymbolIcon()
    {
        RRETURN(ctl::ActivationFactoryCreator<SymbolIconFactory>::CreateActivationFactory());
    }
}
