// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include <FeatureFlags.h>
#if WI_IS_FEATURE_PRESENT(Feature_Xaml2018) 
#define FEATURE_XAML2018_OVERRIDE override
#else
#define FEATURE_XAML2018_OVERRIDE
#endif
#define __InteractionBase_GUID "0c22973c-b574-4edc-b0c8-ffe0508ba922"

namespace DirectUI
{
    class InteractionBase;
    class DoubleTappedRoutedEventArgs;
    class DragEventArgs;
    class HoldingRoutedEventArgs;
    class KeyRoutedEventArgs;
    class PointerRoutedEventArgs;
    class RightTappedRoutedEventArgs;
    class TappedRoutedEventArgs;
    class UIElement;

    class __declspec(novtable) InteractionBaseGenerated:
        public ctl::WeakReferenceSource
#if WI_IS_FEATURE_PRESENT(Feature_Xaml2018)
        , public ABI::Microsoft::UI::Xaml::IInteractionBase
        , public ABI::Microsoft::UI::Xaml::IInteractionBaseOverrides
#endif
    {
        friend class DirectUI::InteractionBase;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.InteractionBase");

        BEGIN_INTERFACE_MAP(InteractionBaseGenerated, ctl::WeakReferenceSource)
#if WI_IS_FEATURE_PRESENT(Feature_Xaml2018)
            INTERFACE_ENTRY(InteractionBaseGenerated, ABI::Microsoft::UI::Xaml::IInteractionBase)
            INTERFACE_ENTRY(InteractionBaseGenerated, ABI::Microsoft::UI::Xaml::IInteractionBaseOverrides)
#else
            INTERFACE_ENTRY(DUMMYINTERFACE, IUnknown)
#endif
        END_INTERFACE_MAP(InteractionBaseGenerated, ctl::WeakReferenceSource)

    public:
        InteractionBaseGenerated();
        ~InteractionBaseGenerated() override;

        // Event source typedefs.

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::InteractionBase;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::InteractionBase;
        }

        // Properties.

        // Events.

        // Methods.
        IFACEMETHOD(GetSupportedEvents)(_Outptr_ ABI::Windows::Foundation::Collections::IVectorView<ABI::Microsoft::UI::Xaml::RoutedEvent*>** ppReturnValue) FEATURE_XAML2018_OVERRIDE;
        IFACEMETHOD(GetSupportedEventsCore)(_Outptr_ ABI::Windows::Foundation::Collections::IVectorView<ABI::Microsoft::UI::Xaml::RoutedEvent*>** ppReturnValue) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT GetSupportedEventsCoreProtected(_Outptr_ ABI::Windows::Foundation::Collections::IVectorView<ABI::Microsoft::UI::Xaml::RoutedEvent*>** ppReturnValue);
        IFACEMETHOD(OnDoubleTapped)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IDoubleTappedRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnDoubleTappedProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IDoubleTappedRoutedEventArgs* pArgs);
        IFACEMETHOD(OnDragEnter)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnDragEnterProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pArgs);
        IFACEMETHOD(OnDragLeave)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnDragLeaveProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pArgs);
        IFACEMETHOD(OnDragOver)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnDragOverProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pArgs);
        IFACEMETHOD(OnDrop)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnDropProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::IDragEventArgs* pArgs);
        IFACEMETHOD(OnHolding)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IHoldingRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnHoldingProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IHoldingRoutedEventArgs* pArgs);
        IFACEMETHOD(OnKeyDown)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnKeyDownProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs* pArgs);
        IFACEMETHOD(OnKeyUp)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnKeyUpProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IKeyRoutedEventArgs* pArgs);
        IFACEMETHOD(OnPointerCanceled)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnPointerCanceledProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs);
        IFACEMETHOD(OnPointerCaptureLost)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnPointerCaptureLostProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs);
        IFACEMETHOD(OnPointerEntered)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnPointerEnteredProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs);
        IFACEMETHOD(OnPointerExited)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnPointerExitedProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs);
        IFACEMETHOD(OnPointerMoved)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnPointerMovedProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs);
        IFACEMETHOD(OnPointerPressed)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnPointerPressedProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs);
        IFACEMETHOD(OnPointerReleased)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnPointerReleasedProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs);
        IFACEMETHOD(OnPointerWheelChanged)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnPointerWheelChangedProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IPointerRoutedEventArgs* pArgs);
        IFACEMETHOD(OnRightTapped)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IRightTappedRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnRightTappedProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::IRightTappedRoutedEventArgs* pArgs);
        IFACEMETHOD(OnTapped)(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::ITappedRoutedEventArgs* pArgs) FEATURE_XAML2018_OVERRIDE;
        _Check_return_ HRESULT OnTappedProtected(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pSender, _In_ ABI::Microsoft::UI::Xaml::Input::ITappedRoutedEventArgs* pArgs);


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "InteractionBase_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) InteractionBaseFactory:
       public ctl::AggregableAbstractActivationFactory<DirectUI::InteractionBase>
#if WI_IS_FEATURE_PRESENT(Feature_Xaml2018)
        , public ABI::Microsoft::UI::Xaml::IInteractionBaseFactory
#endif
    {
        BEGIN_INTERFACE_MAP(InteractionBaseFactory, ctl::AggregableAbstractActivationFactory<DirectUI::InteractionBase>)
#if WI_IS_FEATURE_PRESENT(Feature_Xaml2018)
            INTERFACE_ENTRY(InteractionBaseFactory, ABI::Microsoft::UI::Xaml::IInteractionBaseFactory)
#else
            INTERFACE_ENTRY(DUMMYINTERFACE, IUnknown)
#endif
        END_INTERFACE_MAP(InteractionBaseFactory, ctl::AggregableAbstractActivationFactory<DirectUI::InteractionBase>)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::IInteractionBase** ppInstance);

        // Static properties.

        // Dependency properties.

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::InteractionBase;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
