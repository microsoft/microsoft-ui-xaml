// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "ColumnDefinition.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::ColumnDefinition::ColumnDefinition()
{
}

DirectUI::ColumnDefinition::~ColumnDefinition()
{
}

HRESULT DirectUI::ColumnDefinition::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::ColumnDefinition)))
    {
        *ppObject = static_cast<DirectUI::ColumnDefinition*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Controls::IColumnDefinition)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Controls::IColumnDefinition*>(this);
    }
    else
    {
        RRETURN(DirectUI::DependencyObject::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::ColumnDefinition::get_ActualWidth(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::ColumnDefinition_ActualWidth, pValue));
}
IFACEMETHODIMP DirectUI::ColumnDefinition::get_MaxWidth(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::ColumnDefinition_MaxWidth, pValue));
}
IFACEMETHODIMP DirectUI::ColumnDefinition::put_MaxWidth(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::ColumnDefinition_MaxWidth, value));
}
IFACEMETHODIMP DirectUI::ColumnDefinition::get_MinWidth(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::ColumnDefinition_MinWidth, pValue));
}
IFACEMETHODIMP DirectUI::ColumnDefinition::put_MinWidth(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::ColumnDefinition_MinWidth, value));
}
IFACEMETHODIMP DirectUI::ColumnDefinition::get_Width(_Out_ ABI::Microsoft::UI::Xaml::GridLength* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::ColumnDefinition_Width, pValue));
}
IFACEMETHODIMP DirectUI::ColumnDefinition::put_Width(_In_ ABI::Microsoft::UI::Xaml::GridLength value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::ColumnDefinition_Width, value));
}

// Events.

// Methods.

HRESULT DirectUI::ColumnDefinitionFactory::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Controls::IColumnDefinitionStatics)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Controls::IColumnDefinitionStatics*>(this);
    }
    else
    {
        RRETURN(ctl::BetterCoreObjectActivationFactory::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}


// Factory methods.

// Dependency properties.
IFACEMETHODIMP DirectUI::ColumnDefinitionFactory::get_WidthProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::ColumnDefinition_Width, ppValue));
}
IFACEMETHODIMP DirectUI::ColumnDefinitionFactory::get_MaxWidthProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::ColumnDefinition_MaxWidth, ppValue));
}
IFACEMETHODIMP DirectUI::ColumnDefinitionFactory::get_MinWidthProperty(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue)
{
    RRETURN(MetadataAPI::GetIDependencyProperty(KnownPropertyIndex::ColumnDefinition_MinWidth, ppValue));
}


// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_ColumnDefinition()
    {
        RRETURN(ctl::ActivationFactoryCreator<ColumnDefinitionFactory>::CreateActivationFactory());
    }
}
