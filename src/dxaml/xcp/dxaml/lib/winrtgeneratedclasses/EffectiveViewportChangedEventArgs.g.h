// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once


#define __EffectiveViewportChangedEventArgs_GUID "b6e8e616-e705-4e35-9801-e9817b247fd1"

namespace DirectUI
{
    class EffectiveViewportChangedEventArgs;

    class __declspec(novtable) __declspec(uuid(__EffectiveViewportChangedEventArgs_GUID)) EffectiveViewportChangedEventArgs :
        public ABI::Microsoft::UI::Xaml::IEffectiveViewportChangedEventArgs,
        public DirectUI::EventArgs
    {

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs");

        BEGIN_INTERFACE_MAP(EffectiveViewportChangedEventArgs, DirectUI::EventArgs)
            INTERFACE_ENTRY(EffectiveViewportChangedEventArgs, ABI::Microsoft::UI::Xaml::IEffectiveViewportChangedEventArgs)
        END_INTERFACE_MAP(EffectiveViewportChangedEventArgs, DirectUI::EventArgs)

    public:
        EffectiveViewportChangedEventArgs();
        ~EffectiveViewportChangedEventArgs() override;

        // Properties.
        IFACEMETHOD(get_EffectiveViewport)(_Out_ ABI::Windows::Foundation::Rect* pValue) override;
        IFACEMETHOD(get_MaxViewport)(_Out_ ABI::Windows::Foundation::Rect* pValue) override;
        IFACEMETHOD(get_BringIntoViewDistanceX)(_Out_ DOUBLE* pValue) override;
        IFACEMETHOD(get_BringIntoViewDistanceY)(_Out_ DOUBLE* pValue) override;

        // Methods.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:
        // Customized properties.

        // Customized methods.

        // Fields.
    };
}


