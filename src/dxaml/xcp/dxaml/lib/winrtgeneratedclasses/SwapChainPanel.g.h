// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "Grid.g.h"

#define __SwapChainPanel_GUID "bcb4fa81-c951-4de0-91f4-0fc0efa12d1d"

namespace DirectUI
{
    class SwapChainPanel;

    class __declspec(novtable) SwapChainPanelGenerated:
        public DirectUI::Grid
        , public ABI::Microsoft::UI::Xaml::Controls::ISwapChainPanel
    {
        friend class DirectUI::SwapChainPanel;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.SwapChainPanel");

        BEGIN_INTERFACE_MAP(SwapChainPanelGenerated, DirectUI::Grid)
            INTERFACE_ENTRY(SwapChainPanelGenerated, ABI::Microsoft::UI::Xaml::Controls::ISwapChainPanel)
        END_INTERFACE_MAP(SwapChainPanelGenerated, DirectUI::Grid)

    public:
        SwapChainPanelGenerated();
        ~SwapChainPanelGenerated() override;

        // Event source typedefs.
        typedef CEventSource<ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::SwapChainPanel*, IInspectable*>, ABI::Microsoft::UI::Xaml::Controls::ISwapChainPanel, IInspectable> CompositionScaleChangedEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::SwapChainPanel;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::SwapChainPanel;
        }

        // Properties.
        IFACEMETHOD(get_CompositionScaleX)(_Out_ FLOAT* pValue) override;
        IFACEMETHOD(get_CompositionScaleY)(_Out_ FLOAT* pValue) override;

        // Events.
        _Check_return_ HRESULT GetCompositionScaleChangedEventSourceNoRef(_Outptr_ CompositionScaleChangedEventSourceType** ppEventSource);
        IFACEMETHOD(add_CompositionScaleChanged)(_In_ ABI::Windows::Foundation::ITypedEventHandler<ABI::Microsoft::UI::Xaml::Controls::SwapChainPanel*, IInspectable*>* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_CompositionScaleChanged)(_In_ EventRegistrationToken token) override;

        // Methods.
        IFACEMETHOD(CreateCoreIndependentInputSource)(_In_ ABI::Microsoft::UI::Input::InputPointerSourceDeviceKinds deviceKinds, _Outptr_ ABI::Microsoft::UI::Input::IInputPointerSource** ppReturnValue) override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "SwapChainPanel_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) SwapChainPanelFactory:
       public ctl::BetterAggregableCoreObjectActivationFactory
        , public ABI::Microsoft::UI::Xaml::Controls::ISwapChainPanelFactory
        , public ABI::Microsoft::UI::Xaml::Controls::ISwapChainPanelStatics
    {
        BEGIN_INTERFACE_MAP(SwapChainPanelFactory, ctl::BetterAggregableCoreObjectActivationFactory)
            INTERFACE_ENTRY(SwapChainPanelFactory, ABI::Microsoft::UI::Xaml::Controls::ISwapChainPanelFactory)
            INTERFACE_ENTRY(SwapChainPanelFactory, ABI::Microsoft::UI::Xaml::Controls::ISwapChainPanelStatics)
        END_INTERFACE_MAP(SwapChainPanelFactory, ctl::BetterAggregableCoreObjectActivationFactory)

    public:
        // Factory methods.
        IFACEMETHOD(CreateInstance)(_In_opt_ IInspectable* pOuter, _Outptr_ IInspectable** ppInner, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::ISwapChainPanel** ppInstance);

        // Static properties.

        // Dependency properties.
        IFACEMETHOD(get_CompositionScaleXProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;
        IFACEMETHOD(get_CompositionScaleYProperty)(_Out_ ABI::Microsoft::UI::Xaml::IDependencyProperty** ppValue) override;

        // Attached properties.

        // Static methods.

        // Static events.

    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::SwapChainPanel;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
