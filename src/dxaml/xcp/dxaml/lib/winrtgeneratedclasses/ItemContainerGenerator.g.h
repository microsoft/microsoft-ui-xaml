// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include "GeneratorPosition.g.h"

#define __ItemContainerGenerator_GUID "b0201b45-cdf1-41dc-a575-f281eea3ad11"

namespace DirectUI
{
    class ItemContainerGenerator;
    class Panel;

    class __declspec(novtable) ItemContainerGeneratorGenerated:
        public ctl::WeakReferenceSource
        , public ABI::Microsoft::UI::Xaml::Controls::IItemContainerGenerator
    {
        friend class DirectUI::ItemContainerGenerator;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Controls.ItemContainerGenerator");

        BEGIN_INTERFACE_MAP(ItemContainerGeneratorGenerated, ctl::WeakReferenceSource)
            INTERFACE_ENTRY(ItemContainerGeneratorGenerated, ABI::Microsoft::UI::Xaml::Controls::IItemContainerGenerator)
        END_INTERFACE_MAP(ItemContainerGeneratorGenerated, ctl::WeakReferenceSource)

    public:
        ItemContainerGeneratorGenerated();
        ~ItemContainerGeneratorGenerated() override;

        // Event source typedefs.
        typedef CEventSource<ABI::Microsoft::UI::Xaml::Controls::Primitives::IItemsChangedEventHandler, IInspectable, ABI::Microsoft::UI::Xaml::Controls::Primitives::IItemsChangedEventArgs> ItemsChangedEventSourceType;

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::ItemContainerGenerator;
        }

        static XCP_FORCEINLINE KnownTypeIndex GetTypeIndexStatic()
        {
            return KnownTypeIndex::ItemContainerGenerator;
        }

        // Properties.

        // Events.
        virtual _Check_return_ HRESULT GetItemsChangedEventSourceNoRef(_Outptr_ ItemsChangedEventSourceType** ppEventSource) = 0;
        IFACEMETHOD(add_ItemsChanged)(_In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::IItemsChangedEventHandler* pValue, _Out_ EventRegistrationToken* pToken) override;
        IFACEMETHOD(remove_ItemsChanged)(_In_ EventRegistrationToken token) override;

        // Methods.
        IFACEMETHOD(ContainerFromIndex)(_In_ INT index, _Outptr_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppReturnValue) override;
        IFACEMETHOD(ContainerFromItem)(_In_opt_ IInspectable* pItem, _Outptr_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppReturnValue) override;
        IFACEMETHOD(GenerateNext)(_Out_ BOOLEAN* pIsNewlyRealized, _Outptr_ ABI::Microsoft::UI::Xaml::IDependencyObject** ppReturnValue) override;
        IFACEMETHOD(GeneratorPositionFromIndex)(_In_ INT itemIndex, _Out_ ABI::Microsoft::UI::Xaml::Controls::Primitives::GeneratorPosition* pReturnValue) override;
        IFACEMETHOD(GetItemContainerGeneratorForPanel)(_In_ ABI::Microsoft::UI::Xaml::Controls::IPanel* pPanel, _Outptr_ ABI::Microsoft::UI::Xaml::Controls::IItemContainerGenerator** ppReturnValue) override;
        IFACEMETHOD(IndexFromContainer)(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pContainer, _Out_ INT* pReturnValue) override;
        IFACEMETHOD(IndexFromGeneratorPosition)(_In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::GeneratorPosition position, _Out_ INT* pReturnValue) override;
        IFACEMETHOD(ItemFromContainer)(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pContainer, _Outptr_ IInspectable** ppReturnValue) override;
        IFACEMETHOD(PrepareItemContainer)(_In_ ABI::Microsoft::UI::Xaml::IDependencyObject* pContainer) override;
        IFACEMETHOD(Recycle)(_In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::GeneratorPosition position, _In_ INT count) override;
        IFACEMETHOD(Remove)(_In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::GeneratorPosition position, _In_ INT count) override;
        IFACEMETHOD(RemoveAll)() override;
        IFACEMETHOD(StartAt)(_In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::GeneratorPosition position, _In_ ABI::Microsoft::UI::Xaml::Controls::Primitives::GeneratorDirection direction, _In_ BOOLEAN allowStartAtRealizedItem) override;
        IFACEMETHOD(Stop)() override;


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:
       _Check_return_ HRESULT EventAddPreValidation(_In_ void* const pValue, EventRegistrationToken* const ptToken) const;

        // Fields.
    };
}

#include "ItemContainerGenerator_Partial.h"

namespace DirectUI
{
    // Note that the ordering of the base types here is important - the base factory comes first, followed by all the
    // interfaces specific to this type.  By doing this, we allow every Factory's CreateInstance method to be more
    // COMDAT-folding-friendly.  Because this ensures that the first vfptr contains GetTypeIndex, it means that all
    // CreateInstance functions with the same base factory generate the same assembly instructions and thus will
    // fold together.  This is significant for binary size in Microsoft.UI.Xaml.dll so change this only with great
    // care.
    class __declspec(novtable) ItemContainerGeneratorFactory:
       public ctl::AbstractActivationFactory
    {

    public:
        // Factory methods.

        // Static properties.

        // Dependency properties.

        // Attached properties.
        static _Check_return_ HRESULT GetItemForItemContainerStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        static _Check_return_ HRESULT SetItemForItemContainerStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        static _Check_return_ HRESULT GetDeferredUnlinkingPayloadStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Outptr_result_maybenull_ IInspectable** ppValue);
        static _Check_return_ HRESULT SetDeferredUnlinkingPayloadStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_opt_ IInspectable* pValue);
        static _Check_return_ HRESULT GetIsRecycledContainerStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _Out_ BOOLEAN* pValue);
        static _Check_return_ HRESULT SetIsRecycledContainerStatic(_In_ ABI::Microsoft::UI::Xaml::IUIElement* pElement, _In_ BOOLEAN value);

        // Static methods.

        // Static events.

    protected:

        KnownTypeIndex GetTypeIndex() const override
        {
            return KnownTypeIndex::ItemContainerGenerator;
        }


    private:

        // Customized static properties.

        // Customized static  methods.
    };
}
