// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "AppBarTemplateSettings.g.h"
#include "XamlTelemetry.h"

// Constructors/destructors.
DirectUI::AppBarTemplateSettings::AppBarTemplateSettings()
{
}

DirectUI::AppBarTemplateSettings::~AppBarTemplateSettings()
{
}

HRESULT DirectUI::AppBarTemplateSettings::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::AppBarTemplateSettings)))
    {
        *ppObject = static_cast<DirectUI::AppBarTemplateSettings*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Controls::Primitives::IAppBarTemplateSettings)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Controls::Primitives::IAppBarTemplateSettings*>(this);
    }
    else
    {
        RRETURN(DirectUI::DependencyObject::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
IFACEMETHODIMP DirectUI::AppBarTemplateSettings::get_ClipRect(_Out_ ABI::Windows::Foundation::Rect* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_ClipRect, pValue));
}
_Check_return_ HRESULT DirectUI::AppBarTemplateSettings::put_ClipRect(_In_ ABI::Windows::Foundation::Rect value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_ClipRect, value));
}
IFACEMETHODIMP DirectUI::AppBarTemplateSettings::get_CompactRootMargin(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_CompactRootMargin, pValue));
}
_Check_return_ HRESULT DirectUI::AppBarTemplateSettings::put_CompactRootMargin(_In_ ABI::Microsoft::UI::Xaml::Thickness value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_CompactRootMargin, value));
}
IFACEMETHODIMP DirectUI::AppBarTemplateSettings::get_CompactVerticalDelta(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_CompactVerticalDelta, pValue));
}
_Check_return_ HRESULT DirectUI::AppBarTemplateSettings::put_CompactVerticalDelta(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_CompactVerticalDelta, value));
}
IFACEMETHODIMP DirectUI::AppBarTemplateSettings::get_HiddenRootMargin(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_HiddenRootMargin, pValue));
}
_Check_return_ HRESULT DirectUI::AppBarTemplateSettings::put_HiddenRootMargin(_In_ ABI::Microsoft::UI::Xaml::Thickness value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_HiddenRootMargin, value));
}
IFACEMETHODIMP DirectUI::AppBarTemplateSettings::get_HiddenVerticalDelta(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_HiddenVerticalDelta, pValue));
}
_Check_return_ HRESULT DirectUI::AppBarTemplateSettings::put_HiddenVerticalDelta(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_HiddenVerticalDelta, value));
}
IFACEMETHODIMP DirectUI::AppBarTemplateSettings::get_MinimalRootMargin(_Out_ ABI::Microsoft::UI::Xaml::Thickness* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_MinimalRootMargin, pValue));
}
_Check_return_ HRESULT DirectUI::AppBarTemplateSettings::put_MinimalRootMargin(_In_ ABI::Microsoft::UI::Xaml::Thickness value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_MinimalRootMargin, value));
}
IFACEMETHODIMP DirectUI::AppBarTemplateSettings::get_MinimalVerticalDelta(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_MinimalVerticalDelta, pValue));
}
_Check_return_ HRESULT DirectUI::AppBarTemplateSettings::put_MinimalVerticalDelta(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_MinimalVerticalDelta, value));
}
IFACEMETHODIMP DirectUI::AppBarTemplateSettings::get_NegativeCompactVerticalDelta(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_NegativeCompactVerticalDelta, pValue));
}
_Check_return_ HRESULT DirectUI::AppBarTemplateSettings::put_NegativeCompactVerticalDelta(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_NegativeCompactVerticalDelta, value));
}
IFACEMETHODIMP DirectUI::AppBarTemplateSettings::get_NegativeHiddenVerticalDelta(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_NegativeHiddenVerticalDelta, pValue));
}
_Check_return_ HRESULT DirectUI::AppBarTemplateSettings::put_NegativeHiddenVerticalDelta(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_NegativeHiddenVerticalDelta, value));
}
IFACEMETHODIMP DirectUI::AppBarTemplateSettings::get_NegativeMinimalVerticalDelta(_Out_ DOUBLE* pValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_NegativeMinimalVerticalDelta, pValue));
}
_Check_return_ HRESULT DirectUI::AppBarTemplateSettings::put_NegativeMinimalVerticalDelta(_In_ DOUBLE value)
{
    IFC_RETURN(DefaultStrictApiCheck(this));
    RRETURN(SetValueByKnownIndex(KnownPropertyIndex::AppBarTemplateSettings_NegativeMinimalVerticalDelta, value));
}

// Events.

// Methods.

// Factory methods.

// Dependency properties.











// Attached properties.

// Static properties.

// Static methods.

namespace DirectUI
{
    _Check_return_ IActivationFactory* CreateActivationFactory_AppBarTemplateSettings()
    {
        RRETURN(ctl::ActivationFactoryCreator<AppBarTemplateSettingsFactory>::CreateActivationFactory());
    }
}
