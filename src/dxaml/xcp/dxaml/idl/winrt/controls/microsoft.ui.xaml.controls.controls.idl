// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//
//  WindowsRuntimeAPISet

//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML WinRT APIs.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "sdkddkver.h"
#include <FeatureFlags.h>

import "oaidl.idl";
import "eventtoken.idl";
import "inspectable.idl";
import "microsoft.ui.composition.idl";
import "microsoft.ui.composition.SystemBackdrops.idl";
import "microsoft.ui.content.idl";
import "microsoft.UI.Dispatching.idl";
import "microsoft.ui.input.idl";
import "microsoft.ui.windowing.idl";
import "microsoft.ui.xaml.coretypes2.idl";
import "windows.foundation.idl";
import "windows.foundation.numerics.idl";
import "windows.graphics.printing.idl";
import "windows.media.casting.idl";
import "windows.ui.idl";

import "windows.applicationModel.datatransfer.dragdrop.idl";
import "windows.applicationModel.datatransfer.dragdrop.core.idl";
import "windows.foundation.customattributes.idl";
import "windows.ui.xaml.interop.idl";



namespace Microsoft.UI.Xaml.Documents
{

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum LogicalDirection
    {
        Backward,
        Forward,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum UnderlineStyle
    {
        None,
        Single,
    };
}
namespace Microsoft.UI.Xaml.Controls
{

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum CandidateWindowAlignment
    {
        Default,
        BottomEdge,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum CharacterCasing
    {
        Normal,
        Lower,
        Upper,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum ClickMode
    {
        Release,
        Press,
        Hover,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum ComboBoxSelectionChangedTrigger
    {
        Committed,
        Always,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [flags]
    [webhosthidden]
    enum DisabledFormattingAccelerators
    {
        None,
        Bold = 0x1,
        Italic = 0x2,
        Underline = 0x4,
        All = 0xFFFFFFFF,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum IncrementalLoadingTrigger
    {
        None,
        Edge,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [feature(Feature_InputValidation)]
    [webhosthidden]
    enum InputValidationKind
    {
        Auto,
        Compact,
        Inline,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [feature(Feature_InputValidation)]
    [webhosthidden]
    enum InputValidationMode
    {
        Auto,
        Default,
        Disabled,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum ItemsUpdatingScrollMode
    {
        KeepItemsInView,
        KeepScrollOffset,
        KeepLastItemInView,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum ListViewReorderMode
    {
        Disabled,
        Enabled,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum ListViewSelectionMode
    {
        None,
        Single,
        Multiple,
        Extended,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum Orientation
    {
        Vertical,
        Horizontal,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum PanelScrollingDirection
    {
        None,
        Forward,
        Backward,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum PasswordRevealMode
    {
        Peek,
        Hidden,
        Visible,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum RichEditClipboardFormat
    {
        AllFormats,
        PlainText,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum ScrollBarVisibility
    {
        Disabled,
        Auto,
        Hidden,
        Visible,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum ScrollIntoViewAlignment
    {
        Default,
        Leading,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum ScrollMode
    {
        Disabled,
        Enabled,
        Auto,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum SelectionMode
    {
        Single,
        Multiple,
        Extended,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum SnapPointsType
    {
        None,
        Optional,
        Mandatory,
        OptionalSingle,
        MandatorySingle,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum StretchDirection
    {
        UpOnly,
        DownOnly,
        Both,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum VirtualizationMode
    {
        Standard,
        Recycling,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum ZoomMode
    {
        Disabled,
        Enabled,
    };
}
namespace Microsoft.UI.Xaml.Controls.Primitives
{

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum GeneratorDirection
    {
        Forward,
        Backward,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum GroupHeaderPlacement
    {
        Top,
        Left,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum PlacementMode
    {
        Bottom = 2,
        Left = 9,
        Mouse = 7,
        Right = 4,
        Top = 10,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum ScrollEventType
    {
        SmallDecrement,
        SmallIncrement,
        LargeDecrement,
        LargeIncrement,
        ThumbPosition,
        ThumbTrack,
        First,
        Last,
        EndScroll,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum ScrollingIndicatorMode
    {
        None,
        TouchIndicator,
        MouseIndicator,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum SliderSnapsTo
    {
        StepValues,
        Ticks,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum SnapPointsAlignment
    {
        Near,
        Center,
        Far,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum TickPlacement
    {
        None,
        TopLeft,
        BottomRight,
        Outside,
        Inline,
    };
}
namespace Microsoft.UI.Xaml.Printing
{

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum PreviewPageCountType
    {
        Final,
        Intermediate,
    };
}
namespace Microsoft.UI.Xaml.Navigation
{

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum NavigationCacheMode
    {
        Disabled,
        Required,
        Enabled,
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum NavigationMode
    {
        New,
        Back,
        Forward,
        Refresh,
    };
}
namespace Microsoft.UI.Xaml.Interop
{

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    enum NotifyCollectionChangedAction
    {
        Add,
        Remove,
        Replace,
        Move,
        Reset,
    };
}

namespace Microsoft.UI.Xaml.Documents
{

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    struct TextRange
    {
        Int32 StartIndex;
        Int32 Length;
    };
}

namespace Microsoft.UI.Xaml
{
    declare
    {
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.CandidateWindowAlignment>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.CharacterCasing>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.ClickMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.InputValidationKind>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.InputValidationMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.ItemsUpdatingScrollMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.ListViewReorderMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.ListViewSelectionMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Orientation>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.PanelScrollingDirection>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.PasswordRevealMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.RichEditClipboardFormat>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.ScrollBarVisibility>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.ScrollIntoViewAlignment>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.ScrollMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.SelectionMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.SnapPointsType>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.StretchDirection>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.VirtualizationMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.ZoomMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Primitives.GeneratorDirection>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Primitives.GroupHeaderPlacement>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Primitives.PlacementMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Primitives.SliderSnapsTo>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Primitives.TickPlacement>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Documents.LogicalDirection>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Documents.UnderlineStyle>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Navigation.NavigationCacheMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Navigation.NavigationMode>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Printing.PreviewPageCountType>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.DragItemsStartingEventHandler>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.ItemClickEventHandler>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventHandler>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventHandler>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventHandler>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.Primitives.ScrollEventHandler>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.SelectionChangedEventHandler>;
        interface Windows.Foundation.IReference<Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler>;
        interface Windows.Foundation.IReference<Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ListViewBase*, Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs*>*>;
        interface Windows.Foundation.IReference<Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ListViewBase*, Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs*>*>;
        interface Windows.Foundation.IReference<Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ListViewBase*, Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs*>*>;
        interface Windows.Foundation.IReference<Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ListViewBase*, Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs*>*>;
        interface Windows.Foundation.IReference<Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.MediaTransportControls*, Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs*>*>;
    }
}

namespace Microsoft.UI.Xaml.Controls
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [attributeusage(target_runtimeclass)]
    [attributename("inputproperty")]
    [webhosthidden]
    attribute InputPropertyAttribute
    {
        String Name;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void CleanUpVirtualizedItemEventHandler(Object sender, Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void ContextMenuOpeningEventHandler(Object sender, Microsoft.UI.Xaml.Controls.ContextMenuEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void DragItemsStartingEventHandler(Object sender, Microsoft.UI.Xaml.Controls.DragItemsStartingEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void ItemClickEventHandler(Object sender, Microsoft.UI.Xaml.Controls.ItemClickEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void SelectionChangedEventHandler(Object sender, Microsoft.UI.Xaml.Controls.SelectionChangedEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void SemanticZoomViewChangedEventHandler(Object sender, Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void TextChangedEventHandler(Object sender, Microsoft.UI.Xaml.Controls.TextChangedEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void TextControlPasteEventHandler(Object sender, Microsoft.UI.Xaml.Controls.TextControlPasteEventArgs e);

}
namespace Microsoft.UI.Xaml.Controls.Primitives
{

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void DragCompletedEventHandler(Object sender, Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void DragDeltaEventHandler(Object sender, Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void DragStartedEventHandler(Object sender, Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void ItemsChangedEventHandler(Object sender, Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void RangeBaseValueChangedEventHandler(Object sender, Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void ScrollEventHandler(Object sender, Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs e);

}
namespace Microsoft.UI.Xaml.Printing
{

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void AddPagesEventHandler(Object sender, Microsoft.UI.Xaml.Printing.AddPagesEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void GetPreviewPageEventHandler(Object sender, Microsoft.UI.Xaml.Printing.GetPreviewPageEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void PaginateEventHandler(Object sender, Microsoft.UI.Xaml.Printing.PaginateEventArgs e);

}
namespace Microsoft.UI.Xaml.Navigation
{

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void NavigatedEventHandler(Object sender, Microsoft.UI.Xaml.Navigation.NavigationEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void NavigatingCancelEventHandler(Object sender, Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void NavigationFailedEventHandler(Object sender, Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void NavigationStoppedEventHandler(Object sender, Microsoft.UI.Xaml.Navigation.NavigationEventArgs e);

}
namespace Microsoft.UI.Xaml.Interop
{

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [uuid(624cd4e1-d007-43b1-9c03-af4d3e6258c4)]
    [webhosthidden]
    delegate void BindableVectorChangedEventHandler(Microsoft.UI.Xaml.Interop.IBindableObservableVector vector, Object e);

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    delegate void NotifyCollectionChangedEventHandler(Object sender, Microsoft.UI.Xaml.Interop.NotifyCollectionChangedEventArgs e);

}

namespace Microsoft.UI.Xaml
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    interface IDataTemplateExtension 
    {
        void ResetTemplate();
        Boolean ProcessBinding(UInt32 phase);
        Int32 ProcessBindings(Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs arg);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass DataTemplate
        : Microsoft.UI.Xaml.FrameworkTemplate
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.IElementFactory
    {
        [method_name("CreateInstance")] DataTemplate();
        Microsoft.UI.Xaml.DependencyObject LoadContent();
        static Microsoft.UI.Xaml.DependencyProperty ExtensionInstanceProperty{ get; };
        static Microsoft.UI.Xaml.IDataTemplateExtension GetExtensionInstance(Microsoft.UI.Xaml.FrameworkElement element);
        static void SetExtensionInstance(Microsoft.UI.Xaml.FrameworkElement element, Microsoft.UI.Xaml.IDataTemplateExtension value);
    };

}
namespace Microsoft.UI.Xaml.Media
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass VisualTreeHelper
    {
        [method_name("FindElementsInHostCoordinatesPoint"), default_overload] static Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(Windows.Foundation.Point intersectingPoint, Microsoft.UI.Xaml.UIElement subtree);
        [method_name("FindElementsInHostCoordinatesRect")] static Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(Windows.Foundation.Rect intersectingRect, Microsoft.UI.Xaml.UIElement subtree);
        [method_name("FindAllElementsInHostCoordinatesPoint"), default_overload] static Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(Windows.Foundation.Point intersectingPoint, Microsoft.UI.Xaml.UIElement subtree, Boolean includeAllElements);
        [method_name("FindAllElementsInHostCoordinatesRect")] static Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(Windows.Foundation.Rect intersectingRect, Microsoft.UI.Xaml.UIElement subtree, Boolean includeAllElements);
        static Microsoft.UI.Xaml.DependencyObject GetChild(Microsoft.UI.Xaml.DependencyObject reference, Int32 childIndex);
        static Int32 GetChildrenCount(Microsoft.UI.Xaml.DependencyObject reference);
        static Microsoft.UI.Xaml.DependencyObject GetParent(Microsoft.UI.Xaml.DependencyObject reference);
        static void DisconnectChildrenRecursive(Microsoft.UI.Xaml.UIElement element);
        static Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.Primitives.Popup> GetOpenPopups(Microsoft.UI.Xaml.Window window);
        static Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.Primitives.Popup> GetOpenPopupsForXamlRoot(Microsoft.UI.Xaml.XamlRoot xamlRoot);
    };

}
namespace Microsoft.UI.Xaml.Documents
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass BlockCollection
        :[default] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Documents.Block>
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass InlineCollection
        :[default] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Documents.Inline>
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass TextHighlighter
    {
        [method_name("CreateInstance")] TextHighlighter();
        Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Documents.TextRange> Ranges{ get; };
        Microsoft.UI.Xaml.Media.Brush Foreground;
        Microsoft.UI.Xaml.Media.Brush Background;
        static Microsoft.UI.Xaml.DependencyProperty ForegroundProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BackgroundProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TextPointer
    {
        Microsoft.UI.Xaml.DependencyObject Parent{ get; };
        Microsoft.UI.Xaml.FrameworkElement VisualParent{ get; };
        Microsoft.UI.Xaml.Documents.LogicalDirection LogicalDirection{ get; };
        Int32 Offset{ get; };
        Windows.Foundation.Rect GetCharacterRect(Microsoft.UI.Xaml.Documents.LogicalDirection direction);
        Microsoft.UI.Xaml.Documents.TextPointer GetPositionAtOffset(Int32 offset, Microsoft.UI.Xaml.Documents.LogicalDirection direction);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass Typography
    {
        static Microsoft.UI.Xaml.DependencyProperty AnnotationAlternatesProperty{ get; };
        static Int32 GetAnnotationAlternates(Microsoft.UI.Xaml.DependencyObject element);
        static void SetAnnotationAlternates(Microsoft.UI.Xaml.DependencyObject element, Int32 value);
        static Microsoft.UI.Xaml.DependencyProperty EastAsianExpertFormsProperty{ get; };
        static Boolean GetEastAsianExpertForms(Microsoft.UI.Xaml.DependencyObject element);
        static void SetEastAsianExpertForms(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty EastAsianLanguageProperty{ get; };
        static Microsoft.UI.Xaml.FontEastAsianLanguage GetEastAsianLanguage(Microsoft.UI.Xaml.DependencyObject element);
        static void SetEastAsianLanguage(Microsoft.UI.Xaml.DependencyObject element, Microsoft.UI.Xaml.FontEastAsianLanguage value);
        static Microsoft.UI.Xaml.DependencyProperty EastAsianWidthsProperty{ get; };
        static Microsoft.UI.Xaml.FontEastAsianWidths GetEastAsianWidths(Microsoft.UI.Xaml.DependencyObject element);
        static void SetEastAsianWidths(Microsoft.UI.Xaml.DependencyObject element, Microsoft.UI.Xaml.FontEastAsianWidths value);
        static Microsoft.UI.Xaml.DependencyProperty StandardLigaturesProperty{ get; };
        static Boolean GetStandardLigatures(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStandardLigatures(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty ContextualLigaturesProperty{ get; };
        static Boolean GetContextualLigatures(Microsoft.UI.Xaml.DependencyObject element);
        static void SetContextualLigatures(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty DiscretionaryLigaturesProperty{ get; };
        static Boolean GetDiscretionaryLigatures(Microsoft.UI.Xaml.DependencyObject element);
        static void SetDiscretionaryLigatures(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty HistoricalLigaturesProperty{ get; };
        static Boolean GetHistoricalLigatures(Microsoft.UI.Xaml.DependencyObject element);
        static void SetHistoricalLigatures(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StandardSwashesProperty{ get; };
        static Int32 GetStandardSwashes(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStandardSwashes(Microsoft.UI.Xaml.DependencyObject element, Int32 value);
        static Microsoft.UI.Xaml.DependencyProperty ContextualSwashesProperty{ get; };
        static Int32 GetContextualSwashes(Microsoft.UI.Xaml.DependencyObject element);
        static void SetContextualSwashes(Microsoft.UI.Xaml.DependencyObject element, Int32 value);
        static Microsoft.UI.Xaml.DependencyProperty ContextualAlternatesProperty{ get; };
        static Boolean GetContextualAlternates(Microsoft.UI.Xaml.DependencyObject element);
        static void SetContextualAlternates(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticAlternatesProperty{ get; };
        static Int32 GetStylisticAlternates(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticAlternates(Microsoft.UI.Xaml.DependencyObject element, Int32 value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet1Property{ get; };
        static Boolean GetStylisticSet1(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet1(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet2Property{ get; };
        static Boolean GetStylisticSet2(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet2(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet3Property{ get; };
        static Boolean GetStylisticSet3(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet3(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet4Property{ get; };
        static Boolean GetStylisticSet4(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet4(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet5Property{ get; };
        static Boolean GetStylisticSet5(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet5(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet6Property{ get; };
        static Boolean GetStylisticSet6(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet6(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet7Property{ get; };
        static Boolean GetStylisticSet7(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet7(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet8Property{ get; };
        static Boolean GetStylisticSet8(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet8(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet9Property{ get; };
        static Boolean GetStylisticSet9(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet9(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet10Property{ get; };
        static Boolean GetStylisticSet10(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet10(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet11Property{ get; };
        static Boolean GetStylisticSet11(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet11(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet12Property{ get; };
        static Boolean GetStylisticSet12(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet12(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet13Property{ get; };
        static Boolean GetStylisticSet13(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet13(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet14Property{ get; };
        static Boolean GetStylisticSet14(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet14(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet15Property{ get; };
        static Boolean GetStylisticSet15(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet15(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet16Property{ get; };
        static Boolean GetStylisticSet16(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet16(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet17Property{ get; };
        static Boolean GetStylisticSet17(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet17(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet18Property{ get; };
        static Boolean GetStylisticSet18(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet18(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet19Property{ get; };
        static Boolean GetStylisticSet19(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet19(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty StylisticSet20Property{ get; };
        static Boolean GetStylisticSet20(Microsoft.UI.Xaml.DependencyObject element);
        static void SetStylisticSet20(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty CapitalsProperty{ get; };
        static Microsoft.UI.Xaml.FontCapitals GetCapitals(Microsoft.UI.Xaml.DependencyObject element);
        static void SetCapitals(Microsoft.UI.Xaml.DependencyObject element, Microsoft.UI.Xaml.FontCapitals value);
        static Microsoft.UI.Xaml.DependencyProperty CapitalSpacingProperty{ get; };
        static Boolean GetCapitalSpacing(Microsoft.UI.Xaml.DependencyObject element);
        static void SetCapitalSpacing(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty KerningProperty{ get; };
        static Boolean GetKerning(Microsoft.UI.Xaml.DependencyObject element);
        static void SetKerning(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty CaseSensitiveFormsProperty{ get; };
        static Boolean GetCaseSensitiveForms(Microsoft.UI.Xaml.DependencyObject element);
        static void SetCaseSensitiveForms(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty HistoricalFormsProperty{ get; };
        static Boolean GetHistoricalForms(Microsoft.UI.Xaml.DependencyObject element);
        static void SetHistoricalForms(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty FractionProperty{ get; };
        static Microsoft.UI.Xaml.FontFraction GetFraction(Microsoft.UI.Xaml.DependencyObject element);
        static void SetFraction(Microsoft.UI.Xaml.DependencyObject element, Microsoft.UI.Xaml.FontFraction value);
        static Microsoft.UI.Xaml.DependencyProperty NumeralStyleProperty{ get; };
        static Microsoft.UI.Xaml.FontNumeralStyle GetNumeralStyle(Microsoft.UI.Xaml.DependencyObject element);
        static void SetNumeralStyle(Microsoft.UI.Xaml.DependencyObject element, Microsoft.UI.Xaml.FontNumeralStyle value);
        static Microsoft.UI.Xaml.DependencyProperty NumeralAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.FontNumeralAlignment GetNumeralAlignment(Microsoft.UI.Xaml.DependencyObject element);
        static void SetNumeralAlignment(Microsoft.UI.Xaml.DependencyObject element, Microsoft.UI.Xaml.FontNumeralAlignment value);
        static Microsoft.UI.Xaml.DependencyProperty SlashedZeroProperty{ get; };
        static Boolean GetSlashedZero(Microsoft.UI.Xaml.DependencyObject element);
        static void SetSlashedZero(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty MathematicalGreekProperty{ get; };
        static Boolean GetMathematicalGreek(Microsoft.UI.Xaml.DependencyObject element);
        static void SetMathematicalGreek(Microsoft.UI.Xaml.DependencyObject element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty VariantsProperty{ get; };
        static Microsoft.UI.Xaml.FontVariants GetVariants(Microsoft.UI.Xaml.DependencyObject element);
        static void SetVariants(Microsoft.UI.Xaml.DependencyObject element, Microsoft.UI.Xaml.FontVariants value);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [constructor_name("Microsoft.UI.Xaml.Documents.ITextElementFactory")]
    unsealed runtimeclass TextElement
        : Microsoft.UI.Xaml.DependencyObject
    {
        String Name{ get; };
        Double FontSize;
        Microsoft.UI.Xaml.Media.FontFamily FontFamily;
        Windows.UI.Text.FontWeight FontWeight;
        Windows.UI.Text.FontStyle FontStyle;
        Windows.UI.Text.FontStretch FontStretch;
        Int32 CharacterSpacing;
        Microsoft.UI.Xaml.Media.Brush Foreground;
        String Language;
        Boolean IsTextScaleFactorEnabled;
        Windows.UI.Text.TextDecorations TextDecorations;
        Microsoft.UI.Xaml.Documents.TextPointer ContentStart{ get; };
        Microsoft.UI.Xaml.Documents.TextPointer ContentEnd{ get; };
        Microsoft.UI.Xaml.Documents.TextPointer ElementStart{ get; };
        Microsoft.UI.Xaml.Documents.TextPointer ElementEnd{ get; };
        Boolean AllowFocusOnInteraction;
        String AccessKey;
        Boolean ExitDisplayModeOnAccessKeyInvoked;
        Boolean IsAccessKeyScope;
        Microsoft.UI.Xaml.DependencyObject AccessKeyScopeOwner;
        Microsoft.UI.Xaml.Input.KeyTipPlacementMode KeyTipPlacementMode;
        Double KeyTipHorizontalOffset;
        Double KeyTipVerticalOffset;
        Microsoft.UI.Xaml.XamlRoot XamlRoot;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Documents.TextElement,Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> AccessKeyDisplayRequested;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Documents.TextElement,Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> AccessKeyDisplayDismissed;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Documents.TextElement,Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs> AccessKeyInvoked;
        Object FindName(String name);
        static Microsoft.UI.Xaml.DependencyProperty FontSizeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontFamilyProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontWeightProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontStyleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontStretchProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CharacterSpacingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ForegroundProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LanguageProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsTextScaleFactorEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextDecorationsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty AllowFocusOnInteractionProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty AccessKeyProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ExitDisplayModeOnAccessKeyInvokedProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsAccessKeyScopeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty AccessKeyScopeOwnerProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty KeyTipPlacementModeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty KeyTipHorizontalOffsetProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty KeyTipVerticalOffsetProperty{ get; };
        overridable void OnDisconnectVisualChildren();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass TextHighlighterBase
        : Microsoft.UI.Xaml.DependencyObject
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [constructor_name("Microsoft.UI.Xaml.Documents.IBlockFactory")]
    unsealed runtimeclass Block
        : Microsoft.UI.Xaml.Documents.TextElement
    {
        [method_name("CreateInstance")] protected Block();
        Microsoft.UI.Xaml.TextAlignment TextAlignment;
        Microsoft.UI.Xaml.TextAlignment HorizontalTextAlignment;
        Double LineHeight;
        Microsoft.UI.Xaml.LineStackingStrategy LineStackingStrategy;
        Microsoft.UI.Xaml.Thickness Margin;
        static Microsoft.UI.Xaml.DependencyProperty TextAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HorizontalTextAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LineHeightProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LineStackingStrategyProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MarginProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [constructor_name("Microsoft.UI.Xaml.Documents.IInlineFactory")]
    [default_interface]
    unsealed runtimeclass Inline
        : Microsoft.UI.Xaml.Documents.TextElement
    {
        [method_name("CreateInstance")] protected Inline();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Child")]
    runtimeclass InlineUIContainer
        : Microsoft.UI.Xaml.Documents.Inline
    {
        InlineUIContainer();
        Microsoft.UI.Xaml.UIElement Child;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass LineBreak
        : Microsoft.UI.Xaml.Documents.Inline
    {
        LineBreak();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Inlines")]
    runtimeclass Paragraph
        : Microsoft.UI.Xaml.Documents.Block
    {
        Paragraph();
        Microsoft.UI.Xaml.Documents.InlineCollection Inlines{ get; };
        Double TextIndent;
        static Microsoft.UI.Xaml.DependencyProperty TextIndentProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Text")]
    runtimeclass Run
        : Microsoft.UI.Xaml.Documents.Inline
    {
        Run();
        String Text;
        Microsoft.UI.Xaml.FlowDirection FlowDirection;
        static Microsoft.UI.Xaml.DependencyProperty FlowDirectionProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Inlines")]
    unsealed runtimeclass Span
        : Microsoft.UI.Xaml.Documents.Inline
    {
        [method_name("CreateInstance")] Span();
        Microsoft.UI.Xaml.Documents.InlineCollection Inlines;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass Bold
        : Microsoft.UI.Xaml.Documents.Span
    {
        Bold();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass Italic
        : Microsoft.UI.Xaml.Documents.Span
    {
        Italic();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass Underline
        : Microsoft.UI.Xaml.Documents.Span
    {
        Underline();
    };

}
namespace Microsoft.UI.Xaml.Controls
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [feature(Feature_InputValidation)]
    [webhosthidden]
    interface IInputValidationControl 
    {
        Windows.Foundation.Collections.IObservableVector<Microsoft.UI.Xaml.Controls.InputValidationError> ValidationErrors{ get; };
        Boolean HasValidationErrors{ get; };
        Microsoft.UI.Xaml.Controls.InputValidationContext ValidationContext;
        Microsoft.UI.Xaml.DataTemplate ErrorTemplate;
        Microsoft.UI.Xaml.Controls.InputValidationMode InputValidationMode;
        Microsoft.UI.Xaml.Controls.InputValidationKind InputValidationKind;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.IInputValidationControl,Microsoft.UI.Xaml.Controls.HasValidationErrorsChangedEventArgs> HasValidationErrorsChanged;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.IInputValidationControl,Microsoft.UI.Xaml.Controls.InputValidationErrorEventArgs> ValidationError;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    interface IInsertionPanel 
    {
        void GetInsertionIndexes(Windows.Foundation.Point position, out Int32 first, out Int32 second);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    interface IItemContainerMapping 
    {
        Object ItemFromContainer(Microsoft.UI.Xaml.DependencyObject container);
        Microsoft.UI.Xaml.DependencyObject ContainerFromItem(Object item);
        Int32 IndexFromContainer(Microsoft.UI.Xaml.DependencyObject container);
        Microsoft.UI.Xaml.DependencyObject ContainerFromIndex(Int32 index);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    interface INavigate 
    {
        Boolean Navigate(Windows.UI.Xaml.Interop.TypeName sourcePageType);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    interface IScrollAnchorProvider 
    {
        Microsoft.UI.Xaml.UIElement CurrentAnchor{ get; };
        void RegisterAnchorCandidate(Microsoft.UI.Xaml.UIElement element);
        void UnregisterAnchorCandidate(Microsoft.UI.Xaml.UIElement element);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    interface ISemanticZoomInformation 
    {
        Microsoft.UI.Xaml.Controls.SemanticZoom SemanticZoomOwner;
        Boolean IsActiveView;
        Boolean IsZoomedInView;
        void InitializeViewChange();
        void CompleteViewChange();
        void MakeVisible(Microsoft.UI.Xaml.Controls.SemanticZoomLocation item);
        void StartViewChangeFrom(Microsoft.UI.Xaml.Controls.SemanticZoomLocation source, Microsoft.UI.Xaml.Controls.SemanticZoomLocation destination);
        void StartViewChangeTo(Microsoft.UI.Xaml.Controls.SemanticZoomLocation source, Microsoft.UI.Xaml.Controls.SemanticZoomLocation destination);
        void CompleteViewChangeFrom(Microsoft.UI.Xaml.Controls.SemanticZoomLocation source, Microsoft.UI.Xaml.Controls.SemanticZoomLocation destination);
        void CompleteViewChangeTo(Microsoft.UI.Xaml.Controls.SemanticZoomLocation source, Microsoft.UI.Xaml.Controls.SemanticZoomLocation destination);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass CandidateWindowBoundsChangedEventArgs
    {
        Windows.Foundation.Rect Bounds{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ChoosingGroupHeaderContainerEventArgs
    {
        ChoosingGroupHeaderContainerEventArgs();
        Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem GroupHeaderContainer;
        Int32 GroupIndex{ get; };
        Object Group{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ChoosingItemContainerEventArgs
    {
        ChoosingItemContainerEventArgs();
        Int32 ItemIndex{ get; };
        Object Item{ get; };
        Microsoft.UI.Xaml.Controls.Primitives.SelectorItem ItemContainer;
        Boolean IsContainerPrepared;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ColumnDefinitionCollection
        :[default] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.ColumnDefinition>
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ComboBoxTextSubmittedEventArgs
    {
        String Text{ get; };
        Boolean Handled;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ContainerContentChangingEventArgs
    {
        ContainerContentChangingEventArgs();
        Microsoft.UI.Xaml.Controls.Primitives.SelectorItem ItemContainer{ get; };
        Boolean InRecycleQueue{ get; };
        Int32 ItemIndex{ get; };
        Object Item{ get; };
        UInt32 Phase{ get; };
        Boolean Handled;
        [method_name("RegisterUpdateCallback")] void RegisterUpdateCallback(Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ListViewBase,Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs> callback);
        [method_name("RegisterUpdateCallbackWithPhase")] void RegisterUpdateCallback(UInt32 callbackPhase, Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ListViewBase,Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs> callback);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass DataTemplateSelector
        : [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.IElementFactory
    {
        [method_name("CreateInstance")] DataTemplateSelector();
        Microsoft.UI.Xaml.DataTemplate SelectTemplate(Object item, Microsoft.UI.Xaml.DependencyObject container);
        [method_name("SelectTemplateForItem")] Microsoft.UI.Xaml.DataTemplate SelectTemplate(Object item);
        overridable Microsoft.UI.Xaml.DataTemplate SelectTemplateCore(Object item, Microsoft.UI.Xaml.DependencyObject container);
        [method_name("SelectTemplateForItemCore")] overridable Microsoft.UI.Xaml.DataTemplate SelectTemplateCore(Object item);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass DragItemsCompletedEventArgs
    {
        Windows.Foundation.Collections.IVectorView<Object> Items{ get; };
        Windows.ApplicationModel.DataTransfer.DataPackageOperation DropResult{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass DragItemsStartingEventArgs
    {
        DragItemsStartingEventArgs();
        Boolean Cancel;
        Windows.Foundation.Collections.IVector<Object> Items{ get; };
        Windows.ApplicationModel.DataTransfer.DataPackage Data{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass GroupStyle
        : [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Data.INotifyPropertyChanged
    {
        [method_name("CreateInstance")] GroupStyle();
        Microsoft.UI.Xaml.Controls.ItemsPanelTemplate Panel;
        [deprecated("ContainerStyle may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.", deprecate, Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Style ContainerStyle;
        Microsoft.UI.Xaml.Style HeaderContainerStyle;
        [deprecated("ContainerStyleSelector may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.", deprecate, Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.StyleSelector ContainerStyleSelector;
        Microsoft.UI.Xaml.DataTemplate HeaderTemplate;
        Microsoft.UI.Xaml.Controls.DataTemplateSelector HeaderTemplateSelector;
        Boolean HidesIfEmpty;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass GroupStyleSelector
    {
        [method_name("CreateInstance")] GroupStyleSelector();
        Microsoft.UI.Xaml.Controls.GroupStyle SelectGroupStyle(Object group, UInt32 level);
        overridable Microsoft.UI.Xaml.Controls.GroupStyle SelectGroupStyleCore(Object group, UInt32 level);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass HasValidationErrorsChangedEventArgs
    {
        Boolean NewValue{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [feature(Feature_InputValidation)]
    [webhosthidden]
    unsealed runtimeclass InputValidationContext
    {
        [method_name("CreateInstance")] InputValidationContext(String memberName, Boolean isRequired);
        Boolean IsInputRequired{ get; };
        String MemberName{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [feature(Feature_InputValidation)]
    [webhosthidden]
    unsealed runtimeclass InputValidationError
    {
        [method_name("CreateInstance")] InputValidationError(String errorMessage);
        String ErrorMessage{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [feature(Feature_InputValidation)]
    [webhosthidden]
    runtimeclass InputValidationErrorEventArgs
    {
        Microsoft.UI.Xaml.Controls.InputValidationErrorEventAction Action{ get; };
        Microsoft.UI.Xaml.Controls.InputValidationError Error{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass IsTextTrimmedChangedEventArgs
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ItemCollection
        :[default] Windows.Foundation.Collections.IObservableVector<Object>
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ItemContainerGenerator
    {
        event Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler ItemsChanged;
        [deprecated("ItemFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ItemFromContainer.", deprecate, Microsoft.UI.Xaml.WinUIContract, 1)]
        Object ItemFromContainer(Microsoft.UI.Xaml.DependencyObject container);
        [deprecated("ContainerFromItem may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromItem.", deprecate, Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.DependencyObject ContainerFromItem(Object item);
        [deprecated("IndexFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.IndexFromContainer.", deprecate, Microsoft.UI.Xaml.WinUIContract, 1)]
        Int32 IndexFromContainer(Microsoft.UI.Xaml.DependencyObject container);
        [deprecated("ContainerFromIndex may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromIndex.", deprecate, Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.DependencyObject ContainerFromIndex(Int32 index);
        Microsoft.UI.Xaml.Controls.ItemContainerGenerator GetItemContainerGeneratorForPanel(Microsoft.UI.Xaml.Controls.Panel panel);
        void StartAt(Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition position, Microsoft.UI.Xaml.Controls.Primitives.GeneratorDirection direction, Boolean allowStartAtRealizedItem);
        void Stop();
        [return_name("returnValue")] Microsoft.UI.Xaml.DependencyObject GenerateNext(out Boolean isNewlyRealized);
        void PrepareItemContainer(Microsoft.UI.Xaml.DependencyObject container);
        void RemoveAll();
        void Remove(Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition position, Int32 count);
        Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition GeneratorPositionFromIndex(Int32 itemIndex);
        Int32 IndexFromGeneratorPosition(Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition position);
        void Recycle(Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition position, Int32 count);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 3)]
    [webhosthidden]
    [default_interface]
    runtimeclass MediaTransportControlsHelper
    {
        static Microsoft.UI.Xaml.DependencyProperty DropoutOrderProperty{ get; };
        static Windows.Foundation.IReference<Int32> GetDropoutOrder(Microsoft.UI.Xaml.UIElement element);
        static void SetDropoutOrder(Microsoft.UI.Xaml.UIElement element, Windows.Foundation.IReference<Int32> value);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass PasswordBoxPasswordChangingEventArgs
    {
        Boolean IsContentChanging{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass RowDefinitionCollection
        :[default] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.RowDefinition>
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass SemanticZoomLocation
    {
        SemanticZoomLocation();
        Object Item;
        Windows.Foundation.Rect Bounds;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass SemanticZoomViewChangedEventArgs
    {
        SemanticZoomViewChangedEventArgs();
        Boolean IsSourceZoomedInView;
        Microsoft.UI.Xaml.Controls.SemanticZoomLocation SourceItem;
        Microsoft.UI.Xaml.Controls.SemanticZoomLocation DestinationItem;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass StyleSelector
    {
        [method_name("CreateInstance")] StyleSelector();
        Microsoft.UI.Xaml.Style SelectStyle(Object item, Microsoft.UI.Xaml.DependencyObject container);
        overridable Microsoft.UI.Xaml.Style SelectStyleCore(Object item, Microsoft.UI.Xaml.DependencyObject container);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TextBoxBeforeTextChangingEventArgs
    {
        String NewText{ get; };
        Boolean Cancel;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TextBoxSelectionChangingEventArgs
    {
        Int32 SelectionStart{ get; };
        Int32 SelectionLength{ get; };
        Boolean Cancel;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TextBoxTextChangingEventArgs
    {
        Boolean IsContentChanging{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TextCompositionChangedEventArgs
    {
        Int32 StartIndex{ get; };
        Int32 Length{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TextCompositionEndedEventArgs
    {
        Int32 StartIndex{ get; };
        Int32 Length{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TextCompositionStartedEventArgs
    {
        Int32 StartIndex{ get; };
        Int32 Length{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TextControlCopyingToClipboardEventArgs
    {
        Boolean Handled;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TextControlCuttingToClipboardEventArgs
    {
        Boolean Handled;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TextControlPasteEventArgs
    {
        Boolean Handled;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass ToolTipService
    {
        static Microsoft.UI.Xaml.DependencyProperty PlacementProperty{ get; };
        static Microsoft.UI.Xaml.Controls.Primitives.PlacementMode GetPlacement(Microsoft.UI.Xaml.DependencyObject element);
        static void SetPlacement(Microsoft.UI.Xaml.DependencyObject element, Microsoft.UI.Xaml.Controls.Primitives.PlacementMode value);
        static Microsoft.UI.Xaml.DependencyProperty PlacementTargetProperty{ get; };
        static Microsoft.UI.Xaml.UIElement GetPlacementTarget(Microsoft.UI.Xaml.DependencyObject element);
        static void SetPlacementTarget(Microsoft.UI.Xaml.DependencyObject element, Microsoft.UI.Xaml.UIElement value);
        static Microsoft.UI.Xaml.DependencyProperty ToolTipProperty{ get; };
        static Object GetToolTip(Microsoft.UI.Xaml.DependencyObject element);
        static void SetToolTip(Microsoft.UI.Xaml.DependencyObject element, Object value);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass CleanUpVirtualizedItemEventArgs
        : Microsoft.UI.Xaml.RoutedEventArgs
    {
        Object Value{ get; };
        Microsoft.UI.Xaml.UIElement UIElement{ get; };
        Boolean Cancel;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Width")]
    runtimeclass ColumnDefinition
        : Microsoft.UI.Xaml.DependencyObject
    {
        ColumnDefinition();
        Microsoft.UI.Xaml.GridLength Width;
        Double MaxWidth;
        Double MinWidth;
        Double ActualWidth{ get; };
        static Microsoft.UI.Xaml.DependencyProperty WidthProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MaxWidthProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MinWidthProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ContextMenuEventArgs
        : Microsoft.UI.Xaml.RoutedEventArgs
    {
        Boolean Handled;
        Double CursorLeft{ get; };
        Double CursorTop{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ItemClickEventArgs
        : Microsoft.UI.Xaml.RoutedEventArgs
    {
        ItemClickEventArgs();
        Object ClickedItem{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Height")]
    runtimeclass RowDefinition
        : Microsoft.UI.Xaml.DependencyObject
    {
        RowDefinition();
        Microsoft.UI.Xaml.GridLength Height;
        Double MaxHeight;
        Double MinHeight;
        Double ActualHeight{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeightProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MaxHeightProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MinHeightProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass SelectionChangedEventArgs
        : Microsoft.UI.Xaml.RoutedEventArgs
    {
        [method_name("CreateInstanceWithRemovedItemsAndAddedItems")] SelectionChangedEventArgs(Windows.Foundation.Collections.IVector<Object> removedItems, Windows.Foundation.Collections.IVector<Object> addedItems);
        Windows.Foundation.Collections.IVector<Object> AddedItems{ get; };
        Windows.Foundation.Collections.IVector<Object> RemovedItems{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass TextChangedEventArgs
        : Microsoft.UI.Xaml.RoutedEventArgs
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass ItemsPanelTemplate
        : Microsoft.UI.Xaml.FrameworkTemplate
    {
        ItemsPanelTemplate();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Child")]
    runtimeclass Border
        : Microsoft.UI.Xaml.FrameworkElement
    {
        Border();
        Microsoft.UI.Xaml.Media.Brush BorderBrush;
        Microsoft.UI.Xaml.Thickness BorderThickness;
        Microsoft.UI.Xaml.Media.Brush Background;
        Microsoft.UI.Xaml.Controls.BackgroundSizing BackgroundSizing;
        Microsoft.UI.Xaml.CornerRadius CornerRadius;
        Microsoft.UI.Xaml.Thickness Padding;
        Microsoft.UI.Xaml.UIElement Child;
        Microsoft.UI.Xaml.Media.Animation.TransitionCollection ChildTransitions;
        Microsoft.UI.Xaml.BrushTransition BackgroundTransition;
        static Microsoft.UI.Xaml.DependencyProperty BorderBrushProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BorderThicknessProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BackgroundProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BackgroundSizingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CornerRadiusProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PaddingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ChildTransitionsProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Content")]
    unsealed runtimeclass ContentPresenter
        : Microsoft.UI.Xaml.FrameworkElement
    {
        [method_name("CreateInstance")] ContentPresenter();
        Object Content;
        Microsoft.UI.Xaml.DataTemplate ContentTemplate;
        Microsoft.UI.Xaml.Controls.DataTemplateSelector ContentTemplateSelector;
        Microsoft.UI.Xaml.Media.Animation.TransitionCollection ContentTransitions;
        Double FontSize;
        Microsoft.UI.Xaml.Media.FontFamily FontFamily;
        Windows.UI.Text.FontWeight FontWeight;
        Windows.UI.Text.FontStyle FontStyle;
        Windows.UI.Text.FontStretch FontStretch;
        Int32 CharacterSpacing;
        Microsoft.UI.Xaml.Media.Brush Foreground;
        Microsoft.UI.Xaml.OpticalMarginAlignment OpticalMarginAlignment;
        Microsoft.UI.Xaml.TextLineBounds TextLineBounds;
        Boolean IsTextScaleFactorEnabled;
        Microsoft.UI.Xaml.BrushTransition BackgroundTransition;
        Microsoft.UI.Xaml.TextWrapping TextWrapping;
        Int32 MaxLines;
        Microsoft.UI.Xaml.LineStackingStrategy LineStackingStrategy;
        Double LineHeight;
        Microsoft.UI.Xaml.Media.Brush BorderBrush;
        Microsoft.UI.Xaml.Thickness BorderThickness;
        Microsoft.UI.Xaml.CornerRadius CornerRadius;
        Microsoft.UI.Xaml.Thickness Padding;
        Microsoft.UI.Xaml.Media.Brush Background;
        Microsoft.UI.Xaml.Controls.BackgroundSizing BackgroundSizing;
        Microsoft.UI.Xaml.HorizontalAlignment HorizontalContentAlignment;
        Microsoft.UI.Xaml.VerticalAlignment VerticalContentAlignment;
        static Microsoft.UI.Xaml.DependencyProperty ContentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ContentTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ContentTemplateSelectorProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ContentTransitionsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontSizeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontFamilyProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontWeightProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontStyleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontStretchProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CharacterSpacingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ForegroundProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty OpticalMarginAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextLineBoundsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsTextScaleFactorEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextWrappingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MaxLinesProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LineStackingStrategyProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LineHeightProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BorderBrushProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BorderThicknessProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CornerRadiusProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PaddingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BackgroundProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BackgroundSizingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HorizontalContentAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty VerticalContentAlignmentProperty{ get; };
        overridable void OnContentTemplateChanged(Microsoft.UI.Xaml.DataTemplate oldContentTemplate, Microsoft.UI.Xaml.DataTemplate newContentTemplate);
        overridable void OnContentTemplateSelectorChanged(Microsoft.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, Microsoft.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass Image
        : Microsoft.UI.Xaml.FrameworkElement
    {
        Image();
        Microsoft.UI.Xaml.Media.ImageSource Source;
        Microsoft.UI.Xaml.Media.Stretch Stretch;
        Microsoft.UI.Xaml.Thickness NineGrid;
        event Microsoft.UI.Xaml.ExceptionRoutedEventHandler ImageFailed;
        event Microsoft.UI.Xaml.RoutedEventHandler ImageOpened;
        Windows.Media.Casting.CastingSource GetAsCastingSource();
        Microsoft.UI.Composition.CompositionBrush GetAlphaMask();
        static Microsoft.UI.Xaml.DependencyProperty SourceProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty StretchProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty NineGridProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ItemsPresenter
        : Microsoft.UI.Xaml.FrameworkElement
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
    {
        ItemsPresenter();
        Object Header;
        Microsoft.UI.Xaml.DataTemplate HeaderTemplate;
        Microsoft.UI.Xaml.Media.Animation.TransitionCollection HeaderTransitions;
        Object Footer;
        Microsoft.UI.Xaml.DataTemplate FooterTemplate;
        Microsoft.UI.Xaml.Media.Animation.TransitionCollection FooterTransitions;
        Microsoft.UI.Xaml.Thickness Padding;
        static Microsoft.UI.Xaml.DependencyProperty HeaderProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderTransitionsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FooterProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FooterTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FooterTransitionsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PaddingProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Children")]
    [constructor_name("Microsoft.UI.Xaml.Controls.IPanelFactory")]
    unsealed runtimeclass Panel
        : Microsoft.UI.Xaml.FrameworkElement
    {
        [method_name("CreateInstance")] protected Panel();
        Microsoft.UI.Xaml.Controls.UIElementCollection Children{ get; };
        Microsoft.UI.Xaml.Media.Brush Background;
        Boolean IsItemsHost{ get; };
        Microsoft.UI.Xaml.Media.Animation.TransitionCollection ChildrenTransitions;
        Microsoft.UI.Xaml.BrushTransition BackgroundTransition;
        static Microsoft.UI.Xaml.DependencyProperty BackgroundProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsItemsHostProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ChildrenTransitionsProperty{ get; };
    
        [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        [feature(Feature_WUXCPreviewTypes)]
        [protected_name("Microsoft.UI.Xaml.Controls.IPanelProtectedFeature_WUXCPreviewTypes")]
        {
            protected Microsoft.UI.Xaml.Media.Brush BorderBrushProtected;
            protected Microsoft.UI.Xaml.Thickness BorderThicknessProtected;
            protected Microsoft.UI.Xaml.CornerRadius CornerRadiusProtected;
        }
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Blocks")]
    runtimeclass RichTextBlock
        : Microsoft.UI.Xaml.FrameworkElement
    {
        RichTextBlock();
        Double FontSize;
        Microsoft.UI.Xaml.Media.FontFamily FontFamily;
        Windows.UI.Text.FontWeight FontWeight;
        Windows.UI.Text.FontStyle FontStyle;
        Windows.UI.Text.FontStretch FontStretch;
        Microsoft.UI.Xaml.Media.Brush Foreground;
        Microsoft.UI.Xaml.TextWrapping TextWrapping;
        Microsoft.UI.Xaml.TextTrimming TextTrimming;
        Microsoft.UI.Xaml.TextAlignment TextAlignment;
        Microsoft.UI.Xaml.Documents.BlockCollection Blocks{ get; };
        Microsoft.UI.Xaml.Thickness Padding;
        Double LineHeight;
        Microsoft.UI.Xaml.LineStackingStrategy LineStackingStrategy;
        Int32 CharacterSpacing;
        Microsoft.UI.Xaml.Controls.RichTextBlockOverflow OverflowContentTarget;
        Boolean IsTextSelectionEnabled;
        Boolean HasOverflowContent{ get; };
        String SelectedText{ get; };
        Microsoft.UI.Xaml.Documents.TextPointer ContentStart{ get; };
        Microsoft.UI.Xaml.Documents.TextPointer ContentEnd{ get; };
        Microsoft.UI.Xaml.Documents.TextPointer SelectionStart{ get; };
        Microsoft.UI.Xaml.Documents.TextPointer SelectionEnd{ get; };
        Double BaselineOffset{ get; };
        Int32 MaxLines;
        Microsoft.UI.Xaml.TextLineBounds TextLineBounds;
        Microsoft.UI.Xaml.Media.SolidColorBrush SelectionHighlightColor;
        Microsoft.UI.Xaml.OpticalMarginAlignment OpticalMarginAlignment;
        Boolean IsColorFontEnabled;
        Microsoft.UI.Xaml.TextReadingOrder TextReadingOrder;
        Boolean IsTextScaleFactorEnabled;
        Windows.UI.Text.TextDecorations TextDecorations;
        Boolean IsTextTrimmed{ get; };
        Microsoft.UI.Xaml.TextAlignment HorizontalTextAlignment;
        Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Documents.TextHighlighter> TextHighlighters{ get; };
        Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase SelectionFlyout;
        event Microsoft.UI.Xaml.RoutedEventHandler SelectionChanged;
        event Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler ContextMenuOpening;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RichTextBlock,Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs> IsTextTrimmedChanged;
        void SelectAll();
        void Select(Microsoft.UI.Xaml.Documents.TextPointer start, Microsoft.UI.Xaml.Documents.TextPointer end);
        Microsoft.UI.Xaml.Documents.TextPointer GetPositionFromPoint(Windows.Foundation.Point point);
        void CopySelectionToClipboard();
        Double TextIndent;
        static Microsoft.UI.Xaml.DependencyProperty FontSizeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontFamilyProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontWeightProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontStyleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontStretchProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ForegroundProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextWrappingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextTrimmingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PaddingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LineHeightProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LineStackingStrategyProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CharacterSpacingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty OverflowContentTargetProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsTextSelectionEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HasOverflowContentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectedTextProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MaxLinesProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextLineBoundsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectionHighlightColorProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty OpticalMarginAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsColorFontEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextReadingOrderProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsTextScaleFactorEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextDecorationsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsTextTrimmedProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HorizontalTextAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectionFlyoutProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextIndentProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass RichTextBlockOverflow
        : Microsoft.UI.Xaml.FrameworkElement
    {
        RichTextBlockOverflow();
        Microsoft.UI.Xaml.Controls.RichTextBlockOverflow OverflowContentTarget;
        Microsoft.UI.Xaml.Thickness Padding;
        Microsoft.UI.Xaml.Controls.RichTextBlock ContentSource{ get; };
        Boolean HasOverflowContent{ get; };
        Microsoft.UI.Xaml.Documents.TextPointer ContentStart{ get; };
        Microsoft.UI.Xaml.Documents.TextPointer ContentEnd{ get; };
        Double BaselineOffset{ get; };
        Int32 MaxLines;
        Boolean IsTextTrimmed{ get; };
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RichTextBlockOverflow,Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs> IsTextTrimmedChanged;
        Microsoft.UI.Xaml.Documents.TextPointer GetPositionFromPoint(Windows.Foundation.Point point);
        static Microsoft.UI.Xaml.DependencyProperty OverflowContentTargetProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PaddingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HasOverflowContentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MaxLinesProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsTextTrimmedProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Inlines")]
    runtimeclass TextBlock
        : Microsoft.UI.Xaml.FrameworkElement
    {
        TextBlock();
        Double FontSize;
        Microsoft.UI.Xaml.Media.FontFamily FontFamily;
        Windows.UI.Text.FontWeight FontWeight;
        Windows.UI.Text.FontStyle FontStyle;
        Windows.UI.Text.FontStretch FontStretch;
        Int32 CharacterSpacing;
        Microsoft.UI.Xaml.Media.Brush Foreground;
        Microsoft.UI.Xaml.TextWrapping TextWrapping;
        Microsoft.UI.Xaml.TextTrimming TextTrimming;
        Microsoft.UI.Xaml.TextAlignment TextAlignment;
        String Text;
        Microsoft.UI.Xaml.Documents.InlineCollection Inlines{ get; };
        Microsoft.UI.Xaml.Thickness Padding;
        Double LineHeight;
        Microsoft.UI.Xaml.LineStackingStrategy LineStackingStrategy;
        Boolean IsTextSelectionEnabled;
        String SelectedText{ get; };
        Microsoft.UI.Xaml.Documents.TextPointer ContentStart{ get; };
        Microsoft.UI.Xaml.Documents.TextPointer ContentEnd{ get; };
        Microsoft.UI.Xaml.Documents.TextPointer SelectionStart{ get; };
        Microsoft.UI.Xaml.Documents.TextPointer SelectionEnd{ get; };
        Double BaselineOffset{ get; };
        Microsoft.UI.Xaml.Media.SolidColorBrush SelectionHighlightColor;
        Int32 MaxLines;
        Microsoft.UI.Xaml.TextLineBounds TextLineBounds;
        Microsoft.UI.Xaml.OpticalMarginAlignment OpticalMarginAlignment;
        Boolean IsColorFontEnabled;
        Microsoft.UI.Xaml.TextReadingOrder TextReadingOrder;
        Boolean IsTextScaleFactorEnabled;
        Windows.UI.Text.TextDecorations TextDecorations;
        Boolean IsTextTrimmed{ get; };
        Microsoft.UI.Xaml.TextAlignment HorizontalTextAlignment;
        Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Documents.TextHighlighter> TextHighlighters{ get; };
        Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase SelectionFlyout;
        event Microsoft.UI.Xaml.RoutedEventHandler SelectionChanged;
        event Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler ContextMenuOpening;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TextBlock,Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs> IsTextTrimmedChanged;
        void SelectAll();
        void Select(Microsoft.UI.Xaml.Documents.TextPointer start, Microsoft.UI.Xaml.Documents.TextPointer end);
        Microsoft.UI.Composition.CompositionBrush GetAlphaMask();
        void CopySelectionToClipboard();
        static Microsoft.UI.Xaml.DependencyProperty FontSizeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontFamilyProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontWeightProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontStyleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FontStretchProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CharacterSpacingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ForegroundProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextWrappingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextTrimmingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PaddingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LineHeightProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LineStackingStrategyProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsTextSelectionEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectedTextProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectionHighlightColorProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MaxLinesProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextLineBoundsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty OpticalMarginAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsColorFontEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextReadingOrderProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsTextScaleFactorEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextDecorationsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsTextTrimmedProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HorizontalTextAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectionFlyoutProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Child")]
    runtimeclass Viewbox
        : Microsoft.UI.Xaml.FrameworkElement
    {
        Viewbox();
        Microsoft.UI.Xaml.UIElement Child;
        Microsoft.UI.Xaml.Media.Stretch Stretch;
        Microsoft.UI.Xaml.Controls.StretchDirection StretchDirection;
        static Microsoft.UI.Xaml.DependencyProperty StretchProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty StretchDirectionProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass Canvas
        : Microsoft.UI.Xaml.Controls.Panel
    {
        [method_name("CreateInstance")] Canvas();
        [independentlyanimatable]
        static Microsoft.UI.Xaml.DependencyProperty LeftProperty{ get; };
        static Double GetLeft(Microsoft.UI.Xaml.UIElement element);
        static void SetLeft(Microsoft.UI.Xaml.UIElement element, Double length);
        [independentlyanimatable]
        static Microsoft.UI.Xaml.DependencyProperty TopProperty{ get; };
        static Double GetTop(Microsoft.UI.Xaml.UIElement element);
        static void SetTop(Microsoft.UI.Xaml.UIElement element, Double length);
        static Microsoft.UI.Xaml.DependencyProperty ZIndexProperty{ get; };
        static Int32 GetZIndex(Microsoft.UI.Xaml.UIElement element);
        static void SetZIndex(Microsoft.UI.Xaml.UIElement element, Int32 value);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Content")]
    unsealed runtimeclass ContentControl
        : Microsoft.UI.Xaml.Controls.Control
    {
        [method_name("CreateInstance")] ContentControl();
        Object Content;
        Microsoft.UI.Xaml.DataTemplate ContentTemplate;
        Microsoft.UI.Xaml.Controls.DataTemplateSelector ContentTemplateSelector;
        Microsoft.UI.Xaml.Media.Animation.TransitionCollection ContentTransitions;
        Microsoft.UI.Xaml.UIElement ContentTemplateRoot{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ContentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ContentTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ContentTemplateSelectorProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ContentTransitionsProperty{ get; };
        overridable void OnContentChanged(Object oldContent, Object newContent);
        overridable void OnContentTemplateChanged(Microsoft.UI.Xaml.DataTemplate oldContentTemplate, Microsoft.UI.Xaml.DataTemplate newContentTemplate);
        overridable void OnContentTemplateSelectorChanged(Microsoft.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, Microsoft.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass Grid
        : Microsoft.UI.Xaml.Controls.Panel
    {
        [method_name("CreateInstance")] Grid();
        Microsoft.UI.Xaml.Controls.RowDefinitionCollection RowDefinitions{ get; };
        Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection ColumnDefinitions{ get; };
        Microsoft.UI.Xaml.Controls.BackgroundSizing BackgroundSizing;
        Microsoft.UI.Xaml.Media.Brush BorderBrush;
        Microsoft.UI.Xaml.Thickness BorderThickness;
        Microsoft.UI.Xaml.CornerRadius CornerRadius;
        Microsoft.UI.Xaml.Thickness Padding;
        Double RowSpacing;
        Double ColumnSpacing;
        static Microsoft.UI.Xaml.DependencyProperty BackgroundSizingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BorderBrushProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BorderThicknessProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CornerRadiusProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PaddingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty RowSpacingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ColumnSpacingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty RowProperty{ get; };
        static Int32 GetRow(Microsoft.UI.Xaml.FrameworkElement element);
        static void SetRow(Microsoft.UI.Xaml.FrameworkElement element, Int32 value);
        static Microsoft.UI.Xaml.DependencyProperty ColumnProperty{ get; };
        static Int32 GetColumn(Microsoft.UI.Xaml.FrameworkElement element);
        static void SetColumn(Microsoft.UI.Xaml.FrameworkElement element, Int32 value);
        static Microsoft.UI.Xaml.DependencyProperty RowSpanProperty{ get; };
        static Int32 GetRowSpan(Microsoft.UI.Xaml.FrameworkElement element);
        static void SetRowSpan(Microsoft.UI.Xaml.FrameworkElement element, Int32 value);
        static Microsoft.UI.Xaml.DependencyProperty ColumnSpanProperty{ get; };
        static Int32 GetColumnSpan(Microsoft.UI.Xaml.FrameworkElement element);
        static void SetColumnSpan(Microsoft.UI.Xaml.FrameworkElement element, Int32 value);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Items")]
    unsealed runtimeclass ItemsControl
        : Microsoft.UI.Xaml.Controls.Control
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.IItemContainerMapping
    {
        [method_name("CreateInstance")] ItemsControl();
        Object ItemsSource;
        Microsoft.UI.Xaml.Controls.ItemCollection Items{ get; };
        Microsoft.UI.Xaml.DataTemplate ItemTemplate;
        Microsoft.UI.Xaml.Controls.DataTemplateSelector ItemTemplateSelector;
        Microsoft.UI.Xaml.Controls.ItemsPanelTemplate ItemsPanel;
        String DisplayMemberPath;
        Microsoft.UI.Xaml.Controls.Panel ItemsPanelRoot{ get; };
        Microsoft.UI.Xaml.Style ItemContainerStyle;
        Microsoft.UI.Xaml.Controls.StyleSelector ItemContainerStyleSelector;
        Microsoft.UI.Xaml.Controls.ItemContainerGenerator ItemContainerGenerator{ get; };
        Microsoft.UI.Xaml.Media.Animation.TransitionCollection ItemContainerTransitions;
        Windows.Foundation.Collections.IObservableVector<Microsoft.UI.Xaml.Controls.GroupStyle> GroupStyle{ get; };
        Microsoft.UI.Xaml.Controls.GroupStyleSelector GroupStyleSelector;
        Boolean IsGrouping{ get; };
        Microsoft.UI.Xaml.DependencyObject GroupHeaderContainerFromItemContainer(Microsoft.UI.Xaml.DependencyObject itemContainer);
        static Microsoft.UI.Xaml.DependencyProperty ItemsSourceProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemTemplateSelectorProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemsPanelProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty DisplayMemberPathProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemContainerStyleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemContainerStyleSelectorProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemContainerTransitionsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty GroupStyleSelectorProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsGroupingProperty{ get; };
        static Microsoft.UI.Xaml.Controls.ItemsControl GetItemsOwner(Microsoft.UI.Xaml.DependencyObject element);
        static Microsoft.UI.Xaml.Controls.ItemsControl ItemsControlFromItemContainer(Microsoft.UI.Xaml.DependencyObject container);
        overridable Boolean IsItemItsOwnContainerOverride(Object item);
        overridable Microsoft.UI.Xaml.DependencyObject GetContainerForItemOverride();
        overridable void ClearContainerForItemOverride(Microsoft.UI.Xaml.DependencyObject element, Object item);
        overridable void PrepareContainerForItemOverride(Microsoft.UI.Xaml.DependencyObject element, Object item);
        overridable void OnItemsChanged(Object e);
        overridable void OnItemContainerStyleChanged(Microsoft.UI.Xaml.Style oldItemContainerStyle, Microsoft.UI.Xaml.Style newItemContainerStyle);
        overridable void OnItemContainerStyleSelectorChanged(Microsoft.UI.Xaml.Controls.StyleSelector oldItemContainerStyleSelector, Microsoft.UI.Xaml.Controls.StyleSelector newItemContainerStyleSelector);
        overridable void OnItemTemplateChanged(Microsoft.UI.Xaml.DataTemplate oldItemTemplate, Microsoft.UI.Xaml.DataTemplate newItemTemplate);
        overridable void OnItemTemplateSelectorChanged(Microsoft.UI.Xaml.Controls.DataTemplateSelector oldItemTemplateSelector, Microsoft.UI.Xaml.Controls.DataTemplateSelector newItemTemplateSelector);
        overridable void OnGroupStyleSelectorChanged(Microsoft.UI.Xaml.Controls.GroupStyleSelector oldGroupStyleSelector, Microsoft.UI.Xaml.Controls.GroupStyleSelector newGroupStyleSelector);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 3)]
    [webhosthidden]
    unsealed runtimeclass MediaTransportControls
        : Microsoft.UI.Xaml.Controls.Control
    {
        [method_name("CreateInstance")] MediaTransportControls();
        Boolean IsZoomButtonVisible;
        Boolean IsZoomEnabled;
        Boolean IsFastForwardButtonVisible;
        Boolean IsFastForwardEnabled;
        Boolean IsFastRewindButtonVisible;
        Boolean IsFastRewindEnabled;
        Boolean IsStopButtonVisible;
        Boolean IsStopEnabled;
        Boolean IsVolumeButtonVisible;
        Boolean IsVolumeEnabled;
        Boolean IsPlaybackRateButtonVisible;
        Boolean IsPlaybackRateEnabled;
        Boolean IsSeekBarVisible;
        Boolean IsSeekEnabled;
        Boolean IsCompact;
        Boolean IsSkipForwardButtonVisible;
        Boolean IsSkipForwardEnabled;
        Boolean IsSkipBackwardButtonVisible;
        Boolean IsSkipBackwardEnabled;
        Boolean IsNextTrackButtonVisible;
        Boolean IsPreviousTrackButtonVisible;
        Microsoft.UI.Xaml.Media.FastPlayFallbackBehaviour FastPlayFallbackBehaviour;
        Boolean ShowAndHideAutomatically;
        Boolean IsRepeatEnabled;
        Boolean IsRepeatButtonVisible;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.MediaTransportControls,Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs> ThumbnailRequested;
        void Show();
        void Hide();
        static Microsoft.UI.Xaml.DependencyProperty IsZoomButtonVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsZoomEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsFastForwardButtonVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsFastForwardEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsFastRewindButtonVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsFastRewindEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsStopButtonVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsStopEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsVolumeButtonVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsVolumeEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsPlaybackRateButtonVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsPlaybackRateEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsSeekBarVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsSeekEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsCompactProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsSkipForwardButtonVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsSkipForwardEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsSkipBackwardButtonVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsSkipBackwardEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsNextTrackButtonVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsPreviousTrackButtonVisibleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FastPlayFallbackBehaviourProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ShowAndHideAutomaticallyProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsRepeatEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsRepeatButtonVisibleProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [inputproperty("Password")]
    runtimeclass PasswordBox
        : Microsoft.UI.Xaml.Controls.Control
        , [feature(Feature_InputValidation)]
        [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.IInputValidationControl
    {
        PasswordBox();
        String Password;
        String PasswordChar;
        [deprecated("IsPasswordRevealButtonEnabledProperty may be altered or unavailable for releases after Windows 10.0. Instead, use PasswordRevealModeProperty.", deprecate, Microsoft.UI.Xaml.WinUIContract, 1)]
        Boolean IsPasswordRevealButtonEnabled;
        Int32 MaxLength;
        Object Header;
        Microsoft.UI.Xaml.DataTemplate HeaderTemplate;
        String PlaceholderText;
        Microsoft.UI.Xaml.Media.SolidColorBrush SelectionHighlightColor;
        Boolean PreventKeyboardDisplayOnProgrammaticFocus;
        Microsoft.UI.Xaml.Controls.PasswordRevealMode PasswordRevealMode;
        Microsoft.UI.Xaml.TextReadingOrder TextReadingOrder;
        Microsoft.UI.Xaml.Input.InputScope InputScope;
        Boolean CanPasteClipboardContent{ get; };
        Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase SelectionFlyout;
        Object Description;
        event Microsoft.UI.Xaml.RoutedEventHandler PasswordChanged;
        event Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler ContextMenuOpening;
        event Microsoft.UI.Xaml.Controls.TextControlPasteEventHandler Paste;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.PasswordBox,Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs> PasswordChanging;
        void SelectAll();
        void PasteFromClipboard();
        static Microsoft.UI.Xaml.DependencyProperty PasswordProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PasswordCharProperty{ get; };
        [deprecated("IsPasswordRevealButtonEnabledProperty may be altered or unavailable for releases after Windows 10.0. Instead, use PasswordRevealModeProperty.", deprecate, Microsoft.UI.Xaml.WinUIContract, 1)]
        static Microsoft.UI.Xaml.DependencyProperty IsPasswordRevealButtonEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MaxLengthProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PlaceholderTextProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectionHighlightColorProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PreventKeyboardDisplayOnProgrammaticFocusProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PasswordRevealModeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextReadingOrderProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty InputScopeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CanPasteClipboardContentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectionFlyoutProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty DescriptionProperty{ get; };
    
        [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        [feature(Feature_HeaderPlacement)]
        [static_name("Microsoft.UI.Xaml.Controls.IPasswordBoxStaticsFeature_HeaderPlacement")]
        [interface_name("Microsoft.UI.Xaml.Controls.IPasswordBoxFeature_HeaderPlacement")]
        {
            Microsoft.UI.Xaml.Controls.ControlHeaderPlacement HeaderPlacement;
            static Microsoft.UI.Xaml.DependencyProperty HeaderPlacementProperty{ get; };
        }
    
        [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        [feature(Feature_InputValidation)]
        [static_name("Microsoft.UI.Xaml.Controls.IPasswordBoxStaticsFeature_InputValidation")]
        {
            static Microsoft.UI.Xaml.DependencyProperty ErrorTemplateProperty{ get; };
            static Microsoft.UI.Xaml.DependencyProperty InputValidationModeProperty{ get; };
            static Microsoft.UI.Xaml.DependencyProperty InputValidationKindProperty{ get; };
        }
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass RelativePanel
        : Microsoft.UI.Xaml.Controls.Panel
    {
        [method_name("CreateInstance")] RelativePanel();
        Microsoft.UI.Xaml.Controls.BackgroundSizing BackgroundSizing;
        Microsoft.UI.Xaml.Media.Brush BorderBrush;
        Microsoft.UI.Xaml.Thickness BorderThickness;
        Microsoft.UI.Xaml.CornerRadius CornerRadius;
        Microsoft.UI.Xaml.Thickness Padding;
        static Microsoft.UI.Xaml.DependencyProperty BackgroundSizingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LeftOfProperty{ get; };
        static Object GetLeftOf(Microsoft.UI.Xaml.UIElement element);
        static void SetLeftOf(Microsoft.UI.Xaml.UIElement element, Object value);
        static Microsoft.UI.Xaml.DependencyProperty AboveProperty{ get; };
        static Object GetAbove(Microsoft.UI.Xaml.UIElement element);
        static void SetAbove(Microsoft.UI.Xaml.UIElement element, Object value);
        static Microsoft.UI.Xaml.DependencyProperty RightOfProperty{ get; };
        static Object GetRightOf(Microsoft.UI.Xaml.UIElement element);
        static void SetRightOf(Microsoft.UI.Xaml.UIElement element, Object value);
        static Microsoft.UI.Xaml.DependencyProperty BelowProperty{ get; };
        static Object GetBelow(Microsoft.UI.Xaml.UIElement element);
        static void SetBelow(Microsoft.UI.Xaml.UIElement element, Object value);
        static Microsoft.UI.Xaml.DependencyProperty AlignHorizontalCenterWithProperty{ get; };
        static Object GetAlignHorizontalCenterWith(Microsoft.UI.Xaml.UIElement element);
        static void SetAlignHorizontalCenterWith(Microsoft.UI.Xaml.UIElement element, Object value);
        static Microsoft.UI.Xaml.DependencyProperty AlignVerticalCenterWithProperty{ get; };
        static Object GetAlignVerticalCenterWith(Microsoft.UI.Xaml.UIElement element);
        static void SetAlignVerticalCenterWith(Microsoft.UI.Xaml.UIElement element, Object value);
        static Microsoft.UI.Xaml.DependencyProperty AlignLeftWithProperty{ get; };
        static Object GetAlignLeftWith(Microsoft.UI.Xaml.UIElement element);
        static void SetAlignLeftWith(Microsoft.UI.Xaml.UIElement element, Object value);
        static Microsoft.UI.Xaml.DependencyProperty AlignTopWithProperty{ get; };
        static Object GetAlignTopWith(Microsoft.UI.Xaml.UIElement element);
        static void SetAlignTopWith(Microsoft.UI.Xaml.UIElement element, Object value);
        static Microsoft.UI.Xaml.DependencyProperty AlignRightWithProperty{ get; };
        static Object GetAlignRightWith(Microsoft.UI.Xaml.UIElement element);
        static void SetAlignRightWith(Microsoft.UI.Xaml.UIElement element, Object value);
        static Microsoft.UI.Xaml.DependencyProperty AlignBottomWithProperty{ get; };
        static Object GetAlignBottomWith(Microsoft.UI.Xaml.UIElement element);
        static void SetAlignBottomWith(Microsoft.UI.Xaml.UIElement element, Object value);
        static Microsoft.UI.Xaml.DependencyProperty AlignLeftWithPanelProperty{ get; };
        static Boolean GetAlignLeftWithPanel(Microsoft.UI.Xaml.UIElement element);
        static void SetAlignLeftWithPanel(Microsoft.UI.Xaml.UIElement element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty AlignTopWithPanelProperty{ get; };
        static Boolean GetAlignTopWithPanel(Microsoft.UI.Xaml.UIElement element);
        static void SetAlignTopWithPanel(Microsoft.UI.Xaml.UIElement element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty AlignRightWithPanelProperty{ get; };
        static Boolean GetAlignRightWithPanel(Microsoft.UI.Xaml.UIElement element);
        static void SetAlignRightWithPanel(Microsoft.UI.Xaml.UIElement element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty AlignBottomWithPanelProperty{ get; };
        static Boolean GetAlignBottomWithPanel(Microsoft.UI.Xaml.UIElement element);
        static void SetAlignBottomWithPanel(Microsoft.UI.Xaml.UIElement element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty AlignHorizontalCenterWithPanelProperty{ get; };
        static Boolean GetAlignHorizontalCenterWithPanel(Microsoft.UI.Xaml.UIElement element);
        static void SetAlignHorizontalCenterWithPanel(Microsoft.UI.Xaml.UIElement element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty AlignVerticalCenterWithPanelProperty{ get; };
        static Boolean GetAlignVerticalCenterWithPanel(Microsoft.UI.Xaml.UIElement element);
        static void SetAlignVerticalCenterWithPanel(Microsoft.UI.Xaml.UIElement element, Boolean value);
        static Microsoft.UI.Xaml.DependencyProperty BorderBrushProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BorderThicknessProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CornerRadiusProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PaddingProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("ZoomedInView")]
    runtimeclass SemanticZoom
        : Microsoft.UI.Xaml.Controls.Control
    {
        SemanticZoom();
        Microsoft.UI.Xaml.Controls.ISemanticZoomInformation ZoomedInView;
        Microsoft.UI.Xaml.Controls.ISemanticZoomInformation ZoomedOutView;
        Boolean IsZoomedInViewActive;
        Boolean CanChangeViews;
        event Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler ViewChangeStarted;
        event Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler ViewChangeCompleted;
        void ToggleActiveView();
        Boolean IsZoomOutButtonEnabled;
        static Microsoft.UI.Xaml.DependencyProperty ZoomedInViewProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ZoomedOutViewProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsZoomedInViewActiveProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CanChangeViewsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsZoomOutButtonEnabledProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass StackPanel
        : Microsoft.UI.Xaml.Controls.Panel
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.IInsertionPanel
    {
        [method_name("CreateInstance")] StackPanel();
        Boolean AreScrollSnapPointsRegular;
        Microsoft.UI.Xaml.Controls.Orientation Orientation;
        Microsoft.UI.Xaml.Controls.BackgroundSizing BackgroundSizing;
        Microsoft.UI.Xaml.Media.Brush BorderBrush;
        Microsoft.UI.Xaml.Thickness BorderThickness;
        Microsoft.UI.Xaml.CornerRadius CornerRadius;
        Microsoft.UI.Xaml.Thickness Padding;
        Double Spacing;
        static Microsoft.UI.Xaml.DependencyProperty AreScrollSnapPointsRegularProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty OrientationProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BackgroundSizingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BorderBrushProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty BorderThicknessProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CornerRadiusProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PaddingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SpacingProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [inputproperty("Text")]
    unsealed runtimeclass TextBox
        : Microsoft.UI.Xaml.Controls.Control
        , [feature(Feature_InputValidation)]
        [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.IInputValidationControl
    {
        [method_name("CreateInstance")] TextBox();
        String Text;
        String SelectedText;
        Int32 SelectionLength;
        Int32 SelectionStart;
        Int32 MaxLength;
        Boolean IsReadOnly;
        Boolean AcceptsReturn;
        Microsoft.UI.Xaml.TextAlignment TextAlignment;
        Microsoft.UI.Xaml.TextWrapping TextWrapping;
        Boolean IsSpellCheckEnabled;
        Boolean IsTextPredictionEnabled;
        Microsoft.UI.Xaml.Input.InputScope InputScope;
        Object Header;
        Microsoft.UI.Xaml.DataTemplate HeaderTemplate;
        String PlaceholderText;
        Microsoft.UI.Xaml.Media.SolidColorBrush SelectionHighlightColor;
        Boolean PreventKeyboardDisplayOnProgrammaticFocus;
        Boolean IsColorFontEnabled;
        Microsoft.UI.Xaml.Media.SolidColorBrush SelectionHighlightColorWhenNotFocused;
        Microsoft.UI.Xaml.TextAlignment HorizontalTextAlignment;
        Microsoft.UI.Xaml.Controls.CharacterCasing CharacterCasing;
        Microsoft.UI.Xaml.Media.Brush PlaceholderForeground;
        Boolean CanPasteClipboardContent{ get; };
        Boolean CanUndo{ get; };
        Boolean CanRedo{ get; };
        Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase SelectionFlyout;
        Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase ProofingMenuFlyout{ get; };
        Object Description;
        event Microsoft.UI.Xaml.Controls.TextChangedEventHandler TextChanged;
        event Microsoft.UI.Xaml.RoutedEventHandler SelectionChanged;
        event Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler ContextMenuOpening;
        event Microsoft.UI.Xaml.Controls.TextControlPasteEventHandler Paste;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TextBox,Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs> TextCompositionStarted;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TextBox,Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs> TextCompositionChanged;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TextBox,Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs> TextCompositionEnded;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TextBox,Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs> CopyingToClipboard;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TextBox,Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs> CuttingToClipboard;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TextBox,Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs> BeforeTextChanging;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TextBox,Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs> SelectionChanging;
        void Select(Int32 start, Int32 length);
        void SelectAll();
        Windows.Foundation.Rect GetRectFromCharacterIndex(Int32 charIndex, Boolean trailingEdge);
        Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<String> > GetLinguisticAlternativesAsync();
        void Undo();
        void Redo();
        void PasteFromClipboard();
        void CopySelectionToClipboard();
        void CutSelectionToClipboard();
        void ClearUndoRedoHistory();
        Microsoft.UI.Xaml.TextReadingOrder TextReadingOrder;
        Microsoft.UI.Xaml.Controls.CandidateWindowAlignment DesiredCandidateWindowAlignment;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TextBox,Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs> CandidateWindowBoundsChanged;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TextBox,Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs> TextChanging;
        static Microsoft.UI.Xaml.DependencyProperty TextProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MaxLengthProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsReadOnlyProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty AcceptsReturnProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextWrappingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsSpellCheckEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsTextPredictionEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty InputScopeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PlaceholderTextProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectionHighlightColorProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PreventKeyboardDisplayOnProgrammaticFocusProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsColorFontEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectionHighlightColorWhenNotFocusedProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HorizontalTextAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CharacterCasingProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PlaceholderForegroundProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CanPasteClipboardContentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CanUndoProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CanRedoProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectionFlyoutProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ProofingMenuFlyoutProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty DescriptionProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty DesiredCandidateWindowAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextReadingOrderProperty{ get; };
    
        [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        [feature(Feature_HeaderPlacement)]
        [static_name("Microsoft.UI.Xaml.Controls.ITextBoxStaticsFeature_HeaderPlacement")]
        [interface_name("Microsoft.UI.Xaml.Controls.ITextBoxFeature_HeaderPlacement")]
        {
            Microsoft.UI.Xaml.Controls.ControlHeaderPlacement HeaderPlacement;
            static Microsoft.UI.Xaml.DependencyProperty HeaderPlacementProperty{ get; };
        }
    
        [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        [feature(Feature_InputValidation)]
        [static_name("Microsoft.UI.Xaml.Controls.ITextBoxStaticsFeature_InputValidation")]
        {
            static Microsoft.UI.Xaml.DependencyProperty ErrorTemplateProperty{ get; };
            static Microsoft.UI.Xaml.DependencyProperty InputValidationModeProperty{ get; };
            static Microsoft.UI.Xaml.DependencyProperty InputValidationKindProperty{ get; };
        }
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Header")]
    runtimeclass ToggleSwitch
        : Microsoft.UI.Xaml.Controls.Control
    {
        ToggleSwitch();
        Boolean IsOn;
        Object Header;
        Microsoft.UI.Xaml.DataTemplate HeaderTemplate;
        Object OnContent;
        Microsoft.UI.Xaml.DataTemplate OnContentTemplate;
        Object OffContent;
        Microsoft.UI.Xaml.DataTemplate OffContentTemplate;
        Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings TemplateSettings{ get; };
        event Microsoft.UI.Xaml.RoutedEventHandler Toggled;
        static Microsoft.UI.Xaml.DependencyProperty IsOnProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty OnContentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty OnContentTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty OffContentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty OffContentTemplateProperty{ get; };
        overridable void OnToggled();
        overridable void OnOnContentChanged(Object oldContent, Object newContent);
        overridable void OnOffContentChanged(Object oldContent, Object newContent);
        overridable void OnHeaderChanged(Object oldContent, Object newContent);
    
        [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        [feature(Feature_HeaderPlacement)]
        [static_name("Microsoft.UI.Xaml.Controls.IToggleSwitchStaticsFeature_HeaderPlacement")]
        [interface_name("Microsoft.UI.Xaml.Controls.IToggleSwitchFeature_HeaderPlacement")]
        {
            Microsoft.UI.Xaml.Controls.ControlHeaderPlacement HeaderPlacement;
            static Microsoft.UI.Xaml.DependencyProperty HeaderPlacementProperty{ get; };
        }
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Content")]
    unsealed runtimeclass UserControl
        : Microsoft.UI.Xaml.Controls.Control
    {
        [method_name("CreateInstance")] UserControl();
        Microsoft.UI.Xaml.UIElement Content;
        static Microsoft.UI.Xaml.DependencyProperty ContentProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass VariableSizedWrapGrid
        : Microsoft.UI.Xaml.Controls.Panel
    {
        VariableSizedWrapGrid();
        Double ItemHeight;
        Double ItemWidth;
        Microsoft.UI.Xaml.Controls.Orientation Orientation;
        Microsoft.UI.Xaml.HorizontalAlignment HorizontalChildrenAlignment;
        Microsoft.UI.Xaml.VerticalAlignment VerticalChildrenAlignment;
        Int32 MaximumRowsOrColumns;
        static Microsoft.UI.Xaml.DependencyProperty ItemHeightProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ItemWidthProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty OrientationProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HorizontalChildrenAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty VerticalChildrenAlignmentProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MaximumRowsOrColumnsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty RowSpanProperty{ get; };
        static Int32 GetRowSpan(Microsoft.UI.Xaml.UIElement element);
        static void SetRowSpan(Microsoft.UI.Xaml.UIElement element, Int32 value);
        static Microsoft.UI.Xaml.DependencyProperty ColumnSpanProperty{ get; };
        static Int32 GetColumnSpan(Microsoft.UI.Xaml.UIElement element);
        static void SetColumnSpan(Microsoft.UI.Xaml.UIElement element, Int32 value);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [constructor_name("Microsoft.UI.Xaml.Controls.IVirtualizingPanelFactory")]
    unsealed runtimeclass VirtualizingPanel
        : Microsoft.UI.Xaml.Controls.Panel
    {
        Microsoft.UI.Xaml.Controls.ItemContainerGenerator ItemContainerGenerator{ get; };
        protected void AddInternalChild(Microsoft.UI.Xaml.UIElement child);
        protected void InsertInternalChild(Int32 index, Microsoft.UI.Xaml.UIElement child);
        protected void RemoveInternalChildRange(Int32 index, Int32 range);
        overridable void OnItemsChanged(Object sender, Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs args);
        overridable void OnClearChildren();
        overridable void BringIndexIntoView(Int32 index);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass GroupItem
        : Microsoft.UI.Xaml.Controls.ContentControl
    {
        [method_name("CreateInstance")] GroupItem();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [constructor_name("Microsoft.UI.Xaml.Controls.IListViewBaseHeaderItemFactory")]
    [default_interface]
    unsealed runtimeclass ListViewBaseHeaderItem
        : Microsoft.UI.Xaml.Controls.ContentControl
    {
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass Slider
        : Microsoft.UI.Xaml.Controls.Primitives.RangeBase
    {
        [method_name("CreateInstance")] Slider();
        Double IntermediateValue;
        Double StepFrequency;
        Microsoft.UI.Xaml.Controls.Primitives.SliderSnapsTo SnapsTo;
        Double TickFrequency;
        Microsoft.UI.Xaml.Controls.Primitives.TickPlacement TickPlacement;
        Microsoft.UI.Xaml.Controls.Orientation Orientation;
        Boolean IsDirectionReversed;
        Boolean IsThumbToolTipEnabled;
        Microsoft.UI.Xaml.Data.IValueConverter ThumbToolTipValueConverter;
        Object Header;
        Microsoft.UI.Xaml.DataTemplate HeaderTemplate;
        static Microsoft.UI.Xaml.DependencyProperty IntermediateValueProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty StepFrequencyProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SnapsToProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TickFrequencyProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TickPlacementProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty OrientationProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsDirectionReversedProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsThumbToolTipEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ThumbToolTipValueConverterProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderTemplateProperty{ get; };
    
        [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        [feature(Feature_HeaderPlacement)]
        [static_name("Microsoft.UI.Xaml.Controls.ISliderStaticsFeature_HeaderPlacement")]
        [interface_name("Microsoft.UI.Xaml.Controls.ISliderFeature_HeaderPlacement")]
        {
            Microsoft.UI.Xaml.Controls.ControlHeaderPlacement HeaderPlacement;
            static Microsoft.UI.Xaml.DependencyProperty HeaderPlacementProperty{ get; };
        }
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass ToolTip
        : Microsoft.UI.Xaml.Controls.ContentControl
    {
        [method_name("CreateInstance")] ToolTip();
        Double HorizontalOffset;
        Boolean IsOpen;
        Microsoft.UI.Xaml.Controls.Primitives.PlacementMode Placement;
        Microsoft.UI.Xaml.UIElement PlacementTarget;
        Windows.Foundation.IReference<Windows.Foundation.Rect> PlacementRect;
        Double VerticalOffset;
        Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings TemplateSettings{ get; };
        event Microsoft.UI.Xaml.RoutedEventHandler Closed;
        event Microsoft.UI.Xaml.RoutedEventHandler Opened;
        static Microsoft.UI.Xaml.DependencyProperty HorizontalOffsetProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsOpenProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PlacementProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PlacementTargetProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PlacementRectProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty VerticalOffsetProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass Button
        : Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
    {
        [method_name("CreateInstance")] Button();
        Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase Flyout;
        static Microsoft.UI.Xaml.DependencyProperty FlyoutProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [inputproperty("Text")]
    unsealed runtimeclass ComboBox
        : Microsoft.UI.Xaml.Controls.Primitives.Selector
        , [feature(Feature_InputValidation)]
        [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.IInputValidationControl
    {
        [method_name("CreateInstance")] ComboBox();
        Boolean IsDropDownOpen;
        Boolean IsEditable;
        Boolean IsSelectionBoxHighlighted{ get; };
        Double MaxDropDownHeight;
        Object SelectionBoxItem{ get; };
        Microsoft.UI.Xaml.DataTemplate SelectionBoxItemTemplate{ get; };
        Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings TemplateSettings{ get; };
        Object Header;
        Microsoft.UI.Xaml.DataTemplate HeaderTemplate;
        String PlaceholderText;
        Microsoft.UI.Xaml.Controls.LightDismissOverlayMode LightDismissOverlayMode;
        Boolean IsTextSearchEnabled;
        Microsoft.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger SelectionChangedTrigger;
        Microsoft.UI.Xaml.Media.Brush PlaceholderForeground;
        String Text;
        Microsoft.UI.Xaml.Style TextBoxStyle;
        Object Description;
        event Windows.Foundation.EventHandler<Object> DropDownClosed;
        event Windows.Foundation.EventHandler<Object> DropDownOpened;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ComboBox,Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs> TextSubmitted;
        static Microsoft.UI.Xaml.DependencyProperty IsEditableProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsDropDownOpenProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MaxDropDownHeightProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PlaceholderTextProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LightDismissOverlayModeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsTextSearchEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectionChangedTriggerProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty PlaceholderForegroundProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty TextBoxStyleProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty DescriptionProperty{ get; };
        overridable void OnDropDownClosed(Object e);
        overridable void OnDropDownOpened(Object e);
    
        [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        [feature(Feature_HeaderPlacement)]
        [static_name("Microsoft.UI.Xaml.Controls.IComboBoxStaticsFeature_HeaderPlacement")]
        [interface_name("Microsoft.UI.Xaml.Controls.IComboBoxFeature_HeaderPlacement")]
        {
            Microsoft.UI.Xaml.Controls.ControlHeaderPlacement HeaderPlacement;
            static Microsoft.UI.Xaml.DependencyProperty HeaderPlacementProperty{ get; };
        }
    
        [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        [feature(Feature_InputValidation)]
        [static_name("Microsoft.UI.Xaml.Controls.IComboBoxStaticsFeature_InputValidation")]
        {
            static Microsoft.UI.Xaml.DependencyProperty ErrorTemplateProperty{ get; };
            static Microsoft.UI.Xaml.DependencyProperty InputValidationModeProperty{ get; };
            static Microsoft.UI.Xaml.DependencyProperty InputValidationKindProperty{ get; };
        }
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ComboBoxItem
        : Microsoft.UI.Xaml.Controls.Primitives.SelectorItem
    {
        [method_name("CreateInstance")] ComboBoxItem();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass FlipView
        : Microsoft.UI.Xaml.Controls.Primitives.Selector
    {
        [method_name("CreateInstance")] FlipView();
        Boolean UseTouchAnimationsForAllNavigation;
        static Microsoft.UI.Xaml.DependencyProperty UseTouchAnimationsForAllNavigationProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass FlipViewItem
        : Microsoft.UI.Xaml.Controls.Primitives.SelectorItem
    {
        [method_name("CreateInstance")] FlipViewItem();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass HyperlinkButton
        : Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
    {
        [method_name("CreateInstance")] HyperlinkButton();
        Windows.Foundation.Uri NavigateUri;
        static Microsoft.UI.Xaml.DependencyProperty NavigateUriProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass ListBox
        : Microsoft.UI.Xaml.Controls.Primitives.Selector
    {
        [method_name("CreateInstance")] ListBox();
        Windows.Foundation.Collections.IVector<Object> SelectedItems{ get; };
        Microsoft.UI.Xaml.Controls.SelectionMode SelectionMode;
        Boolean SingleSelectionFollowsFocus;
        void ScrollIntoView(Object item);
        void SelectAll();
        static Microsoft.UI.Xaml.DependencyProperty SelectionModeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SingleSelectionFollowsFocusProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ListBoxItem
        : Microsoft.UI.Xaml.Controls.Primitives.SelectorItem
    {
        [method_name("CreateInstance")] ListBoxItem();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [constructor_name("Microsoft.UI.Xaml.Controls.IListViewBaseFactory")]
    unsealed runtimeclass ListViewBase
        : Microsoft.UI.Xaml.Controls.Primitives.Selector
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.ISemanticZoomInformation
    {
        [method_name("CreateInstance")] protected ListViewBase();
        Windows.Foundation.Collections.IVector<Object> SelectedItems{ get; };
        Microsoft.UI.Xaml.Controls.ListViewSelectionMode SelectionMode;
        Boolean IsSwipeEnabled;
        Boolean CanDragItems;
        Boolean CanReorderItems;
        Boolean IsItemClickEnabled;
        Double DataFetchSize;
        Double IncrementalLoadingThreshold;
        Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger IncrementalLoadingTrigger;
        Boolean ShowsScrollingPlaceholders;
        Microsoft.UI.Xaml.Controls.ListViewReorderMode ReorderMode;
        Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Data.ItemIndexRange> SelectedRanges{ get; };
        Boolean IsMultiSelectCheckBoxEnabled;
        Boolean SingleSelectionFollowsFocus;
        event Microsoft.UI.Xaml.Controls.ItemClickEventHandler ItemClick;
        event Microsoft.UI.Xaml.Controls.DragItemsStartingEventHandler DragItemsStarting;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ListViewBase,Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs> DragItemsCompleted;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ListViewBase,Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs> ContainerContentChanging;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ListViewBase,Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs> ChoosingItemContainer;
        event Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ListViewBase,Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs> ChoosingGroupHeaderContainer;
        [method_name("ScrollIntoView")] void ScrollIntoView(Object item);
        void SelectAll();
        Windows.Foundation.IAsyncOperation<Microsoft.UI.Xaml.Data.LoadMoreItemsResult> LoadMoreItemsAsync();
        [method_name("ScrollIntoViewWithAlignment")] void ScrollIntoView(Object item, Microsoft.UI.Xaml.Controls.ScrollIntoViewAlignment alignment);
        void SetDesiredContainerUpdateDuration(Windows.Foundation.TimeSpan duration);
        void SelectRange(Microsoft.UI.Xaml.Data.ItemIndexRange itemIndexRange);
        void DeselectRange(Microsoft.UI.Xaml.Data.ItemIndexRange itemIndexRange);
        Boolean IsDragSource();
        Windows.Foundation.IAsyncOperation<Boolean> TryStartConnectedAnimationAsync(Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation animation, Object item, String elementName);
        Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation PrepareConnectedAnimation(String key, Object item, String elementName);
        Object Header;
        Microsoft.UI.Xaml.DataTemplate HeaderTemplate;
        Microsoft.UI.Xaml.Media.Animation.TransitionCollection HeaderTransitions;
        Object Footer;
        Microsoft.UI.Xaml.DataTemplate FooterTemplate;
        Microsoft.UI.Xaml.Media.Animation.TransitionCollection FooterTransitions;
        static Microsoft.UI.Xaml.DependencyProperty SelectionModeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsSwipeEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CanDragItemsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CanReorderItemsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsItemClickEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty DataFetchSizeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IncrementalLoadingThresholdProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IncrementalLoadingTriggerProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ShowsScrollingPlaceholdersProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ReorderModeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsMultiSelectCheckBoxEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SingleSelectionFollowsFocusProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SemanticZoomOwnerProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsActiveViewProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsZoomedInViewProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HeaderTransitionsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FooterProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FooterTemplateProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty FooterTransitionsProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass VirtualizingStackPanel
        : Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel
    {
        VirtualizingStackPanel();
        Boolean AreScrollSnapPointsRegular;
        Microsoft.UI.Xaml.Controls.Orientation Orientation;
        event Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler CleanUpVirtualizedItemEvent;
        static Microsoft.UI.Xaml.DependencyProperty AreScrollSnapPointsRegularProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty OrientationProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty VirtualizationModeProperty{ get; };
        static Microsoft.UI.Xaml.Controls.VirtualizationMode GetVirtualizationMode(Microsoft.UI.Xaml.DependencyObject element);
        static void SetVirtualizationMode(Microsoft.UI.Xaml.DependencyObject element, Microsoft.UI.Xaml.Controls.VirtualizationMode value);
        static Microsoft.UI.Xaml.DependencyProperty IsVirtualizingProperty{ get; };
        static Boolean GetIsVirtualizing(Microsoft.UI.Xaml.DependencyObject o);
        overridable void OnCleanUpVirtualizedItem(Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs e);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass CheckBox
        : Microsoft.UI.Xaml.Controls.Primitives.ToggleButton
    {
        [method_name("CreateInstance")] CheckBox();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass RadioButton
        : Microsoft.UI.Xaml.Controls.Primitives.ToggleButton
    {
        [method_name("CreateInstance")] RadioButton();
        String GroupName;
        static Microsoft.UI.Xaml.DependencyProperty GroupNameProperty{ get; };
    };

}
namespace Microsoft.UI.Xaml.Controls.Primitives
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    interface IScrollSnapPointsInfo 
    {
        Boolean AreHorizontalSnapPointsRegular{ get; };
        Boolean AreVerticalSnapPointsRegular{ get; };
        event Windows.Foundation.EventHandler<Object> HorizontalSnapPointsChanged;
        event Windows.Foundation.EventHandler<Object> VerticalSnapPointsChanged;
        Windows.Foundation.Collections.IVectorView<Single> GetIrregularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation orientation, Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment alignment);
        [return_name("returnValue")] Single GetRegularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation orientation, Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment alignment, out Single offset);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ItemsChangedEventArgs
    {
        Int32 Action{ get; };
        Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition Position{ get; };
        Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition OldPosition{ get; };
        Int32 ItemCount{ get; };
        Int32 ItemUICount{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    runtimeclass LayoutInformation
    {
        static Microsoft.UI.Xaml.UIElement GetLayoutExceptionElement(Object dispatcher);
        static Windows.Foundation.Rect GetLayoutSlot(Microsoft.UI.Xaml.FrameworkElement element);
        static Windows.Foundation.Size GetAvailableSize(Microsoft.UI.Xaml.UIElement element);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ComboBoxTemplateSettings
        : Microsoft.UI.Xaml.DependencyObject
    {
        Double DropDownOpenedHeight{ get; };
        Double DropDownClosedHeight{ get; };
        Double DropDownOffset{ get; };
        Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection SelectedItemDirection{ get; };
        Double DropDownContentMinWidth{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass DragCompletedEventArgs
        : Microsoft.UI.Xaml.RoutedEventArgs
    {
        [method_name("CreateInstanceWithHorizontalChangeVerticalChangeAndCanceled")] DragCompletedEventArgs(Double horizontalChange, Double verticalChange, Boolean canceled);
        Double HorizontalChange{ get; };
        Double VerticalChange{ get; };
        Boolean Canceled{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass DragDeltaEventArgs
        : Microsoft.UI.Xaml.RoutedEventArgs
    {
        [method_name("CreateInstanceWithHorizontalChangeAndVerticalChange")] DragDeltaEventArgs(Double horizontalChange, Double verticalChange);
        Double HorizontalChange{ get; };
        Double VerticalChange{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass DragStartedEventArgs
        : Microsoft.UI.Xaml.RoutedEventArgs
    {
        [method_name("CreateInstanceWithHorizontalOffsetAndVerticalOffset")] DragStartedEventArgs(Double horizontalOffset, Double verticalOffset);
        Double HorizontalOffset{ get; };
        Double VerticalOffset{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass GridViewItemTemplateSettings
        : Microsoft.UI.Xaml.DependencyObject
    {
        Int32 DragItemsCount{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ListViewItemTemplateSettings
        : Microsoft.UI.Xaml.DependencyObject
    {
        Int32 DragItemsCount{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass MenuFlyoutPresenterTemplateSettings
        : Microsoft.UI.Xaml.DependencyObject
    {
        Double FlyoutContentMinWidth{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass RangeBaseValueChangedEventArgs
        : Microsoft.UI.Xaml.RoutedEventArgs
    {
        Double OldValue{ get; };
        Double NewValue{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ScrollEventArgs
        : Microsoft.UI.Xaml.RoutedEventArgs
    {
        ScrollEventArgs();
        Double NewValue{ get; };
        Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType ScrollEventType{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ToggleSwitchTemplateSettings
        : Microsoft.UI.Xaml.DependencyObject
    {
        Double KnobCurrentToOnOffset{ get; };
        Double KnobCurrentToOffOffset{ get; };
        Double KnobOnToOffOffset{ get; };
        Double KnobOffToOnOffset{ get; };
        Double CurtainCurrentToOnOffset{ get; };
        Double CurtainCurrentToOffOffset{ get; };
        Double CurtainOnToOffOffset{ get; };
        Double CurtainOffToOnOffset{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ToolTipTemplateSettings
        : Microsoft.UI.Xaml.DependencyObject
    {
        Double FromHorizontalOffset{ get; };
        Double FromVerticalOffset{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [contentproperty("Child")]
    runtimeclass Popup
        : Microsoft.UI.Xaml.FrameworkElement
    {
        Popup();
        Microsoft.UI.Xaml.UIElement Child;
        Boolean IsOpen;
        Double HorizontalOffset;
        Double VerticalOffset;
        Microsoft.UI.Xaml.Media.Animation.TransitionCollection ChildTransitions;
        Boolean IsLightDismissEnabled;
        Microsoft.UI.Xaml.Controls.LightDismissOverlayMode LightDismissOverlayMode;
        Boolean ShouldConstrainToRootBounds;
        Boolean IsConstrainedToRootBounds{ get; };
        event Windows.Foundation.EventHandler<Object> Opened;
        event Windows.Foundation.EventHandler<Object> Closed;
        static Microsoft.UI.Xaml.DependencyProperty ChildProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsOpenProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty HorizontalOffsetProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty VerticalOffsetProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ChildTransitionsProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsLightDismissEnabledProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LightDismissOverlayModeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ShouldConstrainToRootBoundsProperty{ get; };
    
        [contract(Microsoft.UI.Xaml.WinUIContract, 2)]
        {
            Microsoft.UI.Xaml.FrameworkElement PlacementTarget;
            Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode DesiredPlacement;
            Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode ActualPlacement{ get; };
            event Windows.Foundation.EventHandler<Object> ActualPlacementChanged;
            static Microsoft.UI.Xaml.DependencyProperty PlacementTargetProperty{ get; };
            static Microsoft.UI.Xaml.DependencyProperty DesiredPlacementProperty{ get; };
        }
    
        [contract(Microsoft.UI.Xaml.WinUIContract, 5)]
        {
            Microsoft.UI.Xaml.Media.SystemBackdrop SystemBackdrop;
            static Microsoft.UI.Xaml.DependencyProperty SystemBackdropProperty{ get; };
        }
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass TickBar
        : Microsoft.UI.Xaml.FrameworkElement
    {
        TickBar();
        Microsoft.UI.Xaml.Media.Brush Fill;
        static Microsoft.UI.Xaml.DependencyProperty FillProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [constructor_name("Microsoft.UI.Xaml.Controls.Primitives.IRangeBaseFactory")]
    unsealed runtimeclass RangeBase
        : Microsoft.UI.Xaml.Controls.Control
    {
        [method_name("CreateInstance")] protected RangeBase();
        Double Minimum;
        Double Maximum;
        Double SmallChange;
        Double LargeChange;
        Double Value;
        event Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler ValueChanged;
        static Microsoft.UI.Xaml.DependencyProperty MinimumProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty MaximumProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SmallChangeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty LargeChangeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ValueProperty{ get; };
        overridable void OnMinimumChanged(Double oldMinimum, Double newMinimum);
        overridable void OnMaximumChanged(Double oldMaximum, Double newMaximum);
        overridable void OnValueChanged(Double oldValue, Double newValue);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass Thumb
        : Microsoft.UI.Xaml.Controls.Control
    {
        Thumb();
        Boolean IsDragging{ get; };
        event Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventHandler DragStarted;
        event Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventHandler DragDelta;
        event Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventHandler DragCompleted;
        void CancelDrag();
        static Microsoft.UI.Xaml.DependencyProperty IsDraggingProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [constructor_name("Microsoft.UI.Xaml.Controls.Primitives.IButtonBaseFactory")]
    unsealed runtimeclass ButtonBase
        : Microsoft.UI.Xaml.Controls.ContentControl
    {
        [method_name("CreateInstance")] protected ButtonBase();
        Microsoft.UI.Xaml.Controls.ClickMode ClickMode;
        Boolean IsPointerOver{ get; };
        Boolean IsPressed{ get; };
        Microsoft.UI.Xaml.Input.ICommand Command;
        Object CommandParameter;
        event Microsoft.UI.Xaml.RoutedEventHandler Click;
        static Microsoft.UI.Xaml.DependencyProperty ClickModeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsPointerOverProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsPressedProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CommandProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty CommandParameterProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass CarouselPanel
        : Microsoft.UI.Xaml.Controls.VirtualizingPanel
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
    {
        [method_name("CreateInstance")] CarouselPanel();
        Boolean CanVerticallyScroll;
        Boolean CanHorizontallyScroll;
        Double ExtentWidth{ get; };
        Double ExtentHeight{ get; };
        Double ViewportWidth{ get; };
        Double ViewportHeight{ get; };
        Double HorizontalOffset{ get; };
        Double VerticalOffset{ get; };
        Object ScrollOwner;
        void LineUp();
        void LineDown();
        void LineLeft();
        void LineRight();
        void PageUp();
        void PageDown();
        void PageLeft();
        void PageRight();
        void MouseWheelUp();
        void MouseWheelDown();
        void MouseWheelLeft();
        void MouseWheelRight();
        void SetHorizontalOffset(Double offset);
        void SetVerticalOffset(Double offset);
        Windows.Foundation.Rect MakeVisible(Microsoft.UI.Xaml.UIElement visual, Windows.Foundation.Rect rectangle);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [constructor_name("Microsoft.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanelFactory")]
    unsealed runtimeclass OrientedVirtualizingPanel
        : Microsoft.UI.Xaml.Controls.VirtualizingPanel
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Controls.IInsertionPanel
    {
        Boolean CanVerticallyScroll;
        Boolean CanHorizontallyScroll;
        Double ExtentWidth{ get; };
        Double ExtentHeight{ get; };
        Double ViewportWidth{ get; };
        Double ViewportHeight{ get; };
        Double HorizontalOffset{ get; };
        Double VerticalOffset{ get; };
        Object ScrollOwner;
        void LineUp();
        void LineDown();
        void LineLeft();
        void LineRight();
        void PageUp();
        void PageDown();
        void PageLeft();
        void PageRight();
        void MouseWheelUp();
        void MouseWheelDown();
        void MouseWheelLeft();
        void MouseWheelRight();
        void SetHorizontalOffset(Double offset);
        void SetVerticalOffset(Double offset);
        Windows.Foundation.Rect MakeVisible(Microsoft.UI.Xaml.UIElement visual, Windows.Foundation.Rect rectangle);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass ScrollBar
        : Microsoft.UI.Xaml.Controls.Primitives.RangeBase
    {
        ScrollBar();
        Microsoft.UI.Xaml.Controls.Orientation Orientation;
        Double ViewportSize;
        Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode IndicatorMode;
        event Microsoft.UI.Xaml.Controls.Primitives.ScrollEventHandler Scroll;
        static Microsoft.UI.Xaml.DependencyProperty OrientationProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty ViewportSizeProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IndicatorModeProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [constructor_name("Microsoft.UI.Xaml.Controls.Primitives.ISelectorFactory")]
    unsealed runtimeclass Selector
        : Microsoft.UI.Xaml.Controls.ItemsControl
    {
        Int32 SelectedIndex;
        Object SelectedItem;
        Object SelectedValue;
        String SelectedValuePath;
        Windows.Foundation.IReference<Boolean> IsSynchronizedWithCurrentItem;
        event Microsoft.UI.Xaml.Controls.SelectionChangedEventHandler SelectionChanged;
        static Microsoft.UI.Xaml.DependencyProperty SelectedIndexProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectedItemProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectedValueProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty SelectedValuePathProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsSynchronizedWithCurrentItemProperty{ get; };
        static Boolean GetIsSelectionActive(Microsoft.UI.Xaml.DependencyObject element);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [constructor_name("Microsoft.UI.Xaml.Controls.Primitives.ISelectorItemFactory")]
    unsealed runtimeclass SelectorItem
        : Microsoft.UI.Xaml.Controls.ContentControl
    {
        [method_name("CreateInstance")] protected SelectorItem();
        Boolean IsSelected;
        static Microsoft.UI.Xaml.DependencyProperty IsSelectedProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass RepeatButton
        : Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
    {
        RepeatButton();
        Int32 Delay;
        Int32 Interval;
        static Microsoft.UI.Xaml.DependencyProperty DelayProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IntervalProperty{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass ToggleButton
        : Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
    {
        [method_name("CreateInstance")] ToggleButton();
        Windows.Foundation.IReference<Boolean> IsChecked;
        Boolean IsThreeState;
        event Microsoft.UI.Xaml.RoutedEventHandler Checked;
        event Microsoft.UI.Xaml.RoutedEventHandler Unchecked;
        event Microsoft.UI.Xaml.RoutedEventHandler Indeterminate;
        static Microsoft.UI.Xaml.DependencyProperty IsCheckedProperty{ get; };
        static Microsoft.UI.Xaml.DependencyProperty IsThreeStateProperty{ get; };
        overridable void OnToggle();
    };

}
namespace Microsoft.UI.Xaml.Automation.Peers
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass ItemAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider
    {
        [method_name("CreateInstanceWithParentAndItem")] ItemAutomationPeer(Object item, Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer parent);
        Object Item{ get; };
        Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer ItemsControlAutomationPeer{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [constructor_name("Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerFactory")]
    [default_interface]
    unsealed runtimeclass ButtonBaseAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] protected ButtonBaseAutomationPeer(Microsoft.UI.Xaml.Controls.Primitives.ButtonBase owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ComboBoxItemAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] ComboBoxItemAutomationPeer(Microsoft.UI.Xaml.Controls.ComboBoxItem owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass FlipViewItemAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] FlipViewItemAutomationPeer(Microsoft.UI.Xaml.Controls.FlipViewItem owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass GroupItemAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] GroupItemAutomationPeer(Microsoft.UI.Xaml.Controls.GroupItem owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ImageAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] ImageAutomationPeer(Microsoft.UI.Xaml.Controls.Image owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass ItemsControlAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider
    {
        [method_name("CreateInstanceWithOwner")] ItemsControlAutomationPeer(Microsoft.UI.Xaml.Controls.ItemsControl owner);
        Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer CreateItemAutomationPeer(Object item);
        overridable Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer OnCreateItemAutomationPeer(Object item);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ListBoxItemAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] ListBoxItemAutomationPeer(Microsoft.UI.Xaml.Controls.ListBoxItem owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 3)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass MediaTransportControlsAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] MediaTransportControlsAutomationPeer(Microsoft.UI.Xaml.Controls.MediaTransportControls owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass PasswordBoxAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] PasswordBoxAutomationPeer(Microsoft.UI.Xaml.Controls.PasswordBox owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass RangeBaseAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider
    {
        [method_name("CreateInstanceWithOwner")] RangeBaseAutomationPeer(Microsoft.UI.Xaml.Controls.Primitives.RangeBase owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass RichTextBlockAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] RichTextBlockAutomationPeer(Microsoft.UI.Xaml.Controls.RichTextBlock owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass RichTextBlockOverflowAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] RichTextBlockOverflowAutomationPeer(Microsoft.UI.Xaml.Controls.RichTextBlockOverflow owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass SelectorItemAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider
    {
        [method_name("CreateInstanceWithParentAndItem")] SelectorItemAutomationPeer(Object item, Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer parent);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass SemanticZoomAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
    {
        [method_name("CreateInstanceWithOwner")] SemanticZoomAutomationPeer(Microsoft.UI.Xaml.Controls.SemanticZoom owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass TextBlockAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] TextBlockAutomationPeer(Microsoft.UI.Xaml.Controls.TextBlock owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass TextBoxAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] TextBoxAutomationPeer(Microsoft.UI.Xaml.Controls.TextBox owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ThumbAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] ThumbAutomationPeer(Microsoft.UI.Xaml.Controls.Primitives.Thumb owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ToggleSwitchAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
    {
        [method_name("CreateInstanceWithOwner")] ToggleSwitchAutomationPeer(Microsoft.UI.Xaml.Controls.ToggleSwitch owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ButtonAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
    {
        [method_name("CreateInstanceWithOwner")] ButtonAutomationPeer(Microsoft.UI.Xaml.Controls.Button owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ComboBoxItemDataAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
    {
        [method_name("CreateInstanceWithParentAndItem")] ComboBoxItemDataAutomationPeer(Object item, Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer parent);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass FlipViewItemDataAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
    {
        [method_name("CreateInstanceWithParentAndItem")] FlipViewItemDataAutomationPeer(Object item, Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer parent);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass HyperlinkButtonAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
    {
        [method_name("CreateInstanceWithOwner")] HyperlinkButtonAutomationPeer(Microsoft.UI.Xaml.Controls.HyperlinkButton owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ListBoxItemDataAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
    {
        [method_name("CreateInstanceWithParentAndItem")] ListBoxItemDataAutomationPeer(Object item, Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer parent);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass RepeatButtonAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
    {
        [method_name("CreateInstanceWithOwner")] RepeatButtonAutomationPeer(Microsoft.UI.Xaml.Controls.Primitives.RepeatButton owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ScrollBarAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] ScrollBarAutomationPeer(Microsoft.UI.Xaml.Controls.Primitives.ScrollBar owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass SelectorAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider
    {
        [method_name("CreateInstanceWithOwner")] SelectorAutomationPeer(Microsoft.UI.Xaml.Controls.Primitives.Selector owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass SliderAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] SliderAutomationPeer(Microsoft.UI.Xaml.Controls.Slider owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ToggleButtonAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
    {
        [method_name("CreateInstanceWithOwner")] ToggleButtonAutomationPeer(Microsoft.UI.Xaml.Controls.Primitives.ToggleButton owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass CheckBoxAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] CheckBoxAutomationPeer(Microsoft.UI.Xaml.Controls.CheckBox owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ComboBoxAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IValueProvider
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.IWindowProvider
    {
        [method_name("CreateInstanceWithOwner")] ComboBoxAutomationPeer(Microsoft.UI.Xaml.Controls.ComboBox owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass FlipViewAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] FlipViewAutomationPeer(Microsoft.UI.Xaml.Controls.FlipView owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass ListBoxAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer
    {
        [method_name("CreateInstanceWithOwner")] ListBoxAutomationPeer(Microsoft.UI.Xaml.Controls.ListBox owner);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    [default_interface]
    unsealed runtimeclass RadioButtonAutomationPeer
        : Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer
        , [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
        Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider
    {
        [method_name("CreateInstanceWithOwner")] RadioButtonAutomationPeer(Microsoft.UI.Xaml.Controls.RadioButton owner);
    };

}
namespace Microsoft.UI.Xaml.Printing
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass AddPagesEventArgs
    {
        AddPagesEventArgs();
        Windows.Graphics.Printing.PrintTaskOptions PrintTaskOptions{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass GetPreviewPageEventArgs
    {
        GetPreviewPageEventArgs();
        Int32 PageNumber{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass PaginateEventArgs
    {
        PaginateEventArgs();
        Windows.Graphics.Printing.PrintTaskOptions PrintTaskOptions{ get; };
        Int32 CurrentPreviewPageNumber{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass PrintDocument
        : Microsoft.UI.Xaml.DependencyObject
    {
        [method_name("CreateInstance")] PrintDocument();
        Windows.Graphics.Printing.IPrintDocumentSource DocumentSource{ get; };
        event Microsoft.UI.Xaml.Printing.PaginateEventHandler Paginate;
        event Microsoft.UI.Xaml.Printing.GetPreviewPageEventHandler GetPreviewPage;
        event Microsoft.UI.Xaml.Printing.AddPagesEventHandler AddPages;
        void AddPage(Microsoft.UI.Xaml.UIElement pageVisual);
        void AddPagesComplete();
        void SetPreviewPageCount(Int32 count, Microsoft.UI.Xaml.Printing.PreviewPageCountType type);
        void SetPreviewPage(Int32 pageNumber, Microsoft.UI.Xaml.UIElement pageVisual);
        void InvalidatePreview();
        static Microsoft.UI.Xaml.DependencyProperty DocumentSourceProperty{ get; };
    };

}
namespace Microsoft.UI.Xaml.Navigation
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    unsealed runtimeclass FrameNavigationOptions
    {
        [method_name("CreateInstance")] FrameNavigationOptions();
        Boolean IsNavigationStackEnabled;
        Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo TransitionInfoOverride;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass NavigatingCancelEventArgs
    {
        Boolean Cancel;
        Microsoft.UI.Xaml.Navigation.NavigationMode NavigationMode{ get; };
        Windows.UI.Xaml.Interop.TypeName SourcePageType{ get; };
        Object Parameter{ get; };
        Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo NavigationTransitionInfo{ get; };
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass NavigationEventArgs
    {
        Object Content{ get; };
        Object Parameter{ get; };
        Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo NavigationTransitionInfo{ get; };
        Windows.UI.Xaml.Interop.TypeName SourcePageType{ get; };
        Microsoft.UI.Xaml.Navigation.NavigationMode NavigationMode{ get; };
        Windows.Foundation.Uri Uri;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    runtimeclass NavigationFailedEventArgs
    {
        HRESULT Exception{ get; };
        Boolean Handled;
        Windows.UI.Xaml.Interop.TypeName SourcePageType{ get; };
    };

}
namespace Microsoft.UI.Xaml.Interop
{
    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [uuid(036d2c08-df29-41af-8aa2-d774be62ba6f)]
    [webhosthidden]
    interface IBindableIterable 
    {
        Microsoft.UI.Xaml.Interop.IBindableIterator First();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [uuid(6a1d6c07-076d-49f2-8314-f52c9c9a8331)]
    [webhosthidden]
    interface IBindableIterator 
    {
        Object Current{ get; };
        Boolean HasCurrent{ get; };
        Boolean MoveNext();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [uuid(fe1eb536-7e7f-4f90-ac9a-474984aae512)]
    [webhosthidden]
    interface IBindableObservableVector requires Microsoft.UI.Xaml.Interop.IBindableVector
    {
        event Microsoft.UI.Xaml.Interop.BindableVectorChangedEventHandler VectorChanged;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [uuid(393de7de-6fd0-4c0d-bb71-47244a113e93)]
    [webhosthidden]
    interface IBindableVector requires Microsoft.UI.Xaml.Interop.IBindableIterable
    {
        Object GetAt(UInt32 index);
        UInt32 Size{ get; };
        Microsoft.UI.Xaml.Interop.IBindableVectorView GetView();
        [return_name("returnValue")] Boolean IndexOf(Object value, out UInt32 index);
        void SetAt(UInt32 index, Object value);
        void InsertAt(UInt32 index, Object value);
        void RemoveAt(UInt32 index);
        void Append(Object value);
        void RemoveAtEnd();
        void Clear();
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [uuid(346dd6e7-976e-4bc3-815d-ece243bc0f33)]
    [webhosthidden]
    interface IBindableVectorView requires Microsoft.UI.Xaml.Interop.IBindableIterable
    {
        Object GetAt(UInt32 index);
        UInt32 Size{ get; };
        [return_name("returnValue")] Boolean IndexOf(Object value, out UInt32 index);
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [webhosthidden]
    interface INotifyCollectionChanged 
    {
        event Microsoft.UI.Xaml.Interop.NotifyCollectionChangedEventHandler CollectionChanged;
    };

    [contract(Microsoft.UI.Xaml.WinUIContract, 1)]
    [interface_name("Microsoft.UI.Xaml.Interop.INotifyCollectionChangedEventArgs", da049ff2-d2e0-5fe8-8c7b-f87f26060b6f)]
    [constructor_name("Microsoft.UI.Xaml.Interop.INotifyCollectionChangedEventArgsFactory", 5108eba4-4892-5a20-8374-a96815e0fd27)]
    [webhosthidden]
    unsealed runtimeclass NotifyCollectionChangedEventArgs
    {
        [method_name("CreateInstanceWithAllParameters")] NotifyCollectionChangedEventArgs(Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction action, Microsoft.UI.Xaml.Interop.IBindableVector newItems, Microsoft.UI.Xaml.Interop.IBindableVector oldItems, Int32 newIndex, Int32 oldIndex);
        Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction Action{ get; };
        Microsoft.UI.Xaml.Interop.IBindableVector NewItems{ get; };
        Microsoft.UI.Xaml.Interop.IBindableVector OldItems{ get; };
        Int32 NewStartingIndex{ get; };
        Int32 OldStartingIndex{ get; };
    };

}

