// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML metadata.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

// Contains method pointers, offsets and other machine-dependent metadata.

#include "precomp.h"
#include "Indexes.g.h"
#include "Activators.g.h"
#include "TypeTable.g.h"
#include "EnumValueTable.h"

using namespace DirectUI;

static_assert(sizeof(CAdaptiveTrigger::m_minWindowHeight) == sizeof(float), "Incorrect size for CAdaptiveTrigger::m_minWindowHeight");
static_assert(sizeof(CAdaptiveTrigger::m_minWindowWidth) == sizeof(float), "Incorrect size for CAdaptiveTrigger::m_minWindowWidth");
static_assert(sizeof(CApplication::m_bApplicationStartupCompleted) == sizeof(bool), "Incorrect size for CApplication::m_bApplicationStartupCompleted");
static_assert(sizeof(CApplication::m_pResources) == sizeof(nullptr_t), "Incorrect size for CApplication::m_pResources");
static_assert(sizeof(CApplication::m_pRootVisual) == sizeof(nullptr_t), "Incorrect size for CApplication::m_pRootVisual");
static_assert(sizeof(CArcSegment::m_bLarge) == sizeof(bool), "Incorrect size for CArcSegment::m_bLarge");
static_assert(sizeof(CArcSegment::m_ptBase) == sizeof(XPOINTF), "Incorrect size for CArcSegment::m_ptBase");
static_assert(sizeof(CArcSegment::m_eAngle) == sizeof(float), "Incorrect size for CArcSegment::m_eAngle");
static_assert(sizeof(CArcSegment::m_size) == sizeof(XSIZEF), "Incorrect size for CArcSegment::m_size");
static_assert(sizeof(CArcSegment::m_bClockwise) == sizeof(uint8_t), "Incorrect size for CArcSegment::m_bClockwise");
static_assert(sizeof(CBackInterpolator::m_fAmplitude) == sizeof(float), "Incorrect size for CBackInterpolator::m_fAmplitude");
static_assert(sizeof(CBeginStoryboard::m_pStoryboard) == sizeof(nullptr_t), "Incorrect size for CBeginStoryboard::m_pStoryboard");
static_assert(sizeof(CBezierSegment::m_ptOne) == sizeof(XPOINTF), "Incorrect size for CBezierSegment::m_ptOne");
static_assert(sizeof(CBezierSegment::m_ptTwo) == sizeof(XPOINTF), "Incorrect size for CBezierSegment::m_ptTwo");
static_assert(sizeof(CBezierSegment::m_ptThree) == sizeof(XPOINTF), "Incorrect size for CBezierSegment::m_ptThree");
static_assert(sizeof(CBinding::m_strPath) == sizeof(xstring_ptr), "Incorrect size for CBinding::m_strPath");
static_assert(sizeof(CBitmapIcon::m_showAsMonochrome) == sizeof(bool), "Incorrect size for CBitmapIcon::m_showAsMonochrome");
static_assert(sizeof(CBitmapIcon::m_strSource) == sizeof(xstring_ptr), "Incorrect size for CBitmapIcon::m_strSource");
static_assert(sizeof(CBitmapImage::m_nCreateOptions) == sizeof(uint8_t), "Incorrect size for CBitmapImage::m_nCreateOptions");
static_assert(sizeof(CBitmapImage::m_decodePixelHeight) == sizeof(int32_t), "Incorrect size for CBitmapImage::m_decodePixelHeight");
static_assert(sizeof(CBitmapImage::m_decodePixelType) == sizeof(uint8_t), "Incorrect size for CBitmapImage::m_decodePixelType");
static_assert(sizeof(CBitmapImage::m_decodePixelWidth) == sizeof(int32_t), "Incorrect size for CBitmapImage::m_decodePixelWidth");
static_assert(sizeof(CBitmapImage::m_strSource) == sizeof(xstring_ptr), "Incorrect size for CBitmapImage::m_strSource");
static_assert(sizeof(CBlock::m_textAlignment) == sizeof(uint8_t), "Incorrect size for CBlock::m_textAlignment");
static_assert(sizeof(CBlock::m_lineHeight) == sizeof(float), "Incorrect size for CBlock::m_lineHeight");
static_assert(sizeof(CBlock::m_lineStackingStrategy) == sizeof(uint8_t), "Incorrect size for CBlock::m_lineStackingStrategy");
static_assert(sizeof(CBlock::m_margin) == sizeof(XTHICKNESS), "Incorrect size for CBlock::m_margin");
static_assert(sizeof(CBlock::m_textAlignment) == sizeof(uint8_t), "Incorrect size for CBlock::m_textAlignment");
static_assert(sizeof(CBorder::m_pBackgroundBrush) == sizeof(nullptr_t), "Incorrect size for CBorder::m_pBackgroundBrush");
static_assert(sizeof(CBorder::m_pBorderBrush) == sizeof(nullptr_t), "Incorrect size for CBorder::m_pBorderBrush");
static_assert(sizeof(CBorder::m_borderThickness) == sizeof(XTHICKNESS), "Incorrect size for CBorder::m_borderThickness");
static_assert(sizeof(CBorder::m_cornerRadius) == sizeof(XCORNERRADIUS), "Incorrect size for CBorder::m_cornerRadius");
static_assert(sizeof(CBorder::m_padding) == sizeof(XTHICKNESS), "Incorrect size for CBorder::m_padding");
static_assert(sizeof(CBounceInterpolator::m_iBounces) == sizeof(int32_t), "Incorrect size for CBounceInterpolator::m_iBounces");
static_assert(sizeof(CBounceInterpolator::m_fBounciness) == sizeof(float), "Incorrect size for CBounceInterpolator::m_fBounciness");
static_assert(sizeof(CBrush::m_eOpacity) == sizeof(float), "Incorrect size for CBrush::m_eOpacity");
static_assert(sizeof(CCalendarView::m_pBlackoutBackground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pBlackoutBackground");
static_assert(sizeof(CCalendarView::m_pBlackoutForeground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pBlackoutForeground");
static_assert(sizeof(CCalendarView::m_pBlackoutStrikethroughBrush) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pBlackoutStrikethroughBrush");
static_assert(sizeof(CCalendarView::m_pCalendarItemBackground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pCalendarItemBackground");
static_assert(sizeof(CCalendarView::m_pCalendarItemBorderBrush) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pCalendarItemBorderBrush");
static_assert(sizeof(CCalendarView::m_calendarItemBorderThickness) == sizeof(XTHICKNESS), "Incorrect size for CCalendarView::m_calendarItemBorderThickness");
static_assert(sizeof(CCalendarView::m_calendarItemCornerRadius) == sizeof(XCORNERRADIUS), "Incorrect size for CCalendarView::m_calendarItemCornerRadius");
static_assert(sizeof(CCalendarView::m_pCalendarItemDisabledBackground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pCalendarItemDisabledBackground");
static_assert(sizeof(CCalendarView::m_pCalendarItemForeground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pCalendarItemForeground");
static_assert(sizeof(CCalendarView::m_pCalendarItemHoverBackground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pCalendarItemHoverBackground");
static_assert(sizeof(CCalendarView::m_pCalendarItemPressedBackground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pCalendarItemPressedBackground");
static_assert(sizeof(CCalendarView::m_pDayItemFontFamily) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pDayItemFontFamily");
static_assert(sizeof(CCalendarView::m_dayItemFontSize) == sizeof(float), "Incorrect size for CCalendarView::m_dayItemFontSize");
static_assert(sizeof(CCalendarView::m_dayItemFontStyle) == sizeof(uint8_t), "Incorrect size for CCalendarView::m_dayItemFontStyle");
static_assert(sizeof(CCalendarView::m_dayItemFontWeight) == sizeof(uint32_t), "Incorrect size for CCalendarView::m_dayItemFontWeight");
static_assert(sizeof(CCalendarView::m_dayItemMargin) == sizeof(XTHICKNESS), "Incorrect size for CCalendarView::m_dayItemMargin");
static_assert(sizeof(CCalendarView::m_pDisabledForeground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pDisabledForeground");
static_assert(sizeof(CCalendarView::m_pFirstOfMonthLabelFontFamily) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pFirstOfMonthLabelFontFamily");
static_assert(sizeof(CCalendarView::m_firstOfMonthLabelFontSize) == sizeof(float), "Incorrect size for CCalendarView::m_firstOfMonthLabelFontSize");
static_assert(sizeof(CCalendarView::m_firstOfMonthLabelFontStyle) == sizeof(uint8_t), "Incorrect size for CCalendarView::m_firstOfMonthLabelFontStyle");
static_assert(sizeof(CCalendarView::m_firstOfMonthLabelFontWeight) == sizeof(uint32_t), "Incorrect size for CCalendarView::m_firstOfMonthLabelFontWeight");
static_assert(sizeof(CCalendarView::m_firstOfMonthLabelMargin) == sizeof(XTHICKNESS), "Incorrect size for CCalendarView::m_firstOfMonthLabelMargin");
static_assert(sizeof(CCalendarView::m_pFirstOfYearDecadeLabelFontFamily) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pFirstOfYearDecadeLabelFontFamily");
static_assert(sizeof(CCalendarView::m_firstOfYearDecadeLabelFontSize) == sizeof(float), "Incorrect size for CCalendarView::m_firstOfYearDecadeLabelFontSize");
static_assert(sizeof(CCalendarView::m_firstOfYearDecadeLabelFontStyle) == sizeof(uint8_t), "Incorrect size for CCalendarView::m_firstOfYearDecadeLabelFontStyle");
static_assert(sizeof(CCalendarView::m_firstOfYearDecadeLabelFontWeight) == sizeof(uint32_t), "Incorrect size for CCalendarView::m_firstOfYearDecadeLabelFontWeight");
static_assert(sizeof(CCalendarView::m_firstOfYearDecadeLabelMargin) == sizeof(XTHICKNESS), "Incorrect size for CCalendarView::m_firstOfYearDecadeLabelMargin");
static_assert(sizeof(CCalendarView::m_pFocusBorderBrush) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pFocusBorderBrush");
static_assert(sizeof(CCalendarView::m_horizontalDayItemAlignment) == sizeof(uint8_t), "Incorrect size for CCalendarView::m_horizontalDayItemAlignment");
static_assert(sizeof(CCalendarView::m_horizontalFirstOfMonthLabelAlignment) == sizeof(uint8_t), "Incorrect size for CCalendarView::m_horizontalFirstOfMonthLabelAlignment");
static_assert(sizeof(CCalendarView::m_pHoverBorderBrush) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pHoverBorderBrush");
static_assert(sizeof(CCalendarView::m_pMonthYearItemFontFamily) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pMonthYearItemFontFamily");
static_assert(sizeof(CCalendarView::m_monthYearItemFontSize) == sizeof(float), "Incorrect size for CCalendarView::m_monthYearItemFontSize");
static_assert(sizeof(CCalendarView::m_monthYearItemFontStyle) == sizeof(uint8_t), "Incorrect size for CCalendarView::m_monthYearItemFontStyle");
static_assert(sizeof(CCalendarView::m_monthYearItemFontWeight) == sizeof(uint32_t), "Incorrect size for CCalendarView::m_monthYearItemFontWeight");
static_assert(sizeof(CCalendarView::m_monthYearItemMargin) == sizeof(XTHICKNESS), "Incorrect size for CCalendarView::m_monthYearItemMargin");
static_assert(sizeof(CCalendarView::m_pOutOfScopeBackground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pOutOfScopeBackground");
static_assert(sizeof(CCalendarView::m_pOutOfScopeForeground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pOutOfScopeForeground");
static_assert(sizeof(CCalendarView::m_pOutOfScopeHoverForeground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pOutOfScopeHoverForeground");
static_assert(sizeof(CCalendarView::m_pOutOfScopePressedForeground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pOutOfScopePressedForeground");
static_assert(sizeof(CCalendarView::m_pPressedBorderBrush) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pPressedBorderBrush");
static_assert(sizeof(CCalendarView::m_pPressedForeground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pPressedForeground");
static_assert(sizeof(CCalendarView::m_pSelectedBorderBrush) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pSelectedBorderBrush");
static_assert(sizeof(CCalendarView::m_pSelectedDisabledBorderBrush) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pSelectedDisabledBorderBrush");
static_assert(sizeof(CCalendarView::m_pSelectedDisabledForeground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pSelectedDisabledForeground");
static_assert(sizeof(CCalendarView::m_pSelectedForeground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pSelectedForeground");
static_assert(sizeof(CCalendarView::m_pSelectedHoverBorderBrush) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pSelectedHoverBorderBrush");
static_assert(sizeof(CCalendarView::m_pSelectedHoverForeground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pSelectedHoverForeground");
static_assert(sizeof(CCalendarView::m_pSelectedPressedBorderBrush) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pSelectedPressedBorderBrush");
static_assert(sizeof(CCalendarView::m_pSelectedPressedForeground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pSelectedPressedForeground");
static_assert(sizeof(CCalendarView::m_pTodayBackground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pTodayBackground");
static_assert(sizeof(CCalendarView::m_pTodayBlackoutBackground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pTodayBlackoutBackground");
static_assert(sizeof(CCalendarView::m_pTodayBlackoutForeground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pTodayBlackoutForeground");
static_assert(sizeof(CCalendarView::m_pTodayDisabledBackground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pTodayDisabledBackground");
static_assert(sizeof(CCalendarView::m_todayFontWeight) == sizeof(uint32_t), "Incorrect size for CCalendarView::m_todayFontWeight");
static_assert(sizeof(CCalendarView::m_pTodayForeground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pTodayForeground");
static_assert(sizeof(CCalendarView::m_pTodayHoverBackground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pTodayHoverBackground");
static_assert(sizeof(CCalendarView::m_pTodayHoverBorderBrush) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pTodayHoverBorderBrush");
static_assert(sizeof(CCalendarView::m_pTodayPressedBackground) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pTodayPressedBackground");
static_assert(sizeof(CCalendarView::m_pTodayPressedBorderBrush) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pTodayPressedBorderBrush");
static_assert(sizeof(CCalendarView::m_pTodaySelectedInnerBorderBrush) == sizeof(nullptr_t), "Incorrect size for CCalendarView::m_pTodaySelectedInnerBorderBrush");
static_assert(sizeof(CCalendarView::m_verticalDayItemAlignment) == sizeof(uint8_t), "Incorrect size for CCalendarView::m_verticalDayItemAlignment");
static_assert(sizeof(CCalendarView::m_verticalFirstOfMonthLabelAlignment) == sizeof(uint8_t), "Incorrect size for CCalendarView::m_verticalFirstOfMonthLabelAlignment");
static_assert(sizeof(CColor::m_rgb) == sizeof(uint32_t), "Incorrect size for CColor::m_rgb");
static_assert(sizeof(CColorAnimation::m_vBy) == sizeof(uint32_t), "Incorrect size for CColorAnimation::m_vBy");
static_assert(sizeof(CColorAnimation::m_pEasingFunction) == sizeof(nullptr_t), "Incorrect size for CColorAnimation::m_pEasingFunction");
static_assert(sizeof(CColorAnimation::m_enableDependentAnimation) == sizeof(bool), "Incorrect size for CColorAnimation::m_enableDependentAnimation");
static_assert(sizeof(CColorAnimation::m_vFrom) == sizeof(uint32_t), "Incorrect size for CColorAnimation::m_vFrom");
static_assert(sizeof(CColorAnimation::m_vTo) == sizeof(uint32_t), "Incorrect size for CColorAnimation::m_vTo");
static_assert(sizeof(CColorAnimationUsingKeyFrames::m_enableDependentAnimation) == sizeof(bool), "Incorrect size for CColorAnimationUsingKeyFrames::m_enableDependentAnimation");
static_assert(sizeof(CColorAnimationUsingKeyFrames::m_pKeyFrames) == sizeof(nullptr_t), "Incorrect size for CColorAnimationUsingKeyFrames::m_pKeyFrames");
static_assert(sizeof(CColorKeyFrame::m_keyTime) == sizeof(nullptr_t), "Incorrect size for CColorKeyFrame::m_keyTime");
static_assert(sizeof(CColorKeyFrame::m_uValue) == sizeof(uint32_t), "Incorrect size for CColorKeyFrame::m_uValue");
static_assert(sizeof(CColumnDefinition::m_eUserMaxSize) == sizeof(float), "Incorrect size for CColumnDefinition::m_eUserMaxSize");
static_assert(sizeof(CColumnDefinition::m_eUserMinSize) == sizeof(float), "Incorrect size for CColumnDefinition::m_eUserMinSize");
static_assert(sizeof(CColumnDefinition::m_pUserSize) == sizeof(XGRIDLENGTH), "Incorrect size for CColumnDefinition::m_pUserSize");
static_assert(sizeof(CCompositeTransform::m_ptCenter.x) == sizeof(float), "Incorrect size for CCompositeTransform::m_ptCenter.x");
static_assert(sizeof(CCompositeTransform::m_ptCenter.y) == sizeof(float), "Incorrect size for CCompositeTransform::m_ptCenter.y");
static_assert(sizeof(CCompositeTransform::m_eRotation) == sizeof(float), "Incorrect size for CCompositeTransform::m_eRotation");
static_assert(sizeof(CCompositeTransform::m_eScaleX) == sizeof(float), "Incorrect size for CCompositeTransform::m_eScaleX");
static_assert(sizeof(CCompositeTransform::m_eScaleY) == sizeof(float), "Incorrect size for CCompositeTransform::m_eScaleY");
static_assert(sizeof(CCompositeTransform::m_eSkewX) == sizeof(float), "Incorrect size for CCompositeTransform::m_eSkewX");
static_assert(sizeof(CCompositeTransform::m_eSkewY) == sizeof(float), "Incorrect size for CCompositeTransform::m_eSkewY");
static_assert(sizeof(CCompositeTransform::m_eTranslateX) == sizeof(float), "Incorrect size for CCompositeTransform::m_eTranslateX");
static_assert(sizeof(CCompositeTransform::m_eTranslateY) == sizeof(float), "Incorrect size for CCompositeTransform::m_eTranslateY");
static_assert(sizeof(CCompositeTransform3D::m_rCenterX) == sizeof(float), "Incorrect size for CCompositeTransform3D::m_rCenterX");
static_assert(sizeof(CCompositeTransform3D::m_rCenterY) == sizeof(float), "Incorrect size for CCompositeTransform3D::m_rCenterY");
static_assert(sizeof(CCompositeTransform3D::m_rCenterZ) == sizeof(float), "Incorrect size for CCompositeTransform3D::m_rCenterZ");
static_assert(sizeof(CCompositeTransform3D::m_rRotationX) == sizeof(float), "Incorrect size for CCompositeTransform3D::m_rRotationX");
static_assert(sizeof(CCompositeTransform3D::m_rRotationY) == sizeof(float), "Incorrect size for CCompositeTransform3D::m_rRotationY");
static_assert(sizeof(CCompositeTransform3D::m_rRotationZ) == sizeof(float), "Incorrect size for CCompositeTransform3D::m_rRotationZ");
static_assert(sizeof(CCompositeTransform3D::m_rScaleX) == sizeof(float), "Incorrect size for CCompositeTransform3D::m_rScaleX");
static_assert(sizeof(CCompositeTransform3D::m_rScaleY) == sizeof(float), "Incorrect size for CCompositeTransform3D::m_rScaleY");
static_assert(sizeof(CCompositeTransform3D::m_rScaleZ) == sizeof(float), "Incorrect size for CCompositeTransform3D::m_rScaleZ");
static_assert(sizeof(CCompositeTransform3D::m_rTranslateX) == sizeof(float), "Incorrect size for CCompositeTransform3D::m_rTranslateX");
static_assert(sizeof(CCompositeTransform3D::m_rTranslateY) == sizeof(float), "Incorrect size for CCompositeTransform3D::m_rTranslateY");
static_assert(sizeof(CCompositeTransform3D::m_rTranslateZ) == sizeof(float), "Incorrect size for CCompositeTransform3D::m_rTranslateZ");
static_assert(sizeof(CContentControl::m_pContentTemplate) == sizeof(nullptr_t), "Incorrect size for CContentControl::m_pContentTemplate");
static_assert(sizeof(CContentControl::m_pContentTransitions) == sizeof(nullptr_t), "Incorrect size for CContentControl::m_pContentTransitions");
static_assert(sizeof(CContentControl::m_pSelectedContentTemplate) == sizeof(nullptr_t), "Incorrect size for CContentControl::m_pSelectedContentTemplate");
static_assert(sizeof(CContentPresenter::m_pTextFormatting->m_nCharacterSpacing) == sizeof(int32_t), "Incorrect size for CContentPresenter::m_pTextFormatting->m_nCharacterSpacing");
static_assert(sizeof(CContentPresenter::m_pContentTemplate) == sizeof(nullptr_t), "Incorrect size for CContentPresenter::m_pContentTemplate");
static_assert(sizeof(CContentPresenter::m_pContentTransitions) == sizeof(nullptr_t), "Incorrect size for CContentPresenter::m_pContentTransitions");
static_assert(sizeof(CContentPresenter::m_pTextFormatting->m_pFontFamily) == sizeof(nullptr_t), "Incorrect size for CContentPresenter::m_pTextFormatting->m_pFontFamily");
static_assert(sizeof(CContentPresenter::m_pTextFormatting->m_eFontSize) == sizeof(float), "Incorrect size for CContentPresenter::m_pTextFormatting->m_eFontSize");
static_assert(sizeof(CContentPresenter::m_pTextFormatting->m_nFontStretch) == sizeof(uint8_t), "Incorrect size for CContentPresenter::m_pTextFormatting->m_nFontStretch");
static_assert(sizeof(CContentPresenter::m_pTextFormatting->m_nFontStyle) == sizeof(uint8_t), "Incorrect size for CContentPresenter::m_pTextFormatting->m_nFontStyle");
static_assert(sizeof(CContentPresenter::m_pTextFormatting->m_nFontWeight) == sizeof(uint32_t), "Incorrect size for CContentPresenter::m_pTextFormatting->m_nFontWeight");
static_assert(sizeof(CContentPresenter::m_pTextFormatting->m_pForeground) == sizeof(nullptr_t), "Incorrect size for CContentPresenter::m_pTextFormatting->m_pForeground");
static_assert(sizeof(CContentPresenter::m_pTextFormatting->m_isTextScaleFactorEnabled) == sizeof(bool), "Incorrect size for CContentPresenter::m_pTextFormatting->m_isTextScaleFactorEnabled");
static_assert(sizeof(CControl::m_pBackground) == sizeof(nullptr_t), "Incorrect size for CControl::m_pBackground");
static_assert(sizeof(CControl::m_pBorderBrush) == sizeof(nullptr_t), "Incorrect size for CControl::m_pBorderBrush");
static_assert(sizeof(CControl::m_borderThickness) == sizeof(XTHICKNESS), "Incorrect size for CControl::m_borderThickness");
static_assert(sizeof(CControl::m_pTextFormatting->m_nCharacterSpacing) == sizeof(int32_t), "Incorrect size for CControl::m_pTextFormatting->m_nCharacterSpacing");
static_assert(sizeof(CControl::m_pDefaultStyleKey) == sizeof(nullptr_t), "Incorrect size for CControl::m_pDefaultStyleKey");
static_assert(sizeof(CControl::m_pTextFormatting->m_pFontFamily) == sizeof(nullptr_t), "Incorrect size for CControl::m_pTextFormatting->m_pFontFamily");
static_assert(sizeof(CControl::m_pTextFormatting->m_eFontSize) == sizeof(float), "Incorrect size for CControl::m_pTextFormatting->m_eFontSize");
static_assert(sizeof(CControl::m_pTextFormatting->m_nFontStretch) == sizeof(uint8_t), "Incorrect size for CControl::m_pTextFormatting->m_nFontStretch");
static_assert(sizeof(CControl::m_pTextFormatting->m_nFontStyle) == sizeof(uint8_t), "Incorrect size for CControl::m_pTextFormatting->m_nFontStyle");
static_assert(sizeof(CControl::m_pTextFormatting->m_nFontWeight) == sizeof(uint32_t), "Incorrect size for CControl::m_pTextFormatting->m_nFontWeight");
static_assert(sizeof(CControl::m_pTextFormatting->m_pForeground) == sizeof(nullptr_t), "Incorrect size for CControl::m_pTextFormatting->m_pForeground");
static_assert(sizeof(CControl::m_horizontalContentAlignment) == sizeof(uint8_t), "Incorrect size for CControl::m_horizontalContentAlignment");
static_assert(sizeof(CControl::m_pTextFormatting->m_isTextScaleFactorEnabled) == sizeof(bool), "Incorrect size for CControl::m_pTextFormatting->m_isTextScaleFactorEnabled");
static_assert(sizeof(CControl::m_padding) == sizeof(XTHICKNESS), "Incorrect size for CControl::m_padding");
static_assert(sizeof(CControl::m_pTemplate) == sizeof(nullptr_t), "Incorrect size for CControl::m_pTemplate");
static_assert(sizeof(CControl::m_verticalContentAlignment) == sizeof(uint8_t), "Incorrect size for CControl::m_verticalContentAlignment");
static_assert(sizeof(CCornerRadius::m_cornerRadius.bottomLeft) == sizeof(float), "Incorrect size for CCornerRadius::m_cornerRadius.bottomLeft");
static_assert(sizeof(CCornerRadius::m_cornerRadius.bottomRight) == sizeof(float), "Incorrect size for CCornerRadius::m_cornerRadius.bottomRight");
static_assert(sizeof(CCornerRadius::m_cornerRadius.topLeft) == sizeof(float), "Incorrect size for CCornerRadius::m_cornerRadius.topLeft");
static_assert(sizeof(CCornerRadius::m_cornerRadius.topRight) == sizeof(float), "Incorrect size for CCornerRadius::m_cornerRadius.topRight");
static_assert(sizeof(CustomResourceExtension::m_strResourceKey) == sizeof(xstring_ptr), "Incorrect size for CustomResourceExtension::m_strResourceKey");
static_assert(sizeof(CDependencyObject::m_strName) == sizeof(xstring_ptr), "Incorrect size for CDependencyObject::m_strName");
static_assert(sizeof(CDependencyPropertyProxy::m_nPropertyIndex) == sizeof(int32_t), "Incorrect size for CDependencyPropertyProxy::m_nPropertyIndex");
static_assert(sizeof(CDispatcherTimer::m_pInterval) == sizeof(nullptr_t), "Incorrect size for CDispatcherTimer::m_pInterval");
static_assert(sizeof(CDisplayMemberTemplate::m_strMemberPath) == sizeof(xstring_ptr), "Incorrect size for CDisplayMemberTemplate::m_strMemberPath");
static_assert(sizeof(CDouble::m_eValue) == sizeof(float), "Incorrect size for CDouble::m_eValue");
static_assert(sizeof(CDoubleAnimation::m_vBy) == sizeof(float), "Incorrect size for CDoubleAnimation::m_vBy");
static_assert(sizeof(CDoubleAnimation::m_pEasingFunction) == sizeof(nullptr_t), "Incorrect size for CDoubleAnimation::m_pEasingFunction");
static_assert(sizeof(CDoubleAnimation::m_enableDependentAnimation) == sizeof(bool), "Incorrect size for CDoubleAnimation::m_enableDependentAnimation");
static_assert(sizeof(CDoubleAnimation::m_vFrom) == sizeof(float), "Incorrect size for CDoubleAnimation::m_vFrom");
static_assert(sizeof(CDoubleAnimation::m_vTo) == sizeof(float), "Incorrect size for CDoubleAnimation::m_vTo");
static_assert(sizeof(CDoubleAnimationUsingKeyFrames::m_enableDependentAnimation) == sizeof(bool), "Incorrect size for CDoubleAnimationUsingKeyFrames::m_enableDependentAnimation");
static_assert(sizeof(CDoubleAnimationUsingKeyFrames::m_pKeyFrames) == sizeof(nullptr_t), "Incorrect size for CDoubleAnimationUsingKeyFrames::m_pKeyFrames");
static_assert(sizeof(CDoubleKeyFrame::m_keyTime) == sizeof(nullptr_t), "Incorrect size for CDoubleKeyFrame::m_keyTime");
static_assert(sizeof(CDoubleKeyFrame::m_rValue) == sizeof(float), "Incorrect size for CDoubleKeyFrame::m_rValue");
static_assert(sizeof(CDynamicTimeline::m_pChild) == sizeof(nullptr_t), "Incorrect size for CDynamicTimeline::m_pChild");
static_assert(sizeof(CEasingColorKeyFrame::m_pEasingFunction) == sizeof(nullptr_t), "Incorrect size for CEasingColorKeyFrame::m_pEasingFunction");
static_assert(sizeof(CEasingDoubleKeyFrame::m_pEasingFunction) == sizeof(nullptr_t), "Incorrect size for CEasingDoubleKeyFrame::m_pEasingFunction");
static_assert(sizeof(CEasingFunctionBase::m_eEasingMode) == sizeof(uint8_t), "Incorrect size for CEasingFunctionBase::m_eEasingMode");
static_assert(sizeof(CEasingPointKeyFrame::m_pEasingFunction) == sizeof(nullptr_t), "Incorrect size for CEasingPointKeyFrame::m_pEasingFunction");
static_assert(sizeof(CEdgeUIThemeTransition::m_edge) == sizeof(DirectUI::EdgeTransitionLocation), "Incorrect size for CEdgeUIThemeTransition::m_edge");
static_assert(sizeof(CElasticInterpolator::m_iOscillations) == sizeof(int32_t), "Incorrect size for CElasticInterpolator::m_iOscillations");
static_assert(sizeof(CElasticInterpolator::m_fSpringiness) == sizeof(float), "Incorrect size for CElasticInterpolator::m_fSpringiness");
static_assert(sizeof(CEllipseGeometry::m_ptCenter) == sizeof(XPOINTF), "Incorrect size for CEllipseGeometry::m_ptCenter");
static_assert(sizeof(CEllipseGeometry::m_eRadiusX) == sizeof(float), "Incorrect size for CEllipseGeometry::m_eRadiusX");
static_assert(sizeof(CEllipseGeometry::m_eRadiusY) == sizeof(float), "Incorrect size for CEllipseGeometry::m_eRadiusY");
static_assert(sizeof(CEntranceThemeTransition::m_isStaggeringEnabled) == sizeof(bool), "Incorrect size for CEntranceThemeTransition::m_isStaggeringEnabled");
static_assert(sizeof(CEventTrigger::m_pTriggerActions) == sizeof(nullptr_t), "Incorrect size for CEventTrigger::m_pTriggerActions");
static_assert(sizeof(CEventTrigger::m_strRouted) == sizeof(xstring_ptr), "Incorrect size for CEventTrigger::m_strRouted");
static_assert(sizeof(CExponentialInterpolator::m_fExponent) == sizeof(float), "Incorrect size for CExponentialInterpolator::m_fExponent");
static_assert(sizeof(CManagedObjectReference::m_markupExtensionType) == sizeof(uint8_t), "Incorrect size for CManagedObjectReference::m_markupExtensionType");
static_assert(sizeof(CManagedObjectReference::m_nativeValue) == sizeof(CValue), "Incorrect size for CManagedObjectReference::m_nativeValue");
static_assert(sizeof(CFadeInThemeAnimation::m_targetName) == sizeof(xstring_ptr), "Incorrect size for CFadeInThemeAnimation::m_targetName");
static_assert(sizeof(CFadeOutThemeAnimation::m_targetName) == sizeof(xstring_ptr), "Incorrect size for CFadeOutThemeAnimation::m_targetName");
static_assert(sizeof(CFontIcon::m_pTextFormatting->m_pFontFamily) == sizeof(nullptr_t), "Incorrect size for CFontIcon::m_pTextFormatting->m_pFontFamily");
static_assert(sizeof(CFontIcon::m_pTextFormatting->m_eFontSize) == sizeof(float), "Incorrect size for CFontIcon::m_pTextFormatting->m_eFontSize");
static_assert(sizeof(CFontIcon::m_pTextFormatting->m_nFontStyle) == sizeof(uint8_t), "Incorrect size for CFontIcon::m_pTextFormatting->m_nFontStyle");
static_assert(sizeof(CFontIcon::m_pTextFormatting->m_nFontWeight) == sizeof(uint32_t), "Incorrect size for CFontIcon::m_pTextFormatting->m_nFontWeight");
static_assert(sizeof(CFontIcon::m_strGlyph) == sizeof(xstring_ptr), "Incorrect size for CFontIcon::m_strGlyph");
static_assert(sizeof(CFontIcon::m_pTextFormatting->m_isTextScaleFactorEnabled) == sizeof(bool), "Incorrect size for CFontIcon::m_pTextFormatting->m_isTextScaleFactorEnabled");
static_assert(sizeof(CFrame::m_backStackDepth) == sizeof(INT), "Incorrect size for CFrame::m_backStackDepth");
static_assert(sizeof(CFrame::m_canGoBack) == sizeof(bool), "Incorrect size for CFrame::m_canGoBack");
static_assert(sizeof(CFrame::m_canGoForward) == sizeof(bool), "Incorrect size for CFrame::m_canGoForward");
static_assert(sizeof(CFrame::m_currentSourcePageType) == sizeof(KnownTypeIndex), "Incorrect size for CFrame::m_currentSourcePageType");
static_assert(sizeof(CFrame::m_sourcePageType) == sizeof(KnownTypeIndex), "Incorrect size for CFrame::m_sourcePageType");
static_assert(sizeof(CFrameworkElement::m_pTextFormatting->m_nFlowDirection) == sizeof(uint8_t), "Incorrect size for CFrameworkElement::m_pTextFormatting->m_nFlowDirection");
static_assert(sizeof(CFrameworkElement::m_eHeight) == sizeof(float), "Incorrect size for CFrameworkElement::m_eHeight");
static_assert(sizeof(CFrameworkElement::m_pLayoutProperties->m_horizontalAlignment) == sizeof(uint8_t), "Incorrect size for CFrameworkElement::m_pLayoutProperties->m_horizontalAlignment");
static_assert(sizeof(CFrameworkElement::m_pTextFormatting->m_isTextScaleFactorEnabled) == sizeof(bool), "Incorrect size for CFrameworkElement::m_pTextFormatting->m_isTextScaleFactorEnabled");
static_assert(sizeof(CFrameworkElement::m_pTextFormatting->m_strLanguageString) == sizeof(xstring_ptr), "Incorrect size for CFrameworkElement::m_pTextFormatting->m_strLanguageString");
static_assert(sizeof(CFrameworkElement::m_pLayoutProperties->m_margin) == sizeof(XTHICKNESS), "Incorrect size for CFrameworkElement::m_pLayoutProperties->m_margin");
static_assert(sizeof(CFrameworkElement::m_pLayoutProperties->m_eMaxHeight) == sizeof(float), "Incorrect size for CFrameworkElement::m_pLayoutProperties->m_eMaxHeight");
static_assert(sizeof(CFrameworkElement::m_pLayoutProperties->m_eMaxWidth) == sizeof(float), "Incorrect size for CFrameworkElement::m_pLayoutProperties->m_eMaxWidth");
static_assert(sizeof(CFrameworkElement::m_pLayoutProperties->m_eMinHeight) == sizeof(float), "Incorrect size for CFrameworkElement::m_pLayoutProperties->m_eMinHeight");
static_assert(sizeof(CFrameworkElement::m_pLayoutProperties->m_eMinWidth) == sizeof(float), "Incorrect size for CFrameworkElement::m_pLayoutProperties->m_eMinWidth");
static_assert(sizeof(CFrameworkElement::m_pLayoutProperties->m_verticalAlignment) == sizeof(uint8_t), "Incorrect size for CFrameworkElement::m_pLayoutProperties->m_verticalAlignment");
static_assert(sizeof(CFrameworkElement::m_eWidth) == sizeof(float), "Incorrect size for CFrameworkElement::m_eWidth");
static_assert(sizeof(CFrameworkElementEx::m_height) == sizeof(float), "Incorrect size for CFrameworkElementEx::m_height");
static_assert(sizeof(CFrameworkElementEx::m_horizontalAlignment) == sizeof(uint8_t), "Incorrect size for CFrameworkElementEx::m_horizontalAlignment");
static_assert(sizeof(CFrameworkElementEx::m_margin) == sizeof(XTHICKNESS), "Incorrect size for CFrameworkElementEx::m_margin");
static_assert(sizeof(CFrameworkElementEx::m_maxHeight) == sizeof(float), "Incorrect size for CFrameworkElementEx::m_maxHeight");
static_assert(sizeof(CFrameworkElementEx::m_maxWidth) == sizeof(float), "Incorrect size for CFrameworkElementEx::m_maxWidth");
static_assert(sizeof(CFrameworkElementEx::m_minHeight) == sizeof(float), "Incorrect size for CFrameworkElementEx::m_minHeight");
static_assert(sizeof(CFrameworkElementEx::m_minWidth) == sizeof(float), "Incorrect size for CFrameworkElementEx::m_minWidth");
static_assert(sizeof(CFrameworkElementEx::m_verticalAlignment) == sizeof(uint8_t), "Incorrect size for CFrameworkElementEx::m_verticalAlignment");
static_assert(sizeof(CFrameworkElementEx::m_width) == sizeof(float), "Incorrect size for CFrameworkElementEx::m_width");
static_assert(sizeof(CFrameworkTemplate::m_pTemplateContent) == sizeof(nullptr_t), "Incorrect size for CFrameworkTemplate::m_pTemplateContent");
static_assert(sizeof(CGeometry::m_pTransform) == sizeof(nullptr_t), "Incorrect size for CGeometry::m_pTransform");
static_assert(sizeof(CGeometryGroup::m_pChild) == sizeof(nullptr_t), "Incorrect size for CGeometryGroup::m_pChild");
static_assert(sizeof(CGeometryGroup::m_fillMode) == sizeof(uint8_t), "Incorrect size for CGeometryGroup::m_fillMode");
static_assert(sizeof(CGlyphs::m_colorPaletteIndex) == sizeof(INT), "Incorrect size for CGlyphs::m_colorPaletteIndex");
static_assert(sizeof(CGlyphs::m_pFill) == sizeof(nullptr_t), "Incorrect size for CGlyphs::m_pFill");
static_assert(sizeof(CGlyphs::m_eFontRenderingEmSize) == sizeof(float), "Incorrect size for CGlyphs::m_eFontRenderingEmSize");
static_assert(sizeof(CGlyphs::m_strFontUri) == sizeof(xstring_ptr), "Incorrect size for CGlyphs::m_strFontUri");
static_assert(sizeof(CGlyphs::m_strIndices) == sizeof(xstring_ptr), "Incorrect size for CGlyphs::m_strIndices");
static_assert(sizeof(CGlyphs::m_isColorFontEnabled) == sizeof(bool), "Incorrect size for CGlyphs::m_isColorFontEnabled");
static_assert(sizeof(CGlyphs::m_eOriginX) == sizeof(float), "Incorrect size for CGlyphs::m_eOriginX");
static_assert(sizeof(CGlyphs::m_eOriginY) == sizeof(float), "Incorrect size for CGlyphs::m_eOriginY");
static_assert(sizeof(CGlyphs::m_nStyleSimulations) == sizeof(uint8_t), "Incorrect size for CGlyphs::m_nStyleSimulations");
static_assert(sizeof(CGlyphs::m_strUnicodeString) == sizeof(xstring_ptr), "Incorrect size for CGlyphs::m_strUnicodeString");
static_assert(sizeof(CGradientBrush::m_nInterpolate) == sizeof(uint8_t), "Incorrect size for CGradientBrush::m_nInterpolate");
static_assert(sizeof(CGradientBrush::m_pStops) == sizeof(nullptr_t), "Incorrect size for CGradientBrush::m_pStops");
static_assert(sizeof(CGradientBrush::m_nMapping) == sizeof(uint8_t), "Incorrect size for CGradientBrush::m_nMapping");
static_assert(sizeof(CGradientBrush::m_nSpread) == sizeof(uint8_t), "Incorrect size for CGradientBrush::m_nSpread");
static_assert(sizeof(CGradientStop::m_rgb) == sizeof(uint32_t), "Incorrect size for CGradientStop::m_rgb");
static_assert(sizeof(CGradientStop::m_stop.rPosition) == sizeof(float), "Incorrect size for CGradientStop::m_stop.rPosition");
static_assert(sizeof(CFrameworkElement::m_pLayoutProperties->m_nGridColumn) == sizeof(int32_t), "Incorrect size for CFrameworkElement::m_pLayoutProperties->m_nGridColumn");
static_assert(sizeof(CGrid::m_pColumnDefinitions) == sizeof(nullptr_t), "Incorrect size for CGrid::m_pColumnDefinitions");
static_assert(sizeof(CFrameworkElement::m_pLayoutProperties->m_nGridColumnSpan) == sizeof(int32_t), "Incorrect size for CFrameworkElement::m_pLayoutProperties->m_nGridColumnSpan");
static_assert(sizeof(CFrameworkElement::m_pLayoutProperties->m_nGridRow) == sizeof(int32_t), "Incorrect size for CFrameworkElement::m_pLayoutProperties->m_nGridRow");
static_assert(sizeof(CGrid::m_pRowDefinitions) == sizeof(nullptr_t), "Incorrect size for CGrid::m_pRowDefinitions");
static_assert(sizeof(CFrameworkElement::m_pLayoutProperties->m_nGridRowSpan) == sizeof(int32_t), "Incorrect size for CFrameworkElement::m_pLayoutProperties->m_nGridRowSpan");
static_assert(sizeof(CGridLength::m_gridLength.type) == sizeof(uint8_t), "Incorrect size for CGridLength::m_gridLength.type");
static_assert(sizeof(CGridLength::m_gridLength.value) == sizeof(float), "Incorrect size for CGridLength::m_gridLength.value");
static_assert(sizeof(CGridViewItemChrome::m_pCheckBrush) == sizeof(nullptr_t), "Incorrect size for CGridViewItemChrome::m_pCheckBrush");
static_assert(sizeof(CGridViewItemChrome::m_pCheckHintBrush) == sizeof(nullptr_t), "Incorrect size for CGridViewItemChrome::m_pCheckHintBrush");
static_assert(sizeof(CGridViewItemChrome::m_pCheckSelectingBrush) == sizeof(nullptr_t), "Incorrect size for CGridViewItemChrome::m_pCheckSelectingBrush");
static_assert(sizeof(CGridViewItemChrome::m_contentMargin) == sizeof(XTHICKNESS), "Incorrect size for CGridViewItemChrome::m_contentMargin");
static_assert(sizeof(CGridViewItemChrome::m_pDragBackground) == sizeof(nullptr_t), "Incorrect size for CGridViewItemChrome::m_pDragBackground");
static_assert(sizeof(CGridViewItemChrome::m_pDragForeground) == sizeof(nullptr_t), "Incorrect size for CGridViewItemChrome::m_pDragForeground");
static_assert(sizeof(CGridViewItemChrome::m_pFocusBorderBrush) == sizeof(nullptr_t), "Incorrect size for CGridViewItemChrome::m_pFocusBorderBrush");
static_assert(sizeof(CGridViewItemChrome::m_pPlaceholderBackground) == sizeof(nullptr_t), "Incorrect size for CGridViewItemChrome::m_pPlaceholderBackground");
static_assert(sizeof(CGridViewItemChrome::m_pPointerOverBackground) == sizeof(nullptr_t), "Incorrect size for CGridViewItemChrome::m_pPointerOverBackground");
static_assert(sizeof(CGridViewItemChrome::m_pSelectedBackground) == sizeof(nullptr_t), "Incorrect size for CGridViewItemChrome::m_pSelectedBackground");
static_assert(sizeof(CGridViewItemChrome::m_pSelectedForeground) == sizeof(nullptr_t), "Incorrect size for CGridViewItemChrome::m_pSelectedForeground");
static_assert(sizeof(CGridViewItemChrome::m_pSelectedPointerOverBackground) == sizeof(nullptr_t), "Incorrect size for CGridViewItemChrome::m_pSelectedPointerOverBackground");
static_assert(sizeof(CGridViewItemChrome::m_pSelectedPointerOverBorderBrush) == sizeof(nullptr_t), "Incorrect size for CGridViewItemChrome::m_pSelectedPointerOverBorderBrush");
static_assert(sizeof(CHyperlink::m_isTabStop) == sizeof(bool), "Incorrect size for CHyperlink::m_isTabStop");
static_assert(sizeof(CHyperlink::m_strNavigateUri) == sizeof(xstring_ptr), "Incorrect size for CHyperlink::m_strNavigateUri");
static_assert(sizeof(CIconElement::m_pTextFormatting->m_pForeground) == sizeof(nullptr_t), "Incorrect size for CIconElement::m_pTextFormatting->m_pForeground");
static_assert(sizeof(CIconSourceElement::m_iconSource) == sizeof(nullptr_t), "Incorrect size for CIconSourceElement::m_iconSource");
static_assert(sizeof(CImage::m_ninegridPrivate) == sizeof(XTHICKNESS), "Incorrect size for CImage::m_ninegridPrivate");
static_assert(sizeof(CImage::m_pImageSource) == sizeof(nullptr_t), "Incorrect size for CImage::m_pImageSource");
static_assert(sizeof(CImage::m_Stretch) == sizeof(uint8_t), "Incorrect size for CImage::m_Stretch");
static_assert(sizeof(CImageBrush::m_pImageSource) == sizeof(nullptr_t), "Incorrect size for CImageBrush::m_pImageSource");
static_assert(sizeof(CInertiaExpansionBehavior::m_fDeceleration) == sizeof(float), "Incorrect size for CInertiaExpansionBehavior::m_fDeceleration");
static_assert(sizeof(CInertiaExpansionBehavior::m_fExpansion) == sizeof(float), "Incorrect size for CInertiaExpansionBehavior::m_fExpansion");
static_assert(sizeof(CInertiaRotationBehavior::m_fDeceleration) == sizeof(float), "Incorrect size for CInertiaRotationBehavior::m_fDeceleration");
static_assert(sizeof(CInertiaRotationBehavior::m_fRotation) == sizeof(float), "Incorrect size for CInertiaRotationBehavior::m_fRotation");
static_assert(sizeof(CInertiaTranslationBehavior::m_fDeceleration) == sizeof(float), "Incorrect size for CInertiaTranslationBehavior::m_fDeceleration");
static_assert(sizeof(CInertiaTranslationBehavior::m_fDisplacement) == sizeof(float), "Incorrect size for CInertiaTranslationBehavior::m_fDisplacement");
static_assert(sizeof(CInlineUIContainer::m_pChild) == sizeof(nullptr_t), "Incorrect size for CInlineUIContainer::m_pChild");
static_assert(sizeof(CInputScope::m_pNames) == sizeof(nullptr_t), "Incorrect size for CInputScope::m_pNames");
static_assert(sizeof(CInputScopeName::m_nameValue) == sizeof(uint8_t), "Incorrect size for CInputScopeName::m_nameValue");
static_assert(sizeof(CInputValidationCommand::m_inputValidationKind) == sizeof(DirectUI::InputValidationKind), "Incorrect size for CInputValidationCommand::m_inputValidationKind");
static_assert(sizeof(CInputValidationCommand::m_inputValidationMode) == sizeof(DirectUI::InputValidationMode), "Incorrect size for CInputValidationCommand::m_inputValidationMode");
static_assert(sizeof(CInt32::m_iValue) == sizeof(int32_t), "Incorrect size for CInt32::m_iValue");
static_assert(sizeof(CItemsControl::m_strDisplayMemberPath) == sizeof(xstring_ptr), "Incorrect size for CItemsControl::m_strDisplayMemberPath");
static_assert(sizeof(CItemsControl::m_bItemsHostInvalid) == sizeof(bool), "Incorrect size for CItemsControl::m_bItemsHostInvalid");
static_assert(sizeof(CItemsControl::m_pItemContainerTransitions) == sizeof(nullptr_t), "Incorrect size for CItemsControl::m_pItemContainerTransitions");
static_assert(sizeof(CItemsControl::m_pItemsHost) == sizeof(nullptr_t), "Incorrect size for CItemsControl::m_pItemsHost");
static_assert(sizeof(CItemsControl::m_pItemsPanelTemplate) == sizeof(nullptr_t), "Incorrect size for CItemsControl::m_pItemsPanelTemplate");
static_assert(sizeof(CItemsControl::m_pItemTemplate) == sizeof(nullptr_t), "Incorrect size for CItemsControl::m_pItemTemplate");
static_assert(sizeof(CItemsPresenter::m_pItemsPanelTemplate) == sizeof(nullptr_t), "Incorrect size for CItemsPresenter::m_pItemsPanelTemplate");
static_assert(sizeof(CItemsPresenter::m_padding) == sizeof(XTHICKNESS), "Incorrect size for CItemsPresenter::m_padding");
static_assert(sizeof(CKeyboardAccelerator::m_isEnabled) == sizeof(bool), "Incorrect size for CKeyboardAccelerator::m_isEnabled");
static_assert(sizeof(CKeyboardAccelerator::m_key) == sizeof(uint8_t), "Incorrect size for CKeyboardAccelerator::m_key");
static_assert(sizeof(CKeyboardAccelerator::m_keyModifiers) == sizeof(uint8_t), "Incorrect size for CKeyboardAccelerator::m_keyModifiers");
static_assert(sizeof(CKeyboardAccelerator::m_scopeOwner) == sizeof(nullptr_t), "Incorrect size for CKeyboardAccelerator::m_scopeOwner");
static_assert(sizeof(CKeySpline::m_ControlPoint1) == sizeof(XPOINTF), "Incorrect size for CKeySpline::m_ControlPoint1");
static_assert(sizeof(CKeySpline::m_ControlPoint2) == sizeof(XPOINTF), "Incorrect size for CKeySpline::m_ControlPoint2");
static_assert(sizeof(CLine::m_eX1) == sizeof(float), "Incorrect size for CLine::m_eX1");
static_assert(sizeof(CLine::m_eX2) == sizeof(float), "Incorrect size for CLine::m_eX2");
static_assert(sizeof(CLine::m_eY1) == sizeof(float), "Incorrect size for CLine::m_eY1");
static_assert(sizeof(CLine::m_eY2) == sizeof(float), "Incorrect size for CLine::m_eY2");
static_assert(sizeof(CLinearGradientBrush::m_ptEnd) == sizeof(XPOINTF), "Incorrect size for CLinearGradientBrush::m_ptEnd");
static_assert(sizeof(CLinearGradientBrush::m_ptStart) == sizeof(XPOINTF), "Incorrect size for CLinearGradientBrush::m_ptStart");
static_assert(sizeof(CLineGeometry::m_ptEnd) == sizeof(XPOINTF), "Incorrect size for CLineGeometry::m_ptEnd");
static_assert(sizeof(CLineGeometry::m_ptStart) == sizeof(XPOINTF), "Incorrect size for CLineGeometry::m_ptStart");
static_assert(sizeof(CLineSegment::m_pt) == sizeof(XPOINTF), "Incorrect size for CLineSegment::m_pt");
static_assert(sizeof(CListBox::m_singleSelectionFollowsFocus) == sizeof(bool), "Incorrect size for CListBox::m_singleSelectionFollowsFocus");
static_assert(sizeof(CListViewBase::m_singleSelectionFollowsFocus) == sizeof(bool), "Incorrect size for CListViewBase::m_singleSelectionFollowsFocus");
static_assert(sizeof(CListViewItemChrome::m_pCheckBoxBorderBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckBoxBorderBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckBoxBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckBoxBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckBoxDisabledBorderBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckBoxDisabledBorderBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckBoxDisabledBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckBoxDisabledBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckBoxPointerOverBorderBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckBoxPointerOverBorderBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckBoxPointerOverBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckBoxPointerOverBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckBoxPressedBorderBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckBoxPressedBorderBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckBoxPressedBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckBoxPressedBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckBoxSelectedBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckBoxSelectedBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckBoxSelectedDisabledBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckBoxSelectedDisabledBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckBoxSelectedPointerOverBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckBoxSelectedPointerOverBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckBoxSelectedPressedBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckBoxSelectedPressedBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckDisabledBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckDisabledBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckHintBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckHintBrush");
static_assert(sizeof(CListViewItemChrome::m_checkMode) == sizeof(uint8_t), "Incorrect size for CListViewItemChrome::m_checkMode");
static_assert(sizeof(CListViewItemChrome::m_pCheckPressedBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckPressedBrush");
static_assert(sizeof(CListViewItemChrome::m_pCheckSelectingBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pCheckSelectingBrush");
static_assert(sizeof(CListViewItemChrome::m_contentMargin) == sizeof(XTHICKNESS), "Incorrect size for CListViewItemChrome::m_contentMargin");
static_assert(sizeof(CListViewItemChrome::m_pDragBackground) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pDragBackground");
static_assert(sizeof(CListViewItemChrome::m_pDragForeground) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pDragForeground");
static_assert(sizeof(CListViewItemChrome::m_pFocusBorderBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pFocusBorderBrush");
static_assert(sizeof(CListViewItemChrome::m_pFocusSecondaryBorderBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pFocusSecondaryBorderBrush");
static_assert(sizeof(CListViewItemChrome::m_pPlaceholderBackground) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pPlaceholderBackground");
static_assert(sizeof(CListViewItemChrome::m_pPointerOverBackground) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pPointerOverBackground");
static_assert(sizeof(CListViewItemChrome::m_pPointerOverBorderBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pPointerOverBorderBrush");
static_assert(sizeof(CListViewItemChrome::m_pPointerOverForeground) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pPointerOverForeground");
static_assert(sizeof(CListViewItemChrome::m_pPressedBackground) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pPressedBackground");
static_assert(sizeof(CListViewItemChrome::m_pSelectedBackground) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectedBackground");
static_assert(sizeof(CListViewItemChrome::m_pSelectedBorderBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectedBorderBrush");
static_assert(sizeof(CListViewItemChrome::m_pSelectedDisabledBackground) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectedDisabledBackground");
static_assert(sizeof(CListViewItemChrome::m_pSelectedDisabledBorderBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectedDisabledBorderBrush");
static_assert(sizeof(CListViewItemChrome::m_pSelectedForeground) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectedForeground");
static_assert(sizeof(CListViewItemChrome::m_pSelectedInnerBorderBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectedInnerBorderBrush");
static_assert(sizeof(CListViewItemChrome::m_pSelectedPointerOverBackground) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectedPointerOverBackground");
static_assert(sizeof(CListViewItemChrome::m_pSelectedPointerOverBorderBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectedPointerOverBorderBrush");
static_assert(sizeof(CListViewItemChrome::m_pSelectedPressedBackground) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectedPressedBackground");
static_assert(sizeof(CListViewItemChrome::m_pSelectedPressedBorderBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectedPressedBorderBrush");
static_assert(sizeof(CListViewItemChrome::m_pSelectionIndicatorBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectionIndicatorBrush");
static_assert(sizeof(CListViewItemChrome::m_pSelectionIndicatorDisabledBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectionIndicatorDisabledBrush");
static_assert(sizeof(CListViewItemChrome::m_pSelectionIndicatorPointerOverBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectionIndicatorPointerOverBrush");
static_assert(sizeof(CListViewItemChrome::m_pSelectionIndicatorPressedBrush) == sizeof(nullptr_t), "Incorrect size for CListViewItemChrome::m_pSelectionIndicatorPressedBrush");
static_assert(sizeof(CManipulationPivot::m_ptCenter) == sizeof(XPOINTF), "Incorrect size for CManipulationPivot::m_ptCenter");
static_assert(sizeof(CManipulationPivot::m_fRadius) == sizeof(float), "Incorrect size for CManipulationPivot::m_fRadius");
static_assert(sizeof(CMatrix::m_matrix._11) == sizeof(float), "Incorrect size for CMatrix::m_matrix._11");
static_assert(sizeof(CMatrix::m_matrix._12) == sizeof(float), "Incorrect size for CMatrix::m_matrix._12");
static_assert(sizeof(CMatrix::m_matrix._21) == sizeof(float), "Incorrect size for CMatrix::m_matrix._21");
static_assert(sizeof(CMatrix::m_matrix._22) == sizeof(float), "Incorrect size for CMatrix::m_matrix._22");
static_assert(sizeof(CMatrix::m_matrix._31) == sizeof(float), "Incorrect size for CMatrix::m_matrix._31");
static_assert(sizeof(CMatrix::m_matrix._32) == sizeof(float), "Incorrect size for CMatrix::m_matrix._32");
static_assert(sizeof(CMatrix4x4::m_matrix._11) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._11");
static_assert(sizeof(CMatrix4x4::m_matrix._12) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._12");
static_assert(sizeof(CMatrix4x4::m_matrix._13) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._13");
static_assert(sizeof(CMatrix4x4::m_matrix._14) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._14");
static_assert(sizeof(CMatrix4x4::m_matrix._21) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._21");
static_assert(sizeof(CMatrix4x4::m_matrix._22) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._22");
static_assert(sizeof(CMatrix4x4::m_matrix._23) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._23");
static_assert(sizeof(CMatrix4x4::m_matrix._24) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._24");
static_assert(sizeof(CMatrix4x4::m_matrix._31) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._31");
static_assert(sizeof(CMatrix4x4::m_matrix._32) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._32");
static_assert(sizeof(CMatrix4x4::m_matrix._33) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._33");
static_assert(sizeof(CMatrix4x4::m_matrix._34) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._34");
static_assert(sizeof(CMatrix4x4::m_matrix._44) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._44");
static_assert(sizeof(CMatrix4x4::m_matrix._41) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._41");
static_assert(sizeof(CMatrix4x4::m_matrix._42) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._42");
static_assert(sizeof(CMatrix4x4::m_matrix._43) == sizeof(float), "Incorrect size for CMatrix4x4::m_matrix._43");
static_assert(sizeof(CMatrix3DProjection::m_pMatrix) == sizeof(nullptr_t), "Incorrect size for CMatrix3DProjection::m_pMatrix");
static_assert(sizeof(CMatrixTransform::m_pMatrix) == sizeof(nullptr_t), "Incorrect size for CMatrixTransform::m_pMatrix");
static_assert(sizeof(CMediaPlayerElement::m_areTransportControlsEnabled) == sizeof(bool), "Incorrect size for CMediaPlayerElement::m_areTransportControlsEnabled");
static_assert(sizeof(CMediaPlayerElement::m_fAutoPlay) == sizeof(bool), "Incorrect size for CMediaPlayerElement::m_fAutoPlay");
static_assert(sizeof(CMediaPlayerElement::m_isFullWindow) == sizeof(bool), "Incorrect size for CMediaPlayerElement::m_isFullWindow");
static_assert(sizeof(CMediaPlayerElement::m_pPosterSource) == sizeof(nullptr_t), "Incorrect size for CMediaPlayerElement::m_pPosterSource");
static_assert(sizeof(CMediaPlayerElement::m_Stretch) == sizeof(uint8_t), "Incorrect size for CMediaPlayerElement::m_Stretch");
static_assert(sizeof(CMediaPlayerPresenter::m_isFullWindow) == sizeof(bool), "Incorrect size for CMediaPlayerPresenter::m_isFullWindow");
static_assert(sizeof(CMediaPlayerPresenter::m_Stretch) == sizeof(uint8_t), "Incorrect size for CMediaPlayerPresenter::m_Stretch");
static_assert(sizeof(CObjectAnimationUsingKeyFrames::m_enableDependentAnimation) == sizeof(bool), "Incorrect size for CObjectAnimationUsingKeyFrames::m_enableDependentAnimation");
static_assert(sizeof(CObjectAnimationUsingKeyFrames::m_pKeyFrames) == sizeof(nullptr_t), "Incorrect size for CObjectAnimationUsingKeyFrames::m_pKeyFrames");
static_assert(sizeof(CObjectKeyFrame::m_keyTime) == sizeof(nullptr_t), "Incorrect size for CObjectKeyFrame::m_keyTime");
static_assert(sizeof(CObjectKeyFrame::m_vValue) == sizeof(CValue), "Incorrect size for CObjectKeyFrame::m_vValue");
static_assert(sizeof(CPageStackEntry::m_sourcePageType) == sizeof(KnownTypeIndex), "Incorrect size for CPageStackEntry::m_sourcePageType");
static_assert(sizeof(CPanel::m_pBackground) == sizeof(nullptr_t), "Incorrect size for CPanel::m_pBackground");
static_assert(sizeof(CPanelEx::m_height) == sizeof(float), "Incorrect size for CPanelEx::m_height");
static_assert(sizeof(CPanelEx::m_horizontalAlignment) == sizeof(uint8_t), "Incorrect size for CPanelEx::m_horizontalAlignment");
static_assert(sizeof(CPanelEx::m_margin) == sizeof(XTHICKNESS), "Incorrect size for CPanelEx::m_margin");
static_assert(sizeof(CPanelEx::m_maxHeight) == sizeof(float), "Incorrect size for CPanelEx::m_maxHeight");
static_assert(sizeof(CPanelEx::m_maxWidth) == sizeof(float), "Incorrect size for CPanelEx::m_maxWidth");
static_assert(sizeof(CPanelEx::m_minHeight) == sizeof(float), "Incorrect size for CPanelEx::m_minHeight");
static_assert(sizeof(CPanelEx::m_minWidth) == sizeof(float), "Incorrect size for CPanelEx::m_minWidth");
static_assert(sizeof(CPanelEx::m_verticalAlignment) == sizeof(uint8_t), "Incorrect size for CPanelEx::m_verticalAlignment");
static_assert(sizeof(CPanelEx::m_width) == sizeof(float), "Incorrect size for CPanelEx::m_width");
static_assert(sizeof(CParagraph::m_pInlines) == sizeof(nullptr_t), "Incorrect size for CParagraph::m_pInlines");
static_assert(sizeof(CParagraph::m_textIndent) == sizeof(float), "Incorrect size for CParagraph::m_textIndent");
static_assert(sizeof(CParametricCurve::m_pCurveSegments) == sizeof(nullptr_t), "Incorrect size for CParametricCurve::m_pCurveSegments");
static_assert(sizeof(CParametricCurveSegment::m_beginOffset) == sizeof(float), "Incorrect size for CParametricCurveSegment::m_beginOffset");
static_assert(sizeof(CParametricCurveSegment::m_constantCoefficient) == sizeof(float), "Incorrect size for CParametricCurveSegment::m_constantCoefficient");
static_assert(sizeof(CParametricCurveSegment::m_cubicCoefficient) == sizeof(float), "Incorrect size for CParametricCurveSegment::m_cubicCoefficient");
static_assert(sizeof(CParametricCurveSegment::m_linearCoefficient) == sizeof(float), "Incorrect size for CParametricCurveSegment::m_linearCoefficient");
static_assert(sizeof(CParametricCurveSegment::m_quadraticCoefficient) == sizeof(float), "Incorrect size for CParametricCurveSegment::m_quadraticCoefficient");
static_assert(sizeof(CPasswordBox::m_pInputScope) == sizeof(nullptr_t), "Incorrect size for CPasswordBox::m_pInputScope");
static_assert(sizeof(CPasswordBox::m_fRevealButtonEnabled) == sizeof(bool), "Incorrect size for CPasswordBox::m_fRevealButtonEnabled");
static_assert(sizeof(CPasswordBox::m_iMaxLength) == sizeof(int32_t), "Incorrect size for CPasswordBox::m_iMaxLength");
static_assert(sizeof(CPasswordBox::m_strPasswordChar) == sizeof(xstring_ptr), "Incorrect size for CPasswordBox::m_strPasswordChar");
static_assert(sizeof(CPasswordBox::m_passwordRevealMode) == sizeof(uint8_t), "Incorrect size for CPasswordBox::m_passwordRevealMode");
static_assert(sizeof(CPasswordBox::m_bPreventKeyboardDisplayOnProgrammaticFocus) == sizeof(bool), "Incorrect size for CPasswordBox::m_bPreventKeyboardDisplayOnProgrammaticFocus");
static_assert(sizeof(CPasswordBox::m_pSelectionHighlightColor) == sizeof(nullptr_t), "Incorrect size for CPasswordBox::m_pSelectionHighlightColor");
static_assert(sizeof(CPasswordBox::m_textReadingOrder) == sizeof(uint8_t), "Incorrect size for CPasswordBox::m_textReadingOrder");
static_assert(sizeof(CPath::m_pGeometryData) == sizeof(nullptr_t), "Incorrect size for CPath::m_pGeometryData");
static_assert(sizeof(CPathFigure::m_bClosed) == sizeof(bool), "Incorrect size for CPathFigure::m_bClosed");
static_assert(sizeof(CPathFigure::m_bFilled) == sizeof(bool), "Incorrect size for CPathFigure::m_bFilled");
static_assert(sizeof(CPathFigure::m_pSegments) == sizeof(nullptr_t), "Incorrect size for CPathFigure::m_pSegments");
static_assert(sizeof(CPathFigure::m_ptStart) == sizeof(XPOINTF), "Incorrect size for CPathFigure::m_ptStart");
static_assert(sizeof(CPathGeometry::m_pFigures) == sizeof(nullptr_t), "Incorrect size for CPathGeometry::m_pFigures");
static_assert(sizeof(CPathGeometry::m_fillMode) == sizeof(uint8_t), "Incorrect size for CPathGeometry::m_fillMode");
static_assert(sizeof(CPathIcon::m_pData) == sizeof(nullptr_t), "Incorrect size for CPathIcon::m_pData");
static_assert(sizeof(CPerspectiveTransform3D::m_rDepth) == sizeof(float), "Incorrect size for CPerspectiveTransform3D::m_rDepth");
static_assert(sizeof(CPerspectiveTransform3D::m_rOffsetX) == sizeof(float), "Incorrect size for CPerspectiveTransform3D::m_rOffsetX");
static_assert(sizeof(CPerspectiveTransform3D::m_rOffsetY) == sizeof(float), "Incorrect size for CPerspectiveTransform3D::m_rOffsetY");
static_assert(sizeof(CPlaneProjection::m_rCenterOfRotationX) == sizeof(float), "Incorrect size for CPlaneProjection::m_rCenterOfRotationX");
static_assert(sizeof(CPlaneProjection::m_rCenterOfRotationY) == sizeof(float), "Incorrect size for CPlaneProjection::m_rCenterOfRotationY");
static_assert(sizeof(CPlaneProjection::m_rCenterOfRotationZ) == sizeof(float), "Incorrect size for CPlaneProjection::m_rCenterOfRotationZ");
static_assert(sizeof(CPlaneProjection::m_rGlobalOffsetX) == sizeof(float), "Incorrect size for CPlaneProjection::m_rGlobalOffsetX");
static_assert(sizeof(CPlaneProjection::m_rGlobalOffsetY) == sizeof(float), "Incorrect size for CPlaneProjection::m_rGlobalOffsetY");
static_assert(sizeof(CPlaneProjection::m_rGlobalOffsetZ) == sizeof(float), "Incorrect size for CPlaneProjection::m_rGlobalOffsetZ");
static_assert(sizeof(CPlaneProjection::m_rLocalOffsetX) == sizeof(float), "Incorrect size for CPlaneProjection::m_rLocalOffsetX");
static_assert(sizeof(CPlaneProjection::m_rLocalOffsetY) == sizeof(float), "Incorrect size for CPlaneProjection::m_rLocalOffsetY");
static_assert(sizeof(CPlaneProjection::m_rLocalOffsetZ) == sizeof(float), "Incorrect size for CPlaneProjection::m_rLocalOffsetZ");
static_assert(sizeof(CPlaneProjection::m_rRotationX) == sizeof(float), "Incorrect size for CPlaneProjection::m_rRotationX");
static_assert(sizeof(CPlaneProjection::m_rRotationY) == sizeof(float), "Incorrect size for CPlaneProjection::m_rRotationY");
static_assert(sizeof(CPlaneProjection::m_rRotationZ) == sizeof(float), "Incorrect size for CPlaneProjection::m_rRotationZ");
static_assert(sizeof(CPoint::m_pt) == sizeof(XPOINTF), "Incorrect size for CPoint::m_pt");
static_assert(sizeof(CPoint::m_pt.x) == sizeof(float), "Incorrect size for CPoint::m_pt.x");
static_assert(sizeof(CPoint::m_pt.y) == sizeof(float), "Incorrect size for CPoint::m_pt.y");
static_assert(sizeof(CPointAnimation::m_ptBy) == sizeof(XPOINTF), "Incorrect size for CPointAnimation::m_ptBy");
static_assert(sizeof(CPointAnimation::m_pEasingFunction) == sizeof(nullptr_t), "Incorrect size for CPointAnimation::m_pEasingFunction");
static_assert(sizeof(CPointAnimation::m_enableDependentAnimation) == sizeof(bool), "Incorrect size for CPointAnimation::m_enableDependentAnimation");
static_assert(sizeof(CPointAnimation::m_ptFrom) == sizeof(XPOINTF), "Incorrect size for CPointAnimation::m_ptFrom");
static_assert(sizeof(CPointAnimation::m_ptTo) == sizeof(XPOINTF), "Incorrect size for CPointAnimation::m_ptTo");
static_assert(sizeof(CPointAnimationUsingKeyFrames::m_enableDependentAnimation) == sizeof(bool), "Incorrect size for CPointAnimationUsingKeyFrames::m_enableDependentAnimation");
static_assert(sizeof(CPointAnimationUsingKeyFrames::m_pKeyFrames) == sizeof(nullptr_t), "Incorrect size for CPointAnimationUsingKeyFrames::m_pKeyFrames");
static_assert(sizeof(CPointer::m_bInContact) == sizeof(bool), "Incorrect size for CPointer::m_bInContact");
static_assert(sizeof(CPointer::m_bInRange) == sizeof(bool), "Incorrect size for CPointer::m_bInRange");
static_assert(sizeof(CPointer::m_pointerDeviceType) == sizeof(uint8_t), "Incorrect size for CPointer::m_pointerDeviceType");
static_assert(sizeof(CPointer::m_uiPointerId) == sizeof(int32_t), "Incorrect size for CPointer::m_uiPointerId");
static_assert(sizeof(CPointerAnimationUsingKeyFrames::m_pKeyFrames) == sizeof(nullptr_t), "Incorrect size for CPointerAnimationUsingKeyFrames::m_pKeyFrames");
static_assert(sizeof(CPointerAnimationUsingKeyFrames::m_pointerSource) == sizeof(uint8_t), "Incorrect size for CPointerAnimationUsingKeyFrames::m_pointerSource");
static_assert(sizeof(CPointerKeyFrame::m_pointerValue) == sizeof(float), "Incorrect size for CPointerKeyFrame::m_pointerValue");
static_assert(sizeof(CPointerKeyFrame::m_value) == sizeof(float), "Incorrect size for CPointerKeyFrame::m_value");
static_assert(sizeof(CPointKeyFrame::m_keyTime) == sizeof(nullptr_t), "Incorrect size for CPointKeyFrame::m_keyTime");
static_assert(sizeof(CPointKeyFrame::m_ptValue) == sizeof(XPOINTF), "Incorrect size for CPointKeyFrame::m_ptValue");
static_assert(sizeof(CPolyBezierSegment::m_pPoints) == sizeof(nullptr_t), "Incorrect size for CPolyBezierSegment::m_pPoints");
static_assert(sizeof(CPolygon::m_nFillRule) == sizeof(uint8_t), "Incorrect size for CPolygon::m_nFillRule");
static_assert(sizeof(CPolygon::m_pPoints) == sizeof(nullptr_t), "Incorrect size for CPolygon::m_pPoints");
static_assert(sizeof(CPolyline::m_nFillRule) == sizeof(uint8_t), "Incorrect size for CPolyline::m_nFillRule");
static_assert(sizeof(CPolyline::m_pPoints) == sizeof(nullptr_t), "Incorrect size for CPolyline::m_pPoints");
static_assert(sizeof(CPolyLineSegment::m_pPoints) == sizeof(nullptr_t), "Incorrect size for CPolyLineSegment::m_pPoints");
static_assert(sizeof(CPolyQuadraticSegment::m_pPoints) == sizeof(nullptr_t), "Incorrect size for CPolyQuadraticSegment::m_pPoints");
static_assert(sizeof(CPopup::m_pChildTransitions) == sizeof(nullptr_t), "Incorrect size for CPopup::m_pChildTransitions");
static_assert(sizeof(CPopup::m_disableOverlayIsLightDismissCheck) == sizeof(bool), "Incorrect size for CPopup::m_disableOverlayIsLightDismissCheck");
static_assert(sizeof(CPopup::m_eHOffset) == sizeof(float), "Incorrect size for CPopup::m_eHOffset");
static_assert(sizeof(CPopup::m_fIsApplicationBarService) == sizeof(bool), "Incorrect size for CPopup::m_fIsApplicationBarService");
static_assert(sizeof(CPopup::m_fIsContentDialog) == sizeof(bool), "Incorrect size for CPopup::m_fIsContentDialog");
static_assert(sizeof(CPopup::m_fIsLightDismissEnabled) == sizeof(bool), "Incorrect size for CPopup::m_fIsLightDismissEnabled");
static_assert(sizeof(CPopup::m_fIsOpen) == sizeof(bool), "Incorrect size for CPopup::m_fIsOpen");
static_assert(sizeof(CPopup::m_fIsSubMenu) == sizeof(bool), "Incorrect size for CPopup::m_fIsSubMenu");
static_assert(sizeof(CPopup::m_lightDismissOverlayMode) == sizeof(uint8_t), "Incorrect size for CPopup::m_lightDismissOverlayMode");
static_assert(sizeof(CPopup::m_overlayElement) == sizeof(nullptr_t), "Incorrect size for CPopup::m_overlayElement");
static_assert(sizeof(CPopup::m_eVOffset) == sizeof(float), "Incorrect size for CPopup::m_eVOffset");
static_assert(sizeof(CPowerInterpolator::m_fPower) == sizeof(float), "Incorrect size for CPowerInterpolator::m_fPower");
static_assert(sizeof(CPrintDocument::m_eDesiredFormat) == sizeof(uint8_t), "Incorrect size for CPrintDocument::m_eDesiredFormat");
static_assert(sizeof(CPrintDocument::m_nPrintedPageCount) == sizeof(int32_t), "Incorrect size for CPrintDocument::m_nPrintedPageCount");
static_assert(sizeof(CPropertyPath::m_strPath) == sizeof(xstring_ptr), "Incorrect size for CPropertyPath::m_strPath");
static_assert(sizeof(CPVLStaggerFunction::m_delay) == sizeof(DOUBLE), "Incorrect size for CPVLStaggerFunction::m_delay");
static_assert(sizeof(CPVLStaggerFunction::m_delayReduce) == sizeof(DOUBLE), "Incorrect size for CPVLStaggerFunction::m_delayReduce");
static_assert(sizeof(CPVLStaggerFunction::m_maximum) == sizeof(DOUBLE), "Incorrect size for CPVLStaggerFunction::m_maximum");
static_assert(sizeof(CPVLStaggerFunction::m_reverse) == sizeof(bool), "Incorrect size for CPVLStaggerFunction::m_reverse");
static_assert(sizeof(CQuadraticSegment::m_ptOne) == sizeof(XPOINTF), "Incorrect size for CQuadraticSegment::m_ptOne");
static_assert(sizeof(CQuadraticSegment::m_ptTwo) == sizeof(XPOINTF), "Incorrect size for CQuadraticSegment::m_ptTwo");
static_assert(sizeof(CRangeBase::m_maximum) == sizeof(DOUBLE), "Incorrect size for CRangeBase::m_maximum");
static_assert(sizeof(CRangeBase::m_minimum) == sizeof(DOUBLE), "Incorrect size for CRangeBase::m_minimum");
static_assert(sizeof(CRangeBase::m_value) == sizeof(DOUBLE), "Incorrect size for CRangeBase::m_value");
static_assert(sizeof(CRect::m_rc.Height) == sizeof(float), "Incorrect size for CRect::m_rc.Height");
static_assert(sizeof(CRect::m_rc.Width) == sizeof(float), "Incorrect size for CRect::m_rc.Width");
static_assert(sizeof(CRect::m_rc.X) == sizeof(float), "Incorrect size for CRect::m_rc.X");
static_assert(sizeof(CRect::m_rc.Y) == sizeof(float), "Incorrect size for CRect::m_rc.Y");
static_assert(sizeof(CRectangle::m_eRadiusX) == sizeof(float), "Incorrect size for CRectangle::m_eRadiusX");
static_assert(sizeof(CRectangle::m_eRadiusY) == sizeof(float), "Incorrect size for CRectangle::m_eRadiusY");
static_assert(sizeof(CRectangleGeometry::m_eRadiusX) == sizeof(float), "Incorrect size for CRectangleGeometry::m_eRadiusX");
static_assert(sizeof(CRectangleGeometry::m_eRadiusY) == sizeof(float), "Incorrect size for CRectangleGeometry::m_eRadiusY");
static_assert(sizeof(CRectangleGeometry::m_rc) == sizeof(XRECTF), "Incorrect size for CRectangleGeometry::m_rc");
static_assert(sizeof(CRelativeSource::m_eMode) == sizeof(DirectUI::RelativeSourceMode), "Incorrect size for CRelativeSource::m_eMode");
static_assert(sizeof(CRepositionThemeTransition::m_isStaggeringEnabled) == sizeof(bool), "Incorrect size for CRepositionThemeTransition::m_isStaggeringEnabled");
static_assert(sizeof(CResourceDictionary::m_pMergedDictionaries) == sizeof(nullptr_t), "Incorrect size for CResourceDictionary::m_pMergedDictionaries");
static_assert(sizeof(CResourceDictionary::m_strSource) == sizeof(xstring_ptr), "Incorrect size for CResourceDictionary::m_strSource");
static_assert(sizeof(CResourceDictionary::m_pThemeDictionaries) == sizeof(nullptr_t), "Incorrect size for CResourceDictionary::m_pThemeDictionaries");
static_assert(sizeof(CRichEditBox::m_bAcceptsReturn) == sizeof(bool), "Incorrect size for CRichEditBox::m_bAcceptsReturn");
static_assert(sizeof(CRichEditBox::m_textAlignment) == sizeof(uint8_t), "Incorrect size for CRichEditBox::m_textAlignment");
static_assert(sizeof(CRichEditBox::m_pInputScope) == sizeof(nullptr_t), "Incorrect size for CRichEditBox::m_pInputScope");
static_assert(sizeof(CRichEditBox::m_isColorFontEnabled) == sizeof(bool), "Incorrect size for CRichEditBox::m_isColorFontEnabled");
static_assert(sizeof(CRichEditBox::m_bIsReadOnly) == sizeof(bool), "Incorrect size for CRichEditBox::m_bIsReadOnly");
static_assert(sizeof(CRichEditBox::m_isSpellCheckEnabled) == sizeof(bool), "Incorrect size for CRichEditBox::m_isSpellCheckEnabled");
static_assert(sizeof(CRichEditBox::m_bIsTelemetryCollectionEnabled) == sizeof(bool), "Incorrect size for CRichEditBox::m_bIsTelemetryCollectionEnabled");
static_assert(sizeof(CRichEditBox::m_isTextPredictionEnabled) == sizeof(bool), "Incorrect size for CRichEditBox::m_isTextPredictionEnabled");
static_assert(sizeof(CRichEditBox::m_iMaxLength) == sizeof(int32_t), "Incorrect size for CRichEditBox::m_iMaxLength");
static_assert(sizeof(CRichEditBox::m_bPreventKeyboardDisplayOnProgrammaticFocus) == sizeof(bool), "Incorrect size for CRichEditBox::m_bPreventKeyboardDisplayOnProgrammaticFocus");
static_assert(sizeof(CRichEditBox::m_pSelectionHighlightColor) == sizeof(nullptr_t), "Incorrect size for CRichEditBox::m_pSelectionHighlightColor");
static_assert(sizeof(CRichEditBox::m_pSelectionHighlightColorWhenNotFocused) == sizeof(nullptr_t), "Incorrect size for CRichEditBox::m_pSelectionHighlightColorWhenNotFocused");
static_assert(sizeof(CRichEditBox::m_textAlignment) == sizeof(uint8_t), "Incorrect size for CRichEditBox::m_textAlignment");
static_assert(sizeof(CRichEditBox::m_textReadingOrder) == sizeof(uint8_t), "Incorrect size for CRichEditBox::m_textReadingOrder");
static_assert(sizeof(CRichEditBox::m_textWrapping) == sizeof(uint8_t), "Incorrect size for CRichEditBox::m_textWrapping");
static_assert(sizeof(CRichTextBlock::m_pBlocks) == sizeof(nullptr_t), "Incorrect size for CRichTextBlock::m_pBlocks");
static_assert(sizeof(CRichTextBlock::m_pTextFormatting->m_nCharacterSpacing) == sizeof(int32_t), "Incorrect size for CRichTextBlock::m_pTextFormatting->m_nCharacterSpacing");
static_assert(sizeof(CRichTextBlock::m_pTextFormatting->m_pFontFamily) == sizeof(nullptr_t), "Incorrect size for CRichTextBlock::m_pTextFormatting->m_pFontFamily");
static_assert(sizeof(CRichTextBlock::m_pTextFormatting->m_eFontSize) == sizeof(float), "Incorrect size for CRichTextBlock::m_pTextFormatting->m_eFontSize");
static_assert(sizeof(CRichTextBlock::m_pTextFormatting->m_nFontStretch) == sizeof(uint8_t), "Incorrect size for CRichTextBlock::m_pTextFormatting->m_nFontStretch");
static_assert(sizeof(CRichTextBlock::m_pTextFormatting->m_nFontStyle) == sizeof(uint8_t), "Incorrect size for CRichTextBlock::m_pTextFormatting->m_nFontStyle");
static_assert(sizeof(CRichTextBlock::m_pTextFormatting->m_nFontWeight) == sizeof(uint32_t), "Incorrect size for CRichTextBlock::m_pTextFormatting->m_nFontWeight");
static_assert(sizeof(CRichTextBlock::m_pTextFormatting->m_pForeground) == sizeof(nullptr_t), "Incorrect size for CRichTextBlock::m_pTextFormatting->m_pForeground");
static_assert(sizeof(CRichTextBlock::m_textAlignment) == sizeof(uint8_t), "Incorrect size for CRichTextBlock::m_textAlignment");
static_assert(sizeof(CRichTextBlock::m_isColorFontEnabled) == sizeof(bool), "Incorrect size for CRichTextBlock::m_isColorFontEnabled");
static_assert(sizeof(CRichTextBlock::m_pTextFormatting->m_isTextScaleFactorEnabled) == sizeof(bool), "Incorrect size for CRichTextBlock::m_pTextFormatting->m_isTextScaleFactorEnabled");
static_assert(sizeof(CRichTextBlock::m_isTextSelectionEnabled) == sizeof(bool), "Incorrect size for CRichTextBlock::m_isTextSelectionEnabled");
static_assert(sizeof(CRichTextBlock::m_isTextTrimmed) == sizeof(bool), "Incorrect size for CRichTextBlock::m_isTextTrimmed");
static_assert(sizeof(CRichTextBlock::m_eLineHeight) == sizeof(float), "Incorrect size for CRichTextBlock::m_eLineHeight");
static_assert(sizeof(CRichTextBlock::m_lineStackingStrategy) == sizeof(uint8_t), "Incorrect size for CRichTextBlock::m_lineStackingStrategy");
static_assert(sizeof(CRichTextBlock::m_maxLines) == sizeof(int32_t), "Incorrect size for CRichTextBlock::m_maxLines");
static_assert(sizeof(CRichTextBlock::m_opticalMarginAlignment) == sizeof(uint8_t), "Incorrect size for CRichTextBlock::m_opticalMarginAlignment");
static_assert(sizeof(CRichTextBlock::m_pOverflowTarget) == sizeof(nullptr_t), "Incorrect size for CRichTextBlock::m_pOverflowTarget");
static_assert(sizeof(CRichTextBlock::m_padding) == sizeof(XTHICKNESS), "Incorrect size for CRichTextBlock::m_padding");
static_assert(sizeof(CRichTextBlock::m_pSelectionHighlightColor) == sizeof(nullptr_t), "Incorrect size for CRichTextBlock::m_pSelectionHighlightColor");
static_assert(sizeof(CRichTextBlock::m_textAlignment) == sizeof(uint8_t), "Incorrect size for CRichTextBlock::m_textAlignment");
static_assert(sizeof(CRichTextBlock::m_pTextFormatting->m_nTextDecorations) == sizeof(uint8_t), "Incorrect size for CRichTextBlock::m_pTextFormatting->m_nTextDecorations");
static_assert(sizeof(CRichTextBlock::m_textHighlighters) == sizeof(nullptr_t), "Incorrect size for CRichTextBlock::m_textHighlighters");
static_assert(sizeof(CRichTextBlock::m_textIndent) == sizeof(float), "Incorrect size for CRichTextBlock::m_textIndent");
static_assert(sizeof(CRichTextBlock::m_textLineBounds) == sizeof(uint8_t), "Incorrect size for CRichTextBlock::m_textLineBounds");
static_assert(sizeof(CRichTextBlock::m_textReadingOrder) == sizeof(uint8_t), "Incorrect size for CRichTextBlock::m_textReadingOrder");
static_assert(sizeof(CRichTextBlock::m_textTrimming) == sizeof(uint8_t), "Incorrect size for CRichTextBlock::m_textTrimming");
static_assert(sizeof(CRichTextBlock::m_textWrapping) == sizeof(uint8_t), "Incorrect size for CRichTextBlock::m_textWrapping");
static_assert(sizeof(CRichTextBlockOverflow::m_isTextTrimmed) == sizeof(bool), "Incorrect size for CRichTextBlockOverflow::m_isTextTrimmed");
static_assert(sizeof(CRichTextBlockOverflow::m_maxLines) == sizeof(int32_t), "Incorrect size for CRichTextBlockOverflow::m_maxLines");
static_assert(sizeof(CRichTextBlockOverflow::m_pOverflowTarget) == sizeof(nullptr_t), "Incorrect size for CRichTextBlockOverflow::m_pOverflowTarget");
static_assert(sizeof(CRichTextBlockOverflow::m_padding) == sizeof(XTHICKNESS), "Incorrect size for CRichTextBlockOverflow::m_padding");
static_assert(sizeof(CRotateTransform::m_eAngle) == sizeof(float), "Incorrect size for CRotateTransform::m_eAngle");
static_assert(sizeof(CRotateTransform::m_ptCenter.x) == sizeof(float), "Incorrect size for CRotateTransform::m_ptCenter.x");
static_assert(sizeof(CRotateTransform::m_ptCenter.y) == sizeof(float), "Incorrect size for CRotateTransform::m_ptCenter.y");
static_assert(sizeof(CRowDefinition::m_pUserSize) == sizeof(XGRIDLENGTH), "Incorrect size for CRowDefinition::m_pUserSize");
static_assert(sizeof(CRowDefinition::m_eUserMaxSize) == sizeof(float), "Incorrect size for CRowDefinition::m_eUserMaxSize");
static_assert(sizeof(CRowDefinition::m_eUserMinSize) == sizeof(float), "Incorrect size for CRowDefinition::m_eUserMinSize");
static_assert(sizeof(CRun::m_pTextFormatting->m_nFlowDirection) == sizeof(uint8_t), "Incorrect size for CRun::m_pTextFormatting->m_nFlowDirection");
static_assert(sizeof(CRun::m_strText) == sizeof(xstring_ptr), "Incorrect size for CRun::m_strText");
static_assert(sizeof(CScaleTransform::m_ptCenter.x) == sizeof(float), "Incorrect size for CScaleTransform::m_ptCenter.x");
static_assert(sizeof(CScaleTransform::m_ptCenter.y) == sizeof(float), "Incorrect size for CScaleTransform::m_ptCenter.y");
static_assert(sizeof(CScaleTransform::m_eScaleX) == sizeof(float), "Incorrect size for CScaleTransform::m_eScaleX");
static_assert(sizeof(CScaleTransform::m_eScaleY) == sizeof(float), "Incorrect size for CScaleTransform::m_eScaleY");
static_assert(sizeof(CScrollBar::m_orientation) == sizeof(DirectUI::Orientation), "Incorrect size for CScrollBar::m_orientation");
static_assert(sizeof(CScrollBar::m_viewportSize) == sizeof(DOUBLE), "Incorrect size for CScrollBar::m_viewportSize");
static_assert(sizeof(CScrollViewer::m_extentHeight) == sizeof(DOUBLE), "Incorrect size for CScrollViewer::m_extentHeight");
static_assert(sizeof(CScrollViewer::m_extentWidth) == sizeof(DOUBLE), "Incorrect size for CScrollViewer::m_extentWidth");
static_assert(sizeof(CScrollViewer::m_scrollableHeight) == sizeof(DOUBLE), "Incorrect size for CScrollViewer::m_scrollableHeight");
static_assert(sizeof(CScrollViewer::m_scrollableWidth) == sizeof(DOUBLE), "Incorrect size for CScrollViewer::m_scrollableWidth");
static_assert(sizeof(CScrollViewer::m_viewportHeight) == sizeof(DOUBLE), "Incorrect size for CScrollViewer::m_viewportHeight");
static_assert(sizeof(CScrollViewer::m_viewportWidth) == sizeof(DOUBLE), "Incorrect size for CScrollViewer::m_viewportWidth");
static_assert(sizeof(CSecondaryContentRelationship::m_pCurves) == sizeof(nullptr_t), "Incorrect size for CSecondaryContentRelationship::m_pCurves");
static_assert(sizeof(CSecondaryContentRelationship::m_isDescendant) == sizeof(bool), "Incorrect size for CSecondaryContentRelationship::m_isDescendant");
static_assert(sizeof(CSecondaryContentRelationship::m_shouldTargetClip) == sizeof(bool), "Incorrect size for CSecondaryContentRelationship::m_shouldTargetClip");
static_assert(sizeof(CSelectorItem::m_isSelected) == sizeof(bool), "Incorrect size for CSelectorItem::m_isSelected");
static_assert(sizeof(CSetter::m_pDependencyPropertyProxy) == sizeof(nullptr_t), "Incorrect size for CSetter::m_pDependencyPropertyProxy");
static_assert(sizeof(CSetter::m_target) == sizeof(nullptr_t), "Incorrect size for CSetter::m_target");
static_assert(sizeof(CSetter::m_vValue) == sizeof(CValue), "Incorrect size for CSetter::m_vValue");
static_assert(sizeof(CSetterBase::m_bIsSealed) == sizeof(bool), "Incorrect size for CSetterBase::m_bIsSealed");
static_assert(sizeof(CSetterBaseCollection::m_bIsSealed) == sizeof(bool), "Incorrect size for CSetterBaseCollection::m_bIsSealed");
static_assert(sizeof(CShape::m_pFill) == sizeof(nullptr_t), "Incorrect size for CShape::m_pFill");
static_assert(sizeof(CShape::m_Stretch) == sizeof(uint8_t), "Incorrect size for CShape::m_Stretch");
static_assert(sizeof(CSize::m_size.height) == sizeof(float), "Incorrect size for CSize::m_size.height");
static_assert(sizeof(CSize::m_size.width) == sizeof(float), "Incorrect size for CSize::m_size.width");
static_assert(sizeof(CSkewTransform::m_eAngleX) == sizeof(float), "Incorrect size for CSkewTransform::m_eAngleX");
static_assert(sizeof(CSkewTransform::m_eAngleY) == sizeof(float), "Incorrect size for CSkewTransform::m_eAngleY");
static_assert(sizeof(CSkewTransform::m_ptCenter.x) == sizeof(float), "Incorrect size for CSkewTransform::m_ptCenter.x");
static_assert(sizeof(CSkewTransform::m_ptCenter.y) == sizeof(float), "Incorrect size for CSkewTransform::m_ptCenter.y");
static_assert(sizeof(CSolidColorBrush::m_rgb) == sizeof(uint32_t), "Incorrect size for CSolidColorBrush::m_rgb");
static_assert(sizeof(CSpan::m_pInlines) == sizeof(nullptr_t), "Incorrect size for CSpan::m_pInlines");
static_assert(sizeof(CSplineColorKeyFrame::m_pKeySpline) == sizeof(nullptr_t), "Incorrect size for CSplineColorKeyFrame::m_pKeySpline");
static_assert(sizeof(CSplineDoubleKeyFrame::m_pKeySpline) == sizeof(nullptr_t), "Incorrect size for CSplineDoubleKeyFrame::m_pKeySpline");
static_assert(sizeof(CSplinePointKeyFrame::m_pKeySpline) == sizeof(nullptr_t), "Incorrect size for CSplinePointKeyFrame::m_pKeySpline");
static_assert(sizeof(CSplitView::m_isPaneOpen) == sizeof(bool), "Incorrect size for CSplitView::m_isPaneOpen");
static_assert(sizeof(CSplitView::m_pTemplateSettings) == sizeof(nullptr_t), "Incorrect size for CSplitView::m_pTemplateSettings");
static_assert(sizeof(CStackPanel::m_bAreScrollSnapPointsRegular) == sizeof(bool), "Incorrect size for CStackPanel::m_bAreScrollSnapPointsRegular");
static_assert(sizeof(CStackPanel::m_orientation) == sizeof(uint8_t), "Incorrect size for CStackPanel::m_orientation");
static_assert(sizeof(CStateTriggerBase::m_triggerState) == sizeof(bool), "Incorrect size for CStateTriggerBase::m_triggerState");
static_assert(sizeof(CStaticResourceExtension::m_strResourceKey) == sizeof(xstring_ptr), "Incorrect size for CStaticResourceExtension::m_strResourceKey");
static_assert(sizeof(CStoryboard::m_pChild) == sizeof(nullptr_t), "Incorrect size for CStoryboard::m_pChild");
static_assert(sizeof(CStoryboard::m_fIsEssential) == sizeof(bool), "Incorrect size for CStoryboard::m_fIsEssential");
static_assert(sizeof(CTimeline::m_strTargetName) == sizeof(xstring_ptr), "Incorrect size for CTimeline::m_strTargetName");
static_assert(sizeof(CTimeline::m_strTargetProperty) == sizeof(xstring_ptr), "Incorrect size for CTimeline::m_strTargetProperty");
static_assert(sizeof(CString::m_strString) == sizeof(xstring_ptr), "Incorrect size for CString::m_strString");
static_assert(sizeof(CStyle::m_pBasedOn) == sizeof(nullptr_t), "Incorrect size for CStyle::m_pBasedOn");
static_assert(sizeof(CStyle::m_bIsSealed) == sizeof(bool), "Incorrect size for CStyle::m_bIsSealed");
static_assert(sizeof(CStyle::m_pSetters) == sizeof(nullptr_t), "Incorrect size for CStyle::m_pSetters");
static_assert(sizeof(CStyle::m_targetTypeIndex) == sizeof(KnownTypeIndex), "Incorrect size for CStyle::m_targetTypeIndex");
static_assert(sizeof(CSvgImageSource::m_rasterizeHeight) == sizeof(float), "Incorrect size for CSvgImageSource::m_rasterizeHeight");
static_assert(sizeof(CSvgImageSource::m_rasterizeWidth) == sizeof(float), "Incorrect size for CSvgImageSource::m_rasterizeWidth");
static_assert(sizeof(CSvgImageSource::m_strSource) == sizeof(xstring_ptr), "Incorrect size for CSvgImageSource::m_strSource");
static_assert(sizeof(CSymbolIcon::m_nSymbol) == sizeof(uint32_t), "Incorrect size for CSymbolIcon::m_nSymbol");
static_assert(sizeof(CTemplateBindingExtension::m_pSourceProperty) == sizeof(nullptr_t), "Incorrect size for CTemplateBindingExtension::m_pSourceProperty");
static_assert(sizeof(CTextBlock::m_pTextFormatting->m_nCharacterSpacing) == sizeof(int32_t), "Incorrect size for CTextBlock::m_pTextFormatting->m_nCharacterSpacing");
static_assert(sizeof(CTextBlock::m_pTextFormatting->m_pFontFamily) == sizeof(nullptr_t), "Incorrect size for CTextBlock::m_pTextFormatting->m_pFontFamily");
static_assert(sizeof(CTextBlock::m_pTextFormatting->m_eFontSize) == sizeof(float), "Incorrect size for CTextBlock::m_pTextFormatting->m_eFontSize");
static_assert(sizeof(CTextBlock::m_pTextFormatting->m_nFontStretch) == sizeof(uint8_t), "Incorrect size for CTextBlock::m_pTextFormatting->m_nFontStretch");
static_assert(sizeof(CTextBlock::m_pTextFormatting->m_nFontStyle) == sizeof(uint8_t), "Incorrect size for CTextBlock::m_pTextFormatting->m_nFontStyle");
static_assert(sizeof(CTextBlock::m_pTextFormatting->m_nFontWeight) == sizeof(uint32_t), "Incorrect size for CTextBlock::m_pTextFormatting->m_nFontWeight");
static_assert(sizeof(CTextBlock::m_pTextFormatting->m_pForeground) == sizeof(nullptr_t), "Incorrect size for CTextBlock::m_pTextFormatting->m_pForeground");
static_assert(sizeof(CTextBlock::m_textAlignment) == sizeof(uint8_t), "Incorrect size for CTextBlock::m_textAlignment");
static_assert(sizeof(CTextBlock::m_pInlines) == sizeof(nullptr_t), "Incorrect size for CTextBlock::m_pInlines");
static_assert(sizeof(CTextBlock::m_isColorFontEnabled) == sizeof(bool), "Incorrect size for CTextBlock::m_isColorFontEnabled");
static_assert(sizeof(CTextBlock::m_pTextFormatting->m_isTextScaleFactorEnabled) == sizeof(bool), "Incorrect size for CTextBlock::m_pTextFormatting->m_isTextScaleFactorEnabled");
static_assert(sizeof(CTextBlock::m_isTextSelectionEnabled) == sizeof(bool), "Incorrect size for CTextBlock::m_isTextSelectionEnabled");
static_assert(sizeof(CTextBlock::m_isTextTrimmed) == sizeof(bool), "Incorrect size for CTextBlock::m_isTextTrimmed");
static_assert(sizeof(CTextBlock::m_eLineHeight) == sizeof(float), "Incorrect size for CTextBlock::m_eLineHeight");
static_assert(sizeof(CTextBlock::m_lineStackingStrategy) == sizeof(uint8_t), "Incorrect size for CTextBlock::m_lineStackingStrategy");
static_assert(sizeof(CTextBlock::m_maxLines) == sizeof(int32_t), "Incorrect size for CTextBlock::m_maxLines");
static_assert(sizeof(CTextBlock::m_opticalMarginAlignment) == sizeof(uint8_t), "Incorrect size for CTextBlock::m_opticalMarginAlignment");
static_assert(sizeof(CTextBlock::m_padding) == sizeof(XTHICKNESS), "Incorrect size for CTextBlock::m_padding");
static_assert(sizeof(CTextBlock::m_strText) == sizeof(xstring_ptr), "Incorrect size for CTextBlock::m_strText");
static_assert(sizeof(CTextBlock::m_textAlignment) == sizeof(uint8_t), "Incorrect size for CTextBlock::m_textAlignment");
static_assert(sizeof(CTextBlock::m_pTextFormatting->m_nTextDecorations) == sizeof(uint8_t), "Incorrect size for CTextBlock::m_pTextFormatting->m_nTextDecorations");
static_assert(sizeof(CTextBlock::m_textHighlighters) == sizeof(nullptr_t), "Incorrect size for CTextBlock::m_textHighlighters");
static_assert(sizeof(CTextBlock::m_textLineBounds) == sizeof(uint8_t), "Incorrect size for CTextBlock::m_textLineBounds");
static_assert(sizeof(CTextBlock::m_textReadingOrder) == sizeof(uint8_t), "Incorrect size for CTextBlock::m_textReadingOrder");
static_assert(sizeof(CTextBlock::m_textTrimming) == sizeof(uint8_t), "Incorrect size for CTextBlock::m_textTrimming");
static_assert(sizeof(CTextBlock::m_textWrapping) == sizeof(uint8_t), "Incorrect size for CTextBlock::m_textWrapping");
static_assert(sizeof(CTextBox::m_bAcceptsReturn) == sizeof(bool), "Incorrect size for CTextBox::m_bAcceptsReturn");
static_assert(sizeof(CTextBox::m_textAlignment) == sizeof(uint8_t), "Incorrect size for CTextBox::m_textAlignment");
static_assert(sizeof(CTextBox::m_pInputScope) == sizeof(nullptr_t), "Incorrect size for CTextBox::m_pInputScope");
static_assert(sizeof(CTextBox::m_isColorFontEnabled) == sizeof(bool), "Incorrect size for CTextBox::m_isColorFontEnabled");
static_assert(sizeof(CTextBox::m_isDesktopPopupMenuEnabled) == sizeof(bool), "Incorrect size for CTextBox::m_isDesktopPopupMenuEnabled");
static_assert(sizeof(CTextBox::m_bIsReadOnly) == sizeof(bool), "Incorrect size for CTextBox::m_bIsReadOnly");
static_assert(sizeof(CTextBox::m_isSpellCheckEnabled) == sizeof(bool), "Incorrect size for CTextBox::m_isSpellCheckEnabled");
static_assert(sizeof(CTextBox::m_bIsTelemetryCollectionEnabled) == sizeof(bool), "Incorrect size for CTextBox::m_bIsTelemetryCollectionEnabled");
static_assert(sizeof(CTextBox::m_isTextPredictionEnabled) == sizeof(bool), "Incorrect size for CTextBox::m_isTextPredictionEnabled");
static_assert(sizeof(CTextBox::m_iMaxLength) == sizeof(int32_t), "Incorrect size for CTextBox::m_iMaxLength");
static_assert(sizeof(CTextBox::m_preventEditFocusLoss) == sizeof(bool), "Incorrect size for CTextBox::m_preventEditFocusLoss");
static_assert(sizeof(CTextBox::m_bPreventKeyboardDisplayOnProgrammaticFocus) == sizeof(bool), "Incorrect size for CTextBox::m_bPreventKeyboardDisplayOnProgrammaticFocus");
static_assert(sizeof(CTextBox::m_strSelectedText) == sizeof(xstring_ptr), "Incorrect size for CTextBox::m_strSelectedText");
static_assert(sizeof(CTextBox::m_pSelectionHighlightColor) == sizeof(nullptr_t), "Incorrect size for CTextBox::m_pSelectionHighlightColor");
static_assert(sizeof(CTextBox::m_pSelectionHighlightColorWhenNotFocused) == sizeof(nullptr_t), "Incorrect size for CTextBox::m_pSelectionHighlightColorWhenNotFocused");
static_assert(sizeof(CTextBox::m_iSelectionLength) == sizeof(int32_t), "Incorrect size for CTextBox::m_iSelectionLength");
static_assert(sizeof(CTextBox::m_iSelectionStart) == sizeof(int32_t), "Incorrect size for CTextBox::m_iSelectionStart");
static_assert(sizeof(CTextBox::m_strText) == sizeof(xstring_ptr), "Incorrect size for CTextBox::m_strText");
static_assert(sizeof(CTextBox::m_textAlignment) == sizeof(uint8_t), "Incorrect size for CTextBox::m_textAlignment");
static_assert(sizeof(CTextBox::m_textReadingOrder) == sizeof(uint8_t), "Incorrect size for CTextBox::m_textReadingOrder");
static_assert(sizeof(CTextBox::m_textWrapping) == sizeof(uint8_t), "Incorrect size for CTextBox::m_textWrapping");
static_assert(sizeof(CTextElement::m_pTextFormatting->m_nCharacterSpacing) == sizeof(int32_t), "Incorrect size for CTextElement::m_pTextFormatting->m_nCharacterSpacing");
static_assert(sizeof(CTextElement::m_pTextFormatting->m_pFontFamily) == sizeof(nullptr_t), "Incorrect size for CTextElement::m_pTextFormatting->m_pFontFamily");
static_assert(sizeof(CTextElement::m_pTextFormatting->m_eFontSize) == sizeof(float), "Incorrect size for CTextElement::m_pTextFormatting->m_eFontSize");
static_assert(sizeof(CTextElement::m_pTextFormatting->m_nFontStretch) == sizeof(uint8_t), "Incorrect size for CTextElement::m_pTextFormatting->m_nFontStretch");
static_assert(sizeof(CTextElement::m_pTextFormatting->m_nFontStyle) == sizeof(uint8_t), "Incorrect size for CTextElement::m_pTextFormatting->m_nFontStyle");
static_assert(sizeof(CTextElement::m_pTextFormatting->m_nFontWeight) == sizeof(uint32_t), "Incorrect size for CTextElement::m_pTextFormatting->m_nFontWeight");
static_assert(sizeof(CTextElement::m_pTextFormatting->m_pForeground) == sizeof(nullptr_t), "Incorrect size for CTextElement::m_pTextFormatting->m_pForeground");
static_assert(sizeof(CTextElement::m_pTextFormatting->m_isTextScaleFactorEnabled) == sizeof(bool), "Incorrect size for CTextElement::m_pTextFormatting->m_isTextScaleFactorEnabled");
static_assert(sizeof(CTextElement::m_pTextFormatting->m_strLanguageString) == sizeof(xstring_ptr), "Incorrect size for CTextElement::m_pTextFormatting->m_strLanguageString");
static_assert(sizeof(CTextElement::m_pTextFormatting->m_nTextDecorations) == sizeof(uint8_t), "Incorrect size for CTextElement::m_pTextFormatting->m_nTextDecorations");
static_assert(sizeof(CTextHighlighter::m_background) == sizeof(nullptr_t), "Incorrect size for CTextHighlighter::m_background");
static_assert(sizeof(CTextHighlighter::m_foreground) == sizeof(nullptr_t), "Incorrect size for CTextHighlighter::m_foreground");
static_assert(sizeof(CTextHighlighter::m_ranges) == sizeof(nullptr_t), "Incorrect size for CTextHighlighter::m_ranges");
static_assert(sizeof(CUIElement::m_pInheritedProperties->m_textOptions.m_textFormattingMode) == sizeof(uint8_t), "Incorrect size for CUIElement::m_pInheritedProperties->m_textOptions.m_textFormattingMode");
static_assert(sizeof(CUIElement::m_pInheritedProperties->m_textOptions.m_textHintingMode) == sizeof(uint8_t), "Incorrect size for CUIElement::m_pInheritedProperties->m_textOptions.m_textHintingMode");
static_assert(sizeof(CUIElement::m_pInheritedProperties->m_textOptions.m_textRenderingMode) == sizeof(uint8_t), "Incorrect size for CUIElement::m_pInheritedProperties->m_textOptions.m_textRenderingMode");
static_assert(sizeof(CTextRange::m_range.length) == sizeof(int32_t), "Incorrect size for CTextRange::m_range.length");
static_assert(sizeof(CTextRange::m_range.startIndex) == sizeof(int32_t), "Incorrect size for CTextRange::m_range.startIndex");
static_assert(sizeof(CThemeResourceExtension::m_strResourceKey) == sizeof(xstring_ptr), "Incorrect size for CThemeResourceExtension::m_strResourceKey");
static_assert(sizeof(CThickness::m_thickness.bottom) == sizeof(float), "Incorrect size for CThickness::m_thickness.bottom");
static_assert(sizeof(CThickness::m_thickness.left) == sizeof(float), "Incorrect size for CThickness::m_thickness.left");
static_assert(sizeof(CThickness::m_thickness.right) == sizeof(float), "Incorrect size for CThickness::m_thickness.right");
static_assert(sizeof(CThickness::m_thickness.top) == sizeof(float), "Incorrect size for CThickness::m_thickness.top");
static_assert(sizeof(CTileBrush::m_AlignmentX) == sizeof(uint8_t), "Incorrect size for CTileBrush::m_AlignmentX");
static_assert(sizeof(CTileBrush::m_AlignmentY) == sizeof(uint8_t), "Incorrect size for CTileBrush::m_AlignmentY");
static_assert(sizeof(CTileBrush::m_Stretch) == sizeof(uint8_t), "Incorrect size for CTileBrush::m_Stretch");
static_assert(sizeof(CTimeline::m_fAutoReverse) == sizeof(bool), "Incorrect size for CTimeline::m_fAutoReverse");
static_assert(sizeof(CTimeline::m_pBeginTime) == sizeof(nullptr_t), "Incorrect size for CTimeline::m_pBeginTime");
static_assert(sizeof(CTimeline::m_duration) == sizeof(nullptr_t), "Incorrect size for CTimeline::m_duration");
static_assert(sizeof(CTimeline::m_fillBehavior) == sizeof(uint8_t), "Incorrect size for CTimeline::m_fillBehavior");
static_assert(sizeof(CTimeline::m_repeatBehavior) == sizeof(nullptr_t), "Incorrect size for CTimeline::m_repeatBehavior");
static_assert(sizeof(CTimeline::m_rSpeedRatio) == sizeof(float), "Incorrect size for CTimeline::m_rSpeedRatio");
static_assert(sizeof(CTimeSpan::m_rTimeSpan) == sizeof(double), "Incorrect size for CTimeSpan::m_rTimeSpan");
static_assert(sizeof(CTransformGroup::m_pChild) == sizeof(nullptr_t), "Incorrect size for CTransformGroup::m_pChild");
static_assert(sizeof(CTransition::m_pStaggerFunction) == sizeof(nullptr_t), "Incorrect size for CTransition::m_pStaggerFunction");
static_assert(sizeof(CTransitionTarget::m_pClipTransform) == sizeof(nullptr_t), "Incorrect size for CTransitionTarget::m_pClipTransform");
static_assert(sizeof(CTransitionTarget::m_ptClipTransformOrigin) == sizeof(XPOINTF), "Incorrect size for CTransitionTarget::m_ptClipTransformOrigin");
static_assert(sizeof(CTransitionTarget::m_pxf) == sizeof(nullptr_t), "Incorrect size for CTransitionTarget::m_pxf");
static_assert(sizeof(CTransitionTarget::m_opacity) == sizeof(float), "Incorrect size for CTransitionTarget::m_opacity");
static_assert(sizeof(CTransitionTarget::m_ptRenderTransformOrigin) == sizeof(XPOINTF), "Incorrect size for CTransitionTarget::m_ptRenderTransformOrigin");
static_assert(sizeof(CTranslateTransform::m_eX) == sizeof(float), "Incorrect size for CTranslateTransform::m_eX");
static_assert(sizeof(CTranslateTransform::m_eY) == sizeof(float), "Incorrect size for CTranslateTransform::m_eY");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_nAnnotationAlternates) == sizeof(int32_t), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_nAnnotationAlternates");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_Capitals) == sizeof(uint8_t), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_Capitals");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fCapitalSpacing) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fCapitalSpacing");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fCaseSensitiveForms) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fCaseSensitiveForms");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fContextualAlternates) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fContextualAlternates");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fContextualLigatures) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fContextualLigatures");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_nContextualSwashes) == sizeof(int32_t), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_nContextualSwashes");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fDiscretionaryLigatures) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fDiscretionaryLigatures");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fEastAsianExpertForms) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fEastAsianExpertForms");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_EastAsianLanguage) == sizeof(uint8_t), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_EastAsianLanguage");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_EastAsianWidths) == sizeof(uint8_t), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_EastAsianWidths");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_Fraction) == sizeof(uint8_t), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_Fraction");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fHistoricalForms) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fHistoricalForms");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fHistoricalLigatures) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fHistoricalLigatures");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fKerning) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fKerning");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fMathematicalGreek) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fMathematicalGreek");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_NumeralAlignment) == sizeof(uint8_t), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_NumeralAlignment");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_NumeralStyle) == sizeof(uint8_t), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_NumeralStyle");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fSlashedZero) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fSlashedZero");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStandardLigatures) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStandardLigatures");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_nStandardSwashes) == sizeof(int32_t), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_nStandardSwashes");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_nStylisticAlternates) == sizeof(int32_t), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_nStylisticAlternates");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet1) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet1");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet10) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet10");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet11) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet11");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet12) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet12");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet13) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet13");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet14) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet14");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet15) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet15");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet16) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet16");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet17) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet17");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet18) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet18");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet19) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet19");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet2) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet2");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet20) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet20");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet3) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet3");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet4) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet4");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet5) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet5");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet6) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet6");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet7) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet7");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet8) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet8");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet9) == sizeof(bool), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_fStylisticSet9");
static_assert(sizeof(CDependencyObject::m_pInheritedProperties->m_typography.m_Variants) == sizeof(uint8_t), "Incorrect size for CDependencyObject::m_pInheritedProperties->m_typography.m_Variants");
static_assert(sizeof(CUIElement::m_eOpacityPrivate) == sizeof(float), "Incorrect size for CUIElement::m_eOpacityPrivate");
static_assert(sizeof(CViewbox::m_stretch) == sizeof(uint8_t), "Incorrect size for CViewbox::m_stretch");
static_assert(sizeof(CViewbox::m_stretchDirection) == sizeof(uint8_t), "Incorrect size for CViewbox::m_stretchDirection");
static_assert(sizeof(CVisualState::m_pDeferredSetters) == sizeof(nullptr_t), "Incorrect size for CVisualState::m_pDeferredSetters");
static_assert(sizeof(CVisualState::m_pDeferredStoryboard) == sizeof(nullptr_t), "Incorrect size for CVisualState::m_pDeferredStoryboard");
static_assert(sizeof(CVisualState::m_setters) == sizeof(nullptr_t), "Incorrect size for CVisualState::m_setters");
static_assert(sizeof(CVisualState::m_pStateTriggerCollection) == sizeof(nullptr_t), "Incorrect size for CVisualState::m_pStateTriggerCollection");
static_assert(sizeof(CVisualStateGroup::m_pVisualStates) == sizeof(nullptr_t), "Incorrect size for CVisualStateGroup::m_pVisualStates");
static_assert(sizeof(CVisualStateGroup::m_pTransitions) == sizeof(nullptr_t), "Incorrect size for CVisualStateGroup::m_pTransitions");
static_assert(sizeof(CVisualStateGroupCollection::m_pActiveStoryboards) == sizeof(nullptr_t), "Incorrect size for CVisualStateGroupCollection::m_pActiveStoryboards");
static_assert(sizeof(CVisualStateGroupCollection::m_pActiveTransitions) == sizeof(nullptr_t), "Incorrect size for CVisualStateGroupCollection::m_pActiveTransitions");
static_assert(sizeof(CVisualStateGroupCollection::m_pDeferredSetters) == sizeof(nullptr_t), "Incorrect size for CVisualStateGroupCollection::m_pDeferredSetters");
static_assert(sizeof(CVisualStateGroupCollection::m_pDeferredStateTriggers) == sizeof(nullptr_t), "Incorrect size for CVisualStateGroupCollection::m_pDeferredStateTriggers");
static_assert(sizeof(CVisualTransition::m_strFrom) == sizeof(xstring_ptr), "Incorrect size for CVisualTransition::m_strFrom");
static_assert(sizeof(CVisualTransition::m_duration) == sizeof(nullptr_t), "Incorrect size for CVisualTransition::m_duration");
static_assert(sizeof(CVisualTransition::m_pEasingFunction) == sizeof(nullptr_t), "Incorrect size for CVisualTransition::m_pEasingFunction");
static_assert(sizeof(CVisualTransition::m_pStoryboard) == sizeof(nullptr_t), "Incorrect size for CVisualTransition::m_pStoryboard");
static_assert(sizeof(CVisualTransition::m_strTo) == sizeof(xstring_ptr), "Incorrect size for CVisualTransition::m_strTo");
static_assert(sizeof(CWindowChrome::m_titleBarVisibility) == sizeof(uint8_t), "Incorrect size for CWindowChrome::m_titleBarVisibility");
static_assert(sizeof(CXamlCompositionBrush::m_fallbackColor) == sizeof(uint32_t), "Incorrect size for CXamlCompositionBrush::m_fallbackColor");

#include "GeneratorPosition.g.h"
#include "DataTemplateSelector_Partial.h"
#include "ElementCompositionPreview.g.h"
#include "GroupStyleSelector_Partial.h"
#include "InputValidationContext.g.h"
#include "InteractionBase_Partial.h"
#include "ItemContainerGenerator_Partial.h"
#include "ListViewPersistenceHelper.g.h"
#include "MarkupExtension.g.h"
#include "MediaTransportControlsHelper.g.h"
#include "ParserServiceProvider_Partial.h"
#include "StyleSelector_Partial.h"
#include "TextOptions.g.h"
#include "ToolTipService_Partial.h"
#include "Typography.g.h"
#include "XamlBindingHelper.g.h"
#include "XamlMarkupHelper.g.h"
#include "XamlRenderingBackgroundTask_Partial.h"
#include "AccessKeyDisplayDismissedEventArgs.g.h"
#include "AccessKeyDisplayRequestedEventArgs.g.h"
#include "AccessKeyInvokedEventArgs.g.h"
#include "AddPagesEventArgs_Partial.h"
#include "AnchorRequestedEventArgs.g.h"
#include "AppBarButtonTemplateSettings.g.h"
#include "AppBarTemplateSettings.g.h"
#include "AppBarToggleButtonTemplateSettings.g.h"
#include "ApplicationBarService_Partial.h"
#include "AutomationAnnotation.g.h"
#include "AutomationPeer_Partial.h"
#include "AutomationPeerAnnotation.g.h"
#include "AutomationPeerEventArgs.g.h"
#include "AutoSuggestBoxQuerySubmittedEventArgs.g.h"
#include "AutoSuggestBoxSuggestionChosenEventArgs.g.h"
#include "AutoSuggestBoxTextChangedEventArgs_Partial.h"
#include "BeginPrintEventArgs.g.h"
#include "BindingFailedEventArgs.g.h"
#include "Brush_Partial.h"
#include "BrushTransition_Partial.h"
#include "CacheMode.g.h"
#include "CalendarDatePickerDateChangedEventArgs_Partial.h"
#include "CalendarViewDayItemChangingEventArgs_Partial.h"
#include "CalendarViewSelectedDatesChangedEventArgs.g.h"
#include "CalendarViewTemplateSettings.g.h"
#include "CandidateWindowBoundsChangedEventArgs.g.h"
#include "CanExecuteRequestedEventArgs.g.h"
#include "CollectionView_Partial.h"
#include "CollectionViewGroup_Partial.h"
#include "CollectionViewSource_Partial.h"
#include "ColorKeyFrame.g.h"
#include "ColumnDefinition.g.h"
#include "ComboBoxTemplateSettings.g.h"
#include "ComboBoxTextSubmittedEventArgs.g.h"
#include "CommandBarTemplateSettings.g.h"
#include "CommandingContextChangedEventArgs.g.h"
#include "ConnectedAnimation_Partial.h"
#include "ConnectedAnimationService_Partial.h"
#include "ContentDialogButtonClickEventArgs_Partial.h"
#include "ContentDialogClosedEventArgs.g.h"
#include "ContentDialogClosingEventArgs_Partial.h"
#include "ContentDialogOpenedEventArgs.g.h"
#include "CornerRadius.g.h"
#include "CurrentChangingEventArgs_Partial.h"
#include "DatePickerSelectedValueChangedEventArgs.g.h"
#include "DatePickerValueChangedEventArgs_Partial.h"
#include "DebugSettings_Partial.h"
#include "DeferredElement.g.h"
#include "DependencyObjectWrapper.g.h"
#include "DependencyPropertyProxy_Partial.h"
#include "Deployment.g.h"
#include "DoubleKeyFrame.g.h"
#include "DownloadProgressEventArgs.g.h"
#include "DragItemsCompletedEventArgs.g.h"
#include "DragItemsStartingEventArgs.g.h"
#include "DynamicOverflowItemsChangingEventArgs.g.h"
#include "EasingFunctionBase_Partial.h"
#include "EffectiveViewportChangedEventArgs.g.h"
#include "EndPrintEventArgs.g.h"
#include "ErrorEventArgs.g.h"
#include "ExecuteRequestedEventArgs.g.h"
#include "ExternalObjectReference_Partial.h"
#include "FlyoutBase_Partial.h"
#include "FlyoutBaseClosingEventArgs.g.h"
#include "FocusedElementRemovedEventArgs.g.h"
#include "FocusManagerGotFocusEventArgs.g.h"
#include "FocusManagerLostFocusEventArgs.g.h"
#include "FontFamily.g.h"
#include "FrameworkTemplate.g.h"
#include "GeneralTransform.g.h"
#include "Geometry.g.h"
#include "GetPreviewPageEventArgs.g.h"
#include "GradientStop.g.h"
#include "GridLength.g.h"
#include "GroupStyle_Partial.h"
#include "HasValidationErrorsChangedEventArgs.g.h"
#include "HubSectionHeaderClickEventArgs.g.h"
#include "HWCompNode.g.h"
#include "IconSource_Partial.h"
#include "ImageSource.g.h"
#include "InertiaExpansionBehavior.g.h"
#include "InertiaRotationBehavior.g.h"
#include "InertiaTranslationBehavior.g.h"
#include "InputScope.g.h"
#include "InputScopeName.g.h"
#include "InputValidationCommand.g.h"
#include "InputValidationErrorEventArgs.g.h"
#include "IRawElementProviderSimple_Partial.h"
#include "IsApiContractNotPresent_Partial.h"
#include "IsApiContractPresent_Partial.h"
#include "IsEnabledChangedEventArgs.g.h"
#include "IsPropertyNotPresent_Partial.h"
#include "IsPropertyPresent_Partial.h"
#include "IsTextTrimmedChangedEventArgs.g.h"
#include "IsTypeNotPresent_Partial.h"
#include "IsTypePresent_Partial.h"
#include "KeyboardAccelerator_Partial.h"
#include "KeyboardAcceleratorInvokedEventArgs.g.h"
#include "KeySpline.g.h"
#include "LayoutTransitionStaggerItem_Partial.h"
#include "LengthConverter.g.h"
#include "ListViewBaseItemTemplateSettings.g.h"
#include "LoadedImageSourceLoadCompletedEventArgs.g.h"
#include "LoadedImageSurface_Partial.h"
#include "ManipulationDelta.g.h"
#include "ManipulationPivot_Partial.h"
#include "ManipulationVelocities.g.h"
#include "MarkupExtensionBase_Partial.h"
#include "Matrix_Partial.h"
#include "Matrix3D_Partial.h"
#include "MediaPlaybackItemConverter.g.h"
#include "MediaTransportControlsThumbnailRequestedEventArgs_Partial.h"
#include "MenuFlyoutItemTemplateSettings.g.h"
#include "MenuFlyoutPresenterTemplateSettings.g.h"
#include "NavigatingCancelEventArgs.g.h"
#include "NavigationEventArgs.g.h"
#include "NavigationFailedEventArgs.g.h"
#include "NavigationTransitionInfo_Partial.h"
#include "NullKeyedResource.g.h"
#include "ObjectKeyFrame.g.h"
#include "PageStackEntry_Partial.h"
#include "PaginateEventArgs_Partial.h"
#include "ParametricCurve.g.h"
#include "ParametricCurveSegment.g.h"
#include "PasswordBoxPasswordChangingEventArgs.g.h"
#include "PathFigure.g.h"
#include "PathSegment.g.h"
#include "Pointer.g.h"
#include "PointerKeyFrame.g.h"
#include "PointKeyFrame.g.h"
#include "PrintDocument_Partial.h"
#include "PrintPageEventArgs.g.h"
#include "Projection.g.h"
#include "PropertyPath_Partial.h"
#include "RenderedEventArgs.g.h"
#include "RenderingEventArgs.g.h"
#include "ResourceManagerRequestedEventArgs.g.h"
#include "RichEditBoxSelectionChangingEventArgs.g.h"
#include "RichEditBoxTextChangingEventArgs.g.h"
#include "RoutedEventArgs_Partial.h"
#include "RowDefinition.g.h"
#include "ScalarTransition_Partial.h"
#include "ScrollViewerViewChangedEventArgs.g.h"
#include "ScrollViewerViewChangingEventArgs.g.h"
#include "SecondaryContentRelationship.g.h"
#include "SectionsInViewChangedEventArgs_Partial.h"
#include "SemanticZoomViewChangedEventArgs.g.h"
#include "SetterBase.g.h"
#include "Shadow.g.h"
#include "SplitViewPaneClosingEventArgs.g.h"
#include "SplitViewTemplateSettings.g.h"
#include "StaggerFunctionBase_Partial.h"
#include "StartupEventArgs.g.h"
#include "StateTriggerBase_Partial.h"
#include "Style.g.h"
#include "SvgImageSourceFailedEventArgs.g.h"
#include "SvgImageSourceOpenedEventArgs.g.h"
#include "SystemBackdrop_Partial.h"
#include "TargetPropertyPath.g.h"
#include "TemplateContent.g.h"
#include "TextAdapter_Partial.h"
#include "TextBoxBeforeTextChangingEventArgs.g.h"
#include "TextBoxSelectionChangingEventArgs.g.h"
#include "TextBoxTextChangingEventArgs.g.h"
#include "TextCompositionChangedEventArgs.g.h"
#include "TextCompositionEndedEventArgs.g.h"
#include "TextCompositionStartedEventArgs.g.h"
#include "TextControlCopyingToClipboardEventArgs.g.h"
#include "TextControlCuttingToClipboardEventArgs.g.h"
#include "TextControlPasteEventArgs.g.h"
#include "TextElement_Partial.h"
#include "TextHighlighterBase.g.h"
#include "TextPointerWrapper.g.h"
#include "TextProvider.g.h"
#include "TextRangeAdapter_Partial.h"
#include "TextRangeProvider.g.h"
#include "Thickness.g.h"
#include "Timeline_Partial.h"
#include "TimePickerSelectedValueChangedEventArgs.g.h"
#include "TimePickerValueChangedEventArgs.g.h"
#include "ToggleSwitchTemplateSettings.g.h"
#include "ToolTipTemplateSettings.g.h"
#include "Transform3D.g.h"
#include "Transition_Partial.h"
#include "TransitionTarget.g.h"
#include "TriggerAction.g.h"
#include "TriggerBase.g.h"
#include "UIElement_Partial.h"
#include "UnhandledExceptionEventArgs.g.h"
#include "Vector3Transition_Partial.h"
#include "VisualState.g.h"
#include "VisualStateChangedEventArgs.g.h"
#include "VisualStateGroup_Partial.h"
#include "VisualStateManager_Partial.h"
#include "VisualTransition.g.h"
#include "Window_Partial.h"
#include "WindowCreatedEventArgs.g.h"
#include "XamlLight.g.h"
#include "XamlResourceReferenceFailedEventArgs.g.h"
#include "XamlRootChangedEventArgs.g.h"
#include "XamlUICommand_Partial.h"
#include "AdaptiveTrigger.g.h"
#include "AddDeleteThemeTransition_Partial.h"
#include "ArcSegment.g.h"
#include "BackEase.g.h"
#include "BeginStoryboard.g.h"
#include "BezierSegment.g.h"
#include "BindingBase.g.h"
#include "BitmapCache.g.h"
#include "BitmapIconSource_Partial.h"
#include "BitmapSource_Partial.h"
#include "Block.g.h"
#include "BounceEase.g.h"
#include "BringIntoViewRequestedEventArgs.g.h"
#include "CalendarViewHeaderAutomationPeer_Partial.h"
#include "CharacterReceivedRoutedEventArgs.g.h"
#include "CircleEase.g.h"
#include "CleanUpVirtualizedItemEventArgs.g.h"
#include "ColorAnimation.g.h"
#include "ColorAnimationUsingKeyFrames.g.h"
#include "CompositeTransform3D.g.h"
#include "ContentDialogOpenCloseThemeTransition_Partial.h"
#include "ContentThemeTransition_Partial.h"
#include "ContextMenuEventArgs_Partial.h"
#include "ContextRequestedEventArgs.g.h"
#include "ControlTemplate.g.h"
#include "CubicEase.g.h"
#include "CustomResource.g.h"
#include "DataTemplate_Partial.h"
#include "DiscreteColorKeyFrame.g.h"
#include "DiscreteDoubleKeyFrame.g.h"
#include "DiscreteObjectKeyFrame.g.h"
#include "DiscretePointKeyFrame.g.h"
#include "DispatcherTimer_Partial.h"
#include "DoubleAnimation.g.h"
#include "DoubleAnimationUsingKeyFrames.g.h"
#include "DoubleTappedRoutedEventArgs.g.h"
#include "DragCompletedEventArgs_Partial.h"
#include "DragDeltaEventArgs_Partial.h"
#include "DragEventArgs_Partial.h"
#include "DragStartedEventArgs_Partial.h"
#include "DragStartingEventArgs_Partial.h"
#include "DropCompletedEventArgs.g.h"
#include "Duration_Partial.h"
#include "DynamicTimeline.g.h"
#include "EasingColorKeyFrame.g.h"
#include "EasingDoubleKeyFrame.g.h"
#include "EasingPointKeyFrame.g.h"
#include "EdgeUIThemeTransition_Partial.h"
#include "ElasticEase.g.h"
#include "EllipseGeometry.g.h"
#include "EntranceThemeTransition_Partial.h"
#include "EventTrigger_Partial.h"
#include "ExceptionRoutedEventArgs.g.h"
#include "ExponentialEase.g.h"
#include "Flyout_Partial.h"
#include "FocusDisengagedEventArgs.g.h"
#include "FocusEngagedEventArgs.g.h"
#include "FontIconSource_Partial.h"
#include "FrameworkElement_Partial.h"
#include "FrameworkElementAutomationPeer_Partial.h"
#include "FrameworkElementEx.g.h"
#include "GeometryGroup.g.h"
#include "GettingFocusEventArgs.g.h"
#include "GradientBrush.g.h"
#include "GridViewItemTemplateSettings.g.h"
#include "GroupedDataCollectionView_Partial.h"
#include "HoldingRoutedEventArgs.g.h"
#include "HWCompLeafNode.g.h"
#include "HWCompTreeNode.g.h"
#include "HyperlinkAutomationPeer_Partial.h"
#include "HyperlinkClickEventArgs.g.h"
#include "Inline.g.h"
#include "InputPaneThemeTransition_Partial.h"
#include "InternalTransform_Partial.h"
#include "ItemAutomationPeer_Partial.h"
#include "ItemClickEventArgs.g.h"
#include "ItemsPanelTemplate.g.h"
#include "KeyRoutedEventArgs_Partial.h"
#include "KeyTime.g.h"
#include "LayoutTransitionElement.g.h"
#include "LinearColorKeyFrame.g.h"
#include "LinearDoubleKeyFrame.g.h"
#include "LinearPointKeyFrame.g.h"
#include "LineGeometry.g.h"
#include "LineSegment.g.h"
#include "ListViewItemTemplateSettings.g.h"
#include "LosingFocusEventArgs.g.h"
#include "ManipulationCompletedRoutedEventArgs.g.h"
#include "ManipulationDeltaRoutedEventArgs_Partial.h"
#include "ManipulationInertiaStartingRoutedEventArgs.g.h"
#include "ManipulationStartedRoutedEventArgs.g.h"
#include "ManipulationStartingRoutedEventArgs.g.h"
#include "Matrix3DProjection.g.h"
#include "MediaSwapChainElement.g.h"
#include "MenuFlyout_Partial.h"
#include "MenuPopupThemeTransition_Partial.h"
#include "NoFocusCandidateFoundEventArgs.g.h"
#include "NullExtension.g.h"
#include "ObjectAnimationUsingKeyFrames.g.h"
#include "PanelEx.g.h"
#include "PaneThemeTransition_Partial.h"
#include "ParallelTimeline.g.h"
#include "PathGeometry.g.h"
#include "PathIconSource_Partial.h"
#include "PerspectiveTransform3D.g.h"
#include "PickerFlyoutThemeTransition_Partial.h"
#include "PlaneProjection.g.h"
#include "PointAnimation.g.h"
#include "PointAnimationUsingKeyFrames.g.h"
#include "PointerAnimationUsingKeyFrames.g.h"
#include "PointerRoutedEventArgs_Partial.h"
#include "PolyBezierSegment.g.h"
#include "PolyLineSegment.g.h"
#include "PolyQuadraticBezierSegment.g.h"
#include "PopupThemeTransition_Partial.h"
#include "PowerEase.g.h"
#include "PVLStaggerFunction_Partial.h"
#include "QuadraticBezierSegment.g.h"
#include "QuadraticEase.g.h"
#include "QuarticEase.g.h"
#include "QuinticEase.g.h"
#include "RangeBaseValueChangedEventArgs.g.h"
#include "RectangleGeometry.g.h"
#include "RelativeSource.g.h"
#include "RenderTargetBitmap_Partial.h"
#include "ReorderThemeTransition_Partial.h"
#include "RepositionThemeTransition_Partial.h"
#include "RightTappedRoutedEventArgs.g.h"
#include "ScrollEventArgs_Partial.h"
#include "SelectionChangedEventArgs_Partial.h"
#include "Setter.g.h"
#include "SineEase.g.h"
#include "SizeChangedEventArgs.g.h"
#include "SoftwareBitmapSource_Partial.h"
#include "SolidColorBrush.g.h"
#include "SplineColorKeyFrame.g.h"
#include "SplineDoubleKeyFrame.g.h"
#include "SplinePointKeyFrame.g.h"
#include "StandardUICommand_Partial.h"
#include "StateTrigger.g.h"
#include "StaticResource.g.h"
#include "SurfaceImageSource_Partial.h"
#include "SvgImageSource_Partial.h"
#include "SwapChainElement.g.h"
#include "SymbolIconSource_Partial.h"
#include "TappedRoutedEventArgs.g.h"
#include "TemplateBinding.g.h"
#include "TextChangedEventArgs.g.h"
#include "TextHighlighter_Partial.h"
#include "ThemeResource.g.h"
#include "ThemeShadow_Partial.h"
#include "TileBrush.g.h"
#include "Transform_Partial.h"
#include "VectorCollectionView_Partial.h"
#include "VectorViewCollectionView_Partial.h"
#include "XamlCompositionBrushBase_Partial.h"
#include "AppBarAutomationPeer_Partial.h"
#include "AppBarLightDismissAutomationPeer_Partial.h"
#include "AutomationAnnotationCollection.g.h"
#include "AutomationPeerAnnotationCollection.g.h"
#include "AutomationPeerCollection.g.h"
#include "AutoSuggestBoxAutomationPeer_Partial.h"
#include "Binding_Partial.h"
#include "BitmapImage_Partial.h"
#include "Border.g.h"
#include "BrushCollection.g.h"
#include "ButtonBaseAutomationPeer_Partial.h"
#include "CalendarDatePickerAutomationPeer_Partial.h"
#include "CalendarViewAutomationPeer_Partial.h"
#include "CalendarViewBaseItemAutomationPeer_Partial.h"
#include "ColorKeyFrameCollection.g.h"
#include "ColumnDefinitionCollection.g.h"
#include "ComboBoxItemAutomationPeer_Partial.h"
#include "ComboBoxLightDismissAutomationPeer_Partial.h"
#include "CompositeTransform.g.h"
#include "ConnectedAnimationRoot.g.h"
#include "ContentPresenter_Partial.h"
#include "Control_Partial.h"
#include "DatePickerAutomationPeer_Partial.h"
#include "DisplayMemberTemplate.g.h"
#include "DoubleCollection.g.h"
#include "DoubleKeyFrameCollection.g.h"
#include "DragItemThemeAnimation_Partial.h"
#include "DragOverThemeAnimation_Partial.h"
#include "DrillInThemeAnimation_Partial.h"
#include "DrillOutThemeAnimation_Partial.h"
#include "DropTargetItemThemeAnimation_Partial.h"
#include "FaceplateContentPresenterAutomationPeer_Partial.h"
#include "FadeInThemeAnimation_Partial.h"
#include "FadeOutThemeAnimation_Partial.h"
#include "FlipViewItemAutomationPeer_Partial.h"
#include "FloatCollection.g.h"
#include "FlyoutPresenterAutomationPeer_Partial.h"
#include "FullWindowMediaRootAutomationPeer_Partial.h"
#include "GeometryCollection.g.h"
#include "Glyphs.g.h"
#include "GradientStopCollection.g.h"
#include "GroupItemAutomationPeer_Partial.h"
#include "HubAutomationPeer_Partial.h"
#include "HubSectionAutomationPeer_Partial.h"
#include "HubSectionCollection_Partial.h"
#include "HWCompMediaNode.g.h"
#include "HWCompRenderDataNode.g.h"
#include "HWCompSwapChainNode.g.h"
#include "HWRedirectedCompTreeNodeWinRT.g.h"
#include "IconElement.g.h"
#include "Image_Partial.h"
#include "ImageAutomationPeer_Partial.h"
#include "ImageBrush.g.h"
#include "InlineUIContainer_Partial.h"
#include "InputScopeNameCollection.g.h"
#include "ItemsControlAutomationPeer_Partial.h"
#include "ItemsPresenter_Partial.h"
#include "IterableCollectionView_Partial.h"
#include "KeyboardAcceleratorCollection.g.h"
#include "LandmarkTargetAutomationPeer_Partial.h"
#include "LinearGradientBrush_Partial.h"
#include "LineBreak.g.h"
#include "ListBoxItemAutomationPeer_Partial.h"
#include "ListViewBaseHeaderItemAutomationPeer_Partial.h"
#include "ListViewBaseItemAutomationPeer_Partial.h"
#include "ListViewBaseItemSecondaryChrome_Partial.h"
#include "MatrixTransform.g.h"
#include "MediaBase.g.h"
#include "MediaFailedRoutedEventArgs.g.h"
#include "MediaPlayerElementAutomationPeer_Partial.h"
#include "MediaPlayerPresenter_Partial.h"
#include "MediaTransportControlsAutomationPeer_Partial.h"
#include "MenuFlyoutItemAutomationPeer_Partial.h"
#include "MenuFlyoutItemBaseCollection_Partial.h"
#include "MenuFlyoutSubItemAutomationPeer_Partial.h"
#include "NamedContainerAutomationPeer_Partial.h"
#include "ObjectKeyFrameCollection.g.h"
#include "Panel_Partial.h"
#include "Paragraph_Partial.h"
#include "ParametricCurveCollection.g.h"
#include "ParametricCurveSegmentCollection.g.h"
#include "PasswordBoxAutomationPeer_Partial.h"
#include "PathFigureCollection.g.h"
#include "PathSegmentCollection.g.h"
#include "PointCollection.g.h"
#include "PointerCollection.g.h"
#include "PointerDownThemeAnimation_Partial.h"
#include "PointerKeyFrameCollection.g.h"
#include "PointerUpThemeAnimation_Partial.h"
#include "PointKeyFrameCollection.g.h"
#include "PopInThemeAnimation_Partial.h"
#include "PopOutThemeAnimation_Partial.h"
#include "Popup_Partial.h"
#include "PopupAutomationPeer_Partial.h"
#include "PopupRootAutomationPeer_Partial.h"
#include "RangeBaseAutomationPeer_Partial.h"
#include "RepeatBehavior_Partial.h"
#include "RepositionThemeAnimation_Partial.h"
#include "ResourceDictionary_Partial.h"
#include "ResourceDictionaryCollection.g.h"
#include "RichEditBoxAutomationPeer_Partial.h"
#include "RichTextBlock_Partial.h"
#include "RichTextBlockAutomationPeer_Partial.h"
#include "RichTextBlockOverflow_Partial.h"
#include "RichTextBlockOverflowAutomationPeer_Partial.h"
#include "RotateTransform.g.h"
#include "RowDefinitionCollection.g.h"
#include "Run.g.h"
#include "ScaleTransform.g.h"
#include "ScrollViewerAutomationPeer_Partial.h"
#include "SelectorItemAutomationPeer_Partial.h"
#include "SemanticZoomAutomationPeer_Partial.h"
#include "SetterBaseCollection.g.h"
#include "Shape.g.h"
#include "SkewTransform.g.h"
#include "Span_Partial.h"
#include "SplitCloseThemeAnimation_Partial.h"
#include "SplitOpenThemeAnimation_Partial.h"
#include "SplitViewLightDismissAutomationPeer_Partial.h"
#include "SplitViewPaneAutomationPeer_Partial.h"
#include "StateTriggerCollection.g.h"
#include "Storyboard_Partial.h"
#include "StoryboardCollection.g.h"
#include "SwipeBackThemeAnimation_Partial.h"
#include "SwipeHintThemeAnimation_Partial.h"
#include "TextBlock_Partial.h"
#include "TextBlockAutomationPeer_Partial.h"
#include "TextBoxAutomationPeer_Partial.h"
#include "TextBoxBaseAutomationPeer.g.h"
#include "TextBoxView_Partial.h"
#include "TextHighlighterCollection_Partial.h"
#include "TextRangeCollection_Partial.h"
#include "ThemeAnimationBase_Partial.h"
#include "ThumbAutomationPeer_Partial.h"
#include "TimelineCollection.g.h"
#include "TimePickerAutomationPeer_Partial.h"
#include "ToggleMenuFlyoutItemAutomationPeer_Partial.h"
#include "ToggleSwitchAutomationPeer_Partial.h"
#include "ToolTipAutomationPeer_Partial.h"
#include "TransformCollection.g.h"
#include "TransformGroup.g.h"
#include "TransitionCollection.g.h"
#include "TranslateTransform.g.h"
#include "TriggerActionCollection.g.h"
#include "TriggerCollection.g.h"
#include "UIElementCollection.g.h"
#include "UIElementWeakCollection_Partial.h"
#include "Viewbox.g.h"
#include "VirtualSurfaceImageSource_Partial.h"
#include "VisualStateCollection.g.h"
#include "VisualStateGroupCollection_Partial.h"
#include "VisualTransitionCollection.g.h"
#include "WriteableBitmap_Partial.h"
#include "XamlLightCollection.g.h"
#include "AppBarSeparator_Partial.h"
#include "BasedOnSetterCollection.g.h"
#include "BitmapIcon.g.h"
#include "Bold.g.h"
#include "ButtonAutomationPeer_Partial.h"
#include "CalendarDatePicker_Partial.h"
#include "CalendarScrollViewerAutomationPeer_Partial.h"
#include "CalendarView_Partial.h"
#include "CalendarViewBaseItem_Partial.h"
#include "CalendarViewDayItemAutomationPeer_Partial.h"
#include "CalendarViewItemAutomationPeer_Partial.h"
#include "Canvas.g.h"
#include "ColorPaletteResources.g.h"
#include "ComboBoxItemDataAutomationPeer_Partial.h"
#include "CommandBarElementCollection_Partial.h"
#include "CommandingContainer_Partial.h"
#include "ContentControl_Partial.h"
#include "DatePicker_Partial.h"
#include "DependencyObjectCollection_Partial.h"
#include "Ellipse.g.h"
#include "FlipViewItemDataAutomationPeer_Partial.h"
#include "FontIcon.g.h"
#include "FullWindowMediaRoot_Partial.h"
#include "Grid.g.h"
#include "GridViewHeaderItemAutomationPeer_Partial.h"
#include "GridViewItemAutomationPeer_Partial.h"
#include "Hub_Partial.h"
#include "HubSection_Partial.h"
#include "HWWindowedPopupCompTreeNodeWinRT.g.h"
#include "Hyperlink_Partial.h"
#include "HyperlinkButtonAutomationPeer_Partial.h"
#include "IconSourceElement.g.h"
#include "Italic.g.h"
#include "ItemCollection_Partial.h"
#include "ItemsControl_Partial.h"
#include "Line.g.h"
#include "ListBoxItemDataAutomationPeer_Partial.h"
#include "ListViewBaseItemDataAutomationPeer_Partial.h"
#include "ListViewBaseItemPresenter_Partial.h"
#include "ListViewHeaderItemAutomationPeer_Partial.h"
#include "ListViewItemAutomationPeer_Partial.h"
#include "MediaPlayerElement_Partial.h"
#include "MediaTransportControls_Partial.h"
#include "MenuFlyoutItemBase_Partial.h"
#include "MenuFlyoutPresenterAutomationPeer_Partial.h"
#include "ModernCollectionBasePanel_Partial.h"
#include "PasswordBox_Partial.h"
#include "Path.g.h"
#include "PathIcon.g.h"
#include "Polygon.g.h"
#include "Polyline.g.h"
#include "RangeBase_Partial.h"
#include "Rectangle.g.h"
#include "RelativePanel.g.h"
#include "RenderTargetBitmapRoot.g.h"
#include "RepeatButtonAutomationPeer_Partial.h"
#include "RichEditBox_Partial.h"
#include "RootVisual.g.h"
#include "ScrollBarAutomationPeer_Partial.h"
#include "ScrollContentPresenter_Partial.h"
#include "SelectorAutomationPeer_Partial.h"
#include "SemanticZoom_Partial.h"
#include "SliderAutomationPeer_Partial.h"
#include "SplitView_Partial.h"
#include "StackPanel_Partial.h"
#include "SymbolIcon_Partial.h"
#include "TextBox_Partial.h"
#include "TextBoxBase.g.h"
#include "Thumb_Partial.h"
#include "TickBar_Partial.h"
#include "TimePicker_Partial.h"
#include "ToggleButtonAutomationPeer_Partial.h"
#include "ToggleSwitch_Partial.h"
#include "Underline.g.h"
#include "UserControl_Partial.h"
#include "ValidationErrorsCollection_Partial.h"
#include "VariableSizedWrapGrid_Partial.h"
#include "VirtualizingPanel_Partial.h"
#include "XamlIslandRoot_Partial.h"
#include "XamlIslandRootCollection.g.h"
#include "AppBar_Partial.h"
#include "AppBarButtonAutomationPeer_Partial.h"
#include "AppBarElementContainer_Partial.h"
#include "AppBarLightDismiss_Partial.h"
#include "AppBarToggleButtonAutomationPeer_Partial.h"
#include "AutoSuggestBox_Partial.h"
#include "BlockCollection_Partial.h"
#include "ButtonBase_Partial.h"
#include "CalendarPanel_Partial.h"
#include "CalendarViewDayItem_Partial.h"
#include "CalendarViewItem_Partial.h"
#include "CarouselPanel_Partial.h"
#include "CheckBoxAutomationPeer_Partial.h"
#include "ComboBoxAutomationPeer_Partial.h"
#include "ComboBoxLightDismiss_Partial.h"
#include "CommandBarOverflowPresenter_Partial.h"
#include "ContentDialog_Partial.h"
#include "FlipViewAutomationPeer_Partial.h"
#include "FlyoutPresenter_Partial.h"
#include "Frame_Partial.h"
#include "GridViewItemDataAutomationPeer_Partial.h"
#include "GridViewItemPresenter_Partial.h"
#include "GroupItem_Partial.h"
#include "InlineCollection_Partial.h"
#include "ItemsStackPanel_Partial.h"
#include "ItemsWrapGrid_Partial.h"
#include "ListBoxAutomationPeer_Partial.h"
#include "ListViewBaseAutomationPeer_Partial.h"
#include "ListViewBaseHeaderItem_Partial.h"
#include "ListViewItemDataAutomationPeer_Partial.h"
#include "ListViewItemPresenter_Partial.h"
#include "MenuFlyoutItem_Partial.h"
#include "MenuFlyoutPresenter_Partial.h"
#include "MenuFlyoutSeparator.g.h"
#include "MenuFlyoutSubItem_Partial.h"
#include "OrientedVirtualizingPanel_Partial.h"
#include "Page_Partial.h"
#include "PopupRoot_Partial.h"
#include "PrintRoot.g.h"
#include "RadioButtonAutomationPeer_Partial.h"
#include "ScrollBar_Partial.h"
#include "ScrollContentControl.g.h"
#include "SeekSliderAutomationPeer_Partial.h"
#include "Selector_Partial.h"
#include "SelectorItem_Partial.h"
#include "Slider_Partial.h"
#include "SwapChainBackgroundPanel_Partial.h"
#include "SwapChainPanel_Partial.h"
#include "TextSelectionGripper.g.h"
#include "ToolTip_Partial.h"
#include "TransitionRoot.g.h"
#include "WindowChrome_Partial.h"
#include "Button_Partial.h"
#include "ComboBox_Partial.h"
#include "ComboBoxItem_Partial.h"
#include "CommandBar_Partial.h"
#include "FlipView_Partial.h"
#include "FlipViewItem_Partial.h"
#include "GridViewAutomationPeer_Partial.h"
#include "GridViewHeaderItem_Partial.h"
#include "HyperlinkButton_Partial.h"
#include "ListBox_Partial.h"
#include "ListBoxItem_Partial.h"
#include "ListViewAutomationPeer_Partial.h"
#include "ListViewBase_Partial.h"
#include "ListViewBaseItem_Partial.h"
#include "ListViewHeaderItem_Partial.h"
#include "RepeatButton_Partial.h"
#include "ScrollViewer_Partial.h"
#include "ToggleButton_Partial.h"
#include "ToggleMenuFlyoutItem_Partial.h"
#include "VirtualizingStackPanel_Partial.h"
#include "WrapGrid_Partial.h"
#include "AppBarButton_Partial.h"
#include "AppBarToggleButton_Partial.h"
#include "CheckBox_Partial.h"
#include "GridView_Partial.h"
#include "GridViewItem_Partial.h"
#include "ListView_Partial.h"
#include "ListViewItem_Partial.h"
#include "RadioButton_Partial.h"
#include "RootScrollViewer_Partial.h"

// Type activation information.
extern const MetaDataTypeActivation c_aTypeActivations[KnownTypeCount] =
{
    // UnknownType
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Collections.IObservableVector`1[Microsoft.UI.Xaml.Controls.GroupStyle]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Collections.IVector`1[Windows.Foundation.Float]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Collections.IVector`1[Microsoft.UI.Xaml.Navigation.PageStackEntry]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Collections.IVector`1[Windows.Foundation.DateTime]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Collections.IVectorView`1[Microsoft.UI.Xaml.Data.ItemIndexRange]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Byte
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Char16
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.DateTime
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Guid
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Interop.IBindableIterable
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Interop.IBindableIterator
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Interop.IBindableObservableVector
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Interop.IBindableVector
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Interop.IBindableVectorView
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.ICollectionView
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.ICommand
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.IDataTemplateComponent
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.IDataTemplateExtension
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.IElementFactory
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Media.Playback.IMediaPlaybackSource
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Int16
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Int64
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Graphics.Printing.IPrintDocumentSource
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.IProvideValueTarget
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.IRootObjectProvider
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.IScrollAnchorProvider
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ISemanticZoomInformation
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Text.ITextDocument
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.IUriContext
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.IValueConverter
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.IXamlServiceProvider
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.IXamlTypeResolver
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Numerics.Matrix3x2
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Numerics.Matrix4x4
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Object
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Numerics.Quaternion
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Float
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.UI.Xaml.Interop.TypeName
    {
        &OnCoreCreateTypeName, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.UInt16
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.UInt32
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.UInt64
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Numerics.Vector2
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Numerics.Vector3
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Colors
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.DataTemplateSelector
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.DependencyObject
    {
        &OnCoreCreateDependencyObject, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DependencyObject>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Hosting.ElementCompositionPreview
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.EventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.EventHandlerStub
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.GroupStyleCollection
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.GroupStyleSelector
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Input.InputCursor
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.InputValidationContext
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.InteractionBase
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ItemContainerGenerator
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ListViewPersistenceHelper
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.MarkupExtension
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Media.Playback.MediaPlayer
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControlsHelper
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.ParserServiceProvider
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.StyleSelector
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.TextOptions
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.Typography
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Uri
    {
        &OnCoreCreateUri, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.XamlBindingHelper
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.XamlMarkupHelper
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.XamlRenderingBackgroundTask
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Printing.AddPagesEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarButtonTemplateSettings
    {
        &OnCoreCreateAppBarButtonTemplateSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AppBarButtonTemplateSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings
    {
        &OnCoreCreateAppBarTemplateSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AppBarTemplateSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarToggleButtonTemplateSettings
    {
        &OnCoreCreateAppBarToggleButtonTemplateSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AppBarToggleButtonTemplateSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Application
    {
        &OnCoreCreateApplication, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ApplicationBarService
    {
        &OnCoreCreateApplicationBarService, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ApplicationBarService>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotation
    {
        &OnCoreCreateAutomationAnnotation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AutomationAnnotation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
    {
        &OnCoreCreateAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation
    {
        &OnCoreCreateAutomationPeerAnnotation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AutomationPeerAnnotation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.AutomationPeerEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs
    {
        &OnCoreCreateAutoSuggestBoxQuerySubmittedEventArgs, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AutoSuggestBoxQuerySubmittedEventArgs>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs
    {
        &OnCoreCreateAutoSuggestBoxSuggestionChosenEventArgs, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AutoSuggestBoxSuggestionChosenEventArgs>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs
    {
        &OnCoreCreateAutoSuggestBoxTextChangedEventArgs, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AutoSuggestBoxTextChangedEventArgs>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Printing.BeginPrintEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.BindingFailedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Boolean
    {
        &OnCoreCreateBoolean, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Brush
    {
        &OnCoreCreateBrush, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Brush>, // Framework constructor
    },
    // Microsoft.UI.Xaml.BrushTransition
    {
        &OnCoreCreateBrushTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::BrushTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.CacheMode
    {
        &OnCoreCreateCacheMode, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CacheMode>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings
    {
        &OnCoreCreateCalendarViewTemplateSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CalendarViewTemplateSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.CollectionView
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.CollectionViewGroup
    {
        &OnCoreCreateCollectionViewGroup, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CollectionViewGroup>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.CollectionViewSource
    {
        &OnCoreCreateCollectionViewSource, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CollectionViewSource>, // Framework constructor
    },
    // Windows.UI.Color
    {
        &OnCoreCreateColor, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame
    {
        &OnCoreCreateColorKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ColorKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinition
    {
        &OnCoreCreateColumnDefinition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ColumnDefinition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings
    {
        &OnCoreCreateComboBoxTemplateSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ComboBoxTemplateSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings
    {
        &OnCoreCreateCommandBarTemplateSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CommandBarTemplateSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CommandingContextChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation
    {
        &OnCoreCreateConnectedAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ConnectedAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService
    {
        &OnCoreCreateConnectedAnimationService, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ConnectedAnimationService>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogOpenedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.CornerRadius
    {
        &OnCoreCreateCornerRadius, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.CurrentChangingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.DatePickerValueChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.DebugSettings
    {
        &OnCoreCreateDebugSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DebugSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.DeferredElement
    {
        &OnCoreCreateDeferredElement, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DeferredElement>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.DependencyObjectWrapper
    {
        &OnCoreCreateDependencyObjectWrapper, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.DependencyPropertyProxy
    {
        &OnCoreCreateDependencyPropertyProxy, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DependencyPropertyProxy>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Deployment
    {
        &OnCoreCreateDeployment, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Double
    {
        &OnCoreCreateDouble, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame
    {
        &OnCoreCreateDoubleKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DoubleKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.DragItemsStartingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Printing.EndPrintEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Enumerated
    {
        &OnCoreCreateEnumerated, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.ErrorEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.ExternalObjectReference
    {
        &OnCoreCreateExternalObjectReference, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ExternalObjectReference>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase
    {
        &OnCoreCreateFlyoutBase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FlyoutBase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.FocusedElementRemovedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.FocusManagerGotFocusEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.FocusManagerLostFocusEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.FontFamily
    {
        &OnCoreCreateFontFamily, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FontFamily>, // Framework constructor
    },
    // Windows.UI.Text.FontWeight
    {
        &OnCoreCreateFontWeight, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.FrameworkTemplate
    {
        &OnCoreCreateFrameworkTemplate, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FrameworkTemplate>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.GeneralTransform
    {
        &OnCoreCreateGeneralTransform, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GeneralTransform>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Geometry
    {
        &OnCoreCreateGeometry, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Printing.GetPreviewPageEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.GradientStop
    {
        &OnCoreCreateGradientStop, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GradientStop>, // Framework constructor
    },
    // Microsoft.UI.Xaml.GridLength
    {
        &OnCoreCreateGridLength, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle
    {
        &OnCoreCreateGroupStyle, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GroupStyle>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.HasValidationErrorsChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.HWCompNode
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.IconSource
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.ImageSource
    {
        &OnCoreCreateImageSource, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.InertiaExpansionBehavior
    {
        &OnCoreCreateInertiaExpansionBehavior, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::InertiaExpansionBehavior>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.InertiaRotationBehavior
    {
        &OnCoreCreateInertiaRotationBehavior, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::InertiaRotationBehavior>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.InertiaTranslationBehavior
    {
        &OnCoreCreateInertiaTranslationBehavior, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::InertiaTranslationBehavior>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.InputScope
    {
        &OnCoreCreateInputScope, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::InputScope>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.InputScopeName
    {
        &OnCoreCreateInputScopeName, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::InputScopeName>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.InputValidationCommand
    {
        &OnCoreCreateInputValidationCommand, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::InputValidationCommand>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.InputValidationErrorEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Int32
    {
        &OnCoreCreateInt32, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple
    {
        &OnCoreCreateIRawElementProviderSimple, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.IsApiContractNotPresent
    {
        &OnCoreCreateIsApiContractNotPresent, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::IsApiContractNotPresent>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.IsApiContractPresent
    {
        &OnCoreCreateIsApiContractPresent, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::IsApiContractPresent>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.IsEnabledChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.IsPropertyNotPresent
    {
        &OnCoreCreateIsPropertyNotPresent, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::IsPropertyNotPresent>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.IsPropertyPresent
    {
        &OnCoreCreateIsPropertyPresent, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::IsPropertyPresent>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.IsTypeNotPresent
    {
        &OnCoreCreateIsTypeNotPresent, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::IsTypeNotPresent>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Markup.IsTypePresent
    {
        &OnCoreCreateIsTypePresent, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::IsTypePresent>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.KeyboardAccelerator
    {
        &OnCoreCreateKeyboardAccelerator, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::KeyboardAccelerator>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.KeySpline
    {
        &OnCoreCreateKeySpline, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::KeySpline>, // Framework constructor
    },
    // Microsoft.UI.Xaml.LayoutTransitionStaggerItem
    {
        &OnCoreCreateLayoutTransitionStaggerItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::LayoutTransitionStaggerItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.LengthConverter
    {
        &OnCoreCreateLengthConverter, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemTemplateSettings
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSurface
    {
        &OnCoreCreateLoadedImageSurface, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::LoadedImageSurface>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.ManipulationDelta
    {
        &OnCoreCreateManipulationDelta, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ManipulationDelta>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.ManipulationPivot
    {
        &OnCoreCreateManipulationPivot, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ManipulationPivot>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.ManipulationVelocities
    {
        &OnCoreCreateManipulationVelocities, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ManipulationVelocities>, // Framework constructor
    },
    // Microsoft.UI.Xaml.MarkupExtensionBase
    {
        &OnCoreCreateMarkupExtensionBase, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Matrix
    {
        &OnCoreCreateMatrix, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D
    {
        &OnCoreCreateMatrix3D, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.MediaPlaybackItemConverter
    {
        &OnCoreCreateMediaPlaybackItemConverter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MediaPlaybackItemConverter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutItemTemplateSettings
    {
        &OnCoreCreateMenuFlyoutItemTemplateSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MenuFlyoutItemTemplateSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutPresenterTemplateSettings
    {
        &OnCoreCreateMenuFlyoutPresenterTemplateSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MenuFlyoutPresenterTemplateSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Navigation.NavigationEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
    {
        &OnCoreCreateNavigationTransitionInfo, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::NavigationTransitionInfo>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.NullKeyedResource
    {
        &OnCoreCreateNullKeyedResource, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::NullKeyedResource>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame
    {
        &OnCoreCreateObjectKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ObjectKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Navigation.PageStackEntry
    {
        &OnCoreCreatePageStackEntry, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PageStackEntry>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Printing.PaginateEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurve
    {
        &OnCoreCreateParametricCurve, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ParametricCurve>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment
    {
        &OnCoreCreateParametricCurveSegment, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ParametricCurveSegment>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.PathFigure
    {
        &OnCoreCreatePathFigure, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PathFigure>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.PathSegment
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Point
    {
        &OnCoreCreatePoint, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.Pointer
    {
        &OnCoreCreatePointer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Pointer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrame
    {
        &OnCoreCreatePointerKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PointerKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrame
    {
        &OnCoreCreatePointKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PointKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Printing.PrintDocument
    {
        &OnCoreCreatePrintDocument, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PrintDocument>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Printing.PrintPageEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Projection
    {
        &OnCoreCreateProjection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Projection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.PropertyPath
    {
        &OnCoreCreatePropertyPath, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PropertyPath>, // Framework constructor
    },
    // Windows.Foundation.Rect
    {
        &OnCoreCreateRect, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.RenderedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.RenderingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.ResourceManagerRequestedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.RoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.RowDefinition
    {
        &OnCoreCreateRowDefinition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RowDefinition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.ScalarTransition
    {
        &OnCoreCreateScalarTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ScalarTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.SecondaryContentRelationship
    {
        &OnCoreCreateSecondaryContentRelationship, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SecondaryContentRelationship>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.SetterBase
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Shadow
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Size
    {
        &OnCoreCreateSize, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings
    {
        &OnCoreCreateSplitViewTemplateSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SplitViewTemplateSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.StaggerFunctionBase
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.StartupEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.StateTriggerBase
    {
        &OnCoreCreateStateTriggerBase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::StateTriggerBase>, // Framework constructor
    },
    // Windows.Foundation.String
    {
        &OnCoreCreateString, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Style
    {
        &OnCoreCreateStyle, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Style>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.SystemBackdrop
    {
        &OnCoreCreateSystemBackdrop, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SystemBackdrop>, // Framework constructor
    },
    // Microsoft.UI.Xaml.TargetPropertyPath
    {
        &OnCoreCreateTargetPropertyPath, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TargetPropertyPath>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.TemplateContent
    {
        &OnCoreCreateTemplateContent, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TemplateContent>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextAdapter
    {
        &OnCoreCreateTextAdapter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TextAdapter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TextControlPasteEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.TextElement
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighterBase
    {
        &OnCoreCreateTextHighlighterBase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TextHighlighterBase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.TextPointerWrapper
    {
        &OnCoreCreateTextPointerWrapper, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TextPointerWrapper>, // Framework constructor
    },
    // MS.Internal.Automation.TextProvider
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.TextRange
    {
        &OnCoreCreateTextRange, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextRangeAdapter
    {
        &OnCoreCreateTextRangeAdapter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TextRangeAdapter>, // Framework constructor
    },
    // MS.Internal.Automation.TextRangeProvider
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Thickness
    {
        &OnCoreCreateThickness, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline
    {
        &OnCoreCreateTimeline, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Timeline>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TimePickerValueChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.TimeSpan
    {
        &OnCoreCreateTimeSpan, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings
    {
        &OnCoreCreateToggleSwitchTemplateSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ToggleSwitchTemplateSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings
    {
        &OnCoreCreateToolTipTemplateSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ToolTipTemplateSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Media3D.Transform3D
    {
        &OnCoreCreateTransform3D, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Transform3D>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.Transition
    {
        &OnCoreCreateTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Transition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget
    {
        &OnCoreCreateTransitionTarget, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.TriggerAction
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.TriggerBase
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.UIElement
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.UnhandledExceptionEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Vector3Transition
    {
        &OnCoreCreateVector3Transition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Vector3Transition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.VisualState
    {
        &OnCoreCreateVisualState, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::VisualState>, // Framework constructor
    },
    // Microsoft.UI.Xaml.VisualStateChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.VisualStateGroup
    {
        &OnCoreCreateVisualStateGroup, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::VisualStateGroup>, // Framework constructor
    },
    // Microsoft.UI.Xaml.VisualStateManager
    {
        &OnCoreCreateVisualStateManager, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::VisualStateManager>, // Framework constructor
    },
    // Microsoft.UI.Xaml.VisualTransition
    {
        &OnCoreCreateVisualTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::VisualTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Window
    {
        &OnCoreCreateWindow, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Window>, // Framework constructor
    },
    // Microsoft.UI.Xaml.WindowCreatedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.XamlLight
    {
        &OnCoreCreateXamlLight, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::XamlLight>, // Framework constructor
    },
    // Microsoft.UI.Xaml.XamlResourceReferenceFailedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.XamlRootChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand
    {
        &OnCoreCreateXamlUICommand, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::XamlUICommand>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.UIElement]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.Transition]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.Timeline]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Input.Pointer]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.TriggerBase]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.DependencyObject]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.ResourceDictionary]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.SetterBase]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.XamlLight]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Input.KeyboardAccelerator]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Automation.Peers.AutomationPeer]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.TriggerAction]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.StateTriggerBase]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.VisualTransition]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.VisualState]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.VisualStateGroup]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.Storyboard]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Windows.Foundation.Double]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Windows.Foundation.Float]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Windows.Foundation.Point]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Brush]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Transform]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.PathSegment]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.PathFigure]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Geometry]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.GradientStop]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.PointKeyFrame]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Input.InputScopeName]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Documents.TextElement]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Documents.TextRange]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Documents.TextHighlighter]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.RowDefinition]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.ColumnDefinition]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.HubSection]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Internal.PointerKeyFrame]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Internal.ParametricCurveSegment]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Internal.ParametricCurve]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection`1[Microsoft.UI.Xaml.Automation.AutomationAnnotation]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.AdaptiveTrigger
    {
        &OnCoreCreateAdaptiveTrigger, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AdaptiveTrigger>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.AddDeleteThemeTransition
    {
        &OnCoreCreateAddDeleteThemeTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AddDeleteThemeTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.ArcSegment
    {
        &OnCoreCreateArcSegment, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ArcSegment>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.BackEase
    {
        &OnCoreCreateBackEase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::BackEase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.BeginStoryboard
    {
        &OnCoreCreateBeginStoryboard, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::BeginStoryboard>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.BezierSegment
    {
        &OnCoreCreateBezierSegment, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::BezierSegment>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.BindingBase
    {
        &OnCoreCreateBindingBase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::BindingBase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.BitmapCache
    {
        &OnCoreCreateBitmapCache, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::BitmapCache>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.BitmapIconSource
    {
        &OnCoreCreateBitmapIconSource, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::BitmapIconSource>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapSource
    {
        &OnCoreCreateBitmapSource, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::BitmapSource>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.Block
    {
        &OnCoreCreateBlock, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Block>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.BounceEase
    {
        &OnCoreCreateBounceEase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::BounceEase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewHeaderAutomationPeer
    {
        &OnCoreCreateCalendarViewHeaderAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CalendarViewHeaderAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.CircleEase
    {
        &OnCoreCreateCircleEase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CircleEase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation
    {
        &OnCoreCreateColorAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ColorAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames
    {
        &OnCoreCreateColorAnimationUsingKeyFrames, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ColorAnimationUsingKeyFrames>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D
    {
        &OnCoreCreateCompositeTransform3D, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CompositeTransform3D>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ContentDialogOpenCloseThemeTransition
    {
        &OnCoreCreateContentDialogOpenCloseThemeTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ContentDialogOpenCloseThemeTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition
    {
        &OnCoreCreateContentThemeTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ContentThemeTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ContextMenuEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.ContextRequestedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ControlTemplate
    {
        &OnCoreCreateControlTemplate, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ControlTemplate>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.CubicEase
    {
        &OnCoreCreateCubicEase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CubicEase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.CustomResource
    {
        &OnCoreCreateCustomResource, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.DataTemplate
    {
        &OnCoreCreateDataTemplate, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DataTemplate>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscreteColorKeyFrame
    {
        &OnCoreCreateDiscreteColorKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DiscreteColorKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscreteDoubleKeyFrame
    {
        &OnCoreCreateDiscreteDoubleKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DiscreteDoubleKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscreteObjectKeyFrame
    {
        &OnCoreCreateDiscreteObjectKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DiscreteObjectKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DiscretePointKeyFrame
    {
        &OnCoreCreateDiscretePointKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DiscretePointKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.DispatcherTimer
    {
        &OnCoreCreateDispatcherTimer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DispatcherTimer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation
    {
        &OnCoreCreateDoubleAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DoubleAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames
    {
        &OnCoreCreateDoubleAnimationUsingKeyFrames, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DoubleAnimationUsingKeyFrames>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.DoubleTappedRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.DragEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.DragStartingEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.DropCompletedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Duration
    {
        &OnCoreCreateDuration, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DynamicTimeline
    {
        &OnCoreCreateDynamicTimeline, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame
    {
        &OnCoreCreateEasingColorKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::EasingColorKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame
    {
        &OnCoreCreateEasingDoubleKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::EasingDoubleKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame
    {
        &OnCoreCreateEasingPointKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::EasingPointKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.EdgeUIThemeTransition
    {
        &OnCoreCreateEdgeUIThemeTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::EdgeUIThemeTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ElasticEase
    {
        &OnCoreCreateElasticEase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ElasticEase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.EllipseGeometry
    {
        &OnCoreCreateEllipseGeometry, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::EllipseGeometry>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition
    {
        &OnCoreCreateEntranceThemeTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::EntranceThemeTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.EventTrigger
    {
        &OnCoreCreateEventTrigger, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::EventTrigger>, // Framework constructor
    },
    // Microsoft.UI.Xaml.ExceptionRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ExponentialEase
    {
        &OnCoreCreateExponentialEase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ExponentialEase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Flyout
    {
        &OnCoreCreateFlyout, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Flyout>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.FocusDisengagedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource
    {
        &OnCoreCreateFontIconSource, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FontIconSource>, // Framework constructor
    },
    // Microsoft.UI.Xaml.FrameworkElement
    {
        &OnCoreCreateFrameworkElement, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FrameworkElement>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
    {
        &OnCoreCreateFrameworkElementAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FrameworkElementAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.FrameworkElementEx
    {
        &OnCoreCreateFrameworkElementEx, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FrameworkElementEx>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.GeometryGroup
    {
        &OnCoreCreateGeometryGroup, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GeometryGroup>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.GettingFocusEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.GradientBrush
    {
        &OnCoreCreateGradientBrush, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GradientBrush>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings
    {
        &OnCoreCreateGridViewItemTemplateSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GridViewItemTemplateSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.GroupedDataCollectionView
    {
        &OnCoreCreateGroupedDataCollectionView, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GroupedDataCollectionView>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.HWCompLeafNode
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.HWCompTreeNode
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.HyperlinkAutomationPeer
    {
        &OnCoreCreateHyperlinkAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::HyperlinkAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.Inline
    {
        &OnCoreCreateInline, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Inline>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.InputPaneThemeTransition
    {
        &OnCoreCreateInputPaneThemeTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::InputPaneThemeTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.InternalTransform
    {
        &OnCoreCreateInternalTransform, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::InternalTransform>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer
    {
        &OnCoreCreateItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ItemClickEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ItemsPanelTemplate
    {
        &OnCoreCreateItemsPanelTemplate, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ItemsPanelTemplate>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.KeyRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.KeyTime
    {
        &OnCoreCreateKeyTime, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.LayoutTransitionElement
    {
        nullptr, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::LayoutTransitionElement>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.LinearColorKeyFrame
    {
        &OnCoreCreateLinearColorKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::LinearColorKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.LinearDoubleKeyFrame
    {
        &OnCoreCreateLinearDoubleKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::LinearDoubleKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.LinearPointKeyFrame
    {
        &OnCoreCreateLinearPointKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::LinearPointKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.LineGeometry
    {
        &OnCoreCreateLineGeometry, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::LineGeometry>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.LineSegment
    {
        &OnCoreCreateLineSegment, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::LineSegment>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings
    {
        &OnCoreCreateListViewItemTemplateSettings, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewItemTemplateSettings>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.LosingFocusEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.ManipulationStartingRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Matrix3DProjection
    {
        &OnCoreCreateMatrix3DProjection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Matrix3DProjection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.MediaSwapChainElement
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyout
    {
        &OnCoreCreateMenuFlyout, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MenuFlyout>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.MenuPopupThemeTransition
    {
        &OnCoreCreateMenuPopupThemeTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MenuPopupThemeTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.NullExtension
    {
        &OnCoreCreateNullExtension, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames
    {
        &OnCoreCreateObjectAnimationUsingKeyFrames, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ObjectAnimationUsingKeyFrames>, // Framework constructor
    },
    // Microsoft.UI.Xaml.PanelEx
    {
        &OnCoreCreatePanelEx, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PanelEx>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.PaneThemeTransition
    {
        &OnCoreCreatePaneThemeTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PaneThemeTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ParallelTimeline
    {
        &OnCoreCreateParallelTimeline, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.PathGeometry
    {
        &OnCoreCreatePathGeometry, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PathGeometry>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.PathIconSource
    {
        &OnCoreCreatePathIconSource, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PathIconSource>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D
    {
        &OnCoreCreatePerspectiveTransform3D, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PerspectiveTransform3D>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.PickerFlyoutThemeTransition
    {
        &OnCoreCreatePickerFlyoutThemeTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PickerFlyoutThemeTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection
    {
        &OnCoreCreatePlaneProjection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PlaneProjection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation
    {
        &OnCoreCreatePointAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PointAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames
    {
        &OnCoreCreatePointAnimationUsingKeyFrames, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PointAnimationUsingKeyFrames>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames
    {
        &OnCoreCreatePointerAnimationUsingKeyFrames, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PointerAnimationUsingKeyFrames>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.PointerRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.PolyBezierSegment
    {
        &OnCoreCreatePolyBezierSegment, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PolyBezierSegment>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.PolyLineSegment
    {
        &OnCoreCreatePolyLineSegment, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PolyLineSegment>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment
    {
        &OnCoreCreatePolyQuadraticBezierSegment, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PolyQuadraticBezierSegment>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition
    {
        &OnCoreCreatePopupThemeTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PopupThemeTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.PowerEase
    {
        &OnCoreCreatePowerEase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PowerEase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.PVLStaggerFunction
    {
        &OnCoreCreatePVLStaggerFunction, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PVLStaggerFunction>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.QuadraticBezierSegment
    {
        &OnCoreCreateQuadraticBezierSegment, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::QuadraticBezierSegment>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.QuadraticEase
    {
        &OnCoreCreateQuadraticEase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::QuadraticEase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.QuarticEase
    {
        &OnCoreCreateQuarticEase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::QuarticEase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.QuinticEase
    {
        &OnCoreCreateQuinticEase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::QuinticEase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.RectangleGeometry
    {
        &OnCoreCreateRectangleGeometry, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RectangleGeometry>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.RelativeSource
    {
        &OnCoreCreateRelativeSource, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RelativeSource>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap
    {
        &OnCoreCreateRenderTargetBitmap, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RenderTargetBitmap>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ReorderThemeTransition
    {
        &OnCoreCreateReorderThemeTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ReorderThemeTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeTransition
    {
        &OnCoreCreateRepositionThemeTransition, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RepositionThemeTransition>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.RightTappedRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SelectionChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Setter
    {
        &OnCoreCreateSetter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Setter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.SineEase
    {
        &OnCoreCreateSineEase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SineEase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.SizeChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource
    {
        &OnCoreCreateSoftwareBitmapSource, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SoftwareBitmapSource>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush
    {
        &OnCoreCreateSolidColorBrush, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SolidColorBrush>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame
    {
        &OnCoreCreateSplineColorKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SplineColorKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame
    {
        &OnCoreCreateSplineDoubleKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SplineDoubleKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame
    {
        &OnCoreCreateSplinePointKeyFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SplinePointKeyFrame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.StandardUICommand
    {
        &OnCoreCreateStandardUICommand, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::StandardUICommand>, // Framework constructor
    },
    // Microsoft.UI.Xaml.StateTrigger
    {
        &OnCoreCreateStateTrigger, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::StateTrigger>, // Framework constructor
    },
    // Microsoft.UI.Xaml.StaticResource
    {
        &OnCoreCreateStaticResource, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.SurfaceImageSource
    {
        &OnCoreCreateSurfaceImageSource, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SurfaceImageSource>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSource
    {
        &OnCoreCreateSvgImageSource, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SvgImageSource>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.SwapChainElement
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SymbolIconSource
    {
        &OnCoreCreateSymbolIconSource, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SymbolIconSource>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.TappedRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.TemplateBinding
    {
        &OnCoreCreateTemplateBinding, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TextChangedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter
    {
        &OnCoreCreateTextHighlighter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TextHighlighter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.ThemeResource
    {
        &OnCoreCreateThemeResource, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.ThemeShadow
    {
        &OnCoreCreateThemeShadow, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ThemeShadow>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.TileBrush
    {
        &OnCoreCreateTileBrush, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TileBrush>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Transform
    {
        &OnCoreCreateTransform, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.VectorCollectionView
    {
        &OnCoreCreateVectorCollectionView, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::VectorCollectionView>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.VectorViewCollectionView
    {
        &OnCoreCreateVectorViewCollectionView, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::VectorViewCollectionView>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
    {
        &OnCoreCreateXamlCompositionBrushBase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::XamlCompositionBrushBase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Windows.Foundation.Object]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Microsoft.UI.Xaml.DependencyObject]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.InputValidationError]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Collections.ObservablePresentationFrameworkCollection`1[Microsoft.UI.Xaml.Controls.ICommandBarElement]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer
    {
        &OnCoreCreateAppBarAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AppBarAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarLightDismissAutomationPeer
    {
        &OnCoreCreateAppBarLightDismissAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AppBarLightDismissAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotationCollection
    {
        &OnCoreCreateAutomationAnnotationCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AutomationAnnotationCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotationCollection
    {
        &OnCoreCreateAutomationPeerAnnotationCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AutomationPeerAnnotationCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerCollection
    {
        &OnCoreCreateAutomationPeerCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AutomationPeerCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer
    {
        &OnCoreCreateAutoSuggestBoxAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AutoSuggestBoxAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.Binding
    {
        &OnCoreCreateBinding, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Binding>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage
    {
        &OnCoreCreateBitmapImage, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::BitmapImage>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Border
    {
        &OnCoreCreateBorder, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Border>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.BrushCollection
    {
        &OnCoreCreateBrushCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::BrushCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
    {
        &OnCoreCreateButtonBaseAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ButtonBaseAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer
    {
        &OnCoreCreateCalendarDatePickerAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CalendarDatePickerAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewAutomationPeer
    {
        &OnCoreCreateCalendarViewAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CalendarViewAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewBaseItemAutomationPeer
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection
    {
        &OnCoreCreateColorKeyFrameCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ColorKeyFrameCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection
    {
        &OnCoreCreateColumnDefinitionCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ColumnDefinitionCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer
    {
        &OnCoreCreateComboBoxItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ComboBoxItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxLightDismissAutomationPeer
    {
        &OnCoreCreateComboBoxLightDismissAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ComboBoxLightDismissAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform
    {
        &OnCoreCreateCompositeTransform, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CompositeTransform>, // Framework constructor
    },
    // Microsoft.UI.Xaml.ConnectedAnimationRoot
    {
        &OnCoreCreateConnectedAnimationRoot, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ConnectedAnimationRoot>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter
    {
        &OnCoreCreateContentPresenter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ContentPresenter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Control
    {
        &OnCoreCreateControl, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Control>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer
    {
        &OnCoreCreateDatePickerAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DatePickerAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.DisplayMemberTemplate
    {
        &OnCoreCreateDisplayMemberTemplate, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DisplayMemberTemplate>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.DoubleCollection
    {
        &OnCoreCreateDoubleCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DoubleCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection
    {
        &OnCoreCreateDoubleKeyFrameCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DoubleKeyFrameCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DragItemThemeAnimation
    {
        &OnCoreCreateDragItemThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DragItemThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation
    {
        &OnCoreCreateDragOverThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DragOverThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation
    {
        &OnCoreCreateDrillInThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DrillInThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation
    {
        &OnCoreCreateDrillOutThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DrillOutThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation
    {
        &OnCoreCreateDropTargetItemThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DropTargetItemThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.FaceplateContentPresenterAutomationPeer
    {
        &OnCoreCreateFaceplateContentPresenterAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FaceplateContentPresenterAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.FadeInThemeAnimation
    {
        &OnCoreCreateFadeInThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FadeInThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.FadeOutThemeAnimation
    {
        &OnCoreCreateFadeOutThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FadeOutThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer
    {
        &OnCoreCreateFlipViewItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FlipViewItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.FloatCollection
    {
        &OnCoreCreateFloatCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FloatCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer
    {
        &OnCoreCreateFlyoutPresenterAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FlyoutPresenterAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.FullWindowMediaRootAutomationPeer
    {
        &OnCoreCreateFullWindowMediaRootAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FullWindowMediaRootAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.GeometryCollection
    {
        &OnCoreCreateGeometryCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GeometryCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.Glyphs
    {
        &OnCoreCreateGlyphs, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Glyphs>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.GradientStopCollection
    {
        &OnCoreCreateGradientStopCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GradientStopCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer
    {
        &OnCoreCreateGroupItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GroupItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer
    {
        &OnCoreCreateHubAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::HubAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer
    {
        &OnCoreCreateHubSectionAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::HubSectionAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.HubSectionCollection
    {
        &OnCoreCreateHubSectionCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::HubSectionCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.HWCompMediaNode
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.HWCompRenderDataNode
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.HWCompSwapChainNode
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.HWRedirectedCompTreeNodeWinRT
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.IconElement
    {
        &OnCoreCreateIconElement, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Image
    {
        &OnCoreCreateImage, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Image>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer
    {
        &OnCoreCreateImageAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ImageAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.ImageBrush
    {
        &OnCoreCreateImageBrush, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ImageBrush>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.InlineUIContainer
    {
        &OnCoreCreateInlineUIContainer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::InlineUIContainer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.InputScopeNameCollection
    {
        &OnCoreCreateInputScopeNameCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::InputScopeNameCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
    {
        &OnCoreCreateItemsControlAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ItemsControlAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter
    {
        &OnCoreCreateItemsPresenter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ItemsPresenter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.IterableCollectionView
    {
        &OnCoreCreateIterableCollectionView, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::IterableCollectionView>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorCollection
    {
        &OnCoreCreateKeyboardAcceleratorCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::KeyboardAcceleratorCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.LandmarkTargetAutomationPeer
    {
        &OnCoreCreateLandmarkTargetAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::LandmarkTargetAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush
    {
        &OnCoreCreateLinearGradientBrush, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::LinearGradientBrush>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.LineBreak
    {
        &OnCoreCreateLineBreak, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::LineBreak>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer
    {
        &OnCoreCreateListBoxItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListBoxItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer
    {
        &OnCoreCreateListViewBaseHeaderItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewBaseHeaderItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseItemAutomationPeer
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemSecondaryChrome
    {
        &OnCoreCreateListViewBaseItemSecondaryChrome, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewBaseItemSecondaryChrome>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.MatrixTransform
    {
        &OnCoreCreateMatrixTransform, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MatrixTransform>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.MediaBase
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.MediaFailedRoutedEventArgs
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer
    {
        &OnCoreCreateMediaPlayerElementAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MediaPlayerElementAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerPresenter
    {
        &OnCoreCreateMediaPlayerPresenter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MediaPlayerPresenter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer
    {
        &OnCoreCreateMediaTransportControlsAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MediaTransportControlsAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer
    {
        &OnCoreCreateMenuFlyoutItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MenuFlyoutItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItemBaseCollection
    {
        &OnCoreCreateMenuFlyoutItemBaseCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MenuFlyoutItemBaseCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutSubItemAutomationPeer
    {
        &OnCoreCreateMenuFlyoutSubItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MenuFlyoutSubItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.NamedContainerAutomationPeer
    {
        &OnCoreCreateNamedContainerAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::NamedContainerAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection
    {
        &OnCoreCreateObjectKeyFrameCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ObjectKeyFrameCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Panel
    {
        &OnCoreCreatePanel, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Panel>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.Paragraph
    {
        &OnCoreCreateParagraph, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Paragraph>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveCollection
    {
        &OnCoreCreateParametricCurveCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ParametricCurveCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegmentCollection
    {
        &OnCoreCreateParametricCurveSegmentCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ParametricCurveSegmentCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer
    {
        &OnCoreCreatePasswordBoxAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PasswordBoxAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.PathFigureCollection
    {
        &OnCoreCreatePathFigureCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PathFigureCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.PathSegmentCollection
    {
        &OnCoreCreatePathSegmentCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PathSegmentCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.PointCollection
    {
        &OnCoreCreatePointCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PointCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.PointerCollection
    {
        &OnCoreCreatePointerCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PointerCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.PointerDownThemeAnimation
    {
        &OnCoreCreatePointerDownThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PointerDownThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrameCollection
    {
        &OnCoreCreatePointerKeyFrameCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PointerKeyFrameCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.PointerUpThemeAnimation
    {
        &OnCoreCreatePointerUpThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PointerUpThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection
    {
        &OnCoreCreatePointKeyFrameCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PointKeyFrameCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation
    {
        &OnCoreCreatePopInThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PopInThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.PopOutThemeAnimation
    {
        &OnCoreCreatePopOutThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PopOutThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup
    {
        &OnCoreCreatePopup, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Popup>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.PopupAutomationPeer
    {
        &OnCoreCreatePopupAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PopupAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.PopupRootAutomationPeer
    {
        &OnCoreCreatePopupRootAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PopupRootAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer
    {
        &OnCoreCreateRangeBaseAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RangeBaseAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.RepeatBehavior
    {
        &OnCoreCreateRepeatBehavior, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation
    {
        &OnCoreCreateRepositionThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RepositionThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.ResourceDictionary
    {
        &OnCoreCreateResourceDictionary, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ResourceDictionary>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.ResourceDictionaryCollection
    {
        &OnCoreCreateResourceDictionaryCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ResourceDictionaryCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer
    {
        &OnCoreCreateRichEditBoxAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RichEditBoxAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock
    {
        &OnCoreCreateRichTextBlock, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RichTextBlock>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer
    {
        &OnCoreCreateRichTextBlockAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RichTextBlockAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow
    {
        &OnCoreCreateRichTextBlockOverflow, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RichTextBlockOverflow>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer
    {
        &OnCoreCreateRichTextBlockOverflowAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RichTextBlockOverflowAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.RotateTransform
    {
        &OnCoreCreateRotateTransform, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RotateTransform>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.RowDefinitionCollection
    {
        &OnCoreCreateRowDefinitionCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RowDefinitionCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.Run
    {
        &OnCoreCreateRun, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Run>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform
    {
        &OnCoreCreateScaleTransform, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ScaleTransform>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer
    {
        &OnCoreCreateScrollViewerAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ScrollViewerAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer
    {
        &OnCoreCreateSelectorItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SelectorItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer
    {
        &OnCoreCreateSemanticZoomAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SemanticZoomAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.SetterBaseCollection
    {
        &OnCoreCreateSetterBaseCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SetterBaseCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Shapes.Shape
    {
        &OnCoreCreateShape, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Shape>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.SkewTransform
    {
        &OnCoreCreateSkewTransform, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SkewTransform>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.Span
    {
        &OnCoreCreateSpan, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Span>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation
    {
        &OnCoreCreateSplitCloseThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SplitCloseThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation
    {
        &OnCoreCreateSplitOpenThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SplitOpenThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.SplitViewLightDismissAutomationPeer
    {
        &OnCoreCreateSplitViewLightDismissAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SplitViewLightDismissAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.SplitViewPaneAutomationPeer
    {
        &OnCoreCreateSplitViewPaneAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SplitViewPaneAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.StateTriggerCollection
    {
        &OnCoreCreateStateTriggerCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::StateTriggerCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard
    {
        &OnCoreCreateStoryboard, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Storyboard>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.StoryboardCollection
    {
        &OnCoreCreateStoryboardCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::StoryboardCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation
    {
        &OnCoreCreateSwipeBackThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SwipeBackThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation
    {
        &OnCoreCreateSwipeHintThemeAnimation, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SwipeHintThemeAnimation>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TextBlock
    {
        &OnCoreCreateTextBlock, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TextBlock>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer
    {
        &OnCoreCreateTextBlockAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TextBlockAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer
    {
        &OnCoreCreateTextBoxAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TextBoxAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextBoxBaseAutomationPeer
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.TextBoxView
    {
        &OnCoreCreateTextBoxView, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TextBoxView>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighterCollection
    {
        &OnCoreCreateTextHighlighterCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TextHighlighterCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.TextRangeCollection
    {
        &OnCoreCreateTextRangeCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TextRangeCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ThemeAnimationBase
    {
        &OnCoreCreateThemeAnimationBase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ThemeAnimationBase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer
    {
        &OnCoreCreateThumbAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ThumbAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.TimelineCollection
    {
        &OnCoreCreateTimelineCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TimelineCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer
    {
        &OnCoreCreateTimePickerAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TimePickerAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer
    {
        &OnCoreCreateToggleMenuFlyoutItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ToggleMenuFlyoutItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer
    {
        &OnCoreCreateToggleSwitchAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ToggleSwitchAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToolTipAutomationPeer
    {
        &OnCoreCreateToolTipAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ToolTipAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.TransformCollection
    {
        &OnCoreCreateTransformCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TransformCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.TransformGroup
    {
        &OnCoreCreateTransformGroup, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TransformGroup>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionCollection
    {
        &OnCoreCreateTransitionCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TransitionCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.TranslateTransform
    {
        &OnCoreCreateTranslateTransform, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TranslateTransform>, // Framework constructor
    },
    // Microsoft.UI.Xaml.TriggerActionCollection
    {
        &OnCoreCreateTriggerActionCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TriggerActionCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.TriggerCollection
    {
        &OnCoreCreateTriggerCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TriggerCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.UIElementCollection
    {
        &OnCoreCreateUIElementCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::UIElementCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.UIElementWeakCollection
    {
        &OnCoreCreateUIElementWeakCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::UIElementWeakCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Viewbox
    {
        &OnCoreCreateViewbox, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Viewbox>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource
    {
        &OnCoreCreateVirtualSurfaceImageSource, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::VirtualSurfaceImageSource>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.VisualStateCollection
    {
        &OnCoreCreateVisualStateCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::VisualStateCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection
    {
        &OnCoreCreateVisualStateGroupCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::VisualStateGroupCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.VisualTransitionCollection
    {
        &OnCoreCreateVisualTransitionCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::VisualTransitionCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap
    {
        &OnCoreCreateWriteableBitmap, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::WriteableBitmap>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.XamlLightCollection
    {
        &OnCoreCreateXamlLightCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::XamlLightCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection`1[Microsoft.UI.Xaml.Documents.Inline]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection`1[Microsoft.UI.Xaml.Documents.Block]
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.AppBarSeparator
    {
        &OnCoreCreateAppBarSeparator, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AppBarSeparator>, // Framework constructor
    },
    // Microsoft.UI.Xaml.BasedOnSetterCollection
    {
        &OnCoreCreateBasedOnSetterCollection, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.BitmapIcon
    {
        &OnCoreCreateBitmapIcon, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::BitmapIcon>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.Bold
    {
        &OnCoreCreateBold, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Bold>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer
    {
        &OnCoreCreateButtonAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ButtonAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker
    {
        &OnCoreCreateCalendarDatePicker, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CalendarDatePicker>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarScrollViewerAutomationPeer
    {
        &OnCoreCreateCalendarScrollViewerAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CalendarScrollViewerAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CalendarView
    {
        &OnCoreCreateCalendarView, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CalendarView>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewBaseItem
    {
        &OnCoreCreateCalendarViewBaseItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CalendarViewBaseItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewDayItemAutomationPeer
    {
        &OnCoreCreateCalendarViewDayItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CalendarViewDayItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.CalendarViewItemAutomationPeer
    {
        &OnCoreCreateCalendarViewItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CalendarViewItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Canvas
    {
        &OnCoreCreateCanvas, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Canvas>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.CaretBrowsingCaret
    {
        &OnCoreCreateCaretBrowsingCaret, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.ColorPaletteResources
    {
        &OnCoreCreateColorPaletteResources, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ColorPaletteResources>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer
    {
        &OnCoreCreateComboBoxItemDataAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ComboBoxItemDataAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CommandBarElementCollection
    {
        &OnCoreCreateCommandBarElementCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CommandBarElementCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CommandingContainer
    {
        &OnCoreCreateCommandingContainer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CommandingContainer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ContentControl
    {
        &OnCoreCreateContentControl, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ContentControl>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.DatePicker
    {
        &OnCoreCreateDatePicker, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DatePicker>, // Framework constructor
    },
    // Microsoft.UI.Xaml.DependencyObjectCollection
    {
        &OnCoreCreateDependencyObjectCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::DependencyObjectCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Shapes.Ellipse
    {
        &OnCoreCreateEllipse, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Ellipse>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer
    {
        &OnCoreCreateFlipViewItemDataAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FlipViewItemDataAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.FontIcon
    {
        &OnCoreCreateFontIcon, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FontIcon>, // Framework constructor
    },
    // Microsoft.UI.Xaml.FullWindowMediaRoot
    {
        &OnCoreCreateFullWindowMediaRoot, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FullWindowMediaRoot>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Grid
    {
        &OnCoreCreateGrid, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Grid>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer
    {
        &OnCoreCreateGridViewHeaderItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GridViewHeaderItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer
    {
        &OnCoreCreateGridViewItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GridViewItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Hub
    {
        &OnCoreCreateHub, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Hub>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.HubSection
    {
        &OnCoreCreateHubSection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::HubSection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.HWWindowedPopupCompTreeNodeWinRT
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink
    {
        &OnCoreCreateHyperlink, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Hyperlink>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer
    {
        &OnCoreCreateHyperlinkButtonAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::HyperlinkButtonAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.IconSourceElement
    {
        &OnCoreCreateIconSourceElement, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::IconSourceElement>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.Italic
    {
        &OnCoreCreateItalic, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Italic>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ItemCollection
    {
        &OnCoreCreateItemCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ItemCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl
    {
        &OnCoreCreateItemsControl, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ItemsControl>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Shapes.Line
    {
        &OnCoreCreateLine, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Line>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer
    {
        &OnCoreCreateListBoxItemDataAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListBoxItemDataAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseItemDataAutomationPeer
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewBaseItemPresenter
    {
        &OnCoreCreateListViewBaseItemPresenter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewBaseItemPresenter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer
    {
        &OnCoreCreateListViewHeaderItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewHeaderItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer
    {
        &OnCoreCreateListViewItemAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewItemAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement
    {
        &OnCoreCreateMediaPlayerElement, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MediaPlayerElement>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls
    {
        &OnCoreCreateMediaTransportControls, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MediaTransportControls>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase
    {
        &OnCoreCreateMenuFlyoutItemBase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MenuFlyoutItemBase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer
    {
        &OnCoreCreateMenuFlyoutPresenterAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MenuFlyoutPresenterAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ModernCollectionBasePanel
    {
        &OnCoreCreateModernCollectionBasePanel, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ModernCollectionBasePanel>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox
    {
        &OnCoreCreatePasswordBox, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PasswordBox>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Shapes.Path
    {
        &OnCoreCreatePath, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Path>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.PathIcon
    {
        &OnCoreCreatePathIcon, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PathIcon>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Shapes.Polygon
    {
        &OnCoreCreatePolygon, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Polygon>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Shapes.Polyline
    {
        &OnCoreCreatePolyline, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Polyline>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase
    {
        &OnCoreCreateRangeBase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RangeBase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Shapes.Rectangle
    {
        &OnCoreCreateRectangle, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Rectangle>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel
    {
        &OnCoreCreateRelativePanel, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RelativePanel>, // Framework constructor
    },
    // Microsoft.UI.Xaml.RenderTargetBitmapRoot
    {
        &OnCoreCreateRenderTargetBitmapRoot, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RenderTargetBitmapRoot>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer
    {
        &OnCoreCreateRepeatButtonAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RepeatButtonAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox
    {
        &OnCoreCreateRichEditBox, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RichEditBox>, // Framework constructor
    },
    // Microsoft.UI.Xaml.RootVisual
    {
        &OnCoreCreateRootVisual, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer
    {
        &OnCoreCreateScrollBarAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ScrollBarAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ScrollContentPresenter
    {
        &OnCoreCreateScrollContentPresenter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ScrollContentPresenter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer
    {
        &OnCoreCreateSelectorAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SelectorAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom
    {
        &OnCoreCreateSemanticZoom, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SemanticZoom>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer
    {
        &OnCoreCreateSliderAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SliderAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SplitView
    {
        &OnCoreCreateSplitView, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SplitView>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.StackPanel
    {
        &OnCoreCreateStackPanel, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::StackPanel>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SymbolIcon
    {
        &OnCoreCreateSymbolIcon, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SymbolIcon>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TextBox
    {
        &OnCoreCreateTextBox, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TextBox>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.TextBoxBase
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Thumb
    {
        &OnCoreCreateThumb, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Thumb>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.TickBar
    {
        &OnCoreCreateTickBar, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TickBar>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.TimePicker
    {
        &OnCoreCreateTimePicker, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TimePicker>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer
    {
        &OnCoreCreateToggleButtonAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ToggleButtonAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch
    {
        &OnCoreCreateToggleSwitch, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ToggleSwitch>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.Underline
    {
        &OnCoreCreateUnderline, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Underline>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.UserControl
    {
        &OnCoreCreateUserControl, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::UserControl>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.ValidationErrorsCollection
    {
        &OnCoreCreateValidationErrorsCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ValidationErrorsCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid
    {
        &OnCoreCreateVariableSizedWrapGrid, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::VariableSizedWrapGrid>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingPanel
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Hosting.XamlIslandRoot
    {
        &OnCoreCreateXamlIslandRoot, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::XamlIslandRoot>, // Framework constructor
    },
    // Microsoft.UI.Xaml.XamlIslandRootCollection
    {
        &OnCoreCreateXamlIslandRootCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::XamlIslandRootCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.AppBar
    {
        &OnCoreCreateAppBar, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AppBar>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer
    {
        &OnCoreCreateAppBarButtonAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AppBarButtonAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.AppBarElementContainer
    {
        &OnCoreCreateAppBarElementContainer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AppBarElementContainer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.AppBarLightDismiss
    {
        &OnCoreCreateAppBarLightDismiss, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AppBarLightDismiss>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer
    {
        &OnCoreCreateAppBarToggleButtonAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AppBarToggleButtonAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox
    {
        &OnCoreCreateAutoSuggestBox, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AutoSuggestBox>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.BlockCollection
    {
        &OnCoreCreateBlockCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::BlockCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
    {
        &OnCoreCreateButtonBase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ButtonBase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel
    {
        &OnCoreCreateCalendarPanel, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CalendarPanel>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDayItem
    {
        &OnCoreCreateCalendarViewDayItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CalendarViewDayItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewItem
    {
        &OnCoreCreateCalendarViewItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CalendarViewItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel
    {
        &OnCoreCreateCarouselPanel, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CarouselPanel>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer
    {
        &OnCoreCreateCheckBoxAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CheckBoxAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer
    {
        &OnCoreCreateComboBoxAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ComboBoxAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxLightDismiss
    {
        &OnCoreCreateComboBoxLightDismiss, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ComboBoxLightDismiss>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CommandBarOverflowPresenter
    {
        &OnCoreCreateCommandBarOverflowPresenter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CommandBarOverflowPresenter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog
    {
        &OnCoreCreateContentDialog, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ContentDialog>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer
    {
        &OnCoreCreateFlipViewAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FlipViewAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.FlyoutPresenter
    {
        &OnCoreCreateFlyoutPresenter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FlyoutPresenter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Frame
    {
        &OnCoreCreateFrame, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Frame>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer
    {
        &OnCoreCreateGridViewItemDataAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GridViewItemDataAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter
    {
        &OnCoreCreateGridViewItemPresenter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GridViewItemPresenter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.GroupItem
    {
        &OnCoreCreateGroupItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GroupItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.InlineCollection
    {
        &OnCoreCreateInlineCollection, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::InlineCollection>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel
    {
        &OnCoreCreateItemsStackPanel, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ItemsStackPanel>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid
    {
        &OnCoreCreateItemsWrapGrid, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ItemsWrapGrid>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer
    {
        &OnCoreCreateListBoxAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListBoxAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer
    {
        &OnCoreCreateListViewBaseAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewBaseAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer
    {
        &OnCoreCreateListViewItemDataAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewItemDataAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter
    {
        &OnCoreCreateListViewItemPresenter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewItemPresenter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem
    {
        &OnCoreCreateMenuFlyoutItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MenuFlyoutItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter
    {
        &OnCoreCreateMenuFlyoutPresenter, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MenuFlyoutPresenter>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSeparator
    {
        &OnCoreCreateMenuFlyoutSeparator, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MenuFlyoutSeparator>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem
    {
        &OnCoreCreateMenuFlyoutSubItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::MenuFlyoutSubItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Page
    {
        &OnCoreCreatePage, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Page>, // Framework constructor
    },
    // Microsoft.UI.Xaml.PopupRoot
    {
        &OnCoreCreatePopupRoot, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PopupRoot>, // Framework constructor
    },
    // Microsoft.UI.Xaml.PrintRoot
    {
        &OnCoreCreatePrintRoot, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::PrintRoot>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer
    {
        &OnCoreCreateRadioButtonAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RadioButtonAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollBar
    {
        &OnCoreCreateScrollBar, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ScrollBar>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ScrollContentControl
    {
        &OnCoreCreateScrollContentControl, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ScrollContentControl>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.SeekSliderAutomationPeer
    {
        &OnCoreCreateSeekSliderAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SeekSliderAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector
    {
        nullptr, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SelectorItem
    {
        &OnCoreCreateSelectorItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SelectorItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Slider
    {
        &OnCoreCreateSlider, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Slider>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SwapChainBackgroundPanel
    {
        &OnCoreCreateSwapChainBackgroundPanel, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SwapChainBackgroundPanel>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SwapChainPanel
    {
        &OnCoreCreateSwapChainPanel, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::SwapChainPanel>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.TextSelectionGripper
    {
        &OnCoreCreateTextSelectionGripper, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TextSelectionGripper>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ToolTip
    {
        &OnCoreCreateToolTip, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ToolTip>, // Framework constructor
    },
    // Microsoft.UI.Xaml.TransitionRoot
    {
        &OnCoreCreateTransitionRoot, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::TransitionRoot>, // Framework constructor
    },
    // Microsoft.UI.Xaml.WindowChrome
    {
        &OnCoreCreateWindowChrome, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::WindowChrome>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Button
    {
        &OnCoreCreateButton, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::Button>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ComboBox
    {
        &OnCoreCreateComboBox, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ComboBox>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxItem
    {
        &OnCoreCreateComboBoxItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ComboBoxItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CommandBar
    {
        &OnCoreCreateCommandBar, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CommandBar>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.FlipView
    {
        &OnCoreCreateFlipView, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FlipView>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.FlipViewItem
    {
        &OnCoreCreateFlipViewItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::FlipViewItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer
    {
        &OnCoreCreateGridViewAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GridViewAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.GridViewHeaderItem
    {
        &OnCoreCreateGridViewHeaderItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GridViewHeaderItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.HyperlinkButton
    {
        &OnCoreCreateHyperlinkButton, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::HyperlinkButton>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ListBox
    {
        &OnCoreCreateListBox, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListBox>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ListBoxItem
    {
        &OnCoreCreateListBoxItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListBoxItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer
    {
        &OnCoreCreateListViewAutomationPeer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewAutomationPeer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase
    {
        &OnCoreCreateListViewBase, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewBase>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ListViewBaseItem
    {
        &OnCoreCreateListViewBaseItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewBaseItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ListViewHeaderItem
    {
        &OnCoreCreateListViewHeaderItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewHeaderItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RepeatButton
    {
        &OnCoreCreateRepeatButton, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RepeatButton>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer
    {
        &OnCoreCreateScrollViewer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ScrollViewer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleButton
    {
        &OnCoreCreateToggleButton, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ToggleButton>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem
    {
        &OnCoreCreateToggleMenuFlyoutItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ToggleMenuFlyoutItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel
    {
        &OnCoreCreateVirtualizingStackPanel, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::VirtualizingStackPanel>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid
    {
        &OnCoreCreateWrapGrid, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::WrapGrid>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton
    {
        &OnCoreCreateAppBarButton, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AppBarButton>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton
    {
        &OnCoreCreateAppBarToggleButton, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::AppBarToggleButton>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CheckBox
    {
        &OnCoreCreateCheckBox, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::CheckBox>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.GridView
    {
        &OnCoreCreateGridView, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GridView>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.GridViewItem
    {
        &OnCoreCreateGridViewItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::GridViewItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ListView
    {
        &OnCoreCreateListView, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListView>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ListViewItem
    {
        &OnCoreCreateListViewItem, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::ListViewItem>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.RadioButton
    {
        &OnCoreCreateRadioButton, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RadioButton>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.RootScrollViewer
    {
        &OnCoreCreateRootScrollViewer, // Core constructor
        &ctl::CreateComObjectInstanceNoInit<DirectUI::RootScrollViewer>, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AccessibilityView
    {
        &OnCoreCreateAccessibilityView, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.AlignmentX
    {
        &OnCoreCreateAlignmentX, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.AlignmentY
    {
        &OnCoreCreateAlignmentY, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection
    {
        &OnCoreCreateAnimationDirection, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AnnotationType
    {
        &OnCoreCreateAnnotationType, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.AppBarClosedDisplayMode
    {
        &OnCoreCreateAppBarClosedDisplayMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.ApplicationHighContrastAdjustment
    {
        &OnCoreCreateApplicationHighContrastAdjustment, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.ApplicationRequiresPointerMode
    {
        &OnCoreCreateApplicationRequiresPointerMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.ApplicationTheme
    {
        &OnCoreCreateApplicationTheme, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AutomationActiveEnd
    {
        &OnCoreCreateAutomationActiveEnd, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnimationStyle
    {
        &OnCoreCreateAutomationAnimationStyle, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AutomationBulletStyle
    {
        &OnCoreCreateAutomationBulletStyle, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AutomationCaretBidiMode
    {
        &OnCoreCreateAutomationCaretBidiMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AutomationCaretPosition
    {
        &OnCoreCreateAutomationCaretPosition, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationControlType
    {
        &OnCoreCreateAutomationControlType, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationEvents
    {
        &OnCoreCreateAutomationEvents, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AutomationFlowDirections
    {
        &OnCoreCreateAutomationFlowDirections, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel
    {
        &OnCoreCreateAutomationHeadingLevel, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType
    {
        &OnCoreCreateAutomationLandmarkType, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting
    {
        &OnCoreCreateAutomationLiveSetting, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection
    {
        &OnCoreCreateAutomationNavigationDirection, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind
    {
        &OnCoreCreateAutomationNotificationKind, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing
    {
        &OnCoreCreateAutomationNotificationProcessing, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation
    {
        &OnCoreCreateAutomationOrientation, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AutomationOutlineStyles
    {
        &OnCoreCreateAutomationOutlineStyles, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType
    {
        &OnCoreCreateAutomationStructureChangeType, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AutomationStyleId
    {
        &OnCoreCreateAutomationStyleId, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AutomationTextDecorationLineStyle
    {
        &OnCoreCreateAutomationTextDecorationLineStyle, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType
    {
        &OnCoreCreateAutomationTextEditChangeType, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason
    {
        &OnCoreCreateAutoSuggestionBoxTextChangeReason, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.BackgroundSizing
    {
        &OnCoreCreateBackgroundSizing, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.BindingMode
    {
        &OnCoreCreateBindingMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapCreateOptions
    {
        &OnCoreCreateBitmapCreateOptions, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.BrushMappingMode
    {
        &OnCoreCreateBrushMappingMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDisplayMode
    {
        &OnCoreCreateCalendarViewDisplayMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewSelectionMode
    {
        &OnCoreCreateCalendarViewSelectionMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CandidateWindowAlignment
    {
        &OnCoreCreateCandidateWindowAlignment, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CharacterCasing
    {
        &OnCoreCreateCharacterCasing, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ClickMode
    {
        &OnCoreCreateClickMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ClockState
    {
        &OnCoreCreateClockState, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Foundation.Collections.CollectionChange
    {
        &OnCoreCreateCollectionChange, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.ColorInterpolationMode
    {
        &OnCoreCreateColorInterpolationMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger
    {
        &OnCoreCreateComboBoxSelectionChangedTrigger, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CommandBarDefaultLabelPosition
    {
        &OnCoreCreateCommandBarDefaultLabelPosition, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CommandBarDynamicOverflowAction
    {
        &OnCoreCreateCommandBarDynamicOverflowAction, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CommandBarLabelPosition
    {
        &OnCoreCreateCommandBarLabelPosition, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.CommandBarOverflowButtonVisibility
    {
        &OnCoreCreateCommandBarOverflowButtonVisibility, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComponentResourceLocation
    {
        &OnCoreCreateComponentResourceLocation, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent
    {
        &OnCoreCreateConnectedAnimationComponent, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogButton
    {
        &OnCoreCreateContentDialogButton, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogPlacement
    {
        &OnCoreCreateContentDialogPlacement, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ContentDialogResult
    {
        &OnCoreCreateContentDialogResult, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ControlHeaderPlacement
    {
        &OnCoreCreateControlHeaderPlacement, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.UI.Core.CoreCursorType
    {
        &OnCoreCreateCoreCursorType, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.ApplicationModel.DataTransfer.DataPackageOperation
    {
        &OnCoreCreateDataPackageOperation, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Globalization.DayOfWeek
    {
        &OnCoreCreateDayOfWeek, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.DecodePixelType
    {
        &OnCoreCreateDecodePixelType, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators
    {
        &OnCoreCreateDisabledFormattingAccelerators, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.DockPosition
    {
        &OnCoreCreateDockPosition, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingMode
    {
        &OnCoreCreateEasingMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation
    {
        &OnCoreCreateEdgeTransitionLocation, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.ElementCompositeMode
    {
        &OnCoreCreateElementCompositeMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.ElementHighContrastAdjustment
    {
        &OnCoreCreateElementHighContrastAdjustment, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.ElementSoundKind
    {
        &OnCoreCreateElementSoundKind, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.ElementSoundMode
    {
        &OnCoreCreateElementSoundMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.ElementSoundPlayerState
    {
        &OnCoreCreateElementSoundPlayerState, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.ElementSpatialAudioMode
    {
        &OnCoreCreateElementSpatialAudioMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.ElementTheme
    {
        &OnCoreCreateElementTheme, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.ExpandCollapseState
    {
        &OnCoreCreateExpandCollapseState, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.Media.Playback.FailedMediaStreamKind
    {
        &OnCoreCreateFailedMediaStreamKind, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.FastPlayFallbackBehaviour
    {
        &OnCoreCreateFastPlayFallbackBehaviour, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Animation.FillBehavior
    {
        &OnCoreCreateFillBehavior, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.FillRule
    {
        &OnCoreCreateFillRule, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.FlowDirection
    {
        &OnCoreCreateFlowDirection, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode
    {
        &OnCoreCreateFlyoutPlacementMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode
    {
        &OnCoreCreateFlyoutShowMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.FocusInputDeviceKind
    {
        &OnCoreCreateFocusInputDeviceKind, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.FocusNavigationDirection
    {
        &OnCoreCreateFocusNavigationDirection, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.FocusState
    {
        &OnCoreCreateFocusState, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.FocusVisualKind
    {
        &OnCoreCreateFocusVisualKind, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.FontCapitals
    {
        &OnCoreCreateFontCapitals, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.FontEastAsianLanguage
    {
        &OnCoreCreateFontEastAsianLanguage, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.FontEastAsianWidths
    {
        &OnCoreCreateFontEastAsianWidths, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.FontFraction
    {
        &OnCoreCreateFontFraction, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.FontNumeralAlignment
    {
        &OnCoreCreateFontNumeralAlignment, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.FontNumeralStyle
    {
        &OnCoreCreateFontNumeralStyle, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.UI.Text.FontStretch
    {
        &OnCoreCreateFontStretch, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.UI.Text.FontStyle
    {
        &OnCoreCreateFontStyle, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.FontVariants
    {
        &OnCoreCreateFontVariants, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GeneratorDirection
    {
        &OnCoreCreateGeneratorDirection, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.GestureModes
    {
        &OnCoreCreateGestureModes, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.GradientSpreadMethod
    {
        &OnCoreCreateGradientSpreadMethod, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.GridUnitType
    {
        &OnCoreCreateGridUnitType, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GroupHeaderPlacement
    {
        &OnCoreCreateGroupHeaderPlacement, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Input.HoldingState
    {
        &OnCoreCreateHoldingState, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.HorizontalAlignment
    {
        &OnCoreCreateHorizontalAlignment, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger
    {
        &OnCoreCreateIncrementalLoadingTrigger, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.InputScopeNameValue
    {
        &OnCoreCreateInputScopeNameValue, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.InputValidationErrorEventAction
    {
        &OnCoreCreateInputValidationErrorEventAction, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.InputValidationKind
    {
        &OnCoreCreateInputValidationKind, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.InputValidationMode
    {
        &OnCoreCreateInputValidationMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ItemsUpdatingScrollMode
    {
        &OnCoreCreateItemsUpdatingScrollMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorPlacementMode
    {
        &OnCoreCreateKeyboardAcceleratorPlacementMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.KeyboardNavigationMode
    {
        &OnCoreCreateKeyboardNavigationMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.KeyTipPlacementMode
    {
        &OnCoreCreateKeyTipPlacementMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.LightDismissOverlayMode
    {
        &OnCoreCreateLightDismissOverlayMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.LineStackingStrategy
    {
        &OnCoreCreateLineStackingStrategy, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode
    {
        &OnCoreCreateListViewItemPresenterCheckMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterSelectionIndicatorMode
    {
        &OnCoreCreateListViewItemPresenterSelectionIndicatorMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ListViewReorderMode
    {
        &OnCoreCreateListViewReorderMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ListViewSelectionMode
    {
        &OnCoreCreateListViewSelectionMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus
    {
        &OnCoreCreateLoadedImageSourceLoadStatus, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.LogicalDirection
    {
        &OnCoreCreateLogicalDirection, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.ManipulationModes
    {
        &OnCoreCreateManipulationModes, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.MarkupExtensionType
    {
        &OnCoreCreateMarkupExtensionType, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Navigation.NavigationCacheMode
    {
        &OnCoreCreateNavigationCacheMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Navigation.NavigationMode
    {
        &OnCoreCreateNavigationMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Interop.NotifyCollectionChangedAction
    {
        &OnCoreCreateNotifyCollectionChangedAction, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.OpticalMarginAlignment
    {
        &OnCoreCreateOpticalMarginAlignment, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Orientation
    {
        &OnCoreCreateOrientation, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.PanelScrollingDirection
    {
        &OnCoreCreatePanelScrollingDirection, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.PasswordRevealMode
    {
        &OnCoreCreatePasswordRevealMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.Peers.PatternInterface
    {
        &OnCoreCreatePatternInterface, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.PenLineCap
    {
        &OnCoreCreatePenLineCap, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.PenLineJoin
    {
        &OnCoreCreatePenLineJoin, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.PlacementMode
    {
        &OnCoreCreatePlacementMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Input.PointerDeviceType
    {
        &OnCoreCreatePointerDeviceType, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Internal.PointerDirection
    {
        &OnCoreCreatePointerDirection, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode
    {
        &OnCoreCreatePopupPlacementMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Printing.PreviewPageCountType
    {
        &OnCoreCreatePreviewPageCountType, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Printing.PrintDocumentFormat
    {
        &OnCoreCreatePrintDocumentFormat, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.RelativeSourceMode
    {
        &OnCoreCreateRelativeSourceMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.RequiresPointer
    {
        &OnCoreCreateRequiresPointer, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.RichEditClipboardFormat
    {
        &OnCoreCreateRichEditClipboardFormat, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.RowOrColumnMajor
    {
        &OnCoreCreateRowOrColumnMajor, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.ScrollAmount
    {
        &OnCoreCreateScrollAmount, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ScrollBarVisibility
    {
        &OnCoreCreateScrollBarVisibility, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType
    {
        &OnCoreCreateScrollEventType, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode
    {
        &OnCoreCreateScrollingIndicatorMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ScrollIntoViewAlignment
    {
        &OnCoreCreateScrollIntoViewAlignment, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ScrollMode
    {
        &OnCoreCreateScrollMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SelectionMode
    {
        &OnCoreCreateSelectionMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SliderSnapsTo
    {
        &OnCoreCreateSliderSnapsTo, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment
    {
        &OnCoreCreateSnapPointsAlignment, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SnapPointsType
    {
        &OnCoreCreateSnapPointsType, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SplitViewDisplayMode
    {
        &OnCoreCreateSplitViewDisplayMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.SplitViewPanePlacement
    {
        &OnCoreCreateSplitViewPanePlacement, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.StandardUICommandKind
    {
        &OnCoreCreateStandardUICommandKind, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Stretch
    {
        &OnCoreCreateStretch, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.StretchDirection
    {
        &OnCoreCreateStretchDirection, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.StyleSimulations
    {
        &OnCoreCreateStyleSimulations, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.SupportedTextSelection
    {
        &OnCoreCreateSupportedTextSelection, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceLoadStatus
    {
        &OnCoreCreateSvgImageSourceLoadStatus, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.SweepDirection
    {
        &OnCoreCreateSweepDirection, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Symbol
    {
        &OnCoreCreateSymbol, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.SynchronizedInputType
    {
        &OnCoreCreateSynchronizedInputType, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.TextAlignment
    {
        &OnCoreCreateTextAlignment, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.UI.Text.TextDecorations
    {
        &OnCoreCreateTextDecorations, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.TextFormattingMode
    {
        &OnCoreCreateTextFormattingMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.TextHintingMode
    {
        &OnCoreCreateTextHintingMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.TextLineBounds
    {
        &OnCoreCreateTextLineBounds, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.TextReadingOrder
    {
        &OnCoreCreateTextReadingOrder, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Media.TextRenderingMode
    {
        &OnCoreCreateTextRenderingMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.TextTrimming
    {
        &OnCoreCreateTextTrimming, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.TextWrapping
    {
        &OnCoreCreateTextWrapping, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.Primitives.TickPlacement
    {
        &OnCoreCreateTickPlacement, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.ToggleState
    {
        &OnCoreCreateToggleState, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.UI.Xaml.Interop.TypeKind
    {
        &OnCoreCreateTypeKind, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Documents.UnderlineStyle
    {
        &OnCoreCreateUnderlineStyle, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Data.UpdateSourceTrigger
    {
        &OnCoreCreateUpdateSourceTrigger, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Vector3TransitionComponents
    {
        &OnCoreCreateVector3TransitionComponents, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.VerticalAlignment
    {
        &OnCoreCreateVerticalAlignment, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.VirtualizationMode
    {
        &OnCoreCreateVirtualizationMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.System.VirtualKey
    {
        &OnCoreCreateVirtualKey, // Core constructor
        nullptr, // Framework constructor
    },
    // Windows.System.VirtualKeyModifiers
    {
        &OnCoreCreateVirtualKeyModifiers, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Visibility
    {
        &OnCoreCreateVisibility, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.WindowInteractionState
    {
        &OnCoreCreateWindowInteractionState, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.WindowVisualState
    {
        &OnCoreCreateWindowVisualState, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.XYFocusKeyboardNavigationMode
    {
        &OnCoreCreateXYFocusKeyboardNavigationMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy
    {
        &OnCoreCreateXYFocusNavigationStrategy, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Input.XYFocusNavigationStrategyOverride
    {
        &OnCoreCreateXYFocusNavigationStrategyOverride, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Controls.ZoomMode
    {
        &OnCoreCreateZoomMode, // Core constructor
        nullptr, // Framework constructor
    },
    // Microsoft.UI.Xaml.Automation.ZoomUnit
    {
        &OnCoreCreateZoomUnit, // Core constructor
        nullptr, // Framework constructor
    },
};

// All properties.
extern const MetaDataDependencyPropertyRuntimeData c_aDependencyPropertyRuntimeData[KnownDependencyPropertyCount] =
{
    // UnknownObject.UnknownProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition.Index
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition.Offset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.UI.Xaml.Interop.TypeName.Kind
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.UI.Xaml.Interop.TypeName.Name
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.AcceleratorKey
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.AccessibilityView
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.AccessKey
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.Annotations
    {
        &CDependencyObject::GetAnnotations, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.AutomationControlType
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.AutomationId
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.ControlledPeers
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.Culture
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.DescribedBy
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.FlowsFrom
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.FlowsTo
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.FullDescription
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.HeadingLevel
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.HelpText
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.IsDataValidForForm
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.IsDialog
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.IsPeripheral
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.IsRequiredForForm
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.ItemStatus
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.ItemType
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.LabeledBy
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.LandmarkType
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.Level
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.LiveSetting
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.LocalizedControlType
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.LocalizedLandmarkType
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.Name
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.PositionInSet
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationProperties.SizeOfSet
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.DependencyObject.Column
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.DependencyObject.DeferredStorage
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.DependencyObject.Line
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.DependencyObject.Name
    {
        (METHODPFN)OFFSET(CDependencyObject, m_strName), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.DependencyObject.ParseUri
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.DependencyObject.RealizingProxy
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.DependencyObject.XbfHash
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemContainerGenerator.DeferredUnlinkingPayload
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemContainerGenerator.IsRecycledContainer
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemContainerGenerator.ItemForItemContainer
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControlsHelper.DropoutOrder
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Markup.ParserServiceProvider.BaseUri
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Markup.ParserServiceProvider.RootObject
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Markup.ParserServiceProvider.TargetObject
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Markup.ParserServiceProvider.TargetProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.TextOptions.TextFormattingMode
    {
        (METHODPFN)OFFSET(CUIElement, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        &CUIElement::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_textOptions.m_textFormattingMode) // Storage offset
    },
    // Microsoft.UI.Xaml.TextOptions.TextHintingMode
    {
        (METHODPFN)OFFSET(CUIElement, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        &CUIElement::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_textOptions.m_textHintingMode) // Storage offset
    },
    // Microsoft.UI.Xaml.TextOptions.TextRenderingMode
    {
        (METHODPFN)OFFSET(CUIElement, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        &CUIElement::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_textOptions.m_textRenderingMode) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService.KeyboardAcceleratorToolTip
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService.KeyboardAcceleratorToolTipObject
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService.Placement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService.PlacementTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService.ToolTip
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToolTipService.ToolTipObject
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.AnnotationAlternates
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_nAnnotationAlternates) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.Capitals
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_Capitals) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.CapitalSpacing
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fCapitalSpacing) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.CaseSensitiveForms
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fCaseSensitiveForms) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.ContextualAlternates
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fContextualAlternates) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.ContextualLigatures
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fContextualLigatures) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.ContextualSwashes
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_nContextualSwashes) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.DiscretionaryLigatures
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fDiscretionaryLigatures) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.EastAsianExpertForms
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fEastAsianExpertForms) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.EastAsianLanguage
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_EastAsianLanguage) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.EastAsianWidths
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_EastAsianWidths) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.Fraction
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_Fraction) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.HistoricalForms
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fHistoricalForms) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.HistoricalLigatures
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fHistoricalLigatures) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.Kerning
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fKerning) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.MathematicalGreek
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fMathematicalGreek) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.NumeralAlignment
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_NumeralAlignment) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.NumeralStyle
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_NumeralStyle) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.SlashedZero
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fSlashedZero) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StandardLigatures
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStandardLigatures) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StandardSwashes
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_nStandardSwashes) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticAlternates
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_nStylisticAlternates) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet1
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet1) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet10
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet10) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet11
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet11) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet12
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet12) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet13
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet13) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet14
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet14) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet15
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet15) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet16
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet16) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet17
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet17) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet18
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet18) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet19
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet19) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet2
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet2) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet20
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet20) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet3
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet3) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet4
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet4) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet5
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet5) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet6
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet6) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet7
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet7) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet8
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet8) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.StylisticSet9
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_fStylisticSet9) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Typography.Variants
    {
        (METHODPFN)OFFSET(CDependencyObject, m_pInheritedProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CDependencyObject::EnsureInheritedProperties, // Storage ensure method
        OFFSET(InheritedProperties, m_typography.m_Variants) // Storage offset
    },
    // Microsoft.UI.Xaml.Markup.XamlBindingHelper.DataTemplateComponent
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarButtonTemplateSettings.KeyboardAcceleratorTextMinWidth
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.ClipRect
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.CompactRootMargin
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.CompactVerticalDelta
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.HiddenRootMargin
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.HiddenVerticalDelta
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.MinimalRootMargin
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.MinimalVerticalDelta
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.NegativeCompactVerticalDelta
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.NegativeHiddenVerticalDelta
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings.NegativeMinimalVerticalDelta
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.AppBarToggleButtonTemplateSettings.KeyboardAcceleratorTextMinWidth
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Application.ApplicationStarted
    {
        (METHODPFN)OFFSET(CApplication, m_bApplicationStartupCompleted), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Application.HighContrastAdjustment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Application.RequestedTheme
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Application.RequiresPointerMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Application.Resources
    {
        (METHODPFN)OFFSET(CApplication, m_pResources), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Application.RootVisual
    {
        (METHODPFN)OFFSET(CApplication, m_pRootVisual), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotation.Element
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotation.Type
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.EventsSource
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.Peer
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.Type
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs.ChosenSuggestion
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs.QueryText
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs.SelectedItem
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs.Reason
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Brush.Opacity
    {
        (METHODPFN)OFFSET(CBrush, m_eOpacity), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Brush.RelativeTransform
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Brush.Transform
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.CenterX
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.CenterY
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.ClipRect
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.HasMoreContentAfter
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.HasMoreContentBefore
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.HasMoreViews
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.HeaderText
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.MinViewWidth
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay1
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay2
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay3
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay4
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay5
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay6
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings.WeekDay7
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.CollectionViewSource.IsSourceGrouped
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.CollectionViewSource.ItemsPath
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.CollectionViewSource.Source
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.CollectionViewSource.View
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.UI.Color.A
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.UI.Color.B
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.UI.Color.ContentProperty
    {
        (METHODPFN)OFFSET(CColor, m_rgb), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.UI.Color.G
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.UI.Color.R
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame.KeyTime
    {
        (METHODPFN)OFFSET(CColorKeyFrame, m_keyTime), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame.Value
    {
        (METHODPFN)OFFSET(CColorKeyFrame, m_uValue), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinition.ActualWidth
    {
        &CDefinitionBase::ActualSize, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinition.MaxWidth
    {
        (METHODPFN)OFFSET(CColumnDefinition, m_eUserMaxSize), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinition.MinWidth
    {
        (METHODPFN)OFFSET(CColumnDefinition, m_eUserMinSize), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinition.Width
    {
        (METHODPFN)OFFSET(CColumnDefinition, m_pUserSize), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.DropDownClosedHeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.DropDownContentMinWidth
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.DropDownOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.DropDownOpenedHeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings.SelectedItemDirection
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.ContentHeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.EffectiveOverflowButtonVisibility
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.NegativeOverflowContentHeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentClipRect
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentCompactYTranslation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentHeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentHiddenYTranslation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentHorizontalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentMaxHeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentMaxWidth
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentMinimalYTranslation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings.OverflowContentMinWidth
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.CornerRadius.BottomLeft
    {
        (METHODPFN)OFFSET(CCornerRadius, m_cornerRadius.bottomLeft), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.CornerRadius.BottomRight
    {
        (METHODPFN)OFFSET(CCornerRadius, m_cornerRadius.bottomRight), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.CornerRadius.TopLeft
    {
        (METHODPFN)OFFSET(CCornerRadius, m_cornerRadius.topLeft), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.CornerRadius.TopRight
    {
        (METHODPFN)OFFSET(CCornerRadius, m_cornerRadius.topRight), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.DependencyPropertyProxy.PropertyId
    {
        (METHODPFN)OFFSET(CDependencyPropertyProxy, m_nPropertyIndex), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Double.ContentProperty
    {
        (METHODPFN)OFFSET(CDouble, m_eValue), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame.KeyTime
    {
        (METHODPFN)OFFSET(CDoubleKeyFrame, m_keyTime), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame.Value
    {
        (METHODPFN)OFFSET(CDoubleKeyFrame, m_rValue), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase.EasingMode
    {
        (METHODPFN)OFFSET(CEasingFunctionBase, m_eEasingMode), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.ExternalObjectReference.MarkupExtensionType
    {
        (METHODPFN)OFFSET(CManagedObjectReference, m_markupExtensionType), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.ExternalObjectReference.NativeValue
    {
        (METHODPFN)OFFSET(CManagedObjectReference, m_nativeValue), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AllowFocusOnInteraction
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AllowFocusWhenDisabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AreOpenCloseAnimationsEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.AttachedFlyout
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ElementSoundMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.InputDevicePrefersPrimaryCommands
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.IsOpen
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.LightDismissOverlayMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.OverlayInputPassThroughElement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.Placement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ShouldConstrainToRootBounds
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.ShowMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.SystemBackdrop
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase.Target
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.UI.Text.FontWeight.Weight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkTemplate.Template
    {
        (METHODPFN)OFFSET(CFrameworkTemplate, m_pTemplateContent), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Geometry.Bounds
    {
        &CGeometry::GetBounds, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Geometry.Transform
    {
        (METHODPFN)OFFSET(CGeometry, m_pTransform), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.GradientStop.Color
    {
        (METHODPFN)OFFSET(CGradientStop, m_rgb), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.GradientStop.Offset
    {
        (METHODPFN)OFFSET(CGradientStop, m_stop.rPosition), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.GridLength.GridUnitType
    {
        (METHODPFN)OFFSET(CGridLength, m_gridLength.type), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.GridLength.Value
    {
        (METHODPFN)OFFSET(CGridLength, m_gridLength.value), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.ContainerStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.ContainerStyleSelector
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.HeaderContainerStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.HeaderTemplateSelector
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.HidesIfEmpty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.GroupStyle.Panel
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.IconSource.Foreground
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.InertiaExpansionBehavior.DesiredDeceleration
    {
        (METHODPFN)OFFSET(CInertiaExpansionBehavior, m_fDeceleration), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.InertiaExpansionBehavior.DesiredExpansion
    {
        (METHODPFN)OFFSET(CInertiaExpansionBehavior, m_fExpansion), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.InertiaRotationBehavior.DesiredDeceleration
    {
        (METHODPFN)OFFSET(CInertiaRotationBehavior, m_fDeceleration), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.InertiaRotationBehavior.DesiredRotation
    {
        (METHODPFN)OFFSET(CInertiaRotationBehavior, m_fRotation), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.InertiaTranslationBehavior.DesiredDeceleration
    {
        (METHODPFN)OFFSET(CInertiaTranslationBehavior, m_fDeceleration), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.InertiaTranslationBehavior.DesiredDisplacement
    {
        (METHODPFN)OFFSET(CInertiaTranslationBehavior, m_fDisplacement), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.InputScope.Names
    {
        (METHODPFN)OFFSET(CInputScope, m_pNames), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.InputScopeName.NameValue
    {
        (METHODPFN)OFFSET(CInputScopeName, m_nameValue), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.InputValidationCommand.InputValidationKind
    {
        (METHODPFN)OFFSET(CInputValidationCommand, m_inputValidationKind), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.InputValidationCommand.InputValidationMode
    {
        (METHODPFN)OFFSET(CInputValidationCommand, m_inputValidationMode), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Int32.ContentProperty
    {
        (METHODPFN)OFFSET(CInt32, m_iValue), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.KeyboardAccelerator.IsEnabled
    {
        (METHODPFN)OFFSET(CKeyboardAccelerator, m_isEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.KeyboardAccelerator.Key
    {
        (METHODPFN)OFFSET(CKeyboardAccelerator, m_key), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.KeyboardAccelerator.Modifiers
    {
        (METHODPFN)OFFSET(CKeyboardAccelerator, m_keyModifiers), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.KeyboardAccelerator.ScopeOwner
    {
        (METHODPFN)OFFSET(CKeyboardAccelerator, m_scopeOwner), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.KeySpline.ControlPoint1
    {
        (METHODPFN)OFFSET(CKeySpline, m_ControlPoint1), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.KeySpline.ControlPoint2
    {
        (METHODPFN)OFFSET(CKeySpline, m_ControlPoint2), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.LayoutTransitionStaggerItem.Bounds
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.LayoutTransitionStaggerItem.Element
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.LayoutTransitionStaggerItem.Index
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.LayoutTransitionStaggerItem.StaggerTime
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSurface.DecodedPhysicalSize
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSurface.DecodedSize
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.LoadedImageSurface.NaturalSize
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.ManipulationPivot.Center
    {
        (METHODPFN)OFFSET(CManipulationPivot, m_ptCenter), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.ManipulationPivot.Radius
    {
        (METHODPFN)OFFSET(CManipulationPivot, m_fRadius), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Matrix.M11
    {
        (METHODPFN)OFFSET(CMatrix, m_matrix._11), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Matrix.M12
    {
        (METHODPFN)OFFSET(CMatrix, m_matrix._12), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Matrix.M21
    {
        (METHODPFN)OFFSET(CMatrix, m_matrix._21), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Matrix.M22
    {
        (METHODPFN)OFFSET(CMatrix, m_matrix._22), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Matrix.OffsetX
    {
        (METHODPFN)OFFSET(CMatrix, m_matrix._31), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Matrix.OffsetY
    {
        (METHODPFN)OFFSET(CMatrix, m_matrix._32), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M11
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._11), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M12
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._12), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M13
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._13), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M14
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._14), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M21
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._21), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M22
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._22), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M23
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._23), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M24
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._24), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M31
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._31), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M32
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._32), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M33
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._33), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M34
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._34), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.M44
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._44), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.OffsetX
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._41), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.OffsetY
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._42), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.Matrix3D.OffsetZ
    {
        (METHODPFN)OFFSET(CMatrix4x4, m_matrix._43), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutItemTemplateSettings.KeyboardAcceleratorTextMinWidth
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutPresenterTemplateSettings.FlyoutContentMinWidth
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame.KeyTime
    {
        (METHODPFN)OFFSET(CObjectKeyFrame, m_keyTime), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame.Value
    {
        (METHODPFN)OFFSET(CObjectKeyFrame, m_vValue), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Navigation.PageStackEntry.SourcePageType
    {
        (METHODPFN)OFFSET(CPageStackEntry, m_sourcePageType), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurve.CurveSegments
    {
        (METHODPFN)OFFSET(CParametricCurve, m_pCurveSegments), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment.BeginOffset
    {
        (METHODPFN)OFFSET(CParametricCurveSegment, m_beginOffset), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment.ConstantCoefficient
    {
        (METHODPFN)OFFSET(CParametricCurveSegment, m_constantCoefficient), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment.CubicCoefficient
    {
        (METHODPFN)OFFSET(CParametricCurveSegment, m_cubicCoefficient), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment.LinearCoefficient
    {
        (METHODPFN)OFFSET(CParametricCurveSegment, m_linearCoefficient), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegment.QuadraticCoefficient
    {
        (METHODPFN)OFFSET(CParametricCurveSegment, m_quadraticCoefficient), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PathFigure.IsClosed
    {
        (METHODPFN)OFFSET(CPathFigure, m_bClosed), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PathFigure.IsFilled
    {
        (METHODPFN)OFFSET(CPathFigure, m_bFilled), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PathFigure.Segments
    {
        (METHODPFN)OFFSET(CPathFigure, m_pSegments), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PathFigure.StartPoint
    {
        (METHODPFN)OFFSET(CPathFigure, m_ptStart), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.Foundation.Point.ContentProperty
    {
        (METHODPFN)OFFSET(CPoint, m_pt), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.Foundation.Point.X
    {
        (METHODPFN)OFFSET(CPoint, m_pt.x), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.Foundation.Point.Y
    {
        (METHODPFN)OFFSET(CPoint, m_pt.y), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.Pointer.IsInContact
    {
        (METHODPFN)OFFSET(CPointer, m_bInContact), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.Pointer.IsInRange
    {
        (METHODPFN)OFFSET(CPointer, m_bInRange), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.Pointer.PointerDeviceType
    {
        (METHODPFN)OFFSET(CPointer, m_pointerDeviceType), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.Pointer.PointerId
    {
        (METHODPFN)OFFSET(CPointer, m_uiPointerId), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrame.PointerValue
    {
        (METHODPFN)OFFSET(CPointerKeyFrame, m_pointerValue), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrame.TargetValue
    {
        (METHODPFN)OFFSET(CPointerKeyFrame, m_value), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrame.KeyTime
    {
        (METHODPFN)OFFSET(CPointKeyFrame, m_keyTime), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrame.Value
    {
        (METHODPFN)OFFSET(CPointKeyFrame, m_ptValue), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Collections.PresentationFrameworkCollection.Count
    {
        &CCollection::GetItemCount, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Printing.PrintDocument.DesiredFormat
    {
        (METHODPFN)OFFSET(CPrintDocument, m_eDesiredFormat), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Printing.PrintDocument.DocumentSource
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Printing.PrintDocument.PrintedPageCount
    {
        (METHODPFN)OFFSET(CPrintDocument, m_nPrintedPageCount), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PropertyPath.Path
    {
        (METHODPFN)OFFSET(CPropertyPath, m_strPath), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.Foundation.Rect.Height
    {
        (METHODPFN)OFFSET(CRect, m_rc.Height), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.Foundation.Rect.Width
    {
        (METHODPFN)OFFSET(CRect, m_rc.Width), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.Foundation.Rect.X
    {
        (METHODPFN)OFFSET(CRect, m_rc.X), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.Foundation.Rect.Y
    {
        (METHODPFN)OFFSET(CRect, m_rc.Y), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RowDefinition.ActualHeight
    {
        &CDefinitionBase::ActualSize, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RowDefinition.Height
    {
        (METHODPFN)OFFSET(CRowDefinition, m_pUserSize), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RowDefinition.MaxHeight
    {
        (METHODPFN)OFFSET(CRowDefinition, m_eUserMaxSize), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RowDefinition.MinHeight
    {
        (METHODPFN)OFFSET(CRowDefinition, m_eUserMinSize), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.SecondaryContentRelationship.Curves
    {
        (METHODPFN)OFFSET(CSecondaryContentRelationship, m_pCurves), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.SecondaryContentRelationship.IsDescendant
    {
        (METHODPFN)OFFSET(CSecondaryContentRelationship, m_isDescendant), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.SecondaryContentRelationship.ShouldTargetClip
    {
        (METHODPFN)OFFSET(CSecondaryContentRelationship, m_shouldTargetClip), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.SetterBase.IsSealed
    {
        (METHODPFN)OFFSET(CSetterBase, m_bIsSealed), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.Foundation.Size.Height
    {
        (METHODPFN)OFFSET(CSize, m_size.height), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.Foundation.Size.Width
    {
        (METHODPFN)OFFSET(CSize, m_size.width), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.CompactPaneGridLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.NegativeOpenPaneLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.NegativeOpenPaneLengthMinusCompactLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.OpenPaneGridLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.OpenPaneLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings.OpenPaneLengthMinusCompactLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.StateTriggerBase.TriggerState
    {
        (METHODPFN)OFFSET(CStateTriggerBase, m_triggerState), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // String.ContentProperty
    {
        (METHODPFN)OFFSET(CString, m_strString), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Style.BasedOn
    {
        (METHODPFN)OFFSET(CStyle, m_pBasedOn), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Style.IsSealed
    {
        (METHODPFN)OFFSET(CStyle, m_bIsSealed), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Style.Setters
    {
        (METHODPFN)OFFSET(CStyle, m_pSetters), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Style.TargetType
    {
        (METHODPFN)OFFSET(CStyle, m_targetTypeIndex), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.TargetPropertyPath.CachedStyleSetterProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.TargetPropertyPath.Path
    {
        &CTargetPropertyPath::Path, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.TargetPropertyPath.Target
    {
        &CTargetPropertyPath::Target, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextAdapter.Owner
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.AccessKey
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.AccessKeyScopeOwner
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.AllowFocusOnInteraction
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.CharacterSpacing
    {
        (METHODPFN)OFFSET(CTextElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nCharacterSpacing) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.ExitDisplayModeOnAccessKeyInvoked
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.FontFamily
    {
        (METHODPFN)OFFSET(CTextElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_pFontFamily) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.FontSize
    {
        (METHODPFN)OFFSET(CTextElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_eFontSize) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.FontStretch
    {
        (METHODPFN)OFFSET(CTextElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontStretch) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.FontStyle
    {
        (METHODPFN)OFFSET(CTextElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontStyle) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.FontWeight
    {
        (METHODPFN)OFFSET(CTextElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontWeight) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.Foreground
    {
        (METHODPFN)OFFSET(CTextElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        &CTextElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_pForeground) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.IsAccessKeyScope
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.IsTextScaleFactorEnabled
    {
        (METHODPFN)OFFSET(CTextElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_isTextScaleFactorEnabled) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.KeyTipHorizontalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.KeyTipPlacementMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.KeyTipVerticalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.Language
    {
        (METHODPFN)OFFSET(CTextElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_strLanguageString) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElement.TextDecorations
    {
        (METHODPFN)OFFSET(CTextElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nTextDecorations) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextRange.Length
    {
        (METHODPFN)OFFSET(CTextRange, m_range.length), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextRange.StartIndex
    {
        (METHODPFN)OFFSET(CTextRange, m_range.startIndex), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.Peers.TextRangeAdapter.Owner
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Thickness.Bottom
    {
        (METHODPFN)OFFSET(CThickness, m_thickness.bottom), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Thickness.Left
    {
        (METHODPFN)OFFSET(CThickness, m_thickness.left), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Thickness.Right
    {
        (METHODPFN)OFFSET(CThickness, m_thickness.right), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Thickness.Top
    {
        (METHODPFN)OFFSET(CThickness, m_thickness.top), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.AutoReverse
    {
        (METHODPFN)OFFSET(CTimeline, m_fAutoReverse), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetForceDCompAnimationSubtreeDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    {
        (METHODPFN)OFFSET(CTimeline, m_pBeginTime), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetForceDCompAnimationSubtreeDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.Duration
    {
        (METHODPFN)OFFSET(CTimeline, m_duration), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetForceDCompAnimationSubtreeDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.FillBehavior
    {
        (METHODPFN)OFFSET(CTimeline, m_fillBehavior), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetForceDCompAnimationSubtreeDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.RepeatBehavior
    {
        (METHODPFN)OFFSET(CTimeline, m_repeatBehavior), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetForceDCompAnimationSubtreeDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.SpeedRatio
    {
        (METHODPFN)OFFSET(CTimeline, m_rSpeedRatio), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetForceDCompAnimationSubtreeDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Windows.Foundation.TimeSpan.Seconds
    {
        (METHODPFN)OFFSET(CTimeSpan, m_rTimeSpan), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.CurtainCurrentToOffOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.CurtainCurrentToOnOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.CurtainOffToOnOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.CurtainOnToOffOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.KnobCurrentToOffOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.KnobCurrentToOnOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.KnobOffToOnOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings.KnobOnToOffOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings.FromHorizontalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings.FromVerticalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction
    {
        (METHODPFN)OFFSET(CTransition, m_pStaggerFunction), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.ClipTransform
    {
        (METHODPFN)OFFSET(CTransitionTarget, m_pClipTransform), // Offset. Cast to METHODPFN to force it into the union.
        &CTransitionTarget::NWSetClipDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.ClipTransformOrigin
    {
        (METHODPFN)OFFSET(CTransitionTarget, m_ptClipTransformOrigin), // Offset. Cast to METHODPFN to force it into the union.
        &CTransitionTarget::NWSetClipDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.CompositeTransform
    {
        (METHODPFN)OFFSET(CTransitionTarget, m_pxf), // Offset. Cast to METHODPFN to force it into the union.
        &CTransitionTarget::NWSetTransformDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.Opacity
    {
        (METHODPFN)OFFSET(CTransitionTarget, m_opacity), // Offset. Cast to METHODPFN to force it into the union.
        &CTransitionTarget::NWSetOpacityDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.OpacityAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.TransformOrigin
    {
        (METHODPFN)OFFSET(CTransitionTarget, m_ptRenderTransformOrigin), // Offset. Cast to METHODPFN to force it into the union.
        &CTransitionTarget::NWSetTransformDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.AccessKey
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.AccessKeyScopeOwner
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.ActualOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.ActualSize
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.AllowDrop
    {
        &CUIElement::AllowDrop, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.CacheMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.CanBeScrollAnchor
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.CanDrag
    {
        &CUIElement::CanDrag, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.CanvasOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.ChildrenInternal
    {
        &CUIElement::GetChildrenInternal, // Property method
        &CUIElement::NWSetSubgraphDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.Clip
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetClipDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.CompositeMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetCompositeModeDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.ContextFlyout
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.DirectManipulationContainer
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.ExitDisplayModeOnAccessKeyInvoked
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.FocusState
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.GlobalScaleFactor
    {
        &CUIElement::GlobalScaleFactor, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.HandOffVisualClip
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.HandOffVisualTransform
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.HandOffVisualTransformMatrix3D
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.HighContrastAdjustment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.IsAccessKeyScope
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.IsDoubleTapEnabled
    {
        &CUIElement::IsDoubleTapEnabled, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.IsGamepadFocusCandidate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.IsHitTestVisible
    {
        &CUIElement::HitTestVisible, // Property method
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.IsHoldingEnabled
    {
        &CUIElement::IsHoldEnabled, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.IsRightTapEnabled
    {
        &CUIElement::IsRightTapEnabled, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.IsTabStop
    {
        &CUIElement::IsTabStopPropertyGetterSetter, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.IsTapEnabled
    {
        &CUIElement::IsTapEnabled, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.KeyboardAcceleratorPlacementMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.KeyboardAcceleratorPlacementTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.KeyboardAccelerators
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.KeyTipHorizontalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.KeyTipPlacementMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.KeyTipTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.KeyTipVerticalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.Lights
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetLightCollectionDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.ManipulationMode
    {
        &CUIElement::ManipulationMode, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.OffsetXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.OffsetYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.Opacity
    {
        (METHODPFN)OFFSET(CUIElement, m_eOpacityPrivate), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetOpacityDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.OpacityAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.OpacityExpression
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.OpacityTransition
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.PointerCaptures
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.Projection
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetProjectionDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.ProtectedCursor
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.RenderSize
    {
        &CUIElement::GetRenderSize, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.RenderTransform
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetTransformDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.RenderTransformOrigin
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetTransformDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.RotationTransition
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.ScaleTransition
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.Shadow
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.TabFocusNavigation
    {
        &CUIElement::TabFocusNavigation, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.TabIndex
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.Transform3D
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetTransform3DDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.Transitions
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.TransitionTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetTransitionTargetDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.TranslationTransition
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.UseLayoutRounding
    {
        &CUIElement::UseLayoutRounding, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.UseSystemFocusVisuals
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.Visibility
    {
        &CUIElement::VisibilityState, // Property method
        &CUIElement::NWSetVisibilityDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusDown
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusDownNavigationStrategy
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusKeyboardNavigation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusLeft
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusLeftNavigationStrategy
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusRight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusRightNavigationStrategy
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusUp
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.UIElement.XYFocusUpNavigationStrategy
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualState.__DeferredSetters
    {
        (METHODPFN)OFFSET(CVisualState, m_pDeferredSetters), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualState.__DeferredStoryboard
    {
        (METHODPFN)OFFSET(CVisualState, m_pDeferredStoryboard), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualState.Setters
    {
        (METHODPFN)OFFSET(CVisualState, m_setters), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualState.StateTriggers
    {
        (METHODPFN)OFFSET(CVisualState, m_pStateTriggerCollection), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualState.Storyboard
    {
        &CVisualState::Storyboard, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualStateGroup.States
    {
        (METHODPFN)OFFSET(CVisualStateGroup, m_pVisualStates), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualStateGroup.Transitions
    {
        (METHODPFN)OFFSET(CVisualStateGroup, m_pTransitions), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualStateManager.CustomVisualStateManager
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualStateManager.VisualStateGroups
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualTransition.From
    {
        (METHODPFN)OFFSET(CVisualTransition, m_strFrom), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualTransition.GeneratedDuration
    {
        (METHODPFN)OFFSET(CVisualTransition, m_duration), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualTransition.GeneratedEasingFunction
    {
        (METHODPFN)OFFSET(CVisualTransition, m_pEasingFunction), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualTransition.Storyboard
    {
        (METHODPFN)OFFSET(CVisualTransition, m_pStoryboard), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.VisualTransition.To
    {
        (METHODPFN)OFFSET(CVisualTransition, m_strTo), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Window.Content
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Window.SystemBackdrop
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Window.Title
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Window.TransparentBackground
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand.AccessKey
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand.Command
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand.Description
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand.IconSource
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand.KeyboardAccelerators
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand.Label
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.AdaptiveTrigger.MinWindowHeight
    {
        (METHODPFN)OFFSET(CAdaptiveTrigger, m_minWindowHeight), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.AdaptiveTrigger.MinWindowWidth
    {
        (METHODPFN)OFFSET(CAdaptiveTrigger, m_minWindowWidth), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ArcSegment.IsLargeArc
    {
        (METHODPFN)OFFSET(CArcSegment, m_bLarge), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ArcSegment.Point
    {
        (METHODPFN)OFFSET(CArcSegment, m_ptBase), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ArcSegment.RotationAngle
    {
        (METHODPFN)OFFSET(CArcSegment, m_eAngle), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ArcSegment.Size
    {
        (METHODPFN)OFFSET(CArcSegment, m_size), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ArcSegment.SweepDirection
    {
        (METHODPFN)OFFSET(CArcSegment, m_bClockwise), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.BackEase.Amplitude
    {
        (METHODPFN)OFFSET(CBackInterpolator, m_fAmplitude), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.Storyboard
    {
        (METHODPFN)OFFSET(CBeginStoryboard, m_pStoryboard), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.BezierSegment.Point1
    {
        (METHODPFN)OFFSET(CBezierSegment, m_ptOne), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.BezierSegment.Point2
    {
        (METHODPFN)OFFSET(CBezierSegment, m_ptTwo), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.BezierSegment.Point3
    {
        (METHODPFN)OFFSET(CBezierSegment, m_ptThree), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.BitmapIconSource.ShowAsMonochrome
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.BitmapIconSource.UriSource
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapSource.PixelHeight
    {
        &CBitmapSource::PixelHeight, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapSource.PixelWidth
    {
        &CBitmapSource::PixelWidth, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Block.HorizontalTextAlignment
    {
        (METHODPFN)OFFSET(CBlock, m_textAlignment), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Block.LineHeight
    {
        (METHODPFN)OFFSET(CBlock, m_lineHeight), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Block.LineStackingStrategy
    {
        (METHODPFN)OFFSET(CBlock, m_lineStackingStrategy), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Block.Margin
    {
        (METHODPFN)OFFSET(CBlock, m_margin), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Block.TextAlignment
    {
        (METHODPFN)OFFSET(CBlock, m_textAlignment), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.BounceEase.Bounces
    {
        (METHODPFN)OFFSET(CBounceInterpolator, m_iBounces), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.BounceEase.Bounciness
    {
        (METHODPFN)OFFSET(CBounceInterpolator, m_fBounciness), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation.By
    {
        (METHODPFN)OFFSET(CColorAnimation, m_vBy), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EasingFunction
    {
        (METHODPFN)OFFSET(CColorAnimation, m_pEasingFunction), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EnableDependentAnimation
    {
        (METHODPFN)OFFSET(CColorAnimation, m_enableDependentAnimation), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation.From
    {
        (METHODPFN)OFFSET(CColorAnimation, m_vFrom), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation.To
    {
        (METHODPFN)OFFSET(CColorAnimation, m_vTo), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.EnableDependentAnimation
    {
        (METHODPFN)OFFSET(CColorAnimationUsingKeyFrames, m_enableDependentAnimation), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames
    {
        (METHODPFN)OFFSET(CColorAnimationUsingKeyFrames, m_pKeyFrames), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterX
    {
        (METHODPFN)OFFSET(CCompositeTransform3D, m_rCenterX), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterY
    {
        (METHODPFN)OFFSET(CCompositeTransform3D, m_rCenterY), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterZ
    {
        (METHODPFN)OFFSET(CCompositeTransform3D, m_rCenterZ), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterZAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationX
    {
        (METHODPFN)OFFSET(CCompositeTransform3D, m_rRotationX), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationY
    {
        (METHODPFN)OFFSET(CCompositeTransform3D, m_rRotationY), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationZ
    {
        (METHODPFN)OFFSET(CCompositeTransform3D, m_rRotationZ), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationZAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleX
    {
        (METHODPFN)OFFSET(CCompositeTransform3D, m_rScaleX), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleY
    {
        (METHODPFN)OFFSET(CCompositeTransform3D, m_rScaleY), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleZ
    {
        (METHODPFN)OFFSET(CCompositeTransform3D, m_rScaleZ), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleZAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateX
    {
        (METHODPFN)OFFSET(CCompositeTransform3D, m_rTranslateX), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateY
    {
        (METHODPFN)OFFSET(CCompositeTransform3D, m_rTranslateY), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateZ
    {
        (METHODPFN)OFFSET(CCompositeTransform3D, m_rTranslateZ), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateZAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition.HorizontalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition.VerticalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ControlTemplate.TargetType
    {
        &CControlTemplate::TargetType, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.CustomResource.ResourceKey
    {
        (METHODPFN)OFFSET(CustomResourceExtension, m_strResourceKey), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.DataTemplate.ExtensionInstance
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.DispatcherTimer.Interval
    {
        (METHODPFN)OFFSET(CDispatcherTimer, m_pInterval), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.By
    {
        (METHODPFN)OFFSET(CDoubleAnimation, m_vBy), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EasingFunction
    {
        (METHODPFN)OFFSET(CDoubleAnimation, m_pEasingFunction), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EnableDependentAnimation
    {
        (METHODPFN)OFFSET(CDoubleAnimation, m_enableDependentAnimation), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.From
    {
        (METHODPFN)OFFSET(CDoubleAnimation, m_vFrom), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.To
    {
        (METHODPFN)OFFSET(CDoubleAnimation, m_vTo), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.EnableDependentAnimation
    {
        (METHODPFN)OFFSET(CDoubleAnimationUsingKeyFrames, m_enableDependentAnimation), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames
    {
        (METHODPFN)OFFSET(CDoubleAnimationUsingKeyFrames, m_pKeyFrames), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Duration.TimeSpan
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children
    {
        (METHODPFN)OFFSET(CDynamicTimeline, m_pChild), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationInSubtreeDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame.EasingFunction
    {
        (METHODPFN)OFFSET(CEasingColorKeyFrame, m_pEasingFunction), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame.EasingFunction
    {
        (METHODPFN)OFFSET(CEasingDoubleKeyFrame, m_pEasingFunction), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame.EasingFunction
    {
        (METHODPFN)OFFSET(CEasingPointKeyFrame, m_pEasingFunction), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.EdgeUIThemeTransition.Edge
    {
        (METHODPFN)OFFSET(CEdgeUIThemeTransition, m_edge), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ElasticEase.Oscillations
    {
        (METHODPFN)OFFSET(CElasticInterpolator, m_iOscillations), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ElasticEase.Springiness
    {
        (METHODPFN)OFFSET(CElasticInterpolator, m_fSpringiness), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.EllipseGeometry.Center
    {
        (METHODPFN)OFFSET(CEllipseGeometry, m_ptCenter), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.EllipseGeometry.RadiusX
    {
        (METHODPFN)OFFSET(CEllipseGeometry, m_eRadiusX), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.EllipseGeometry.RadiusY
    {
        (METHODPFN)OFFSET(CEllipseGeometry, m_eRadiusY), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition.FromHorizontalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition.FromVerticalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition.IsStaggeringEnabled
    {
        (METHODPFN)OFFSET(CEntranceThemeTransition, m_isStaggeringEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.EventTrigger.Actions
    {
        (METHODPFN)OFFSET(CEventTrigger, m_pTriggerActions), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.EventTrigger.RoutedEvent
    {
        (METHODPFN)OFFSET(CEventTrigger, m_strRouted), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ExponentialEase.Exponent
    {
        (METHODPFN)OFFSET(CExponentialInterpolator, m_fExponent), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Flyout.Content
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Flyout.FlyoutPresenterStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.FontFamily
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.FontSize
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.FontStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.FontWeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.Glyph
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.IsTextScaleFactorEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIconSource.MirroredWhenRightToLeft
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.ActualHeight
    {
        &CFrameworkElement::ActualHeight, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.ActualTheme
    {
        &CFrameworkElement::ActualTheme, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.ActualWidth
    {
        &CFrameworkElement::ActualWidth, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.AllowFocusOnInteraction
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.AllowFocusWhenDisabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.AutomationPeerFactoryIndex
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.BringIntoViewDistanceX
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.BringIntoViewDistanceY
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.DataContext
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.EffectiveViewport
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.FlowDirection
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFrameworkElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFlowDirection) // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.FocusVisualMargin
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.FocusVisualPrimaryBrush
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.FocusVisualPrimaryThickness
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.FocusVisualSecondaryBrush
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.FocusVisualSecondaryThickness
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.Height
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_eHeight), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.HorizontalAlignment
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pLayoutProperties), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFrameworkElement::EnsureGroupStorage, // Storage ensure method
        OFFSET(FrameworkElementGroupStorage, m_horizontalAlignment) // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.IsTextScaleFactorEnabledInternal
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFrameworkElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_isTextScaleFactorEnabled) // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.Language
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFrameworkElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_strLanguageString) // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.Margin
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pLayoutProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        &CFrameworkElement::EnsureGroupStorage, // Storage ensure method
        OFFSET(FrameworkElementGroupStorage, m_margin) // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.MaxHeight
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pLayoutProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        &CFrameworkElement::EnsureGroupStorage, // Storage ensure method
        OFFSET(FrameworkElementGroupStorage, m_eMaxHeight) // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.MaxViewport
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.MaxWidth
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pLayoutProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        &CFrameworkElement::EnsureGroupStorage, // Storage ensure method
        OFFSET(FrameworkElementGroupStorage, m_eMaxWidth) // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.MinHeight
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pLayoutProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        &CFrameworkElement::EnsureGroupStorage, // Storage ensure method
        OFFSET(FrameworkElementGroupStorage, m_eMinHeight) // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.MinWidth
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pLayoutProperties), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        &CFrameworkElement::EnsureGroupStorage, // Storage ensure method
        OFFSET(FrameworkElementGroupStorage, m_eMinWidth) // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.Parent
    {
        &CFrameworkElement::Parent, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.RequestedTheme
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.Resources
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.Style
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.Tag
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.Triggers
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.VerticalAlignment
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pLayoutProperties), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFrameworkElement::EnsureGroupStorage, // Storage ensure method
        OFFSET(FrameworkElementGroupStorage, m_verticalAlignment) // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElement.Width
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_eWidth), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer.Owner
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.ActualHeight
    {
        &CLayoutElement::ActualHeight, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.ActualWidth
    {
        &CLayoutElement::ActualWidth, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.Children
    {
        &CUIElement::GetChildren, // Property method
        &CUIElement::NWSetSubgraphDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.Height
    {
        (METHODPFN)OFFSET(CFrameworkElementEx, m_height), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.HorizontalAlignment
    {
        (METHODPFN)OFFSET(CFrameworkElementEx, m_horizontalAlignment), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.Margin
    {
        (METHODPFN)OFFSET(CFrameworkElementEx, m_margin), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.MaxHeight
    {
        (METHODPFN)OFFSET(CFrameworkElementEx, m_maxHeight), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.MaxWidth
    {
        (METHODPFN)OFFSET(CFrameworkElementEx, m_maxWidth), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.MinHeight
    {
        (METHODPFN)OFFSET(CFrameworkElementEx, m_minHeight), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.MinWidth
    {
        (METHODPFN)OFFSET(CFrameworkElementEx, m_minWidth), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.VerticalAlignment
    {
        (METHODPFN)OFFSET(CFrameworkElementEx, m_verticalAlignment), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.Width
    {
        (METHODPFN)OFFSET(CFrameworkElementEx, m_width), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.GeometryGroup.Children
    {
        (METHODPFN)OFFSET(CGeometryGroup, m_pChild), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.GeometryGroup.FillRule
    {
        (METHODPFN)OFFSET(CGeometryGroup, m_fillMode), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.GradientBrush.ColorInterpolationMode
    {
        (METHODPFN)OFFSET(CGradientBrush, m_nInterpolate), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.GradientBrush.GradientStops
    {
        (METHODPFN)OFFSET(CGradientBrush, m_pStops), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.GradientBrush.MappingMode
    {
        (METHODPFN)OFFSET(CGradientBrush, m_nMapping), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.GradientBrush.SpreadMethod
    {
        (METHODPFN)OFFSET(CGradientBrush, m_nSpread), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings.DragItemsCount
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.Item
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.KeyTime.TimeSpan
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.LineGeometry.EndPoint
    {
        (METHODPFN)OFFSET(CLineGeometry, m_ptEnd), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.LineGeometry.StartPoint
    {
        (METHODPFN)OFFSET(CLineGeometry, m_ptStart), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.LineSegment.Point
    {
        (METHODPFN)OFFSET(CLineSegment, m_pt), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings.DragItemsCount
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Matrix3DProjection.ProjectionMatrix
    {
        (METHODPFN)OFFSET(CMatrix3DProjection, m_pMatrix), // Offset. Cast to METHODPFN to force it into the union.
        &CProjection::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyout.Items
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyout.MenuFlyoutPresenterStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.MenuPopupThemeTransition.ClosedRatio
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.MenuPopupThemeTransition.Direction
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.MenuPopupThemeTransition.OpenedLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.EnableDependentAnimation
    {
        (METHODPFN)OFFSET(CObjectAnimationUsingKeyFrames, m_enableDependentAnimation), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames
    {
        (METHODPFN)OFFSET(CObjectAnimationUsingKeyFrames, m_pKeyFrames), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PanelEx.ActualHeight
    {
        &CLayoutElement::ActualHeight, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PanelEx.ActualWidth
    {
        &CLayoutElement::ActualWidth, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PanelEx.Children
    {
        &CUIElement::GetChildren, // Property method
        &CUIElement::NWSetSubgraphDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PanelEx.Height
    {
        (METHODPFN)OFFSET(CPanelEx, m_height), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PanelEx.HorizontalAlignment
    {
        (METHODPFN)OFFSET(CPanelEx, m_horizontalAlignment), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PanelEx.Margin
    {
        (METHODPFN)OFFSET(CPanelEx, m_margin), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PanelEx.MaxHeight
    {
        (METHODPFN)OFFSET(CPanelEx, m_maxHeight), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PanelEx.MaxWidth
    {
        (METHODPFN)OFFSET(CPanelEx, m_maxWidth), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PanelEx.MinHeight
    {
        (METHODPFN)OFFSET(CPanelEx, m_minHeight), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PanelEx.MinWidth
    {
        (METHODPFN)OFFSET(CPanelEx, m_minWidth), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PanelEx.VerticalAlignment
    {
        (METHODPFN)OFFSET(CPanelEx, m_verticalAlignment), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PanelEx.Width
    {
        (METHODPFN)OFFSET(CPanelEx, m_width), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PaneThemeTransition.Edge
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PathGeometry.Figures
    {
        (METHODPFN)OFFSET(CPathGeometry, m_pFigures), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PathGeometry.FillRule
    {
        (METHODPFN)OFFSET(CPathGeometry, m_fillMode), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PathIconSource.Data
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D.Depth
    {
        (METHODPFN)OFFSET(CPerspectiveTransform3D, m_rDepth), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D.OffsetX
    {
        (METHODPFN)OFFSET(CPerspectiveTransform3D, m_rOffsetX), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D.OffsetY
    {
        (METHODPFN)OFFSET(CPerspectiveTransform3D, m_rOffsetY), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform3D::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PickerFlyoutThemeTransition.OffsetFromCenter
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PickerFlyoutThemeTransition.OpenedLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationX
    {
        (METHODPFN)OFFSET(CPlaneProjection, m_rCenterOfRotationX), // Offset. Cast to METHODPFN to force it into the union.
        &CProjection::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationY
    {
        (METHODPFN)OFFSET(CPlaneProjection, m_rCenterOfRotationY), // Offset. Cast to METHODPFN to force it into the union.
        &CProjection::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationZ
    {
        (METHODPFN)OFFSET(CPlaneProjection, m_rCenterOfRotationZ), // Offset. Cast to METHODPFN to force it into the union.
        &CProjection::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.CenterOfRotationZAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetX
    {
        (METHODPFN)OFFSET(CPlaneProjection, m_rGlobalOffsetX), // Offset. Cast to METHODPFN to force it into the union.
        &CProjection::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetY
    {
        (METHODPFN)OFFSET(CPlaneProjection, m_rGlobalOffsetY), // Offset. Cast to METHODPFN to force it into the union.
        &CProjection::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetZ
    {
        (METHODPFN)OFFSET(CPlaneProjection, m_rGlobalOffsetZ), // Offset. Cast to METHODPFN to force it into the union.
        &CProjection::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.GlobalOffsetZAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetX
    {
        (METHODPFN)OFFSET(CPlaneProjection, m_rLocalOffsetX), // Offset. Cast to METHODPFN to force it into the union.
        &CProjection::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetY
    {
        (METHODPFN)OFFSET(CPlaneProjection, m_rLocalOffsetY), // Offset. Cast to METHODPFN to force it into the union.
        &CProjection::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetZ
    {
        (METHODPFN)OFFSET(CPlaneProjection, m_rLocalOffsetZ), // Offset. Cast to METHODPFN to force it into the union.
        &CProjection::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.LocalOffsetZAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.ProjectionMatrix
    {
        &CPlaneProjection::GetProjectionMatrix, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.RotationX
    {
        (METHODPFN)OFFSET(CPlaneProjection, m_rRotationX), // Offset. Cast to METHODPFN to force it into the union.
        &CProjection::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.RotationXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.RotationY
    {
        (METHODPFN)OFFSET(CPlaneProjection, m_rRotationY), // Offset. Cast to METHODPFN to force it into the union.
        &CProjection::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.RotationYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.RotationZ
    {
        (METHODPFN)OFFSET(CPlaneProjection, m_rRotationZ), // Offset. Cast to METHODPFN to force it into the union.
        &CProjection::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PlaneProjection.RotationZAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation.By
    {
        (METHODPFN)OFFSET(CPointAnimation, m_ptBy), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation.EasingFunction
    {
        (METHODPFN)OFFSET(CPointAnimation, m_pEasingFunction), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation.EnableDependentAnimation
    {
        (METHODPFN)OFFSET(CPointAnimation, m_enableDependentAnimation), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation.From
    {
        (METHODPFN)OFFSET(CPointAnimation, m_ptFrom), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation.To
    {
        (METHODPFN)OFFSET(CPointAnimation, m_ptTo), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.EnableDependentAnimation
    {
        (METHODPFN)OFFSET(CPointAnimationUsingKeyFrames, m_enableDependentAnimation), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames
    {
        (METHODPFN)OFFSET(CPointAnimationUsingKeyFrames, m_pKeyFrames), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames.KeyFrames
    {
        (METHODPFN)OFFSET(CPointerAnimationUsingKeyFrames, m_pKeyFrames), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames.PointerSource
    {
        (METHODPFN)OFFSET(CPointerAnimationUsingKeyFrames, m_pointerSource), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PolyBezierSegment.Points
    {
        (METHODPFN)OFFSET(CPolyBezierSegment, m_pPoints), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PolyLineSegment.Points
    {
        (METHODPFN)OFFSET(CPolyLineSegment, m_pPoints), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment.Points
    {
        (METHODPFN)OFFSET(CPolyQuadraticSegment, m_pPoints), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition.FromHorizontalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition.FromVerticalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PowerEase.Power
    {
        (METHODPFN)OFFSET(CPowerInterpolator, m_fPower), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PVLStaggerFunction.Delay
    {
        (METHODPFN)OFFSET(CPVLStaggerFunction, m_delay), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PVLStaggerFunction.DelayReduce
    {
        (METHODPFN)OFFSET(CPVLStaggerFunction, m_delayReduce), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PVLStaggerFunction.Maximum
    {
        (METHODPFN)OFFSET(CPVLStaggerFunction, m_maximum), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.PVLStaggerFunction.Reverse
    {
        (METHODPFN)OFFSET(CPVLStaggerFunction, m_reverse), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.QuadraticBezierSegment.Point1
    {
        (METHODPFN)OFFSET(CQuadraticSegment, m_ptOne), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.QuadraticBezierSegment.Point2
    {
        (METHODPFN)OFFSET(CQuadraticSegment, m_ptTwo), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.RectangleGeometry.RadiusX
    {
        (METHODPFN)OFFSET(CRectangleGeometry, m_eRadiusX), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.RectangleGeometry.RadiusY
    {
        (METHODPFN)OFFSET(CRectangleGeometry, m_eRadiusY), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.RectangleGeometry.Rect
    {
        (METHODPFN)OFFSET(CRectangleGeometry, m_rc), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.RelativeSource.Mode
    {
        (METHODPFN)OFFSET(CRelativeSource, m_eMode), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap.PixelHeight
    {
        &CRenderTargetBitmap::PixelHeight, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.RenderTargetBitmap.PixelWidth
    {
        &CRenderTargetBitmap::PixelWidth, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeTransition.IsStaggeringEnabled
    {
        (METHODPFN)OFFSET(CRepositionThemeTransition, m_isStaggeringEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Setter.Property
    {
        (METHODPFN)OFFSET(CSetter, m_pDependencyPropertyProxy), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Setter.Target
    {
        (METHODPFN)OFFSET(CSetter, m_target), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Setter.Value
    {
        (METHODPFN)OFFSET(CSetter, m_vValue), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush.Color
    {
        (METHODPFN)OFFSET(CSolidColorBrush, m_rgb), // Offset. Cast to METHODPFN to force it into the union.
        &CSolidColorBrush::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush.ColorAAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush.ColorAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush.ColorBAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush.ColorGAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SolidColorBrush.ColorRAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame.KeySpline
    {
        (METHODPFN)OFFSET(CSplineColorKeyFrame, m_pKeySpline), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame.KeySpline
    {
        (METHODPFN)OFFSET(CSplineDoubleKeyFrame, m_pKeySpline), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame.KeySpline
    {
        (METHODPFN)OFFSET(CSplinePointKeyFrame, m_pKeySpline), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.StandardUICommand.Kind
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.StateTrigger.IsActive
    {
        &CStateTrigger::IsActive, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.StaticResource.ResourceKey
    {
        (METHODPFN)OFFSET(CStaticResourceExtension, m_strResourceKey), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.RasterizePixelHeight
    {
        (METHODPFN)OFFSET(CSvgImageSource, m_rasterizeHeight), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.RasterizePixelWidth
    {
        (METHODPFN)OFFSET(CSvgImageSource, m_rasterizeWidth), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.SvgImageSource.UriSource
    {
        (METHODPFN)OFFSET(CSvgImageSource, m_strSource), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SymbolIconSource.Symbol
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.TemplateBinding.Property
    {
        (METHODPFN)OFFSET(CTemplateBindingExtension, m_pSourceProperty), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter.Background
    {
        (METHODPFN)OFFSET(CTextHighlighter, m_background), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter.Foreground
    {
        (METHODPFN)OFFSET(CTextHighlighter, m_foreground), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter.Ranges
    {
        (METHODPFN)OFFSET(CTextHighlighter, m_ranges), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ThemeResource.ResourceKey
    {
        (METHODPFN)OFFSET(CThemeResourceExtension, m_strResourceKey), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ThemeShadow.Receivers
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.TileBrush.AlignmentX
    {
        (METHODPFN)OFFSET(CTileBrush, m_AlignmentX), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.TileBrush.AlignmentY
    {
        (METHODPFN)OFFSET(CTileBrush, m_AlignmentY), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.TileBrush.Stretch
    {
        (METHODPFN)OFFSET(CTileBrush, m_Stretch), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.XamlCompositionBrushBase.FallbackColor
    {
        (METHODPFN)OFFSET(CXamlCompositionBrush, m_fallbackColor), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.AutomationAnnotationCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotationCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Automation.Peers.AutomationPeerCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.Binding.Converter
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.Binding.ConverterLanguage
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.Binding.ConverterParameter
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.Binding.ElementName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.Binding.FallbackValue
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.Binding.Mode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.Binding.Path
    {
        (METHODPFN)OFFSET(CBinding, m_strPath), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.Binding.RelativeSource
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.Binding.Source
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.Binding.TargetNullValue
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Data.Binding.UpdateSourceTrigger
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.AutoPlay
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.CreateOptions
    {
        (METHODPFN)OFFSET(CBitmapImage, m_nCreateOptions), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelHeight
    {
        (METHODPFN)OFFSET(CBitmapImage, m_decodePixelHeight), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelType
    {
        (METHODPFN)OFFSET(CBitmapImage, m_decodePixelType), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelWidth
    {
        (METHODPFN)OFFSET(CBitmapImage, m_decodePixelWidth), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.IsAnimatedBitmap
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.IsPlaying
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Imaging.BitmapImage.UriSource
    {
        (METHODPFN)OFFSET(CBitmapImage, m_strSource), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Border.Background
    {
        (METHODPFN)OFFSET(CBorder, m_pBackgroundBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CBorder::NWSetBackgroundBrushDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Border.BackgroundSizing
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CBorder::NWSetBackgroundBrushDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Border.BackgroundTransition
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Border.BorderBrush
    {
        (METHODPFN)OFFSET(CBorder, m_pBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CBorder::NWSetBorderBrushDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Border.BorderThickness
    {
        (METHODPFN)OFFSET(CBorder, m_borderThickness), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Border.Child
    {
        &CBorder::Child, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Border.ChildTransitions
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Border.CornerRadius
    {
        (METHODPFN)OFFSET(CBorder, m_cornerRadius), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Border.Padding
    {
        (METHODPFN)OFFSET(CBorder, m_padding), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.BrushCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ColumnDefinitionCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.CenterX
    {
        (METHODPFN)OFFSET(CCompositeTransform, m_ptCenter.x), // Offset. Cast to METHODPFN to force it into the union.
        &CCompositeTransform::NWSetDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.CenterXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.CenterY
    {
        (METHODPFN)OFFSET(CCompositeTransform, m_ptCenter.y), // Offset. Cast to METHODPFN to force it into the union.
        &CCompositeTransform::NWSetDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.CenterYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.RotateAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.Rotation
    {
        (METHODPFN)OFFSET(CCompositeTransform, m_eRotation), // Offset. Cast to METHODPFN to force it into the union.
        &CCompositeTransform::NWSetDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.ScaleX
    {
        (METHODPFN)OFFSET(CCompositeTransform, m_eScaleX), // Offset. Cast to METHODPFN to force it into the union.
        &CCompositeTransform::NWSetDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.ScaleXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.ScaleY
    {
        (METHODPFN)OFFSET(CCompositeTransform, m_eScaleY), // Offset. Cast to METHODPFN to force it into the union.
        &CCompositeTransform::NWSetDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.ScaleYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.SkewX
    {
        (METHODPFN)OFFSET(CCompositeTransform, m_eSkewX), // Offset. Cast to METHODPFN to force it into the union.
        &CCompositeTransform::NWSetDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.SkewXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.SkewY
    {
        (METHODPFN)OFFSET(CCompositeTransform, m_eSkewY), // Offset. Cast to METHODPFN to force it into the union.
        &CCompositeTransform::NWSetDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.SkewYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.TranslateX
    {
        (METHODPFN)OFFSET(CCompositeTransform, m_eTranslateX), // Offset. Cast to METHODPFN to force it into the union.
        &CCompositeTransform::NWSetDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.TranslateXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.TranslateY
    {
        (METHODPFN)OFFSET(CCompositeTransform, m_eTranslateY), // Offset. Cast to METHODPFN to force it into the union.
        &CCompositeTransform::NWSetDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.CompositeTransform.TranslateYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.Background
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CContentPresenter::NWSetBackgroundDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.BackgroundSizing
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CContentPresenter::NWSetBackgroundDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.BackgroundTransition
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.BorderBrush
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CContentPresenter::NWSetBorderBrushDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.BorderThickness
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.CharacterSpacing
    {
        (METHODPFN)OFFSET(CContentPresenter, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CContentPresenter::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nCharacterSpacing) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.Content
    {
        &CContentPresenter::Content, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplate
    {
        (METHODPFN)OFFSET(CContentPresenter, m_pContentTemplate), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplateSelector
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
    {
        (METHODPFN)OFFSET(CContentPresenter, m_pContentTransitions), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.CornerRadius
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.FontFamily
    {
        (METHODPFN)OFFSET(CContentPresenter, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CContentPresenter::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_pFontFamily) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.FontSize
    {
        (METHODPFN)OFFSET(CContentPresenter, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CContentPresenter::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_eFontSize) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.FontStretch
    {
        (METHODPFN)OFFSET(CContentPresenter, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CContentPresenter::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontStretch) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.FontStyle
    {
        (METHODPFN)OFFSET(CContentPresenter, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CContentPresenter::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontStyle) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.FontWeight
    {
        (METHODPFN)OFFSET(CContentPresenter, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CContentPresenter::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontWeight) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.Foreground
    {
        (METHODPFN)OFFSET(CContentPresenter, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        &CContentPresenter::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_pForeground) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.HorizontalContentAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.IsTextScaleFactorEnabled
    {
        (METHODPFN)OFFSET(CContentPresenter, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CContentPresenter::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_isTextScaleFactorEnabled) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.LineHeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.LineStackingStrategy
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.MaxLines
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.OpticalMarginAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.Padding
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.SelectedContentTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.TextLineBounds
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.TextWrapping
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.VerticalContentAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.Background
    {
        (METHODPFN)OFFSET(CControl, m_pBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.BackgroundSizing
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.BorderBrush
    {
        (METHODPFN)OFFSET(CControl, m_pBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.BorderThickness
    {
        (METHODPFN)OFFSET(CControl, m_borderThickness), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.CharacterSpacing
    {
        (METHODPFN)OFFSET(CControl, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CControl::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nCharacterSpacing) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.CornerRadius
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.DefaultStyleKey
    {
        (METHODPFN)OFFSET(CControl, m_pDefaultStyleKey), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.DefaultStyleResourceUri
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.ElementSoundMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.FocusTargetDescendant
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.FontFamily
    {
        (METHODPFN)OFFSET(CControl, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CControl::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_pFontFamily) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.FontSize
    {
        (METHODPFN)OFFSET(CControl, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CControl::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_eFontSize) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.FontStretch
    {
        (METHODPFN)OFFSET(CControl, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CControl::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontStretch) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.FontStyle
    {
        (METHODPFN)OFFSET(CControl, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CControl::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontStyle) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.FontWeight
    {
        (METHODPFN)OFFSET(CControl, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CControl::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontWeight) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.Foreground
    {
        (METHODPFN)OFFSET(CControl, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        &CControl::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_pForeground) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.HorizontalContentAlignment
    {
        (METHODPFN)OFFSET(CControl, m_horizontalContentAlignment), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.IsEnabled
    {
        &CControl::Enabled, // Property method
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.IsFocusEngaged
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.IsFocusEngagementEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.IsTemplateFocusTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.IsTemplateKeyTipTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled
    {
        (METHODPFN)OFFSET(CControl, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CControl::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_isTextScaleFactorEnabled) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.Padding
    {
        (METHODPFN)OFFSET(CControl, m_padding), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.RequiresPointer
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.TabNavigation
    {
        &CUIElement::TabFocusNavigation, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.Template
    {
        (METHODPFN)OFFSET(CControl, m_pTemplate), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.TemplateKeyTipTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Control.VerticalContentAlignment
    {
        (METHODPFN)OFFSET(CControl, m_verticalContentAlignment), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.DisplayMemberTemplate.DisplayMemberPath
    {
        (METHODPFN)OFFSET(CDisplayMemberTemplate, m_strMemberPath), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.DoubleCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DragItemThemeAnimation.TargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation.Direction
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation.TargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation.ToOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.EntranceTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.EntranceTargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.ExitTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation.ExitTargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.EntranceTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.EntranceTargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.ExitTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation.ExitTargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation.TargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.FadeInThemeAnimation.TargetName
    {
        (METHODPFN)OFFSET(CFadeInThemeAnimation, m_targetName), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.FadeOutThemeAnimation.TargetName
    {
        (METHODPFN)OFFSET(CFadeOutThemeAnimation, m_targetName), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.FloatCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.GeometryCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.ColorFontPaletteIndex
    {
        (METHODPFN)OFFSET(CGlyphs, m_colorPaletteIndex), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.Fill
    {
        (METHODPFN)OFFSET(CGlyphs, m_pFill), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.FontRenderingEmSize
    {
        (METHODPFN)OFFSET(CGlyphs, m_eFontRenderingEmSize), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.FontUri
    {
        (METHODPFN)OFFSET(CGlyphs, m_strFontUri), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.Indices
    {
        (METHODPFN)OFFSET(CGlyphs, m_strIndices), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.IsColorFontEnabled
    {
        (METHODPFN)OFFSET(CGlyphs, m_isColorFontEnabled), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.OriginX
    {
        (METHODPFN)OFFSET(CGlyphs, m_eOriginX), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.OriginY
    {
        (METHODPFN)OFFSET(CGlyphs, m_eOriginY), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.StyleSimulations
    {
        (METHODPFN)OFFSET(CGlyphs, m_nStyleSimulations), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.UnicodeString
    {
        (METHODPFN)OFFSET(CGlyphs, m_strUnicodeString), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.GradientStopCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.HubSectionCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.IconElement.Foreground
    {
        (METHODPFN)OFFSET(CIconElement, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        &CIconElement::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_pForeground) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Image.NineGrid
    {
        (METHODPFN)OFFSET(CImage, m_ninegridPrivate), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Image.Source
    {
        (METHODPFN)OFFSET(CImage, m_pImageSource), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Image.Stretch
    {
        (METHODPFN)OFFSET(CImage, m_Stretch), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ImageBrush.ImageSource
    {
        (METHODPFN)OFFSET(CImageBrush, m_pImageSource), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.InlineUIContainer.Child
    {
        (METHODPFN)OFFSET(CInlineUIContainer, m_pChild), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.InputScopeNameCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.Footer
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.FooterTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.FooterTransitions
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.HeaderTransitions
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.ItemsPanel
    {
        (METHODPFN)OFFSET(CItemsPresenter, m_pItemsPanelTemplate), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.Padding
    {
        (METHODPFN)OFFSET(CItemsPresenter, m_padding), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.KeyboardAcceleratorCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.EndPoint
    {
        (METHODPFN)OFFSET(CLinearGradientBrush, m_ptEnd), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.LinearGradientBrush.StartPoint
    {
        (METHODPFN)OFFSET(CLinearGradientBrush, m_ptStart), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.MatrixTransform.Matrix
    {
        (METHODPFN)OFFSET(CMatrixTransform, m_pMatrix), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerPresenter.IsFullWindow
    {
        (METHODPFN)OFFSET(CMediaPlayerPresenter, m_isFullWindow), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerPresenter.MediaPlayer
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerPresenter.Stretch
    {
        (METHODPFN)OFFSET(CMediaPlayerPresenter, m_Stretch), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItemBaseCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Panel.Background
    {
        (METHODPFN)OFFSET(CPanel, m_pBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CPanel::NWSetBackgroundDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Panel.BackgroundTransition
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Panel.BorderBrushProtected
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CPanel::NWSetBackgroundDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Panel.BorderThicknessProtected
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Panel.Children
    {
        &CUIElement::GetChildren, // Property method
        &CUIElement::NWSetSubgraphDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Panel.ChildrenTransitions
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Panel.CornerRadiusProtected
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Panel.IsIgnoringTransitions
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Panel.IsItemsHost
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Paragraph.Inlines
    {
        (METHODPFN)OFFSET(CParagraph, m_pInlines), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Paragraph.TextIndent
    {
        (METHODPFN)OFFSET(CParagraph, m_textIndent), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurveSegmentCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PathFigureCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PathSegmentCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.PointCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Input.PointerCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PointerDownThemeAnimation.TargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.PointerKeyFrameCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PointerUpThemeAnimation.TargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation.FromHorizontalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation.FromVerticalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation.TargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.PopOutThemeAnimation.TargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.ActualPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.AssociatedFlyout
    {
        &CPopup::AssociatedFlyout, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.Child
    {
        &CPopup::Child, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.ChildTransitions
    {
        (METHODPFN)OFFSET(CPopup, m_pChildTransitions), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.DesiredPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.DisableOverlayIsLightDismissCheck
    {
        (METHODPFN)OFFSET(CPopup, m_disableOverlayIsLightDismissCheck), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.HorizontalOffset
    {
        (METHODPFN)OFFSET(CPopup, m_eHOffset), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.IsApplicationBarService
    {
        (METHODPFN)OFFSET(CPopup, m_fIsApplicationBarService), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.IsContentDialog
    {
        (METHODPFN)OFFSET(CPopup, m_fIsContentDialog), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.IsLightDismissEnabled
    {
        (METHODPFN)OFFSET(CPopup, m_fIsLightDismissEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.IsOpen
    {
        (METHODPFN)OFFSET(CPopup, m_fIsOpen), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.IsSubMenu
    {
        (METHODPFN)OFFSET(CPopup, m_fIsSubMenu), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.LightDismissOverlayMode
    {
        (METHODPFN)OFFSET(CPopup, m_lightDismissOverlayMode), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.OverlayElement
    {
        (METHODPFN)OFFSET(CPopup, m_overlayElement), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.OverlayInputPassThroughElement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.PlacementTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.ShouldConstrainToRootBounds
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.SystemBackdrop
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.VerticalOffset
    {
        (METHODPFN)OFFSET(CPopup, m_eVOffset), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.RepeatBehavior.Count
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.RepeatBehavior.Duration
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation.FromHorizontalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation.FromVerticalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation.TargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ResourceDictionary.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ResourceDictionary.MergedDictionaries
    {
        (METHODPFN)OFFSET(CResourceDictionary, m_pMergedDictionaries), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ResourceDictionary.Source
    {
        (METHODPFN)OFFSET(CResourceDictionary, m_strSource), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ResourceDictionary.ThemeDictionaries
    {
        (METHODPFN)OFFSET(CResourceDictionary, m_pThemeDictionaries), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.ResourceDictionaryCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.Blocks
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_pBlocks), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.CharacterSpacing
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CRichTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nCharacterSpacing) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.FontFamily
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CRichTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_pFontFamily) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.FontSize
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CRichTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_eFontSize) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.FontStretch
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CRichTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontStretch) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.FontStyle
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CRichTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontStyle) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.FontWeight
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CRichTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontWeight) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.Foreground
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        &CRichTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_pForeground) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.HasOverflowContent
    {
        &CRichTextBlock::HasOverflowContent, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.HorizontalTextAlignment
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_textAlignment), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.IsColorFontEnabled
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_isColorFontEnabled), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.IsTextScaleFactorEnabled
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CRichTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_isTextScaleFactorEnabled) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.IsTextSelectionEnabled
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_isTextSelectionEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.IsTextTrimmed
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_isTextTrimmed), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.LineHeight
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_eLineHeight), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.LineStackingStrategy
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_lineStackingStrategy), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.MaxLines
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_maxLines), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.OpticalMarginAlignment
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_opticalMarginAlignment), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.OverflowContentTarget
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_pOverflowTarget), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.Padding
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_padding), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.SelectedText
    {
        &CRichTextBlock::GetSelectedText, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionFlyout
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionHighlightColor
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_pSelectionHighlightColor), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextAlignment
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_textAlignment), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextDecorations
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CRichTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nTextDecorations) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextHighlighters
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_textHighlighters), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextIndent
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_textIndent), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextLineBounds
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_textLineBounds), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextReadingOrder
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_textReadingOrder), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextTrimming
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_textTrimming), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextWrapping
    {
        (METHODPFN)OFFSET(CRichTextBlock, m_textWrapping), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.HasOverflowContent
    {
        &CRichTextBlockOverflow::HasOverflowContent, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.IsTextTrimmed
    {
        (METHODPFN)OFFSET(CRichTextBlockOverflow, m_isTextTrimmed), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.MaxLines
    {
        (METHODPFN)OFFSET(CRichTextBlockOverflow, m_maxLines), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.OverflowContentTarget
    {
        (METHODPFN)OFFSET(CRichTextBlockOverflow, m_pOverflowTarget), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.Padding
    {
        (METHODPFN)OFFSET(CRichTextBlockOverflow, m_padding), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.RotateTransform.Angle
    {
        (METHODPFN)OFFSET(CRotateTransform, m_eAngle), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.RotateTransform.AngleAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.RotateTransform.CenterX
    {
        (METHODPFN)OFFSET(CRotateTransform, m_ptCenter.x), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.RotateTransform.CenterXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.RotateTransform.CenterY
    {
        (METHODPFN)OFFSET(CRotateTransform, m_ptCenter.y), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.RotateTransform.CenterYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RowDefinitionCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Run.FlowDirection
    {
        (METHODPFN)OFFSET(CRun, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CRun::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFlowDirection) // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Run.Text
    {
        (METHODPFN)OFFSET(CRun, m_strText), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.CenterX
    {
        (METHODPFN)OFFSET(CScaleTransform, m_ptCenter.x), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.CenterXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.CenterY
    {
        (METHODPFN)OFFSET(CScaleTransform, m_ptCenter.y), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.CenterYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.ScaleX
    {
        (METHODPFN)OFFSET(CScaleTransform, m_eScaleX), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.ScaleXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.ScaleY
    {
        (METHODPFN)OFFSET(CScaleTransform, m_eScaleY), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.ScaleTransform.ScaleYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.SetterBaseCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.SetterBaseCollection.IsSealed
    {
        (METHODPFN)OFFSET(CSetterBaseCollection, m_bIsSealed), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Shape.Fill
    {
        (METHODPFN)OFFSET(CShape, m_pFill), // Offset. Cast to METHODPFN to force it into the union.
        &CShape::NWSetFillBrushDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Shape.GeometryTransform
    {
        &CShape::GetShapeGeometryTransform, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Shape.Stretch
    {
        (METHODPFN)OFFSET(CShape, m_Stretch), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Shape.Stroke
    {
        &CShape::Stroke, // Property method
        &CShape::NWSetStrokeBrushDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeDashArray
    {
        &CShape::StrokeDashArray, // Property method
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeDashCap
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeDashOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeEndLineCap
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeLineJoin
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeMiterLimit
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeStartLineCap
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Shape.StrokeThickness
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.AngleX
    {
        (METHODPFN)OFFSET(CSkewTransform, m_eAngleX), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.AngleXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.AngleY
    {
        (METHODPFN)OFFSET(CSkewTransform, m_eAngleY), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.AngleYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.CenterX
    {
        (METHODPFN)OFFSET(CSkewTransform, m_ptCenter.x), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.CenterXAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.CenterY
    {
        (METHODPFN)OFFSET(CSkewTransform, m_ptCenter.y), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.SkewTransform.CenterYAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Span.Inlines
    {
        (METHODPFN)OFFSET(CSpan, m_pInlines), // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ClosedLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ClosedTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ClosedTargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTranslationDirection
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTranslationOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OffsetFromCenter
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OpenedLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OpenedTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OpenedTargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ClosedLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ClosedTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ClosedTargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTranslationDirection
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTranslationOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OffsetFromCenter
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OpenedLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OpenedTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OpenedTargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.StateTriggerCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard.Children
    {
        (METHODPFN)OFFSET(CStoryboard, m_pChild), // Offset. Cast to METHODPFN to force it into the union.
        &CTimeline::SetDCompAnimationInSubtreeDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard.IsEssential
    {
        (METHODPFN)OFFSET(CStoryboard, m_fIsEssential), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard.TargetName
    {
        (METHODPFN)OFFSET(CTimeline, m_strTargetName), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard.TargetProperty
    {
        (METHODPFN)OFFSET(CTimeline, m_strTargetProperty), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.StoryboardCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.FromHorizontalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.FromVerticalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.TargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.TargetName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.ToHorizontalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.ToVerticalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.CharacterSpacing
    {
        (METHODPFN)OFFSET(CTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nCharacterSpacing) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.FontFamily
    {
        (METHODPFN)OFFSET(CTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_pFontFamily) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.FontSize
    {
        (METHODPFN)OFFSET(CTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_eFontSize) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.FontStretch
    {
        (METHODPFN)OFFSET(CTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontStretch) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.FontStyle
    {
        (METHODPFN)OFFSET(CTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontStyle) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.FontWeight
    {
        (METHODPFN)OFFSET(CTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontWeight) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Foreground
    {
        (METHODPFN)OFFSET(CTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        &CTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_pForeground) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.HorizontalTextAlignment
    {
        (METHODPFN)OFFSET(CTextBlock, m_textAlignment), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Inlines
    {
        (METHODPFN)OFFSET(CTextBlock, m_pInlines), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.IsColorFontEnabled
    {
        (METHODPFN)OFFSET(CTextBlock, m_isColorFontEnabled), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.IsTextScaleFactorEnabled
    {
        (METHODPFN)OFFSET(CTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_isTextScaleFactorEnabled) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.IsTextSelectionEnabled
    {
        (METHODPFN)OFFSET(CTextBlock, m_isTextSelectionEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.IsTextTrimmed
    {
        (METHODPFN)OFFSET(CTextBlock, m_isTextTrimmed), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.LineHeight
    {
        (METHODPFN)OFFSET(CTextBlock, m_eLineHeight), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.LineStackingStrategy
    {
        (METHODPFN)OFFSET(CTextBlock, m_lineStackingStrategy), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.MaxLines
    {
        (METHODPFN)OFFSET(CTextBlock, m_maxLines), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.OpticalMarginAlignment
    {
        (METHODPFN)OFFSET(CTextBlock, m_opticalMarginAlignment), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Padding
    {
        (METHODPFN)OFFSET(CTextBlock, m_padding), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.SelectedText
    {
        &CTextBlock::GetSelectedText, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.SelectionFlyout
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.SelectionHighlightColor
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Text
    {
        (METHODPFN)OFFSET(CTextBlock, m_strText), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextAlignment
    {
        (METHODPFN)OFFSET(CTextBlock, m_textAlignment), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextDecorations
    {
        (METHODPFN)OFFSET(CTextBlock, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CTextBlock::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nTextDecorations) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextHighlighters
    {
        (METHODPFN)OFFSET(CTextBlock, m_textHighlighters), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextLineBounds
    {
        (METHODPFN)OFFSET(CTextBlock, m_textLineBounds), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextReadingOrder
    {
        (METHODPFN)OFFSET(CTextBlock, m_textReadingOrder), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextTrimming
    {
        (METHODPFN)OFFSET(CTextBlock, m_textTrimming), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextWrapping
    {
        (METHODPFN)OFFSET(CTextBlock, m_textWrapping), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextElementCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighterCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.TextRangeCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.TimelineCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.TransformCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.TransformGroup.Children
    {
        (METHODPFN)OFFSET(CTransformGroup, m_pChild), // Offset. Cast to METHODPFN to force it into the union.
        &CTransformGroup::NWSetTransformsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.TransformGroup.Value
    {
        &CTransformGroup::GetTransformValue, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.TranslateTransform.X
    {
        (METHODPFN)OFFSET(CTranslateTransform, m_eX), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.TranslateTransform.XAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.TranslateTransform.Y
    {
        (METHODPFN)OFFSET(CTranslateTransform, m_eY), // Offset. Cast to METHODPFN to force it into the union.
        &CTransform::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.TranslateTransform.YAnimation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.TriggerActionCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.TriggerCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.UIElementCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Viewbox.Child
    {
        &CViewbox::Child, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Viewbox.Stretch
    {
        (METHODPFN)OFFSET(CViewbox, m_stretch), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Viewbox.StretchDirection
    {
        (METHODPFN)OFFSET(CViewbox, m_stretchDirection), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.VisualStateCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveStoryboards
    {
        (METHODPFN)OFFSET(CVisualStateGroupCollection, m_pActiveStoryboards), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveTransitions
    {
        (METHODPFN)OFFSET(CVisualStateGroupCollection, m_pActiveTransitions), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredSetters
    {
        (METHODPFN)OFFSET(CVisualStateGroupCollection, m_pDeferredSetters), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredStateTriggers
    {
        (METHODPFN)OFFSET(CVisualStateGroupCollection, m_pDeferredStateTriggers), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Internal.VisualTransitionCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Media.XamlLightCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarSeparator.DynamicOverflowOrder
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarSeparator.IsCompact
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarSeparator.IsInOverflow
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarSeparator.UseOverflowStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.BitmapIcon.ShowAsMonochrome
    {
        (METHODPFN)OFFSET(CBitmapIcon, m_showAsMonochrome), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.BitmapIcon.UriSource
    {
        (METHODPFN)OFFSET(CBitmapIcon, m_strSource), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.CalendarIdentifier
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.CalendarViewStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.Date
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.DateFormat
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.DayOfWeekFormat
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.Description
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.DisplayMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.FirstDayOfWeek
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.HeaderPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsCalendarOpen
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsGroupLabelVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsOutOfScopeEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.IsTodayHighlighted
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.LightDismissOverlayMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.MaxDate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.MinDate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarDatePicker.PlaceholderText
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutBackground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pBlackoutBackground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutForeground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pBlackoutForeground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutStrikethroughBrush
    {
        (METHODPFN)OFFSET(CCalendarView, m_pBlackoutStrikethroughBrush), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarIdentifier
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBackground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pCalendarItemBackground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderBrush
    {
        (METHODPFN)OFFSET(CCalendarView, m_pCalendarItemBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderThickness
    {
        (METHODPFN)OFFSET(CCalendarView, m_calendarItemBorderThickness), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemCornerRadius
    {
        (METHODPFN)OFFSET(CCalendarView, m_calendarItemCornerRadius), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemDisabledBackground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pCalendarItemDisabledBackground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemForeground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pCalendarItemForeground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemHoverBackground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pCalendarItemHoverBackground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemPressedBackground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pCalendarItemPressedBackground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarViewDayItemStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontFamily
    {
        (METHODPFN)OFFSET(CCalendarView, m_pDayItemFontFamily), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontSize
    {
        (METHODPFN)OFFSET(CCalendarView, m_dayItemFontSize), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontStyle
    {
        (METHODPFN)OFFSET(CCalendarView, m_dayItemFontStyle), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontWeight
    {
        (METHODPFN)OFFSET(CCalendarView, m_dayItemFontWeight), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayItemMargin
    {
        (METHODPFN)OFFSET(CCalendarView, m_dayItemMargin), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayOfWeekFormat
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DisabledForeground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pDisabledForeground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DisplayMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstDayOfWeek
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontFamily
    {
        (METHODPFN)OFFSET(CCalendarView, m_pFirstOfMonthLabelFontFamily), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontSize
    {
        (METHODPFN)OFFSET(CCalendarView, m_firstOfMonthLabelFontSize), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontStyle
    {
        (METHODPFN)OFFSET(CCalendarView, m_firstOfMonthLabelFontStyle), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontWeight
    {
        (METHODPFN)OFFSET(CCalendarView, m_firstOfMonthLabelFontWeight), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelMargin
    {
        (METHODPFN)OFFSET(CCalendarView, m_firstOfMonthLabelMargin), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontFamily
    {
        (METHODPFN)OFFSET(CCalendarView, m_pFirstOfYearDecadeLabelFontFamily), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontSize
    {
        (METHODPFN)OFFSET(CCalendarView, m_firstOfYearDecadeLabelFontSize), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontStyle
    {
        (METHODPFN)OFFSET(CCalendarView, m_firstOfYearDecadeLabelFontStyle), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontWeight
    {
        (METHODPFN)OFFSET(CCalendarView, m_firstOfYearDecadeLabelFontWeight), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelMargin
    {
        (METHODPFN)OFFSET(CCalendarView, m_firstOfYearDecadeLabelMargin), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FocusBorderBrush
    {
        (METHODPFN)OFFSET(CCalendarView, m_pFocusBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.HorizontalDayItemAlignment
    {
        (METHODPFN)OFFSET(CCalendarView, m_horizontalDayItemAlignment), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.HorizontalFirstOfMonthLabelAlignment
    {
        (METHODPFN)OFFSET(CCalendarView, m_horizontalFirstOfMonthLabelAlignment), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.HoverBorderBrush
    {
        (METHODPFN)OFFSET(CCalendarView, m_pHoverBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.IsGroupLabelVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.IsOutOfScopeEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.IsTodayHighlighted
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MaxDate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MinDate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontFamily
    {
        (METHODPFN)OFFSET(CCalendarView, m_pMonthYearItemFontFamily), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontSize
    {
        (METHODPFN)OFFSET(CCalendarView, m_monthYearItemFontSize), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontStyle
    {
        (METHODPFN)OFFSET(CCalendarView, m_monthYearItemFontStyle), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontWeight
    {
        (METHODPFN)OFFSET(CCalendarView, m_monthYearItemFontWeight), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemMargin
    {
        (METHODPFN)OFFSET(CCalendarView, m_monthYearItemMargin), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.NumberOfWeeksInView
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeBackground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pOutOfScopeBackground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeForeground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pOutOfScopeForeground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeHoverForeground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pOutOfScopeHoverForeground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopePressedForeground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pOutOfScopePressedForeground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.PressedBorderBrush
    {
        (METHODPFN)OFFSET(CCalendarView, m_pPressedBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.PressedForeground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pPressedForeground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedBorderBrush
    {
        (METHODPFN)OFFSET(CCalendarView, m_pSelectedBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedDates
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledBorderBrush
    {
        (METHODPFN)OFFSET(CCalendarView, m_pSelectedDisabledBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledForeground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pSelectedDisabledForeground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedForeground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pSelectedForeground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverBorderBrush
    {
        (METHODPFN)OFFSET(CCalendarView, m_pSelectedHoverBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverForeground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pSelectedHoverForeground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedBorderBrush
    {
        (METHODPFN)OFFSET(CCalendarView, m_pSelectedPressedBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedForeground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pSelectedPressedForeground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectionMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TemplateSettings
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBackground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pTodayBackground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutBackground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pTodayBlackoutBackground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutForeground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pTodayBlackoutForeground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayDisabledBackground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pTodayDisabledBackground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayFontWeight
    {
        (METHODPFN)OFFSET(CCalendarView, m_todayFontWeight), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayForeground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pTodayForeground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBackground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pTodayHoverBackground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBorderBrush
    {
        (METHODPFN)OFFSET(CCalendarView, m_pTodayHoverBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBackground
    {
        (METHODPFN)OFFSET(CCalendarView, m_pTodayPressedBackground), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBorderBrush
    {
        (METHODPFN)OFFSET(CCalendarView, m_pTodayPressedBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodaySelectedInnerBorderBrush
    {
        (METHODPFN)OFFSET(CCalendarView, m_pTodaySelectedInnerBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.VerticalDayItemAlignment
    {
        (METHODPFN)OFFSET(CCalendarView, m_verticalDayItemAlignment), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.VerticalFirstOfMonthLabelAlignment
    {
        (METHODPFN)OFFSET(CCalendarView, m_verticalFirstOfMonthLabelAlignment), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Canvas.Left
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetTransformDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Canvas.Top
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetTransformDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Canvas.ZIndex
    {
        &CUIElement::ZIndex, // Property method
        &CUIElement::NWSetTransformDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.Accent
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_Accent>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.AltHigh
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_AltHigh>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.AltLow
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_AltLow>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.AltMedium
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_AltMedium>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.AltMediumHigh
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_AltMediumHigh>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.AltMediumLow
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_AltMediumLow>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.BaseHigh
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_BaseHigh>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.BaseLow
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_BaseLow>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.BaseMedium
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_BaseMedium>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.BaseMediumHigh
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_BaseMediumHigh>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.BaseMediumLow
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_BaseMediumLow>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeAltLow
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ChromeAltLow>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeBlackHigh
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ChromeBlackHigh>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeBlackLow
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ChromeBlackLow>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeBlackMedium
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ChromeBlackMedium>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeBlackMediumLow
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ChromeBlackMediumLow>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeDisabledHigh
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ChromeDisabledHigh>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeDisabledLow
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ChromeDisabledLow>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeGray
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ChromeGray>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeHigh
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ChromeHigh>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeLow
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ChromeLow>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeMedium
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ChromeMedium>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeMediumLow
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ChromeMediumLow>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ChromeWhite
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ChromeWhite>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ErrorText
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ErrorText>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ListLow
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ListLow>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.ColorPaletteResources.ListMedium
    {
        &CColorPaletteResources::Color<KnownPropertyIndex::ColorPaletteResources_ListMedium>, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CommandBarElementCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CommandingContainer.CommandingContainer
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CommandingContainer.CommandingTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.Content
    {
        &CContentControl::Content, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate
    {
        (METHODPFN)OFFSET(CContentControl, m_pContentTemplate), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplateSelector
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
    {
        (METHODPFN)OFFSET(CContentControl, m_pContentTransitions), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.SelectedContentTemplate
    {
        (METHODPFN)OFFSET(CContentControl, m_pSelectedContentTemplate), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.CalendarIdentifier
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.Date
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.DayFormat
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.DayVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.HeaderPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.LightDismissOverlayMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.MaxYear
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.MinYear
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.MonthFormat
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.MonthVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.Orientation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.SelectedDate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.YearFormat
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.DatePicker.YearVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.DependencyObjectCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.FontFamily
    {
        (METHODPFN)OFFSET(CFontIcon, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFontIcon::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_pFontFamily) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.FontSize
    {
        (METHODPFN)OFFSET(CFontIcon, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFontIcon::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_eFontSize) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.FontStyle
    {
        (METHODPFN)OFFSET(CFontIcon, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFontIcon::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontStyle) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.FontWeight
    {
        (METHODPFN)OFFSET(CFontIcon, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFontIcon::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_nFontWeight) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.Glyph
    {
        (METHODPFN)OFFSET(CFontIcon, m_strGlyph), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.IsTextScaleFactorEnabled
    {
        (METHODPFN)OFFSET(CFontIcon, m_pTextFormatting), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFontIcon::EnsureTextFormatting, // Storage ensure method
        OFFSET(TextFormatting, m_isTextScaleFactorEnabled) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.MirroredWhenRightToLeft
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Grid.BackgroundSizing
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CPanel::NWSetBackgroundDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Grid.BorderBrush
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CPanel::NWSetBorderBrushDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Grid.BorderThickness
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Grid.Column
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pLayoutProperties), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFrameworkElement::EnsureGroupStorage, // Storage ensure method
        OFFSET(FrameworkElementGroupStorage, m_nGridColumn) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions
    {
        (METHODPFN)OFFSET(CGrid, m_pColumnDefinitions), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Grid.ColumnSpacing
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Grid.ColumnSpan
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pLayoutProperties), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFrameworkElement::EnsureGroupStorage, // Storage ensure method
        OFFSET(FrameworkElementGroupStorage, m_nGridColumnSpan) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Grid.CornerRadius
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Grid.Padding
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Grid.Row
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pLayoutProperties), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFrameworkElement::EnsureGroupStorage, // Storage ensure method
        OFFSET(FrameworkElementGroupStorage, m_nGridRow) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Grid.RowDefinitions
    {
        (METHODPFN)OFFSET(CGrid, m_pRowDefinitions), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Grid.RowSpacing
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Grid.RowSpan
    {
        (METHODPFN)OFFSET(CFrameworkElement, m_pLayoutProperties), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        &CFrameworkElement::EnsureGroupStorage, // Storage ensure method
        OFFSET(FrameworkElementGroupStorage, m_nGridRowSpan) // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Hub.DefaultSectionIndex
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Hub.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Hub.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Hub.IsActiveView
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Hub.IsZoomedInView
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Hub.Orientation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Hub.SectionHeaders
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Hub.Sections
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Hub.SectionsInView
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Hub.SemanticZoomOwner
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.HubSection.ContentTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.HubSection.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.HubSection.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.HubSection.IsHeaderInteractive
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.ElementSoundMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.FocusState
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.IsTabStop
    {
        (METHODPFN)OFFSET(CHyperlink, m_isTabStop), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.NavigateUri
    {
        (METHODPFN)OFFSET(CHyperlink, m_strNavigateUri), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.TabIndex
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.UnderlineStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusDown
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusDownNavigationStrategy
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusLeft
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusLeftNavigationStrategy
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusRight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusRightNavigationStrategy
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusUp
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.Hyperlink.XYFocusUpNavigationStrategy
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.IconSourceElement.IconSource
    {
        (METHODPFN)OFFSET(CIconSourceElement, m_iconSource), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.DisplayMemberPath
    {
        (METHODPFN)OFFSET(CItemsControl, m_strDisplayMemberPath), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.GroupStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.GroupStyleSelector
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.IsGrouping
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.IsItemsHostInvalid
    {
        (METHODPFN)OFFSET(CItemsControl, m_bItemsHostInvalid), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerStyleSelector
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions
    {
        (METHODPFN)OFFSET(CItemsControl, m_pItemContainerTransitions), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.Items
    {
        &CItemsControl::GetItems, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemsHost
    {
        (METHODPFN)OFFSET(CItemsControl, m_pItemsHost), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemsPanel
    {
        (METHODPFN)OFFSET(CItemsControl, m_pItemsPanelTemplate), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSource
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemTemplate
    {
        (METHODPFN)OFFSET(CItemsControl, m_pItemTemplate), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemTemplateSelector
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Line.X1
    {
        (METHODPFN)OFFSET(CLine, m_eX1), // Offset. Cast to METHODPFN to force it into the union.
        &CShape::NWSetGeometryDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Line.X2
    {
        (METHODPFN)OFFSET(CLine, m_eX2), // Offset. Cast to METHODPFN to force it into the union.
        &CShape::NWSetGeometryDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Line.Y1
    {
        (METHODPFN)OFFSET(CLine, m_eY1), // Offset. Cast to METHODPFN to force it into the union.
        &CShape::NWSetGeometryDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Line.Y2
    {
        (METHODPFN)OFFSET(CLine, m_eY2), // Offset. Cast to METHODPFN to force it into the union.
        &CShape::NWSetGeometryDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.AreTransportControlsEnabled
    {
        (METHODPFN)OFFSET(CMediaPlayerElement, m_areTransportControlsEnabled), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.AutoPlay
    {
        (METHODPFN)OFFSET(CMediaPlayerElement, m_fAutoPlay), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.IsFullWindow
    {
        (METHODPFN)OFFSET(CMediaPlayerElement, m_isFullWindow), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.MediaPlayer
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CMediaPlayerElement::NWSetMediaSourceDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.PosterSource
    {
        (METHODPFN)OFFSET(CMediaPlayerElement, m_pPosterSource), // Offset. Cast to METHODPFN to force it into the union.
        &CMediaPlayerElement::NWSetMediaSourceDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.Source
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.Stretch
    {
        (METHODPFN)OFFSET(CMediaPlayerElement, m_Stretch), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.TransportControls
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.FastPlayFallbackBehaviour
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsCompact
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastForwardButtonVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastForwardEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastRewindButtonVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsFastRewindEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsNextTrackButtonVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsPlaybackRateButtonVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsPlaybackRateEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsPreviousTrackButtonVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsRepeatButtonVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsRepeatEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSeekBarVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSeekEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipBackwardButtonVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipBackwardEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipForwardButtonVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsSkipForwardEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsStopButtonVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsStopEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsVolumeButtonVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsVolumeEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsZoomButtonVisible
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.IsZoomEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MediaTransportControls.ShowAndHideAutomatically
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ModernCollectionBasePanel.AreStickyGroupHeadersEnabledBase
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.CanPasteClipboardContent
    {
        &CPasswordBox::CanPasteClipboardContent, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.Description
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.ErrorTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.HasValidationErrors
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.HeaderPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.InputScope
    {
        (METHODPFN)OFFSET(CPasswordBox, m_pInputScope), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.InputValidationKind
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.InputValidationMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.IsPasswordRevealButtonEnabled
    {
        (METHODPFN)OFFSET(CPasswordBox, m_fRevealButtonEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.MaxLength
    {
        (METHODPFN)OFFSET(CPasswordBox, m_iMaxLength), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.Password
    {
        &CPasswordBox::Password, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.PasswordChar
    {
        (METHODPFN)OFFSET(CPasswordBox, m_strPasswordChar), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.PasswordRevealMode
    {
        (METHODPFN)OFFSET(CPasswordBox, m_passwordRevealMode), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.PlaceholderText
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.PreventKeyboardDisplayOnProgrammaticFocus
    {
        (METHODPFN)OFFSET(CPasswordBox, m_bPreventKeyboardDisplayOnProgrammaticFocus), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.SelectionFlyout
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.SelectionHighlightColor
    {
        (METHODPFN)OFFSET(CPasswordBox, m_pSelectionHighlightColor), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.TextReadingOrder
    {
        (METHODPFN)OFFSET(CPasswordBox, m_textReadingOrder), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.ValidationCommand
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.ValidationContext
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.ValidationErrors
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Path.Data
    {
        (METHODPFN)OFFSET(CPath, m_pGeometryData), // Offset. Cast to METHODPFN to force it into the union.
        &CShape::NWSetGeometryDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.PathIcon.Data
    {
        (METHODPFN)OFFSET(CPathIcon, m_pData), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Polygon.FillRule
    {
        (METHODPFN)OFFSET(CPolygon, m_nFillRule), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Polygon.Points
    {
        (METHODPFN)OFFSET(CPolygon, m_pPoints), // Offset. Cast to METHODPFN to force it into the union.
        &CShape::NWSetGeometryDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Polyline.FillRule
    {
        (METHODPFN)OFFSET(CPolyline, m_nFillRule), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Polyline.Points
    {
        (METHODPFN)OFFSET(CPolyline, m_pPoints), // Offset. Cast to METHODPFN to force it into the union.
        &CShape::NWSetGeometryDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase.LargeChange
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase.Maximum
    {
        (METHODPFN)OFFSET(CRangeBase, m_maximum), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase.Minimum
    {
        (METHODPFN)OFFSET(CRangeBase, m_minimum), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase.SmallChange
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RangeBase.Value
    {
        (METHODPFN)OFFSET(CRangeBase, m_value), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Rectangle.RadiusX
    {
        (METHODPFN)OFFSET(CRectangle, m_eRadiusX), // Offset. Cast to METHODPFN to force it into the union.
        &CShape::NWSetGeometryDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Shapes.Rectangle.RadiusY
    {
        (METHODPFN)OFFSET(CRectangle, m_eRadiusY), // Offset. Cast to METHODPFN to force it into the union.
        &CShape::NWSetGeometryDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.Above
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignBottomWith
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignBottomWithPanel
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignHorizontalCenterWith
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignHorizontalCenterWithPanel
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignLeftWith
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignLeftWithPanel
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignRightWith
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignRightWithPanel
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignTopWith
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignTopWithPanel
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignVerticalCenterWith
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.AlignVerticalCenterWithPanel
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.BackgroundSizing
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CPanel::NWSetBackgroundDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.Below
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.BorderBrush
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CPanel::NWSetBorderBrushDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.BorderThickness
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.CornerRadius
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.LeftOf
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.Padding
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RelativePanel.RightOf
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.AcceptsReturn
    {
        (METHODPFN)OFFSET(CRichEditBox, m_bAcceptsReturn), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.CharacterCasing
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.ClipboardCopyFormat
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.Description
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.DesiredCandidateWindowAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.DisabledFormattingAccelerators
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.HeaderPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.HorizontalTextAlignment
    {
        (METHODPFN)OFFSET(CRichEditBox, m_textAlignment), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.InputScope
    {
        (METHODPFN)OFFSET(CRichEditBox, m_pInputScope), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.IsColorFontEnabled
    {
        (METHODPFN)OFFSET(CRichEditBox, m_isColorFontEnabled), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.IsReadOnly
    {
        (METHODPFN)OFFSET(CRichEditBox, m_bIsReadOnly), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.IsSpellCheckEnabled
    {
        (METHODPFN)OFFSET(CRichEditBox, m_isSpellCheckEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.IsTelemetryCollectionEnabled
    {
        (METHODPFN)OFFSET(CRichEditBox, m_bIsTelemetryCollectionEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.IsTextPredictionEnabled
    {
        (METHODPFN)OFFSET(CRichEditBox, m_isTextPredictionEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.MaxLength
    {
        (METHODPFN)OFFSET(CRichEditBox, m_iMaxLength), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.PlaceholderText
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.PreventKeyboardDisplayOnProgrammaticFocus
    {
        (METHODPFN)OFFSET(CRichEditBox, m_bPreventKeyboardDisplayOnProgrammaticFocus), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.ProofingMenuFlyout
    {
        &CTextBoxBase::GetProofingMenuFlyout, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.SelectionFlyout
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColor
    {
        (METHODPFN)OFFSET(CRichEditBox, m_pSelectionHighlightColor), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColorWhenNotFocused
    {
        (METHODPFN)OFFSET(CRichEditBox, m_pSelectionHighlightColorWhenNotFocused), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.TextAlignment
    {
        (METHODPFN)OFFSET(CRichEditBox, m_textAlignment), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.TextReadingOrder
    {
        (METHODPFN)OFFSET(CRichEditBox, m_textReadingOrder), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.TextWrapping
    {
        (METHODPFN)OFFSET(CRichEditBox, m_textWrapping), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollContentPresenter.CanContentRenderOutsideBounds
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollContentPresenter.SizesContentToTemplatedParent
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom.CanChangeViews
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom.IsZoomedInViewActive
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom.IsZoomOutButtonEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom.ZoomedInView
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SemanticZoom.ZoomedOutView
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SplitView.CompactPaneLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SplitView.Content
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SplitView.DisplayMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SplitView.IsPaneOpen
    {
        (METHODPFN)OFFSET(CSplitView, m_isPaneOpen), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SplitView.LightDismissOverlayMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SplitView.OpenPaneLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SplitView.Pane
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SplitView.PaneBackground
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SplitView.PanePlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SplitView.TemplateSettings
    {
        (METHODPFN)OFFSET(CSplitView, m_pTemplateSettings), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.AreScrollSnapPointsRegular
    {
        (METHODPFN)OFFSET(CStackPanel, m_bAreScrollSnapPointsRegular), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.BackgroundSizing
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CPanel::NWSetBackgroundDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.BorderBrush
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CPanel::NWSetBorderBrushDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.BorderThickness
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.CornerRadius
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.Orientation
    {
        (METHODPFN)OFFSET(CStackPanel, m_orientation), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.Padding
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.StackPanel.Spacing
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SymbolIcon.Symbol
    {
        (METHODPFN)OFFSET(CSymbolIcon, m_nSymbol), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.AcceptsReturn
    {
        (METHODPFN)OFFSET(CTextBox, m_bAcceptsReturn), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.CanPasteClipboardContent
    {
        &CTextBox::CanPasteClipboardContent, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.CanRedo
    {
        &CTextBox::CanRedo, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.CanUndo
    {
        &CTextBox::CanUndo, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.CharacterCasing
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.Description
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.DesiredCandidateWindowAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.ErrorTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.HasValidationErrors
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.HeaderPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.HorizontalTextAlignment
    {
        (METHODPFN)OFFSET(CTextBox, m_textAlignment), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.InputScope
    {
        (METHODPFN)OFFSET(CTextBox, m_pInputScope), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.InputValidationKind
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.InputValidationMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.IsColorFontEnabled
    {
        (METHODPFN)OFFSET(CTextBox, m_isColorFontEnabled), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.IsCoreDesktopPopupMenuEnabled
    {
        (METHODPFN)OFFSET(CTextBox, m_isDesktopPopupMenuEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.IsReadOnly
    {
        (METHODPFN)OFFSET(CTextBox, m_bIsReadOnly), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.IsSpellCheckEnabled
    {
        (METHODPFN)OFFSET(CTextBox, m_isSpellCheckEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.IsTelemetryCollectionEnabled
    {
        (METHODPFN)OFFSET(CTextBox, m_bIsTelemetryCollectionEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.IsTextPredictionEnabled
    {
        (METHODPFN)OFFSET(CTextBox, m_isTextPredictionEnabled), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.MaxLength
    {
        (METHODPFN)OFFSET(CTextBox, m_iMaxLength), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.PlaceholderForeground
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.PlaceholderText
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.PreventEditFocusLoss
    {
        (METHODPFN)OFFSET(CTextBox, m_preventEditFocusLoss), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.PreventKeyboardDisplayOnProgrammaticFocus
    {
        (METHODPFN)OFFSET(CTextBox, m_bPreventKeyboardDisplayOnProgrammaticFocus), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.ProofingMenuFlyout
    {
        &CTextBoxBase::GetProofingMenuFlyout, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectedText
    {
        (METHODPFN)OFFSET(CTextBox, m_strSelectedText), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionFlyout
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColor
    {
        (METHODPFN)OFFSET(CTextBox, m_pSelectionHighlightColor), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColorWhenNotFocused
    {
        (METHODPFN)OFFSET(CTextBox, m_pSelectionHighlightColorWhenNotFocused), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionLength
    {
        (METHODPFN)OFFSET(CTextBox, m_iSelectionLength), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionStart
    {
        (METHODPFN)OFFSET(CTextBox, m_iSelectionStart), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.Text
    {
        (METHODPFN)OFFSET(CTextBox, m_strText), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.TextAlignment
    {
        (METHODPFN)OFFSET(CTextBox, m_textAlignment), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.TextReadingOrder
    {
        (METHODPFN)OFFSET(CTextBox, m_textReadingOrder), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.TextWrapping
    {
        (METHODPFN)OFFSET(CTextBox, m_textWrapping), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.ValidationCommand
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.ValidationContext
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TextBox.ValidationErrors
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Thumb.IsDragging
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.TickBar.Fill
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.ClockIdentifier
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.HeaderPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.LightDismissOverlayMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.MinuteIncrement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.SelectedTime
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.TimePicker.Time
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.HeaderPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.IsOn
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.OffContent
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.OffContentTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.OnContent
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.OnContentTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToggleSwitch.TemplateSettings
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.UserControl.Content
    {
        &CUserControl::Content, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.ColumnSpan
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.HorizontalChildrenAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.ItemHeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.ItemWidth
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.MaximumRowsOrColumns
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.Orientation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.RowSpan
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid.VerticalChildrenAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBar.ClosedDisplayMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBar.IsOpen
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBar.IsSticky
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBar.LightDismissOverlayMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBar.TemplateSettings
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarElementContainer.DynamicOverflowOrder
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarElementContainer.IsCompact
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarElementContainer.IsInOverflow
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarElementContainer.UseOverflowStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.AutoMaximizeSuggestionArea
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.Description
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.ErrorTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.HasValidationErrors
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.HeaderPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.InputValidationKind
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.InputValidationMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.IsSuggestionListOpen
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.LightDismissOverlayMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.MaxSuggestionListHeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.PlaceholderText
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.QueryIcon
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.Text
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.TextBoxStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.TextMemberPath
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.UpdateTextOnSelect
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.ValidationCommand
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.ValidationContext
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AutoSuggestBox.ValidationErrors
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.BlockCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.ClickMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.Command
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.CommandParameter
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.IsPointerOver
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.IsPressed
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.CacheLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.Cols
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.ItemMinHeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.ItemMinWidth
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.Orientation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.Rows
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel.StartIndex
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDayItem.Date
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CalendarViewDayItem.IsBlackout
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.CalendarViewItem.Date
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonCommand
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonCommandParameter
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.CloseButtonText
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.DefaultButton
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.FullSizeDesired
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.IsPrimaryButtonEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.IsSecondaryButtonEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonCommand
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonCommandParameter
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.PrimaryButtonText
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonCommand
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonCommandParameter
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.SecondaryButtonText
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.Title
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ContentDialog.TitleTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FlyoutPresenter.IsDefaultShadowEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Frame.BackStack
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Frame.BackStackDepth
    {
        (METHODPFN)OFFSET(CFrame, m_backStackDepth), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Frame.CacheSize
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Frame.CanGoBack
    {
        (METHODPFN)OFFSET(CFrame, m_canGoBack), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Frame.CanGoForward
    {
        (METHODPFN)OFFSET(CFrame, m_canGoForward), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Frame.CurrentSourcePageType
    {
        (METHODPFN)OFFSET(CFrame, m_currentSourcePageType), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Frame.ForwardStack
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Frame.IsNavigationStackEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Frame.SourcePageType
    {
        (METHODPFN)OFFSET(CFrame, m_sourcePageType), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckBrush
    {
        (METHODPFN)OFFSET(CGridViewItemChrome, m_pCheckBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckHintBrush
    {
        (METHODPFN)OFFSET(CGridViewItemChrome, m_pCheckHintBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckSelectingBrush
    {
        (METHODPFN)OFFSET(CGridViewItemChrome, m_pCheckSelectingBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.ContentMargin
    {
        (METHODPFN)OFFSET(CGridViewItemChrome, m_contentMargin), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DisabledOpacity
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragBackground
    {
        (METHODPFN)OFFSET(CGridViewItemChrome, m_pDragBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragForeground
    {
        (METHODPFN)OFFSET(CGridViewItemChrome, m_pDragForeground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragOpacity
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.FocusBorderBrush
    {
        (METHODPFN)OFFSET(CGridViewItemChrome, m_pFocusBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterHorizontalContentAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterPadding
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterVerticalContentAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PlaceholderBackground
    {
        (METHODPFN)OFFSET(CGridViewItemChrome, m_pPlaceholderBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackground
    {
        (METHODPFN)OFFSET(CGridViewItemChrome, m_pPointerOverBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackgroundMargin
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.ReorderHintOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBackground
    {
        (METHODPFN)OFFSET(CGridViewItemChrome, m_pSelectedBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBorderThickness
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedForeground
    {
        (METHODPFN)OFFSET(CGridViewItemChrome, m_pSelectedForeground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBackground
    {
        (METHODPFN)OFFSET(CGridViewItemChrome, m_pSelectedPointerOverBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBorderBrush
    {
        (METHODPFN)OFFSET(CGridViewItemChrome, m_pSelectedPointerOverBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectionCheckMarkVisualEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Documents.InlineCollection.ContentProperty
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CDependencyObject::NWSetRenderDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel.AreStickyGroupHeadersEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel.CacheLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel.GroupHeaderPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel.GroupPadding
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel.ItemsUpdatingScrollMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsStackPanel.Orientation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.AreStickyGroupHeadersEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.CacheLength
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.GroupHeaderPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.GroupPadding
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.ItemHeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.ItemWidth
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.MaximumRowsOrColumns
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ItemsWrapGrid.Orientation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBorderBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckBoxBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckBoxBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxCornerRadius
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBorderBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckBoxDisabledBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckBoxDisabledBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBorderBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckBoxPointerOverBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckBoxPointerOverBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBorderBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckBoxPressedBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckBoxPressedBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckBoxSelectedBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedDisabledBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckBoxSelectedDisabledBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPointerOverBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckBoxSelectedPointerOverBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPressedBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckBoxSelectedPressedBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckDisabledBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckDisabledBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckHintBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckHintBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckMode
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_checkMode), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckPressedBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckPressedBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckSelectingBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pCheckSelectingBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ContentMargin
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_contentMargin), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DisabledOpacity
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragBackground
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pDragBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragForeground
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pDragForeground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragOpacity
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusBorderBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pFocusBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusSecondaryBorderBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pFocusSecondaryBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterHorizontalContentAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterPadding
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterVerticalContentAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PlaceholderBackground
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pPlaceholderBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackground
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pPointerOverBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackgroundMargin
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBorderBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pPointerOverBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverForeground
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pPointerOverForeground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PressedBackground
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pPressedBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ReorderHintOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBackground
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBackgroundShowsAboveContent
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBorderBrush
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBorderThickness
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBackground
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectedBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectedBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderThickness
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBackground
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectedDisabledBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBorderBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectedDisabledBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedForeground
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectedForeground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedInnerBorderBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectedInnerBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBackground
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectedPointerOverBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBorderBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectedPointerOverBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBackground
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectedPressedBackground), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBorderBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectedPressedBorderBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionCheckMarkVisualEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectionIndicatorBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorCornerRadius
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorDisabledBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectionIndicatorDisabledBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPointerOverBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectionIndicatorPointerOverBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPressedBrush
    {
        (METHODPFN)OFFSET(CListViewItemChrome, m_pSelectionIndicatorPressedBrush), // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorVisualEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CListViewBaseItemChrome::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.Command
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.CommandParameter
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.Icon
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.KeyboardAcceleratorTextOverride
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.PreventDismissOnPointer
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.TemplateSettings
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutItem.Text
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter.IsDefaultShadowEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter.SystemBackdrop
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter.TemplateSettings
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem.Icon
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem.Items
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem.Text
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel.IsContainerGeneratedForInsert
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Page.BottomAppBar
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Page.Frame
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Page.NavigationCacheMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Page.TopAppBar
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.IndicatorMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.Orientation
    {
        (METHODPFN)OFFSET(CScrollBar, m_orientation), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.ViewportSize
    {
        (METHODPFN)OFFSET(CScrollBar, m_viewportSize), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector.IsSelectionActive
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedIndex
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItem
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValue
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValuePath
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.SelectorItem.IsSelected
    {
        (METHODPFN)OFFSET(CSelectorItem, m_isSelected), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Slider.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Slider.HeaderPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Slider.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Slider.IntermediateValue
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Slider.IsDirectionReversed
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Slider.IsThumbToolTipEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Slider.Orientation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Slider.SnapsTo
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Slider.StepFrequency
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Slider.ThumbToolTipValueConverter
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Slider.TickFrequency
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Slider.TickPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SwapChainPanel.CompositionScaleX
    {
        &CSwapChainPanel::GetCompositionScaleX, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.SwapChainPanel.CompositionScaleY
    {
        &CSwapChainPanel::GetCompositionScaleY, // Property method
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.HorizontalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.IsOpen
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.Placement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.PlacementRect
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.PlacementTarget
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.TemplateSettings
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToolTip.VerticalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.WindowChrome.CaptionVisibility
    {
        (METHODPFN)OFFSET(CWindowChrome, m_titleBarVisibility), // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Button.Flyout
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.Description
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.ErrorTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.HasValidationErrors
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.HeaderPlacement
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.InputValidationKind
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.InputValidationMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.IsDropDownOpen
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.IsEditable
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.IsSelectionBoxHighlighted
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.IsTextSearchEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.LightDismissOverlayMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.MaxDropDownHeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.PlaceholderForeground
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.PlaceholderText
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.SelectionBoxItem
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.SelectionBoxItemTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.SelectionChangedTrigger
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.TemplateSettings
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.Text
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        &CUIElement::NWSetContentAndBoundsDirty, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.TextBoxStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.ValidationCommand
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.ValidationContext
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ComboBox.ValidationErrors
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.CommandBarOverflowPresenterStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.CommandBarTemplateSettings
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.DefaultLabelPosition
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.IsDynamicOverflowEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.OverflowButtonVisibility
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.PrimaryCommands
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.CommandBar.SecondaryCommands
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.FlipView.UseTouchAnimationsForAllNavigation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.HyperlinkButton.NavigateUri
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListBox.SelectedItems
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListBox.SelectionMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListBox.SingleSelectionFollowsFocus
    {
        (METHODPFN)OFFSET(CListBox, m_singleSelectionFollowsFocus), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.CanDragItems
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.CanReorderItems
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.DataFetchSize
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.Footer
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.FooterTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.FooterTransitions
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.Header
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.HeaderTemplate
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.HeaderTransitions
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IncrementalLoadingThreshold
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IncrementalLoadingTrigger
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IsActiveView
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IsItemClickEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IsMultiSelectCheckBoxEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IsSwipeEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.IsZoomedInView
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.ReorderMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.SelectedItems
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.SelectedRanges
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.SelectionMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.SemanticZoomOwner
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.ShowsScrollingPlaceholders
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBase.SingleSelectionFollowsFocus
    {
        (METHODPFN)OFFSET(CListViewBase, m_singleSelectionFollowsFocus), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewBaseItem.IsDraggable
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RepeatButton.Delay
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.RepeatButton.Interval
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.BringIntoViewOnFocusChange
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.CanContentRenderOutsideBounds
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ExtentHeight
    {
        (METHODPFN)OFFSET(CScrollViewer, m_extentHeight), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ExtentWidth
    {
        (METHODPFN)OFFSET(CScrollViewer, m_extentWidth), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalAnchorRatio
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollBarVisibility
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalScrollMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalSnapPointsAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.HorizontalSnapPointsType
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsDeferredScrollingEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsHorizontalRailEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsHorizontalScrollChainingEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsScrollInertiaEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsVerticalRailEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsVerticalScrollChainingEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsZoomChainingEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.IsZoomInertiaEnabled
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.LeftHeader
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.MaxZoomFactor
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.MinZoomFactor
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ReduceViewportForCoreInputViewOcclusions
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollableHeight
    {
        (METHODPFN)OFFSET(CScrollViewer, m_scrollableHeight), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ScrollableWidth
    {
        (METHODPFN)OFFSET(CScrollViewer, m_scrollableWidth), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.TopHeader
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.TopLeftHeader
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalAnchorRatio
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalOffset
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollBarVisibility
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalScrollMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalSnapPointsAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.VerticalSnapPointsType
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ViewportHeight
    {
        (METHODPFN)OFFSET(CScrollViewer, m_viewportHeight), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ViewportWidth
    {
        (METHODPFN)OFFSET(CScrollViewer, m_viewportWidth), // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomFactor
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomSnapPoints
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ScrollViewer.ZoomSnapPointsType
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsChecked
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsThreeState
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem.IsChecked
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.AreScrollSnapPointsRegular
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.IsContainerGeneratedForInsert
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.IsVirtualizing
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.Orientation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel.VirtualizationMode
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid.HorizontalChildrenAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid.ItemHeight
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid.ItemWidth
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid.MaximumRowsOrColumns
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid.Orientation
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.WrapGrid.VerticalChildrenAlignment
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.DynamicOverflowOrder
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.Icon
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.IsCompact
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.IsInOverflow
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.KeyboardAcceleratorTextOverride
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.Label
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.LabelPosition
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.TemplateSettings
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarButton.UseOverflowStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.DynamicOverflowOrder
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.Icon
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.IsCompact
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.IsInOverflow
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.KeyboardAcceleratorTextOverride
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.Label
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.LabelPosition
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.TemplateSettings
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.AppBarToggleButton.UseOverflowStyle
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.GridViewItem.TemplateSettings
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.ListViewItem.TemplateSettings
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
    // Microsoft.UI.Xaml.Controls.RadioButton.GroupName
    {
        (METHODPFN)0, // Offset. Cast to METHODPFN to force it into the union.
        nullptr, // Render changed callback
        nullptr, // Storage ensure method
        0 // Storage offset
    },
};

// Object properties.
extern const MetaDataObjectProperty c_aObjectProperties[221] =
{
    // UnknownObject.UnknownProperty object property
    {
        0, // Offset
        0, // Storage offset
        KnownPropertyIndex::UnknownType_UnknownProperty, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Application.Resources object property
    {
        OFFSET(CApplication, m_pResources), // Offset
        0, // Storage offset
        KnownPropertyIndex::Application_Resources, // Index name
        2, // Next object property = Microsoft.UI.Xaml.Application.RootVisual
    },
    // Microsoft.UI.Xaml.Application.RootVisual object property
    {
        OFFSET(CApplication, m_pRootVisual), // Offset
        0, // Storage offset
        KnownPropertyIndex::Application_RootVisual, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Internal.ExternalObjectReference.NativeValue object property
    {
        OFFSET(CManagedObjectReference, m_nativeValue), // Offset
        0, // Storage offset
        KnownPropertyIndex::ExternalObjectReference_NativeValue, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.FrameworkTemplate.Template object property
    {
        OFFSET(CFrameworkTemplate, m_pTemplateContent), // Offset
        0, // Storage offset
        KnownPropertyIndex::FrameworkTemplate_Template, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Geometry.Transform object property
    {
        OFFSET(CGeometry, m_pTransform), // Offset
        0, // Storage offset
        KnownPropertyIndex::Geometry_Transform, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Input.InputScope.Names object property
    {
        OFFSET(CInputScope, m_pNames), // Offset
        0, // Storage offset
        KnownPropertyIndex::InputScope_Names, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Input.KeyboardAccelerator.ScopeOwner object property
    {
        OFFSET(CKeyboardAccelerator, m_scopeOwner), // Offset
        0, // Storage offset
        KnownPropertyIndex::KeyboardAccelerator_ScopeOwner, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame.Value object property
    {
        OFFSET(CObjectKeyFrame, m_vValue), // Offset
        0, // Storage offset
        KnownPropertyIndex::ObjectKeyFrame_Value, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurve.CurveSegments object property
    {
        OFFSET(CParametricCurve, m_pCurveSegments), // Offset
        0, // Storage offset
        KnownPropertyIndex::ParametricCurve_CurveSegments, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.PathFigure.Segments object property
    {
        OFFSET(CPathFigure, m_pSegments), // Offset
        0, // Storage offset
        KnownPropertyIndex::PathFigure_Segments, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Internal.SecondaryContentRelationship.Curves object property
    {
        OFFSET(CSecondaryContentRelationship, m_pCurves), // Offset
        0, // Storage offset
        KnownPropertyIndex::SecondaryContentRelationship_Curves, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Style.BasedOn object property
    {
        OFFSET(CStyle, m_pBasedOn), // Offset
        0, // Storage offset
        KnownPropertyIndex::Style_BasedOn, // Index name
        13, // Next object property = Microsoft.UI.Xaml.Style.Setters
    },
    // Microsoft.UI.Xaml.Style.Setters object property
    {
        OFFSET(CStyle, m_pSetters), // Offset
        0, // Storage offset
        KnownPropertyIndex::Style_Setters, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.TextElement.FontFamily object property
    {
        OFFSET(CTextElement, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        KnownPropertyIndex::TextElement_FontFamily, // Index name
        15, // Next object property = Microsoft.UI.Xaml.Documents.TextElement.Foreground
    },
    // Microsoft.UI.Xaml.Documents.TextElement.Foreground object property
    {
        OFFSET(CTextElement, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        KnownPropertyIndex::TextElement_Foreground, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime object property
    {
        OFFSET(CTimeline, m_pBeginTime), // Offset
        0, // Storage offset
        KnownPropertyIndex::Timeline_BeginTime, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction object property
    {
        OFFSET(CTransition, m_pStaggerFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::Transition_GeneratedStaggerFunction, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.ClipTransform object property
    {
        OFFSET(CTransitionTarget, m_pClipTransform), // Offset
        0, // Storage offset
        KnownPropertyIndex::TransitionTarget_ClipTransform, // Index name
        19, // Next object property = Microsoft.UI.Xaml.Media.Animation.TransitionTarget.CompositeTransform
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.CompositeTransform object property
    {
        OFFSET(CTransitionTarget, m_pxf), // Offset
        0, // Storage offset
        KnownPropertyIndex::TransitionTarget_CompositeTransform, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.VisualState.__DeferredSetters object property
    {
        OFFSET(CVisualState, m_pDeferredSetters), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualState___DeferredSetters, // Index name
        21, // Next object property = Microsoft.UI.Xaml.VisualState.__DeferredStoryboard
    },
    // Microsoft.UI.Xaml.VisualState.__DeferredStoryboard object property
    {
        OFFSET(CVisualState, m_pDeferredStoryboard), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualState___DeferredStoryboard, // Index name
        22, // Next object property = Microsoft.UI.Xaml.VisualState.Setters
    },
    // Microsoft.UI.Xaml.VisualState.Setters object property
    {
        OFFSET(CVisualState, m_setters), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualState_Setters, // Index name
        23, // Next object property = Microsoft.UI.Xaml.VisualState.StateTriggers
    },
    // Microsoft.UI.Xaml.VisualState.StateTriggers object property
    {
        OFFSET(CVisualState, m_pStateTriggerCollection), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualState_StateTriggers, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.VisualStateGroup.States object property
    {
        OFFSET(CVisualStateGroup, m_pVisualStates), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualStateGroup_States, // Index name
        25, // Next object property = Microsoft.UI.Xaml.VisualStateGroup.Transitions
    },
    // Microsoft.UI.Xaml.VisualStateGroup.Transitions object property
    {
        OFFSET(CVisualStateGroup, m_pTransitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualStateGroup_Transitions, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.VisualTransition.GeneratedEasingFunction object property
    {
        OFFSET(CVisualTransition, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualTransition_GeneratedEasingFunction, // Index name
        27, // Next object property = Microsoft.UI.Xaml.VisualTransition.Storyboard
    },
    // Microsoft.UI.Xaml.VisualTransition.Storyboard object property
    {
        OFFSET(CVisualTransition, m_pStoryboard), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualTransition_Storyboard, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.Storyboard object property
    {
        OFFSET(CBeginStoryboard, m_pStoryboard), // Offset
        0, // Storage offset
        KnownPropertyIndex::BeginStoryboard_Storyboard, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EasingFunction object property
    {
        OFFSET(CColorAnimation, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::ColorAnimation_EasingFunction, // Index name
        16, // Next object property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames object property
    {
        OFFSET(CColorAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        KnownPropertyIndex::ColorAnimationUsingKeyFrames_KeyFrames, // Index name
        16, // Next object property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.DispatcherTimer.Interval object property
    {
        OFFSET(CDispatcherTimer, m_pInterval), // Offset
        0, // Storage offset
        KnownPropertyIndex::DispatcherTimer_Interval, // Index name
        16, // Next object property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EasingFunction object property
    {
        OFFSET(CDoubleAnimation, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::DoubleAnimation_EasingFunction, // Index name
        16, // Next object property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames object property
    {
        OFFSET(CDoubleAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        KnownPropertyIndex::DoubleAnimationUsingKeyFrames_KeyFrames, // Index name
        16, // Next object property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children object property
    {
        OFFSET(CDynamicTimeline, m_pChild), // Offset
        0, // Storage offset
        KnownPropertyIndex::DynamicTimeline_Children, // Index name
        16, // Next object property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame.EasingFunction object property
    {
        OFFSET(CEasingColorKeyFrame, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::EasingColorKeyFrame_EasingFunction, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame.EasingFunction object property
    {
        OFFSET(CEasingDoubleKeyFrame, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::EasingDoubleKeyFrame_EasingFunction, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame.EasingFunction object property
    {
        OFFSET(CEasingPointKeyFrame, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::EasingPointKeyFrame_EasingFunction, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.EventTrigger.Actions object property
    {
        OFFSET(CEventTrigger, m_pTriggerActions), // Offset
        0, // Storage offset
        KnownPropertyIndex::EventTrigger_Actions, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.GeometryGroup.Children object property
    {
        OFFSET(CGeometryGroup, m_pChild), // Offset
        0, // Storage offset
        KnownPropertyIndex::GeometryGroup_Children, // Index name
        5, // Next object property = Microsoft.UI.Xaml.Media.Geometry.Transform
    },
    // Microsoft.UI.Xaml.Media.GradientBrush.GradientStops object property
    {
        OFFSET(CGradientBrush, m_pStops), // Offset
        0, // Storage offset
        KnownPropertyIndex::GradientBrush_GradientStops, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Matrix3DProjection.ProjectionMatrix object property
    {
        OFFSET(CMatrix3DProjection, m_pMatrix), // Offset
        0, // Storage offset
        KnownPropertyIndex::Matrix3DProjection_ProjectionMatrix, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames object property
    {
        OFFSET(CObjectAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        KnownPropertyIndex::ObjectAnimationUsingKeyFrames_KeyFrames, // Index name
        16, // Next object property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.PathGeometry.Figures object property
    {
        OFFSET(CPathGeometry, m_pFigures), // Offset
        0, // Storage offset
        KnownPropertyIndex::PathGeometry_Figures, // Index name
        5, // Next object property = Microsoft.UI.Xaml.Media.Geometry.Transform
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation.EasingFunction object property
    {
        OFFSET(CPointAnimation, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::PointAnimation_EasingFunction, // Index name
        16, // Next object property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames object property
    {
        OFFSET(CPointAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        KnownPropertyIndex::PointAnimationUsingKeyFrames_KeyFrames, // Index name
        16, // Next object property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames.KeyFrames object property
    {
        OFFSET(CPointerAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        KnownPropertyIndex::PointerAnimationUsingKeyFrames_KeyFrames, // Index name
        16, // Next object property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.PolyBezierSegment.Points object property
    {
        OFFSET(CPolyBezierSegment, m_pPoints), // Offset
        0, // Storage offset
        KnownPropertyIndex::PolyBezierSegment_Points, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.PolyLineSegment.Points object property
    {
        OFFSET(CPolyLineSegment, m_pPoints), // Offset
        0, // Storage offset
        KnownPropertyIndex::PolyLineSegment_Points, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment.Points object property
    {
        OFFSET(CPolyQuadraticSegment, m_pPoints), // Offset
        0, // Storage offset
        KnownPropertyIndex::PolyQuadraticBezierSegment_Points, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Setter.Property object property
    {
        OFFSET(CSetter, m_pDependencyPropertyProxy), // Offset
        0, // Storage offset
        KnownPropertyIndex::Setter_Property, // Index name
        51, // Next object property = Microsoft.UI.Xaml.Setter.Target
    },
    // Microsoft.UI.Xaml.Setter.Target object property
    {
        OFFSET(CSetter, m_target), // Offset
        0, // Storage offset
        KnownPropertyIndex::Setter_Target, // Index name
        52, // Next object property = Microsoft.UI.Xaml.Setter.Value
    },
    // Microsoft.UI.Xaml.Setter.Value object property
    {
        OFFSET(CSetter, m_vValue), // Offset
        0, // Storage offset
        KnownPropertyIndex::Setter_Value, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame.KeySpline object property
    {
        OFFSET(CSplineColorKeyFrame, m_pKeySpline), // Offset
        0, // Storage offset
        KnownPropertyIndex::SplineColorKeyFrame_KeySpline, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame.KeySpline object property
    {
        OFFSET(CSplineDoubleKeyFrame, m_pKeySpline), // Offset
        0, // Storage offset
        KnownPropertyIndex::SplineDoubleKeyFrame_KeySpline, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame.KeySpline object property
    {
        OFFSET(CSplinePointKeyFrame, m_pKeySpline), // Offset
        0, // Storage offset
        KnownPropertyIndex::SplinePointKeyFrame_KeySpline, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Data.TemplateBinding.Property object property
    {
        OFFSET(CTemplateBindingExtension, m_pSourceProperty), // Offset
        0, // Storage offset
        KnownPropertyIndex::TemplateBinding_Property, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter.Background object property
    {
        OFFSET(CTextHighlighter, m_background), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextHighlighter_Background, // Index name
        58, // Next object property = Microsoft.UI.Xaml.Documents.TextHighlighter.Foreground
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter.Foreground object property
    {
        OFFSET(CTextHighlighter, m_foreground), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextHighlighter_Foreground, // Index name
        59, // Next object property = Microsoft.UI.Xaml.Documents.TextHighlighter.Ranges
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter.Ranges object property
    {
        OFFSET(CTextHighlighter, m_ranges), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextHighlighter_Ranges, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.Border.Background object property
    {
        OFFSET(CBorder, m_pBackgroundBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::Border_Background, // Index name
        61, // Next object property = Microsoft.UI.Xaml.Controls.Border.BorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Border.BorderBrush object property
    {
        OFFSET(CBorder, m_pBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::Border_BorderBrush, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplate object property
    {
        OFFSET(CContentPresenter, m_pContentTemplate), // Offset
        0, // Storage offset
        KnownPropertyIndex::ContentPresenter_ContentTemplate, // Index name
        63, // Next object property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions object property
    {
        OFFSET(CContentPresenter, m_pContentTransitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::ContentPresenter_ContentTransitions, // Index name
        64, // Next object property = Microsoft.UI.Xaml.Controls.ContentPresenter.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.FontFamily object property
    {
        OFFSET(CContentPresenter, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        KnownPropertyIndex::ContentPresenter_FontFamily, // Index name
        65, // Next object property = Microsoft.UI.Xaml.Controls.ContentPresenter.Foreground
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.Foreground object property
    {
        OFFSET(CContentPresenter, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        KnownPropertyIndex::ContentPresenter_Foreground, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.Control.Background object property
    {
        OFFSET(CControl, m_pBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::Control_Background, // Index name
        67, // Next object property = Microsoft.UI.Xaml.Controls.Control.BorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Control.BorderBrush object property
    {
        OFFSET(CControl, m_pBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::Control_BorderBrush, // Index name
        68, // Next object property = Microsoft.UI.Xaml.Controls.Control.DefaultStyleKey
    },
    // Microsoft.UI.Xaml.Controls.Control.DefaultStyleKey object property
    {
        OFFSET(CControl, m_pDefaultStyleKey), // Offset
        0, // Storage offset
        KnownPropertyIndex::Control_DefaultStyleKey, // Index name
        69, // Next object property = Microsoft.UI.Xaml.Controls.Control.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.Control.FontFamily object property
    {
        OFFSET(CControl, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        KnownPropertyIndex::Control_FontFamily, // Index name
        70, // Next object property = Microsoft.UI.Xaml.Controls.Control.Foreground
    },
    // Microsoft.UI.Xaml.Controls.Control.Foreground object property
    {
        OFFSET(CControl, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        KnownPropertyIndex::Control_Foreground, // Index name
        71, // Next object property = Microsoft.UI.Xaml.Controls.Control.Template
    },
    // Microsoft.UI.Xaml.Controls.Control.Template object property
    {
        OFFSET(CControl, m_pTemplate), // Offset
        0, // Storage offset
        KnownPropertyIndex::Control_Template, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.Fill object property
    {
        OFFSET(CGlyphs, m_pFill), // Offset
        0, // Storage offset
        KnownPropertyIndex::Glyphs_Fill, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.IconElement.Foreground object property
    {
        OFFSET(CIconElement, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        KnownPropertyIndex::IconElement_Foreground, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.Image.Source object property
    {
        OFFSET(CImage, m_pImageSource), // Offset
        0, // Storage offset
        KnownPropertyIndex::Image_Source, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.ImageBrush.ImageSource object property
    {
        OFFSET(CImageBrush, m_pImageSource), // Offset
        0, // Storage offset
        KnownPropertyIndex::ImageBrush_ImageSource, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.InlineUIContainer.Child object property
    {
        OFFSET(CInlineUIContainer, m_pChild), // Offset
        0, // Storage offset
        KnownPropertyIndex::InlineUIContainer_Child, // Index name
        14, // Next object property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.ItemsPanel object property
    {
        OFFSET(CItemsPresenter, m_pItemsPanelTemplate), // Offset
        0, // Storage offset
        KnownPropertyIndex::ItemsPresenter_ItemsPanel, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.MatrixTransform.Matrix object property
    {
        OFFSET(CMatrixTransform, m_pMatrix), // Offset
        0, // Storage offset
        KnownPropertyIndex::MatrixTransform_Matrix, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.Panel.Background object property
    {
        OFFSET(CPanel, m_pBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::Panel_Background, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.Paragraph.Inlines object property
    {
        OFFSET(CParagraph, m_pInlines), // Offset
        0, // Storage offset
        KnownPropertyIndex::Paragraph_Inlines, // Index name
        14, // Next object property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.ChildTransitions object property
    {
        OFFSET(CPopup, m_pChildTransitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::Popup_ChildTransitions, // Index name
        82, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.Popup.OverlayElement
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.OverlayElement object property
    {
        OFFSET(CPopup, m_overlayElement), // Offset
        0, // Storage offset
        KnownPropertyIndex::Popup_OverlayElement, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.ResourceDictionary.MergedDictionaries object property
    {
        OFFSET(CResourceDictionary, m_pMergedDictionaries), // Offset
        0, // Storage offset
        KnownPropertyIndex::ResourceDictionary_MergedDictionaries, // Index name
        84, // Next object property = Microsoft.UI.Xaml.ResourceDictionary.ThemeDictionaries
    },
    // Microsoft.UI.Xaml.ResourceDictionary.ThemeDictionaries object property
    {
        OFFSET(CResourceDictionary, m_pThemeDictionaries), // Offset
        0, // Storage offset
        KnownPropertyIndex::ResourceDictionary_ThemeDictionaries, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.Blocks object property
    {
        OFFSET(CRichTextBlock, m_pBlocks), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichTextBlock_Blocks, // Index name
        86, // Next object property = Microsoft.UI.Xaml.Controls.RichTextBlock.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.FontFamily object property
    {
        OFFSET(CRichTextBlock, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        KnownPropertyIndex::RichTextBlock_FontFamily, // Index name
        87, // Next object property = Microsoft.UI.Xaml.Controls.RichTextBlock.Foreground
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.Foreground object property
    {
        OFFSET(CRichTextBlock, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        KnownPropertyIndex::RichTextBlock_Foreground, // Index name
        88, // Next object property = Microsoft.UI.Xaml.Controls.RichTextBlock.OverflowContentTarget
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.OverflowContentTarget object property
    {
        OFFSET(CRichTextBlock, m_pOverflowTarget), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichTextBlock_OverflowContentTarget, // Index name
        89, // Next object property = Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionHighlightColor
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionHighlightColor object property
    {
        OFFSET(CRichTextBlock, m_pSelectionHighlightColor), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichTextBlock_SelectionHighlightColor, // Index name
        90, // Next object property = Microsoft.UI.Xaml.Controls.RichTextBlock.TextHighlighters
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.TextHighlighters object property
    {
        OFFSET(CRichTextBlock, m_textHighlighters), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichTextBlock_TextHighlighters, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.OverflowContentTarget object property
    {
        OFFSET(CRichTextBlockOverflow, m_pOverflowTarget), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichTextBlockOverflow_OverflowContentTarget, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Shapes.Shape.Fill object property
    {
        OFFSET(CShape, m_pFill), // Offset
        0, // Storage offset
        KnownPropertyIndex::Shape_Fill, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.Span.Inlines object property
    {
        OFFSET(CSpan, m_pInlines), // Offset
        0, // Storage offset
        KnownPropertyIndex::Span_Inlines, // Index name
        14, // Next object property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard.Children object property
    {
        OFFSET(CStoryboard, m_pChild), // Offset
        0, // Storage offset
        KnownPropertyIndex::Storyboard_Children, // Index name
        16, // Next object property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.FontFamily object property
    {
        OFFSET(CTextBlock, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        KnownPropertyIndex::TextBlock_FontFamily, // Index name
        96, // Next object property = Microsoft.UI.Xaml.Controls.TextBlock.Foreground
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Foreground object property
    {
        OFFSET(CTextBlock, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        KnownPropertyIndex::TextBlock_Foreground, // Index name
        97, // Next object property = Microsoft.UI.Xaml.Controls.TextBlock.Inlines
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Inlines object property
    {
        OFFSET(CTextBlock, m_pInlines), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextBlock_Inlines, // Index name
        98, // Next object property = Microsoft.UI.Xaml.Controls.TextBlock.TextHighlighters
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.TextHighlighters object property
    {
        OFFSET(CTextBlock, m_textHighlighters), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextBlock_TextHighlighters, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.TransformGroup.Children object property
    {
        OFFSET(CTransformGroup, m_pChild), // Offset
        0, // Storage offset
        KnownPropertyIndex::TransformGroup_Children, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveStoryboards object property
    {
        OFFSET(CVisualStateGroupCollection, m_pActiveStoryboards), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualStateGroupCollection_ActiveStoryboards, // Index name
        101, // Next object property = Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveTransitions
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveTransitions object property
    {
        OFFSET(CVisualStateGroupCollection, m_pActiveTransitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualStateGroupCollection_ActiveTransitions, // Index name
        102, // Next object property = Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredSetters
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredSetters object property
    {
        OFFSET(CVisualStateGroupCollection, m_pDeferredSetters), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualStateGroupCollection_DeferredSetters, // Index name
        103, // Next object property = Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredStateTriggers
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredStateTriggers object property
    {
        OFFSET(CVisualStateGroupCollection, m_pDeferredStateTriggers), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualStateGroupCollection_DeferredStateTriggers, // Index name
        0, // Next object property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutBackground object property
    {
        OFFSET(CCalendarView, m_pBlackoutBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_BlackoutBackground, // Index name
        105, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.BlackoutForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutForeground object property
    {
        OFFSET(CCalendarView, m_pBlackoutForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_BlackoutForeground, // Index name
        106, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.BlackoutStrikethroughBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutStrikethroughBrush object property
    {
        OFFSET(CCalendarView, m_pBlackoutStrikethroughBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_BlackoutStrikethroughBrush, // Index name
        107, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBackground object property
    {
        OFFSET(CCalendarView, m_pCalendarItemBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_CalendarItemBackground, // Index name
        108, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderBrush object property
    {
        OFFSET(CCalendarView, m_pCalendarItemBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_CalendarItemBorderBrush, // Index name
        109, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemDisabledBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemDisabledBackground object property
    {
        OFFSET(CCalendarView, m_pCalendarItemDisabledBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_CalendarItemDisabledBackground, // Index name
        110, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemForeground object property
    {
        OFFSET(CCalendarView, m_pCalendarItemForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_CalendarItemForeground, // Index name
        111, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemHoverBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemHoverBackground object property
    {
        OFFSET(CCalendarView, m_pCalendarItemHoverBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_CalendarItemHoverBackground, // Index name
        112, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemPressedBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemPressedBackground object property
    {
        OFFSET(CCalendarView, m_pCalendarItemPressedBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_CalendarItemPressedBackground, // Index name
        113, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontFamily
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontFamily object property
    {
        OFFSET(CCalendarView, m_pDayItemFontFamily), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_DayItemFontFamily, // Index name
        114, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.DisabledForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DisabledForeground object property
    {
        OFFSET(CCalendarView, m_pDisabledForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_DisabledForeground, // Index name
        115, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontFamily
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontFamily object property
    {
        OFFSET(CCalendarView, m_pFirstOfMonthLabelFontFamily), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_FirstOfMonthLabelFontFamily, // Index name
        116, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontFamily
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontFamily object property
    {
        OFFSET(CCalendarView, m_pFirstOfYearDecadeLabelFontFamily), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_FirstOfYearDecadeLabelFontFamily, // Index name
        117, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.FocusBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FocusBorderBrush object property
    {
        OFFSET(CCalendarView, m_pFocusBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_FocusBorderBrush, // Index name
        118, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.HoverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.HoverBorderBrush object property
    {
        OFFSET(CCalendarView, m_pHoverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_HoverBorderBrush, // Index name
        119, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontFamily
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontFamily object property
    {
        OFFSET(CCalendarView, m_pMonthYearItemFontFamily), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_MonthYearItemFontFamily, // Index name
        120, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeBackground object property
    {
        OFFSET(CCalendarView, m_pOutOfScopeBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_OutOfScopeBackground, // Index name
        121, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeForeground object property
    {
        OFFSET(CCalendarView, m_pOutOfScopeForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_OutOfScopeForeground, // Index name
        122, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeHoverForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeHoverForeground object property
    {
        OFFSET(CCalendarView, m_pOutOfScopeHoverForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_OutOfScopeHoverForeground, // Index name
        123, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopePressedForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopePressedForeground object property
    {
        OFFSET(CCalendarView, m_pOutOfScopePressedForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_OutOfScopePressedForeground, // Index name
        124, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.PressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.PressedBorderBrush object property
    {
        OFFSET(CCalendarView, m_pPressedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_PressedBorderBrush, // Index name
        125, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.PressedForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.PressedForeground object property
    {
        OFFSET(CCalendarView, m_pPressedForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_PressedForeground, // Index name
        126, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedBorderBrush object property
    {
        OFFSET(CCalendarView, m_pSelectedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedBorderBrush, // Index name
        127, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledBorderBrush object property
    {
        OFFSET(CCalendarView, m_pSelectedDisabledBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedDisabledBorderBrush, // Index name
        128, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledForeground object property
    {
        OFFSET(CCalendarView, m_pSelectedDisabledForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedDisabledForeground, // Index name
        129, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedForeground object property
    {
        OFFSET(CCalendarView, m_pSelectedForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedForeground, // Index name
        130, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverBorderBrush object property
    {
        OFFSET(CCalendarView, m_pSelectedHoverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedHoverBorderBrush, // Index name
        131, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverForeground object property
    {
        OFFSET(CCalendarView, m_pSelectedHoverForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedHoverForeground, // Index name
        132, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedBorderBrush object property
    {
        OFFSET(CCalendarView, m_pSelectedPressedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedPressedBorderBrush, // Index name
        133, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedForeground object property
    {
        OFFSET(CCalendarView, m_pSelectedPressedForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedPressedForeground, // Index name
        134, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.TodayBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBackground object property
    {
        OFFSET(CCalendarView, m_pTodayBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayBackground, // Index name
        135, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutBackground object property
    {
        OFFSET(CCalendarView, m_pTodayBlackoutBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayBlackoutBackground, // Index name
        136, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutForeground object property
    {
        OFFSET(CCalendarView, m_pTodayBlackoutForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayBlackoutForeground, // Index name
        137, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.TodayDisabledBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayDisabledBackground object property
    {
        OFFSET(CCalendarView, m_pTodayDisabledBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayDisabledBackground, // Index name
        138, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.TodayForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayForeground object property
    {
        OFFSET(CCalendarView, m_pTodayForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayForeground, // Index name
        139, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBackground object property
    {
        OFFSET(CCalendarView, m_pTodayHoverBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayHoverBackground, // Index name
        140, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBorderBrush object property
    {
        OFFSET(CCalendarView, m_pTodayHoverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayHoverBorderBrush, // Index name
        141, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBackground object property
    {
        OFFSET(CCalendarView, m_pTodayPressedBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayPressedBackground, // Index name
        142, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBorderBrush object property
    {
        OFFSET(CCalendarView, m_pTodayPressedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayPressedBorderBrush, // Index name
        143, // Next object property = Microsoft.UI.Xaml.Controls.CalendarView.TodaySelectedInnerBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodaySelectedInnerBorderBrush object property
    {
        OFFSET(CCalendarView, m_pTodaySelectedInnerBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodaySelectedInnerBorderBrush, // Index name
        66, // Next object property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.ContentTemplate object property
    {
        OFFSET(CContentControl, m_pContentTemplate), // Offset
        0, // Storage offset
        KnownPropertyIndex::ContentControl_ContentTemplate, // Index name
        145, // Next object property = Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions object property
    {
        OFFSET(CContentControl, m_pContentTransitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::ContentControl_ContentTransitions, // Index name
        146, // Next object property = Microsoft.UI.Xaml.Controls.ContentControl.SelectedContentTemplate
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.SelectedContentTemplate object property
    {
        OFFSET(CContentControl, m_pSelectedContentTemplate), // Offset
        0, // Storage offset
        KnownPropertyIndex::ContentControl_SelectedContentTemplate, // Index name
        66, // Next object property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.FontFamily object property
    {
        OFFSET(CFontIcon, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        KnownPropertyIndex::FontIcon_FontFamily, // Index name
        73, // Next object property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
    },
    // Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions object property
    {
        OFFSET(CGrid, m_pColumnDefinitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::Grid_ColumnDefinitions, // Index name
        149, // Next object property = Microsoft.UI.Xaml.Controls.Grid.RowDefinitions
    },
    // Microsoft.UI.Xaml.Controls.Grid.RowDefinitions object property
    {
        OFFSET(CGrid, m_pRowDefinitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::Grid_RowDefinitions, // Index name
        79, // Next object property = Microsoft.UI.Xaml.Controls.Panel.Background
    },
    // Microsoft.UI.Xaml.Controls.IconSourceElement.IconSource object property
    {
        OFFSET(CIconSourceElement, m_iconSource), // Offset
        0, // Storage offset
        KnownPropertyIndex::IconSourceElement_IconSource, // Index name
        73, // Next object property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions object property
    {
        OFFSET(CItemsControl, m_pItemContainerTransitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::ItemsControl_ItemContainerTransitions, // Index name
        152, // Next object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemsHost
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemsHost object property
    {
        OFFSET(CItemsControl, m_pItemsHost), // Offset
        0, // Storage offset
        KnownPropertyIndex::ItemsControl_ItemsHost, // Index name
        153, // Next object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemsPanel
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemsPanel object property
    {
        OFFSET(CItemsControl, m_pItemsPanelTemplate), // Offset
        0, // Storage offset
        KnownPropertyIndex::ItemsControl_ItemsPanel, // Index name
        154, // Next object property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemTemplate
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemTemplate object property
    {
        OFFSET(CItemsControl, m_pItemTemplate), // Offset
        0, // Storage offset
        KnownPropertyIndex::ItemsControl_ItemTemplate, // Index name
        66, // Next object property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.PosterSource object property
    {
        OFFSET(CMediaPlayerElement, m_pPosterSource), // Offset
        0, // Storage offset
        KnownPropertyIndex::MediaPlayerElement_PosterSource, // Index name
        66, // Next object property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.InputScope object property
    {
        OFFSET(CPasswordBox, m_pInputScope), // Offset
        0, // Storage offset
        KnownPropertyIndex::PasswordBox_InputScope, // Index name
        157, // Next object property = Microsoft.UI.Xaml.Controls.PasswordBox.SelectionHighlightColor
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.SelectionHighlightColor object property
    {
        OFFSET(CPasswordBox, m_pSelectionHighlightColor), // Offset
        0, // Storage offset
        KnownPropertyIndex::PasswordBox_SelectionHighlightColor, // Index name
        66, // Next object property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Shapes.Path.Data object property
    {
        OFFSET(CPath, m_pGeometryData), // Offset
        0, // Storage offset
        KnownPropertyIndex::Path_Data, // Index name
        92, // Next object property = Microsoft.UI.Xaml.Shapes.Shape.Fill
    },
    // Microsoft.UI.Xaml.Controls.PathIcon.Data object property
    {
        OFFSET(CPathIcon, m_pData), // Offset
        0, // Storage offset
        KnownPropertyIndex::PathIcon_Data, // Index name
        73, // Next object property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
    },
    // Microsoft.UI.Xaml.Shapes.Polygon.Points object property
    {
        OFFSET(CPolygon, m_pPoints), // Offset
        0, // Storage offset
        KnownPropertyIndex::Polygon_Points, // Index name
        92, // Next object property = Microsoft.UI.Xaml.Shapes.Shape.Fill
    },
    // Microsoft.UI.Xaml.Shapes.Polyline.Points object property
    {
        OFFSET(CPolyline, m_pPoints), // Offset
        0, // Storage offset
        KnownPropertyIndex::Polyline_Points, // Index name
        92, // Next object property = Microsoft.UI.Xaml.Shapes.Shape.Fill
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.InputScope object property
    {
        OFFSET(CRichEditBox, m_pInputScope), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichEditBox_InputScope, // Index name
        163, // Next object property = Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColor
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColor object property
    {
        OFFSET(CRichEditBox, m_pSelectionHighlightColor), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichEditBox_SelectionHighlightColor, // Index name
        164, // Next object property = Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColorWhenNotFocused
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColorWhenNotFocused object property
    {
        OFFSET(CRichEditBox, m_pSelectionHighlightColorWhenNotFocused), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichEditBox_SelectionHighlightColorWhenNotFocused, // Index name
        66, // Next object property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.SplitView.TemplateSettings object property
    {
        OFFSET(CSplitView, m_pTemplateSettings), // Offset
        0, // Storage offset
        KnownPropertyIndex::SplitView_TemplateSettings, // Index name
        66, // Next object property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.TextBox.InputScope object property
    {
        OFFSET(CTextBox, m_pInputScope), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextBox_InputScope, // Index name
        167, // Next object property = Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColor
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColor object property
    {
        OFFSET(CTextBox, m_pSelectionHighlightColor), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextBox_SelectionHighlightColor, // Index name
        168, // Next object property = Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColorWhenNotFocused
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColorWhenNotFocused object property
    {
        OFFSET(CTextBox, m_pSelectionHighlightColorWhenNotFocused), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextBox_SelectionHighlightColorWhenNotFocused, // Index name
        66, // Next object property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckBrush object property
    {
        OFFSET(CGridViewItemChrome, m_pCheckBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_CheckBrush, // Index name
        170, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckHintBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckHintBrush object property
    {
        OFFSET(CGridViewItemChrome, m_pCheckHintBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_CheckHintBrush, // Index name
        171, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckSelectingBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckSelectingBrush object property
    {
        OFFSET(CGridViewItemChrome, m_pCheckSelectingBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_CheckSelectingBrush, // Index name
        172, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragBackground object property
    {
        OFFSET(CGridViewItemChrome, m_pDragBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_DragBackground, // Index name
        173, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragForeground object property
    {
        OFFSET(CGridViewItemChrome, m_pDragForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_DragForeground, // Index name
        174, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.FocusBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.FocusBorderBrush object property
    {
        OFFSET(CGridViewItemChrome, m_pFocusBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_FocusBorderBrush, // Index name
        175, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PlaceholderBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PlaceholderBackground object property
    {
        OFFSET(CGridViewItemChrome, m_pPlaceholderBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_PlaceholderBackground, // Index name
        176, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackground object property
    {
        OFFSET(CGridViewItemChrome, m_pPointerOverBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_PointerOverBackground, // Index name
        177, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBackground object property
    {
        OFFSET(CGridViewItemChrome, m_pSelectedBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_SelectedBackground, // Index name
        178, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedForeground object property
    {
        OFFSET(CGridViewItemChrome, m_pSelectedForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_SelectedForeground, // Index name
        179, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBackground object property
    {
        OFFSET(CGridViewItemChrome, m_pSelectedPointerOverBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_SelectedPointerOverBackground, // Index name
        180, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBorderBrush object property
    {
        OFFSET(CGridViewItemChrome, m_pSelectedPointerOverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_SelectedPointerOverBorderBrush, // Index name
        62, // Next object property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplate
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBorderBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxBorderBrush, // Index name
        182, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxBrush, // Index name
        183, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBorderBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxDisabledBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxDisabledBorderBrush, // Index name
        184, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxDisabledBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxDisabledBrush, // Index name
        185, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBorderBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxPointerOverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPointerOverBorderBrush, // Index name
        186, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxPointerOverBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPointerOverBrush, // Index name
        187, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBorderBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxPressedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPressedBorderBrush, // Index name
        188, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxPressedBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPressedBrush, // Index name
        189, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxSelectedBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedBrush, // Index name
        190, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedDisabledBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedDisabledBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxSelectedDisabledBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedDisabledBrush, // Index name
        191, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPointerOverBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPointerOverBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxSelectedPointerOverBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedPointerOverBrush, // Index name
        192, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPressedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPressedBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxSelectedPressedBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedPressedBrush, // Index name
        193, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBrush, // Index name
        194, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckDisabledBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckDisabledBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckDisabledBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckDisabledBrush, // Index name
        195, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckHintBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckHintBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckHintBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckHintBrush, // Index name
        196, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckPressedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckPressedBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckPressedBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckPressedBrush, // Index name
        197, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckSelectingBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckSelectingBrush object property
    {
        OFFSET(CListViewItemChrome, m_pCheckSelectingBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckSelectingBrush, // Index name
        198, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragBackground object property
    {
        OFFSET(CListViewItemChrome, m_pDragBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_DragBackground, // Index name
        199, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragForeground object property
    {
        OFFSET(CListViewItemChrome, m_pDragForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_DragForeground, // Index name
        200, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusBorderBrush object property
    {
        OFFSET(CListViewItemChrome, m_pFocusBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_FocusBorderBrush, // Index name
        201, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusSecondaryBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusSecondaryBorderBrush object property
    {
        OFFSET(CListViewItemChrome, m_pFocusSecondaryBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_FocusSecondaryBorderBrush, // Index name
        202, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PlaceholderBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PlaceholderBackground object property
    {
        OFFSET(CListViewItemChrome, m_pPlaceholderBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_PlaceholderBackground, // Index name
        203, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackground object property
    {
        OFFSET(CListViewItemChrome, m_pPointerOverBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_PointerOverBackground, // Index name
        204, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBorderBrush object property
    {
        OFFSET(CListViewItemChrome, m_pPointerOverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_PointerOverBorderBrush, // Index name
        205, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverForeground object property
    {
        OFFSET(CListViewItemChrome, m_pPointerOverForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_PointerOverForeground, // Index name
        206, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PressedBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PressedBackground object property
    {
        OFFSET(CListViewItemChrome, m_pPressedBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_PressedBackground, // Index name
        207, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBackground object property
    {
        OFFSET(CListViewItemChrome, m_pSelectedBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedBackground, // Index name
        208, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderBrush object property
    {
        OFFSET(CListViewItemChrome, m_pSelectedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedBorderBrush, // Index name
        209, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBackground object property
    {
        OFFSET(CListViewItemChrome, m_pSelectedDisabledBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedDisabledBackground, // Index name
        210, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBorderBrush object property
    {
        OFFSET(CListViewItemChrome, m_pSelectedDisabledBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedDisabledBorderBrush, // Index name
        211, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedForeground object property
    {
        OFFSET(CListViewItemChrome, m_pSelectedForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedForeground, // Index name
        212, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedInnerBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedInnerBorderBrush object property
    {
        OFFSET(CListViewItemChrome, m_pSelectedInnerBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedInnerBorderBrush, // Index name
        213, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBackground object property
    {
        OFFSET(CListViewItemChrome, m_pSelectedPointerOverBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedPointerOverBackground, // Index name
        214, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBorderBrush object property
    {
        OFFSET(CListViewItemChrome, m_pSelectedPointerOverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedPointerOverBorderBrush, // Index name
        215, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBackground object property
    {
        OFFSET(CListViewItemChrome, m_pSelectedPressedBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedPressedBackground, // Index name
        216, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBorderBrush object property
    {
        OFFSET(CListViewItemChrome, m_pSelectedPressedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedPressedBorderBrush, // Index name
        217, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorBrush object property
    {
        OFFSET(CListViewItemChrome, m_pSelectionIndicatorBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorBrush, // Index name
        218, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorDisabledBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorDisabledBrush object property
    {
        OFFSET(CListViewItemChrome, m_pSelectionIndicatorDisabledBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorDisabledBrush, // Index name
        219, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPointerOverBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPointerOverBrush object property
    {
        OFFSET(CListViewItemChrome, m_pSelectionIndicatorPointerOverBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorPointerOverBrush, // Index name
        220, // Next object property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPressedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPressedBrush object property
    {
        OFFSET(CListViewItemChrome, m_pSelectionIndicatorPressedBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorPressedBrush, // Index name
        62, // Next object property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTemplate
    },
};

// Render properties.
extern const MetaDataObjectProperty c_aRenderProperties[209] =
{
    // UnknownObject.UnknownProperty render property
    {
        0, // Offset
        0, // Storage offset
        KnownPropertyIndex::UnknownType_UnknownProperty, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Application.Resources render property
    {
        OFFSET(CApplication, m_pResources), // Offset
        0, // Storage offset
        KnownPropertyIndex::Application_Resources, // Index name
        2, // Next render property = Microsoft.UI.Xaml.Application.RootVisual
    },
    // Microsoft.UI.Xaml.Application.RootVisual render property
    {
        OFFSET(CApplication, m_pRootVisual), // Offset
        0, // Storage offset
        KnownPropertyIndex::Application_RootVisual, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.FrameworkTemplate.Template render property
    {
        OFFSET(CFrameworkTemplate, m_pTemplateContent), // Offset
        0, // Storage offset
        KnownPropertyIndex::FrameworkTemplate_Template, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Geometry.Transform render property
    {
        OFFSET(CGeometry, m_pTransform), // Offset
        0, // Storage offset
        KnownPropertyIndex::Geometry_Transform, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Input.InputScope.Names render property
    {
        OFFSET(CInputScope, m_pNames), // Offset
        0, // Storage offset
        KnownPropertyIndex::InputScope_Names, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurve.CurveSegments render property
    {
        OFFSET(CParametricCurve, m_pCurveSegments), // Offset
        0, // Storage offset
        KnownPropertyIndex::ParametricCurve_CurveSegments, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.PathFigure.Segments render property
    {
        OFFSET(CPathFigure, m_pSegments), // Offset
        0, // Storage offset
        KnownPropertyIndex::PathFigure_Segments, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Internal.SecondaryContentRelationship.Curves render property
    {
        OFFSET(CSecondaryContentRelationship, m_pCurves), // Offset
        0, // Storage offset
        KnownPropertyIndex::SecondaryContentRelationship_Curves, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Style.Setters render property
    {
        OFFSET(CStyle, m_pSetters), // Offset
        0, // Storage offset
        KnownPropertyIndex::Style_Setters, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.TextElement.FontFamily render property
    {
        OFFSET(CTextElement, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        KnownPropertyIndex::TextElement_FontFamily, // Index name
        11, // Next render property = Microsoft.UI.Xaml.Documents.TextElement.Foreground
    },
    // Microsoft.UI.Xaml.Documents.TextElement.Foreground render property
    {
        OFFSET(CTextElement, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        KnownPropertyIndex::TextElement_Foreground, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime render property
    {
        OFFSET(CTimeline, m_pBeginTime), // Offset
        0, // Storage offset
        KnownPropertyIndex::Timeline_BeginTime, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction render property
    {
        OFFSET(CTransition, m_pStaggerFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::Transition_GeneratedStaggerFunction, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.ClipTransform render property
    {
        OFFSET(CTransitionTarget, m_pClipTransform), // Offset
        0, // Storage offset
        KnownPropertyIndex::TransitionTarget_ClipTransform, // Index name
        15, // Next render property = Microsoft.UI.Xaml.Media.Animation.TransitionTarget.CompositeTransform
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.CompositeTransform render property
    {
        OFFSET(CTransitionTarget, m_pxf), // Offset
        0, // Storage offset
        KnownPropertyIndex::TransitionTarget_CompositeTransform, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.VisualState.__DeferredSetters render property
    {
        OFFSET(CVisualState, m_pDeferredSetters), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualState___DeferredSetters, // Index name
        17, // Next render property = Microsoft.UI.Xaml.VisualState.__DeferredStoryboard
    },
    // Microsoft.UI.Xaml.VisualState.__DeferredStoryboard render property
    {
        OFFSET(CVisualState, m_pDeferredStoryboard), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualState___DeferredStoryboard, // Index name
        18, // Next render property = Microsoft.UI.Xaml.VisualState.Setters
    },
    // Microsoft.UI.Xaml.VisualState.Setters render property
    {
        OFFSET(CVisualState, m_setters), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualState_Setters, // Index name
        19, // Next render property = Microsoft.UI.Xaml.VisualState.StateTriggers
    },
    // Microsoft.UI.Xaml.VisualState.StateTriggers render property
    {
        OFFSET(CVisualState, m_pStateTriggerCollection), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualState_StateTriggers, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.VisualStateGroup.States render property
    {
        OFFSET(CVisualStateGroup, m_pVisualStates), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualStateGroup_States, // Index name
        21, // Next render property = Microsoft.UI.Xaml.VisualStateGroup.Transitions
    },
    // Microsoft.UI.Xaml.VisualStateGroup.Transitions render property
    {
        OFFSET(CVisualStateGroup, m_pTransitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualStateGroup_Transitions, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.VisualTransition.GeneratedEasingFunction render property
    {
        OFFSET(CVisualTransition, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualTransition_GeneratedEasingFunction, // Index name
        23, // Next render property = Microsoft.UI.Xaml.VisualTransition.Storyboard
    },
    // Microsoft.UI.Xaml.VisualTransition.Storyboard render property
    {
        OFFSET(CVisualTransition, m_pStoryboard), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualTransition_Storyboard, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.Storyboard render property
    {
        OFFSET(CBeginStoryboard, m_pStoryboard), // Offset
        0, // Storage offset
        KnownPropertyIndex::BeginStoryboard_Storyboard, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EasingFunction render property
    {
        OFFSET(CColorAnimation, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::ColorAnimation_EasingFunction, // Index name
        12, // Next render property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames render property
    {
        OFFSET(CColorAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        KnownPropertyIndex::ColorAnimationUsingKeyFrames_KeyFrames, // Index name
        12, // Next render property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.DispatcherTimer.Interval render property
    {
        OFFSET(CDispatcherTimer, m_pInterval), // Offset
        0, // Storage offset
        KnownPropertyIndex::DispatcherTimer_Interval, // Index name
        12, // Next render property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EasingFunction render property
    {
        OFFSET(CDoubleAnimation, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::DoubleAnimation_EasingFunction, // Index name
        12, // Next render property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames render property
    {
        OFFSET(CDoubleAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        KnownPropertyIndex::DoubleAnimationUsingKeyFrames_KeyFrames, // Index name
        12, // Next render property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children render property
    {
        OFFSET(CDynamicTimeline, m_pChild), // Offset
        0, // Storage offset
        KnownPropertyIndex::DynamicTimeline_Children, // Index name
        12, // Next render property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame.EasingFunction render property
    {
        OFFSET(CEasingColorKeyFrame, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::EasingColorKeyFrame_EasingFunction, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame.EasingFunction render property
    {
        OFFSET(CEasingDoubleKeyFrame, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::EasingDoubleKeyFrame_EasingFunction, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame.EasingFunction render property
    {
        OFFSET(CEasingPointKeyFrame, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::EasingPointKeyFrame_EasingFunction, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.EventTrigger.Actions render property
    {
        OFFSET(CEventTrigger, m_pTriggerActions), // Offset
        0, // Storage offset
        KnownPropertyIndex::EventTrigger_Actions, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.GeometryGroup.Children render property
    {
        OFFSET(CGeometryGroup, m_pChild), // Offset
        0, // Storage offset
        KnownPropertyIndex::GeometryGroup_Children, // Index name
        4, // Next render property = Microsoft.UI.Xaml.Media.Geometry.Transform
    },
    // Microsoft.UI.Xaml.Media.GradientBrush.GradientStops render property
    {
        OFFSET(CGradientBrush, m_pStops), // Offset
        0, // Storage offset
        KnownPropertyIndex::GradientBrush_GradientStops, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Matrix3DProjection.ProjectionMatrix render property
    {
        OFFSET(CMatrix3DProjection, m_pMatrix), // Offset
        0, // Storage offset
        KnownPropertyIndex::Matrix3DProjection_ProjectionMatrix, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames render property
    {
        OFFSET(CObjectAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        KnownPropertyIndex::ObjectAnimationUsingKeyFrames_KeyFrames, // Index name
        12, // Next render property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.PathGeometry.Figures render property
    {
        OFFSET(CPathGeometry, m_pFigures), // Offset
        0, // Storage offset
        KnownPropertyIndex::PathGeometry_Figures, // Index name
        4, // Next render property = Microsoft.UI.Xaml.Media.Geometry.Transform
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation.EasingFunction render property
    {
        OFFSET(CPointAnimation, m_pEasingFunction), // Offset
        0, // Storage offset
        KnownPropertyIndex::PointAnimation_EasingFunction, // Index name
        12, // Next render property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames render property
    {
        OFFSET(CPointAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        KnownPropertyIndex::PointAnimationUsingKeyFrames_KeyFrames, // Index name
        12, // Next render property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames.KeyFrames render property
    {
        OFFSET(CPointerAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        KnownPropertyIndex::PointerAnimationUsingKeyFrames_KeyFrames, // Index name
        12, // Next render property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.PolyBezierSegment.Points render property
    {
        OFFSET(CPolyBezierSegment, m_pPoints), // Offset
        0, // Storage offset
        KnownPropertyIndex::PolyBezierSegment_Points, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.PolyLineSegment.Points render property
    {
        OFFSET(CPolyLineSegment, m_pPoints), // Offset
        0, // Storage offset
        KnownPropertyIndex::PolyLineSegment_Points, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment.Points render property
    {
        OFFSET(CPolyQuadraticSegment, m_pPoints), // Offset
        0, // Storage offset
        KnownPropertyIndex::PolyQuadraticBezierSegment_Points, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Setter.Property render property
    {
        OFFSET(CSetter, m_pDependencyPropertyProxy), // Offset
        0, // Storage offset
        KnownPropertyIndex::Setter_Property, // Index name
        47, // Next render property = Microsoft.UI.Xaml.Setter.Target
    },
    // Microsoft.UI.Xaml.Setter.Target render property
    {
        OFFSET(CSetter, m_target), // Offset
        0, // Storage offset
        KnownPropertyIndex::Setter_Target, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame.KeySpline render property
    {
        OFFSET(CSplineColorKeyFrame, m_pKeySpline), // Offset
        0, // Storage offset
        KnownPropertyIndex::SplineColorKeyFrame_KeySpline, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame.KeySpline render property
    {
        OFFSET(CSplineDoubleKeyFrame, m_pKeySpline), // Offset
        0, // Storage offset
        KnownPropertyIndex::SplineDoubleKeyFrame_KeySpline, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame.KeySpline render property
    {
        OFFSET(CSplinePointKeyFrame, m_pKeySpline), // Offset
        0, // Storage offset
        KnownPropertyIndex::SplinePointKeyFrame_KeySpline, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Data.TemplateBinding.Property render property
    {
        OFFSET(CTemplateBindingExtension, m_pSourceProperty), // Offset
        0, // Storage offset
        KnownPropertyIndex::TemplateBinding_Property, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter.Background render property
    {
        OFFSET(CTextHighlighter, m_background), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextHighlighter_Background, // Index name
        53, // Next render property = Microsoft.UI.Xaml.Documents.TextHighlighter.Foreground
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter.Foreground render property
    {
        OFFSET(CTextHighlighter, m_foreground), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextHighlighter_Foreground, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.Border.Background render property
    {
        OFFSET(CBorder, m_pBackgroundBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::Border_Background, // Index name
        55, // Next render property = Microsoft.UI.Xaml.Controls.Border.BorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Border.BorderBrush render property
    {
        OFFSET(CBorder, m_pBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::Border_BorderBrush, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions render property
    {
        OFFSET(CContentPresenter, m_pContentTransitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::ContentPresenter_ContentTransitions, // Index name
        57, // Next render property = Microsoft.UI.Xaml.Controls.ContentPresenter.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.FontFamily render property
    {
        OFFSET(CContentPresenter, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        KnownPropertyIndex::ContentPresenter_FontFamily, // Index name
        58, // Next render property = Microsoft.UI.Xaml.Controls.ContentPresenter.Foreground
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.Foreground render property
    {
        OFFSET(CContentPresenter, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        KnownPropertyIndex::ContentPresenter_Foreground, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.Control.Background render property
    {
        OFFSET(CControl, m_pBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::Control_Background, // Index name
        60, // Next render property = Microsoft.UI.Xaml.Controls.Control.BorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Control.BorderBrush render property
    {
        OFFSET(CControl, m_pBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::Control_BorderBrush, // Index name
        61, // Next render property = Microsoft.UI.Xaml.Controls.Control.DefaultStyleKey
    },
    // Microsoft.UI.Xaml.Controls.Control.DefaultStyleKey render property
    {
        OFFSET(CControl, m_pDefaultStyleKey), // Offset
        0, // Storage offset
        KnownPropertyIndex::Control_DefaultStyleKey, // Index name
        62, // Next render property = Microsoft.UI.Xaml.Controls.Control.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.Control.FontFamily render property
    {
        OFFSET(CControl, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        KnownPropertyIndex::Control_FontFamily, // Index name
        63, // Next render property = Microsoft.UI.Xaml.Controls.Control.Foreground
    },
    // Microsoft.UI.Xaml.Controls.Control.Foreground render property
    {
        OFFSET(CControl, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        KnownPropertyIndex::Control_Foreground, // Index name
        64, // Next render property = Microsoft.UI.Xaml.Controls.Control.Template
    },
    // Microsoft.UI.Xaml.Controls.Control.Template render property
    {
        OFFSET(CControl, m_pTemplate), // Offset
        0, // Storage offset
        KnownPropertyIndex::Control_Template, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.Fill render property
    {
        OFFSET(CGlyphs, m_pFill), // Offset
        0, // Storage offset
        KnownPropertyIndex::Glyphs_Fill, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.IconElement.Foreground render property
    {
        OFFSET(CIconElement, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        KnownPropertyIndex::IconElement_Foreground, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.Image.Source render property
    {
        OFFSET(CImage, m_pImageSource), // Offset
        0, // Storage offset
        KnownPropertyIndex::Image_Source, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.ImageBrush.ImageSource render property
    {
        OFFSET(CImageBrush, m_pImageSource), // Offset
        0, // Storage offset
        KnownPropertyIndex::ImageBrush_ImageSource, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.InlineUIContainer.Child render property
    {
        OFFSET(CInlineUIContainer, m_pChild), // Offset
        0, // Storage offset
        KnownPropertyIndex::InlineUIContainer_Child, // Index name
        10, // Next render property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.ItemsPanel render property
    {
        OFFSET(CItemsPresenter, m_pItemsPanelTemplate), // Offset
        0, // Storage offset
        KnownPropertyIndex::ItemsPresenter_ItemsPanel, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.MatrixTransform.Matrix render property
    {
        OFFSET(CMatrixTransform, m_pMatrix), // Offset
        0, // Storage offset
        KnownPropertyIndex::MatrixTransform_Matrix, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.Panel.Background render property
    {
        OFFSET(CPanel, m_pBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::Panel_Background, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.Paragraph.Inlines render property
    {
        OFFSET(CParagraph, m_pInlines), // Offset
        0, // Storage offset
        KnownPropertyIndex::Paragraph_Inlines, // Index name
        10, // Next render property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.ChildTransitions render property
    {
        OFFSET(CPopup, m_pChildTransitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::Popup_ChildTransitions, // Index name
        75, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.Popup.OverlayElement
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.OverlayElement render property
    {
        OFFSET(CPopup, m_overlayElement), // Offset
        0, // Storage offset
        KnownPropertyIndex::Popup_OverlayElement, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.ResourceDictionary.MergedDictionaries render property
    {
        OFFSET(CResourceDictionary, m_pMergedDictionaries), // Offset
        0, // Storage offset
        KnownPropertyIndex::ResourceDictionary_MergedDictionaries, // Index name
        77, // Next render property = Microsoft.UI.Xaml.ResourceDictionary.ThemeDictionaries
    },
    // Microsoft.UI.Xaml.ResourceDictionary.ThemeDictionaries render property
    {
        OFFSET(CResourceDictionary, m_pThemeDictionaries), // Offset
        0, // Storage offset
        KnownPropertyIndex::ResourceDictionary_ThemeDictionaries, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.Blocks render property
    {
        OFFSET(CRichTextBlock, m_pBlocks), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichTextBlock_Blocks, // Index name
        79, // Next render property = Microsoft.UI.Xaml.Controls.RichTextBlock.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.FontFamily render property
    {
        OFFSET(CRichTextBlock, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        KnownPropertyIndex::RichTextBlock_FontFamily, // Index name
        80, // Next render property = Microsoft.UI.Xaml.Controls.RichTextBlock.Foreground
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.Foreground render property
    {
        OFFSET(CRichTextBlock, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        KnownPropertyIndex::RichTextBlock_Foreground, // Index name
        81, // Next render property = Microsoft.UI.Xaml.Controls.RichTextBlock.OverflowContentTarget
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.OverflowContentTarget render property
    {
        OFFSET(CRichTextBlock, m_pOverflowTarget), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichTextBlock_OverflowContentTarget, // Index name
        82, // Next render property = Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionHighlightColor
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionHighlightColor render property
    {
        OFFSET(CRichTextBlock, m_pSelectionHighlightColor), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichTextBlock_SelectionHighlightColor, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.OverflowContentTarget render property
    {
        OFFSET(CRichTextBlockOverflow, m_pOverflowTarget), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichTextBlockOverflow_OverflowContentTarget, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Shapes.Shape.Fill render property
    {
        OFFSET(CShape, m_pFill), // Offset
        0, // Storage offset
        KnownPropertyIndex::Shape_Fill, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.Span.Inlines render property
    {
        OFFSET(CSpan, m_pInlines), // Offset
        0, // Storage offset
        KnownPropertyIndex::Span_Inlines, // Index name
        10, // Next render property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard.Children render property
    {
        OFFSET(CStoryboard, m_pChild), // Offset
        0, // Storage offset
        KnownPropertyIndex::Storyboard_Children, // Index name
        12, // Next render property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.FontFamily render property
    {
        OFFSET(CTextBlock, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        KnownPropertyIndex::TextBlock_FontFamily, // Index name
        88, // Next render property = Microsoft.UI.Xaml.Controls.TextBlock.Foreground
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Foreground render property
    {
        OFFSET(CTextBlock, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        KnownPropertyIndex::TextBlock_Foreground, // Index name
        89, // Next render property = Microsoft.UI.Xaml.Controls.TextBlock.Inlines
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Inlines render property
    {
        OFFSET(CTextBlock, m_pInlines), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextBlock_Inlines, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.TransformGroup.Children render property
    {
        OFFSET(CTransformGroup, m_pChild), // Offset
        0, // Storage offset
        KnownPropertyIndex::TransformGroup_Children, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveStoryboards render property
    {
        OFFSET(CVisualStateGroupCollection, m_pActiveStoryboards), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualStateGroupCollection_ActiveStoryboards, // Index name
        92, // Next render property = Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveTransitions
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveTransitions render property
    {
        OFFSET(CVisualStateGroupCollection, m_pActiveTransitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualStateGroupCollection_ActiveTransitions, // Index name
        93, // Next render property = Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredSetters
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredSetters render property
    {
        OFFSET(CVisualStateGroupCollection, m_pDeferredSetters), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualStateGroupCollection_DeferredSetters, // Index name
        94, // Next render property = Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredStateTriggers
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredStateTriggers render property
    {
        OFFSET(CVisualStateGroupCollection, m_pDeferredStateTriggers), // Offset
        0, // Storage offset
        KnownPropertyIndex::VisualStateGroupCollection_DeferredStateTriggers, // Index name
        0, // Next render property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutBackground render property
    {
        OFFSET(CCalendarView, m_pBlackoutBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_BlackoutBackground, // Index name
        96, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.BlackoutForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutForeground render property
    {
        OFFSET(CCalendarView, m_pBlackoutForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_BlackoutForeground, // Index name
        97, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.BlackoutStrikethroughBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutStrikethroughBrush render property
    {
        OFFSET(CCalendarView, m_pBlackoutStrikethroughBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_BlackoutStrikethroughBrush, // Index name
        98, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBackground render property
    {
        OFFSET(CCalendarView, m_pCalendarItemBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_CalendarItemBackground, // Index name
        99, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderBrush render property
    {
        OFFSET(CCalendarView, m_pCalendarItemBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_CalendarItemBorderBrush, // Index name
        100, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemDisabledBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemDisabledBackground render property
    {
        OFFSET(CCalendarView, m_pCalendarItemDisabledBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_CalendarItemDisabledBackground, // Index name
        101, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemForeground render property
    {
        OFFSET(CCalendarView, m_pCalendarItemForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_CalendarItemForeground, // Index name
        102, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemHoverBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemHoverBackground render property
    {
        OFFSET(CCalendarView, m_pCalendarItemHoverBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_CalendarItemHoverBackground, // Index name
        103, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemPressedBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemPressedBackground render property
    {
        OFFSET(CCalendarView, m_pCalendarItemPressedBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_CalendarItemPressedBackground, // Index name
        104, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontFamily
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontFamily render property
    {
        OFFSET(CCalendarView, m_pDayItemFontFamily), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_DayItemFontFamily, // Index name
        105, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.DisabledForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DisabledForeground render property
    {
        OFFSET(CCalendarView, m_pDisabledForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_DisabledForeground, // Index name
        106, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontFamily
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontFamily render property
    {
        OFFSET(CCalendarView, m_pFirstOfMonthLabelFontFamily), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_FirstOfMonthLabelFontFamily, // Index name
        107, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontFamily
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontFamily render property
    {
        OFFSET(CCalendarView, m_pFirstOfYearDecadeLabelFontFamily), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_FirstOfYearDecadeLabelFontFamily, // Index name
        108, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.FocusBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FocusBorderBrush render property
    {
        OFFSET(CCalendarView, m_pFocusBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_FocusBorderBrush, // Index name
        109, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.HoverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.HoverBorderBrush render property
    {
        OFFSET(CCalendarView, m_pHoverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_HoverBorderBrush, // Index name
        110, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontFamily
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontFamily render property
    {
        OFFSET(CCalendarView, m_pMonthYearItemFontFamily), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_MonthYearItemFontFamily, // Index name
        111, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeBackground render property
    {
        OFFSET(CCalendarView, m_pOutOfScopeBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_OutOfScopeBackground, // Index name
        112, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeForeground render property
    {
        OFFSET(CCalendarView, m_pOutOfScopeForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_OutOfScopeForeground, // Index name
        113, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeHoverForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeHoverForeground render property
    {
        OFFSET(CCalendarView, m_pOutOfScopeHoverForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_OutOfScopeHoverForeground, // Index name
        114, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopePressedForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopePressedForeground render property
    {
        OFFSET(CCalendarView, m_pOutOfScopePressedForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_OutOfScopePressedForeground, // Index name
        115, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.PressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.PressedBorderBrush render property
    {
        OFFSET(CCalendarView, m_pPressedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_PressedBorderBrush, // Index name
        116, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.PressedForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.PressedForeground render property
    {
        OFFSET(CCalendarView, m_pPressedForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_PressedForeground, // Index name
        117, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedBorderBrush render property
    {
        OFFSET(CCalendarView, m_pSelectedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedBorderBrush, // Index name
        118, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledBorderBrush render property
    {
        OFFSET(CCalendarView, m_pSelectedDisabledBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedDisabledBorderBrush, // Index name
        119, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledForeground render property
    {
        OFFSET(CCalendarView, m_pSelectedDisabledForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedDisabledForeground, // Index name
        120, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedForeground render property
    {
        OFFSET(CCalendarView, m_pSelectedForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedForeground, // Index name
        121, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverBorderBrush render property
    {
        OFFSET(CCalendarView, m_pSelectedHoverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedHoverBorderBrush, // Index name
        122, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverForeground render property
    {
        OFFSET(CCalendarView, m_pSelectedHoverForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedHoverForeground, // Index name
        123, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedBorderBrush render property
    {
        OFFSET(CCalendarView, m_pSelectedPressedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedPressedBorderBrush, // Index name
        124, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedForeground render property
    {
        OFFSET(CCalendarView, m_pSelectedPressedForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_SelectedPressedForeground, // Index name
        125, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.TodayBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBackground render property
    {
        OFFSET(CCalendarView, m_pTodayBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayBackground, // Index name
        126, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutBackground render property
    {
        OFFSET(CCalendarView, m_pTodayBlackoutBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayBlackoutBackground, // Index name
        127, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutForeground render property
    {
        OFFSET(CCalendarView, m_pTodayBlackoutForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayBlackoutForeground, // Index name
        128, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.TodayDisabledBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayDisabledBackground render property
    {
        OFFSET(CCalendarView, m_pTodayDisabledBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayDisabledBackground, // Index name
        129, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.TodayForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayForeground render property
    {
        OFFSET(CCalendarView, m_pTodayForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayForeground, // Index name
        130, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBackground render property
    {
        OFFSET(CCalendarView, m_pTodayHoverBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayHoverBackground, // Index name
        131, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBorderBrush render property
    {
        OFFSET(CCalendarView, m_pTodayHoverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayHoverBorderBrush, // Index name
        132, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBackground render property
    {
        OFFSET(CCalendarView, m_pTodayPressedBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayPressedBackground, // Index name
        133, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBorderBrush render property
    {
        OFFSET(CCalendarView, m_pTodayPressedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodayPressedBorderBrush, // Index name
        134, // Next render property = Microsoft.UI.Xaml.Controls.CalendarView.TodaySelectedInnerBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodaySelectedInnerBorderBrush render property
    {
        OFFSET(CCalendarView, m_pTodaySelectedInnerBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::CalendarView_TodaySelectedInnerBorderBrush, // Index name
        59, // Next render property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions render property
    {
        OFFSET(CContentControl, m_pContentTransitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::ContentControl_ContentTransitions, // Index name
        59, // Next render property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.FontFamily render property
    {
        OFFSET(CFontIcon, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        KnownPropertyIndex::FontIcon_FontFamily, // Index name
        66, // Next render property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
    },
    // Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions render property
    {
        OFFSET(CGrid, m_pColumnDefinitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::Grid_ColumnDefinitions, // Index name
        138, // Next render property = Microsoft.UI.Xaml.Controls.Grid.RowDefinitions
    },
    // Microsoft.UI.Xaml.Controls.Grid.RowDefinitions render property
    {
        OFFSET(CGrid, m_pRowDefinitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::Grid_RowDefinitions, // Index name
        72, // Next render property = Microsoft.UI.Xaml.Controls.Panel.Background
    },
    // Microsoft.UI.Xaml.Controls.IconSourceElement.IconSource render property
    {
        OFFSET(CIconSourceElement, m_iconSource), // Offset
        0, // Storage offset
        KnownPropertyIndex::IconSourceElement_IconSource, // Index name
        66, // Next render property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions render property
    {
        OFFSET(CItemsControl, m_pItemContainerTransitions), // Offset
        0, // Storage offset
        KnownPropertyIndex::ItemsControl_ItemContainerTransitions, // Index name
        141, // Next render property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemsHost
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemsHost render property
    {
        OFFSET(CItemsControl, m_pItemsHost), // Offset
        0, // Storage offset
        KnownPropertyIndex::ItemsControl_ItemsHost, // Index name
        142, // Next render property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemsPanel
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemsPanel render property
    {
        OFFSET(CItemsControl, m_pItemsPanelTemplate), // Offset
        0, // Storage offset
        KnownPropertyIndex::ItemsControl_ItemsPanel, // Index name
        59, // Next render property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.PosterSource render property
    {
        OFFSET(CMediaPlayerElement, m_pPosterSource), // Offset
        0, // Storage offset
        KnownPropertyIndex::MediaPlayerElement_PosterSource, // Index name
        59, // Next render property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.InputScope render property
    {
        OFFSET(CPasswordBox, m_pInputScope), // Offset
        0, // Storage offset
        KnownPropertyIndex::PasswordBox_InputScope, // Index name
        145, // Next render property = Microsoft.UI.Xaml.Controls.PasswordBox.SelectionHighlightColor
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.SelectionHighlightColor render property
    {
        OFFSET(CPasswordBox, m_pSelectionHighlightColor), // Offset
        0, // Storage offset
        KnownPropertyIndex::PasswordBox_SelectionHighlightColor, // Index name
        59, // Next render property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Shapes.Path.Data render property
    {
        OFFSET(CPath, m_pGeometryData), // Offset
        0, // Storage offset
        KnownPropertyIndex::Path_Data, // Index name
        84, // Next render property = Microsoft.UI.Xaml.Shapes.Shape.Fill
    },
    // Microsoft.UI.Xaml.Controls.PathIcon.Data render property
    {
        OFFSET(CPathIcon, m_pData), // Offset
        0, // Storage offset
        KnownPropertyIndex::PathIcon_Data, // Index name
        66, // Next render property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
    },
    // Microsoft.UI.Xaml.Shapes.Polygon.Points render property
    {
        OFFSET(CPolygon, m_pPoints), // Offset
        0, // Storage offset
        KnownPropertyIndex::Polygon_Points, // Index name
        84, // Next render property = Microsoft.UI.Xaml.Shapes.Shape.Fill
    },
    // Microsoft.UI.Xaml.Shapes.Polyline.Points render property
    {
        OFFSET(CPolyline, m_pPoints), // Offset
        0, // Storage offset
        KnownPropertyIndex::Polyline_Points, // Index name
        84, // Next render property = Microsoft.UI.Xaml.Shapes.Shape.Fill
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.InputScope render property
    {
        OFFSET(CRichEditBox, m_pInputScope), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichEditBox_InputScope, // Index name
        151, // Next render property = Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColor
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColor render property
    {
        OFFSET(CRichEditBox, m_pSelectionHighlightColor), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichEditBox_SelectionHighlightColor, // Index name
        152, // Next render property = Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColorWhenNotFocused
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColorWhenNotFocused render property
    {
        OFFSET(CRichEditBox, m_pSelectionHighlightColorWhenNotFocused), // Offset
        0, // Storage offset
        KnownPropertyIndex::RichEditBox_SelectionHighlightColorWhenNotFocused, // Index name
        59, // Next render property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.SplitView.TemplateSettings render property
    {
        OFFSET(CSplitView, m_pTemplateSettings), // Offset
        0, // Storage offset
        KnownPropertyIndex::SplitView_TemplateSettings, // Index name
        59, // Next render property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.TextBox.InputScope render property
    {
        OFFSET(CTextBox, m_pInputScope), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextBox_InputScope, // Index name
        155, // Next render property = Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColor
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColor render property
    {
        OFFSET(CTextBox, m_pSelectionHighlightColor), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextBox_SelectionHighlightColor, // Index name
        156, // Next render property = Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColorWhenNotFocused
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColorWhenNotFocused render property
    {
        OFFSET(CTextBox, m_pSelectionHighlightColorWhenNotFocused), // Offset
        0, // Storage offset
        KnownPropertyIndex::TextBox_SelectionHighlightColorWhenNotFocused, // Index name
        59, // Next render property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckBrush render property
    {
        OFFSET(CGridViewItemChrome, m_pCheckBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_CheckBrush, // Index name
        158, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckHintBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckHintBrush render property
    {
        OFFSET(CGridViewItemChrome, m_pCheckHintBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_CheckHintBrush, // Index name
        159, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckSelectingBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckSelectingBrush render property
    {
        OFFSET(CGridViewItemChrome, m_pCheckSelectingBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_CheckSelectingBrush, // Index name
        160, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragBackground render property
    {
        OFFSET(CGridViewItemChrome, m_pDragBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_DragBackground, // Index name
        161, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragForeground render property
    {
        OFFSET(CGridViewItemChrome, m_pDragForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_DragForeground, // Index name
        162, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.FocusBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.FocusBorderBrush render property
    {
        OFFSET(CGridViewItemChrome, m_pFocusBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_FocusBorderBrush, // Index name
        163, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PlaceholderBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PlaceholderBackground render property
    {
        OFFSET(CGridViewItemChrome, m_pPlaceholderBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_PlaceholderBackground, // Index name
        164, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackground render property
    {
        OFFSET(CGridViewItemChrome, m_pPointerOverBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_PointerOverBackground, // Index name
        165, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBackground render property
    {
        OFFSET(CGridViewItemChrome, m_pSelectedBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_SelectedBackground, // Index name
        166, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedForeground render property
    {
        OFFSET(CGridViewItemChrome, m_pSelectedForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_SelectedForeground, // Index name
        167, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBackground render property
    {
        OFFSET(CGridViewItemChrome, m_pSelectedPointerOverBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_SelectedPointerOverBackground, // Index name
        168, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBorderBrush render property
    {
        OFFSET(CGridViewItemChrome, m_pSelectedPointerOverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::GridViewItemPresenter_SelectedPointerOverBorderBrush, // Index name
        56, // Next render property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBorderBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxBorderBrush, // Index name
        170, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxBrush, // Index name
        171, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBorderBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxDisabledBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxDisabledBorderBrush, // Index name
        172, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxDisabledBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxDisabledBrush, // Index name
        173, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBorderBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxPointerOverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPointerOverBorderBrush, // Index name
        174, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxPointerOverBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPointerOverBrush, // Index name
        175, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBorderBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxPressedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPressedBorderBrush, // Index name
        176, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxPressedBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPressedBrush, // Index name
        177, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxSelectedBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedBrush, // Index name
        178, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedDisabledBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedDisabledBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxSelectedDisabledBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedDisabledBrush, // Index name
        179, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPointerOverBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPointerOverBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxSelectedPointerOverBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedPointerOverBrush, // Index name
        180, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPressedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPressedBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxSelectedPressedBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedPressedBrush, // Index name
        181, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckBrush, // Index name
        182, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckDisabledBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckDisabledBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckDisabledBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckDisabledBrush, // Index name
        183, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckHintBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckHintBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckHintBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckHintBrush, // Index name
        184, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckPressedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckPressedBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckPressedBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckPressedBrush, // Index name
        185, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckSelectingBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckSelectingBrush render property
    {
        OFFSET(CListViewItemChrome, m_pCheckSelectingBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_CheckSelectingBrush, // Index name
        186, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragBackground render property
    {
        OFFSET(CListViewItemChrome, m_pDragBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_DragBackground, // Index name
        187, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragForeground render property
    {
        OFFSET(CListViewItemChrome, m_pDragForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_DragForeground, // Index name
        188, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusBorderBrush render property
    {
        OFFSET(CListViewItemChrome, m_pFocusBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_FocusBorderBrush, // Index name
        189, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusSecondaryBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusSecondaryBorderBrush render property
    {
        OFFSET(CListViewItemChrome, m_pFocusSecondaryBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_FocusSecondaryBorderBrush, // Index name
        190, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PlaceholderBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PlaceholderBackground render property
    {
        OFFSET(CListViewItemChrome, m_pPlaceholderBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_PlaceholderBackground, // Index name
        191, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackground render property
    {
        OFFSET(CListViewItemChrome, m_pPointerOverBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_PointerOverBackground, // Index name
        192, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBorderBrush render property
    {
        OFFSET(CListViewItemChrome, m_pPointerOverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_PointerOverBorderBrush, // Index name
        193, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverForeground render property
    {
        OFFSET(CListViewItemChrome, m_pPointerOverForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_PointerOverForeground, // Index name
        194, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PressedBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PressedBackground render property
    {
        OFFSET(CListViewItemChrome, m_pPressedBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_PressedBackground, // Index name
        195, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBackground render property
    {
        OFFSET(CListViewItemChrome, m_pSelectedBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedBackground, // Index name
        196, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderBrush render property
    {
        OFFSET(CListViewItemChrome, m_pSelectedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedBorderBrush, // Index name
        197, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBackground render property
    {
        OFFSET(CListViewItemChrome, m_pSelectedDisabledBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedDisabledBackground, // Index name
        198, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBorderBrush render property
    {
        OFFSET(CListViewItemChrome, m_pSelectedDisabledBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedDisabledBorderBrush, // Index name
        199, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedForeground render property
    {
        OFFSET(CListViewItemChrome, m_pSelectedForeground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedForeground, // Index name
        200, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedInnerBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedInnerBorderBrush render property
    {
        OFFSET(CListViewItemChrome, m_pSelectedInnerBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedInnerBorderBrush, // Index name
        201, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBackground render property
    {
        OFFSET(CListViewItemChrome, m_pSelectedPointerOverBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedPointerOverBackground, // Index name
        202, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBorderBrush render property
    {
        OFFSET(CListViewItemChrome, m_pSelectedPointerOverBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedPointerOverBorderBrush, // Index name
        203, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBackground render property
    {
        OFFSET(CListViewItemChrome, m_pSelectedPressedBackground), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedPressedBackground, // Index name
        204, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBorderBrush render property
    {
        OFFSET(CListViewItemChrome, m_pSelectedPressedBorderBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectedPressedBorderBrush, // Index name
        205, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorBrush render property
    {
        OFFSET(CListViewItemChrome, m_pSelectionIndicatorBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorBrush, // Index name
        206, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorDisabledBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorDisabledBrush render property
    {
        OFFSET(CListViewItemChrome, m_pSelectionIndicatorDisabledBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorDisabledBrush, // Index name
        207, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPointerOverBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPointerOverBrush render property
    {
        OFFSET(CListViewItemChrome, m_pSelectionIndicatorPointerOverBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorPointerOverBrush, // Index name
        208, // Next render property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPressedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPressedBrush render property
    {
        OFFSET(CListViewItemChrome, m_pSelectionIndicatorPressedBrush), // Offset
        0, // Storage offset
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorPressedBrush, // Index name
        56, // Next render property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
    },
};

// Enter/Leave properties.
extern const MetaDataEnterProperty c_aEnterProperties[222] =
{
    // UnknownObject.UnknownProperty enter property
    {
        0, // Offset
        0, // Storage offset
        MetaDataEnterPropertyInfoFlags::None, // Property flags
        KnownPropertyIndex::UnknownType_UnknownProperty, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Application.Resources enter property
    {
        OFFSET(CApplication, m_pResources), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Application_Resources, // Index name
        2, // Next enter property = Microsoft.UI.Xaml.Application.RootVisual
    },
    // Microsoft.UI.Xaml.Application.RootVisual enter property
    {
        OFFSET(CApplication, m_pRootVisual), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Application_RootVisual, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.FrameworkTemplate.Template enter property
    {
        OFFSET(CFrameworkTemplate, m_pTemplateContent), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::FrameworkTemplate_Template, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Geometry.Transform enter property
    {
        OFFSET(CGeometry, m_pTransform), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Geometry_Transform, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Input.InputScope.Names enter property
    {
        OFFSET(CInputScope, m_pNames), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::InputScope_Names, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.KeySpline.ControlPoint1 enter property
    {
        OFFSET(CKeySpline, m_ControlPoint1), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke)), // Property flags
        KnownPropertyIndex::KeySpline_ControlPoint1, // Index name
        7, // Next enter property = Microsoft.UI.Xaml.Media.Animation.KeySpline.ControlPoint2
    },
    // Microsoft.UI.Xaml.Media.Animation.KeySpline.ControlPoint2 enter property
    {
        OFFSET(CKeySpline, m_ControlPoint2), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke)), // Property flags
        KnownPropertyIndex::KeySpline_ControlPoint2, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Internal.ParametricCurve.CurveSegments enter property
    {
        OFFSET(CParametricCurve, m_pCurveSegments), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ParametricCurve_CurveSegments, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.PathFigure.Segments enter property
    {
        OFFSET(CPathFigure, m_pSegments), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::PathFigure_Segments, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Internal.SecondaryContentRelationship.Curves enter property
    {
        OFFSET(CSecondaryContentRelationship, m_pCurves), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::SecondaryContentRelationship_Curves, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Style.Setters enter property
    {
        OFFSET(CStyle, m_pSetters), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Style_Setters, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.TextElement.FontFamily enter property
    {
        OFFSET(CTextElement, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TextElement_FontFamily, // Index name
        13, // Next enter property = Microsoft.UI.Xaml.Documents.TextElement.Foreground
    },
    // Microsoft.UI.Xaml.Documents.TextElement.Foreground enter property
    {
        OFFSET(CTextElement, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TextElement_Foreground, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime enter property
    {
        OFFSET(CTimeline, m_pBeginTime), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Timeline_BeginTime, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.Transition.GeneratedStaggerFunction enter property
    {
        OFFSET(CTransition, m_pStaggerFunction), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Transition_GeneratedStaggerFunction, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.ClipTransform enter property
    {
        OFFSET(CTransitionTarget, m_pClipTransform), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TransitionTarget_ClipTransform, // Index name
        17, // Next enter property = Microsoft.UI.Xaml.Media.Animation.TransitionTarget.CompositeTransform
    },
    // Microsoft.UI.Xaml.Media.Animation.TransitionTarget.CompositeTransform enter property
    {
        OFFSET(CTransitionTarget, m_pxf), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TransitionTarget_CompositeTransform, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.UIElement.KeyboardAccelerators enter property
    {
        0, // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke)), // Property flags
        KnownPropertyIndex::UIElement_KeyboardAccelerators, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.VisualState.__DeferredSetters enter property
    {
        OFFSET(CVisualState, m_pDeferredSetters), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::VisualState___DeferredSetters, // Index name
        20, // Next enter property = Microsoft.UI.Xaml.VisualState.__DeferredStoryboard
    },
    // Microsoft.UI.Xaml.VisualState.__DeferredStoryboard enter property
    {
        OFFSET(CVisualState, m_pDeferredStoryboard), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::VisualState___DeferredStoryboard, // Index name
        21, // Next enter property = Microsoft.UI.Xaml.VisualState.Setters
    },
    // Microsoft.UI.Xaml.VisualState.Setters enter property
    {
        OFFSET(CVisualState, m_setters), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::VisualState_Setters, // Index name
        22, // Next enter property = Microsoft.UI.Xaml.VisualState.StateTriggers
    },
    // Microsoft.UI.Xaml.VisualState.StateTriggers enter property
    {
        OFFSET(CVisualState, m_pStateTriggerCollection), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::VisualState_StateTriggers, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.VisualStateGroup.States enter property
    {
        OFFSET(CVisualStateGroup, m_pVisualStates), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::VisualStateGroup_States, // Index name
        24, // Next enter property = Microsoft.UI.Xaml.VisualStateGroup.Transitions
    },
    // Microsoft.UI.Xaml.VisualStateGroup.Transitions enter property
    {
        OFFSET(CVisualStateGroup, m_pTransitions), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::VisualStateGroup_Transitions, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.VisualTransition.GeneratedEasingFunction enter property
    {
        OFFSET(CVisualTransition, m_pEasingFunction), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::VisualTransition_GeneratedEasingFunction, // Index name
        26, // Next enter property = Microsoft.UI.Xaml.VisualTransition.Storyboard
    },
    // Microsoft.UI.Xaml.VisualTransition.Storyboard enter property
    {
        OFFSET(CVisualTransition, m_pStoryboard), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::VisualTransition_Storyboard, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Input.XamlUICommand.KeyboardAccelerators enter property
    {
        0, // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke)), // Property flags
        KnownPropertyIndex::XamlUICommand_KeyboardAccelerators, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.Storyboard enter property
    {
        OFFSET(CBeginStoryboard, m_pStoryboard), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke) | static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::BeginStoryboard_Storyboard, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimation.EasingFunction enter property
    {
        OFFSET(CColorAnimation, m_pEasingFunction), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ColorAnimation_EasingFunction, // Index name
        14, // Next enter property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames enter property
    {
        OFFSET(CColorAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ColorAnimationUsingKeyFrames_KeyFrames, // Index name
        14, // Next enter property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.DispatcherTimer.Interval enter property
    {
        OFFSET(CDispatcherTimer, m_pInterval), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::DispatcherTimer_Interval, // Index name
        14, // Next enter property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimation.EasingFunction enter property
    {
        OFFSET(CDoubleAnimation, m_pEasingFunction), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::DoubleAnimation_EasingFunction, // Index name
        14, // Next enter property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames enter property
    {
        OFFSET(CDoubleAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::DoubleAnimationUsingKeyFrames_KeyFrames, // Index name
        14, // Next enter property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.DynamicTimeline.Children enter property
    {
        OFFSET(CDynamicTimeline, m_pChild), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::DynamicTimeline_Children, // Index name
        14, // Next enter property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame.EasingFunction enter property
    {
        OFFSET(CEasingColorKeyFrame, m_pEasingFunction), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::EasingColorKeyFrame_EasingFunction, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame.EasingFunction enter property
    {
        OFFSET(CEasingDoubleKeyFrame, m_pEasingFunction), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::EasingDoubleKeyFrame_EasingFunction, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame.EasingFunction enter property
    {
        OFFSET(CEasingPointKeyFrame, m_pEasingFunction), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::EasingPointKeyFrame_EasingFunction, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.EventTrigger.Actions enter property
    {
        OFFSET(CEventTrigger, m_pTriggerActions), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::EventTrigger_Actions, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.FrameworkElement.Height enter property
    {
        OFFSET(CFrameworkElement, m_eHeight), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke)), // Property flags
        KnownPropertyIndex::FrameworkElement_Height, // Index name
        40, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Width
    },
    // Microsoft.UI.Xaml.FrameworkElement.Width enter property
    {
        OFFSET(CFrameworkElement, m_eWidth), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke)), // Property flags
        KnownPropertyIndex::FrameworkElement_Width, // Index name
        18, // Next enter property = Microsoft.UI.Xaml.UIElement.KeyboardAccelerators
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.Height enter property
    {
        OFFSET(CFrameworkElementEx, m_height), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke)), // Property flags
        KnownPropertyIndex::FrameworkElementEx_Height, // Index name
        42, // Next enter property = Microsoft.UI.Xaml.FrameworkElementEx.Width
    },
    // Microsoft.UI.Xaml.FrameworkElementEx.Width enter property
    {
        OFFSET(CFrameworkElementEx, m_width), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke)), // Property flags
        KnownPropertyIndex::FrameworkElementEx_Width, // Index name
        18, // Next enter property = Microsoft.UI.Xaml.UIElement.KeyboardAccelerators
    },
    // Microsoft.UI.Xaml.Media.GeometryGroup.Children enter property
    {
        OFFSET(CGeometryGroup, m_pChild), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GeometryGroup_Children, // Index name
        4, // Next enter property = Microsoft.UI.Xaml.Media.Geometry.Transform
    },
    // Microsoft.UI.Xaml.Media.GradientBrush.GradientStops enter property
    {
        OFFSET(CGradientBrush, m_pStops), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GradientBrush_GradientStops, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Matrix3DProjection.ProjectionMatrix enter property
    {
        OFFSET(CMatrix3DProjection, m_pMatrix), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Matrix3DProjection_ProjectionMatrix, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames enter property
    {
        OFFSET(CObjectAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ObjectAnimationUsingKeyFrames_KeyFrames, // Index name
        14, // Next enter property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.PanelEx.Height enter property
    {
        OFFSET(CPanelEx, m_height), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke)), // Property flags
        KnownPropertyIndex::PanelEx_Height, // Index name
        48, // Next enter property = Microsoft.UI.Xaml.PanelEx.Width
    },
    // Microsoft.UI.Xaml.PanelEx.Width enter property
    {
        OFFSET(CPanelEx, m_width), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke)), // Property flags
        KnownPropertyIndex::PanelEx_Width, // Index name
        18, // Next enter property = Microsoft.UI.Xaml.UIElement.KeyboardAccelerators
    },
    // Microsoft.UI.Xaml.Media.PathGeometry.Figures enter property
    {
        OFFSET(CPathGeometry, m_pFigures), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::PathGeometry_Figures, // Index name
        4, // Next enter property = Microsoft.UI.Xaml.Media.Geometry.Transform
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimation.EasingFunction enter property
    {
        OFFSET(CPointAnimation, m_pEasingFunction), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::PointAnimation_EasingFunction, // Index name
        14, // Next enter property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames enter property
    {
        OFFSET(CPointAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::PointAnimationUsingKeyFrames_KeyFrames, // Index name
        14, // Next enter property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Internal.PointerAnimationUsingKeyFrames.KeyFrames enter property
    {
        OFFSET(CPointerAnimationUsingKeyFrames, m_pKeyFrames), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::PointerAnimationUsingKeyFrames_KeyFrames, // Index name
        14, // Next enter property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Media.PolyBezierSegment.Points enter property
    {
        OFFSET(CPolyBezierSegment, m_pPoints), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::PolyBezierSegment_Points, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.PolyLineSegment.Points enter property
    {
        OFFSET(CPolyLineSegment, m_pPoints), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::PolyLineSegment_Points, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment.Points enter property
    {
        OFFSET(CPolyQuadraticSegment, m_pPoints), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::PolyQuadraticBezierSegment_Points, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Setter.Property enter property
    {
        OFFSET(CSetter, m_pDependencyPropertyProxy), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Setter_Property, // Index name
        57, // Next enter property = Microsoft.UI.Xaml.Setter.Target
    },
    // Microsoft.UI.Xaml.Setter.Target enter property
    {
        OFFSET(CSetter, m_target), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Setter_Target, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame.KeySpline enter property
    {
        OFFSET(CSplineColorKeyFrame, m_pKeySpline), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::SplineColorKeyFrame_KeySpline, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame.KeySpline enter property
    {
        OFFSET(CSplineDoubleKeyFrame, m_pKeySpline), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::SplineDoubleKeyFrame_KeySpline, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame.KeySpline enter property
    {
        OFFSET(CSplinePointKeyFrame, m_pKeySpline), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::SplinePointKeyFrame_KeySpline, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Data.TemplateBinding.Property enter property
    {
        OFFSET(CTemplateBindingExtension, m_pSourceProperty), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TemplateBinding_Property, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter.Background enter property
    {
        OFFSET(CTextHighlighter, m_background), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TextHighlighter_Background, // Index name
        63, // Next enter property = Microsoft.UI.Xaml.Documents.TextHighlighter.Foreground
    },
    // Microsoft.UI.Xaml.Documents.TextHighlighter.Foreground enter property
    {
        OFFSET(CTextHighlighter, m_foreground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TextHighlighter_Foreground, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.Border.Background enter property
    {
        OFFSET(CBorder, m_pBackgroundBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Border_Background, // Index name
        65, // Next enter property = Microsoft.UI.Xaml.Controls.Border.BorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Border.BorderBrush enter property
    {
        OFFSET(CBorder, m_pBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Border_BorderBrush, // Index name
        39, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Height
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions enter property
    {
        OFFSET(CContentPresenter, m_pContentTransitions), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ContentPresenter_ContentTransitions, // Index name
        67, // Next enter property = Microsoft.UI.Xaml.Controls.ContentPresenter.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.FontFamily enter property
    {
        OFFSET(CContentPresenter, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ContentPresenter_FontFamily, // Index name
        68, // Next enter property = Microsoft.UI.Xaml.Controls.ContentPresenter.Foreground
    },
    // Microsoft.UI.Xaml.Controls.ContentPresenter.Foreground enter property
    {
        OFFSET(CContentPresenter, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ContentPresenter_Foreground, // Index name
        39, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Height
    },
    // Microsoft.UI.Xaml.Controls.Control.Background enter property
    {
        OFFSET(CControl, m_pBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Control_Background, // Index name
        70, // Next enter property = Microsoft.UI.Xaml.Controls.Control.BorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Control.BorderBrush enter property
    {
        OFFSET(CControl, m_pBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Control_BorderBrush, // Index name
        71, // Next enter property = Microsoft.UI.Xaml.Controls.Control.DefaultStyleKey
    },
    // Microsoft.UI.Xaml.Controls.Control.DefaultStyleKey enter property
    {
        OFFSET(CControl, m_pDefaultStyleKey), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Control_DefaultStyleKey, // Index name
        72, // Next enter property = Microsoft.UI.Xaml.Controls.Control.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.Control.FontFamily enter property
    {
        OFFSET(CControl, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Control_FontFamily, // Index name
        73, // Next enter property = Microsoft.UI.Xaml.Controls.Control.Foreground
    },
    // Microsoft.UI.Xaml.Controls.Control.Foreground enter property
    {
        OFFSET(CControl, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Control_Foreground, // Index name
        74, // Next enter property = Microsoft.UI.Xaml.Controls.Control.Template
    },
    // Microsoft.UI.Xaml.Controls.Control.Template enter property
    {
        OFFSET(CControl, m_pTemplate), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Control_Template, // Index name
        39, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Height
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.Fill enter property
    {
        OFFSET(CGlyphs, m_pFill), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Glyphs_Fill, // Index name
        76, // Next enter property = Microsoft.UI.Xaml.Documents.Glyphs.FontUri
    },
    // Microsoft.UI.Xaml.Documents.Glyphs.FontUri enter property
    {
        OFFSET(CGlyphs, m_strFontUri), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke)), // Property flags
        KnownPropertyIndex::Glyphs_FontUri, // Index name
        39, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Height
    },
    // Microsoft.UI.Xaml.Controls.IconElement.Foreground enter property
    {
        OFFSET(CIconElement, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::IconElement_Foreground, // Index name
        39, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Height
    },
    // Microsoft.UI.Xaml.Controls.Image.Source enter property
    {
        OFFSET(CImage, m_pImageSource), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke) | static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Image_Source, // Index name
        39, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Height
    },
    // Microsoft.UI.Xaml.Media.ImageBrush.ImageSource enter property
    {
        OFFSET(CImageBrush, m_pImageSource), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ImageBrush_ImageSource, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Documents.InlineUIContainer.Child enter property
    {
        OFFSET(CInlineUIContainer, m_pChild), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::InlineUIContainer_Child, // Index name
        12, // Next enter property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.ItemsPresenter.ItemsPanel enter property
    {
        OFFSET(CItemsPresenter, m_pItemsPanelTemplate), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ItemsPresenter_ItemsPanel, // Index name
        39, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Height
    },
    // Microsoft.UI.Xaml.Media.MatrixTransform.Matrix enter property
    {
        OFFSET(CMatrixTransform, m_pMatrix), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::MatrixTransform_Matrix, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.Panel.Background enter property
    {
        OFFSET(CPanel, m_pBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Panel_Background, // Index name
        39, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Height
    },
    // Microsoft.UI.Xaml.Documents.Paragraph.Inlines enter property
    {
        OFFSET(CParagraph, m_pInlines), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Paragraph_Inlines, // Index name
        12, // Next enter property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.ChildTransitions enter property
    {
        OFFSET(CPopup, m_pChildTransitions), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Popup_ChildTransitions, // Index name
        86, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.Popup.OverlayElement
    },
    // Microsoft.UI.Xaml.Controls.Primitives.Popup.OverlayElement enter property
    {
        OFFSET(CPopup, m_overlayElement), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Popup_OverlayElement, // Index name
        39, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Height
    },
    // Microsoft.UI.Xaml.ResourceDictionary.MergedDictionaries enter property
    {
        OFFSET(CResourceDictionary, m_pMergedDictionaries), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ResourceDictionary_MergedDictionaries, // Index name
        88, // Next enter property = Microsoft.UI.Xaml.ResourceDictionary.ThemeDictionaries
    },
    // Microsoft.UI.Xaml.ResourceDictionary.ThemeDictionaries enter property
    {
        OFFSET(CResourceDictionary, m_pThemeDictionaries), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ResourceDictionary_ThemeDictionaries, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.Blocks enter property
    {
        OFFSET(CRichTextBlock, m_pBlocks), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::RichTextBlock_Blocks, // Index name
        90, // Next enter property = Microsoft.UI.Xaml.Controls.RichTextBlock.FontFamily
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.FontFamily enter property
    {
        OFFSET(CRichTextBlock, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::RichTextBlock_FontFamily, // Index name
        91, // Next enter property = Microsoft.UI.Xaml.Controls.RichTextBlock.Foreground
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.Foreground enter property
    {
        OFFSET(CRichTextBlock, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::RichTextBlock_Foreground, // Index name
        92, // Next enter property = Microsoft.UI.Xaml.Controls.RichTextBlock.OverflowContentTarget
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.OverflowContentTarget enter property
    {
        OFFSET(CRichTextBlock, m_pOverflowTarget), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::DoNotEnterLeave) | static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::RichTextBlock_OverflowContentTarget, // Index name
        93, // Next enter property = Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionHighlightColor
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlock.SelectionHighlightColor enter property
    {
        OFFSET(CRichTextBlock, m_pSelectionHighlightColor), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::RichTextBlock_SelectionHighlightColor, // Index name
        39, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Height
    },
    // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.OverflowContentTarget enter property
    {
        OFFSET(CRichTextBlockOverflow, m_pOverflowTarget), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::DoNotEnterLeave) | static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::RichTextBlockOverflow_OverflowContentTarget, // Index name
        39, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Height
    },
    // Microsoft.UI.Xaml.Shapes.Shape.Fill enter property
    {
        OFFSET(CShape, m_pFill), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Shape_Fill, // Index name
        39, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Height
    },
    // Microsoft.UI.Xaml.Documents.Span.Inlines enter property
    {
        OFFSET(CSpan, m_pInlines), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Span_Inlines, // Index name
        12, // Next enter property = Microsoft.UI.Xaml.Documents.TextElement.FontFamily
    },
    // Microsoft.UI.Xaml.Media.Animation.Storyboard.Children enter property
    {
        OFFSET(CStoryboard, m_pChild), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Storyboard_Children, // Index name
        14, // Next enter property = Microsoft.UI.Xaml.Media.Animation.Timeline.BeginTime
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.FontFamily enter property
    {
        OFFSET(CTextBlock, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TextBlock_FontFamily, // Index name
        99, // Next enter property = Microsoft.UI.Xaml.Controls.TextBlock.Foreground
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Foreground enter property
    {
        OFFSET(CTextBlock, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pForeground), // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TextBlock_Foreground, // Index name
        100, // Next enter property = Microsoft.UI.Xaml.Controls.TextBlock.Inlines
    },
    // Microsoft.UI.Xaml.Controls.TextBlock.Inlines enter property
    {
        OFFSET(CTextBlock, m_pInlines), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TextBlock_Inlines, // Index name
        39, // Next enter property = Microsoft.UI.Xaml.FrameworkElement.Height
    },
    // Microsoft.UI.Xaml.Media.TransformGroup.Children enter property
    {
        OFFSET(CTransformGroup, m_pChild), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TransformGroup_Children, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveStoryboards enter property
    {
        OFFSET(CVisualStateGroupCollection, m_pActiveStoryboards), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::VisualStateGroupCollection_ActiveStoryboards, // Index name
        103, // Next enter property = Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveTransitions
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.ActiveTransitions enter property
    {
        OFFSET(CVisualStateGroupCollection, m_pActiveTransitions), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::VisualStateGroupCollection_ActiveTransitions, // Index name
        104, // Next enter property = Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredSetters
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredSetters enter property
    {
        OFFSET(CVisualStateGroupCollection, m_pDeferredSetters), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::VisualStateGroupCollection_DeferredSetters, // Index name
        105, // Next enter property = Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredStateTriggers
    },
    // Microsoft.UI.Xaml.Internal.VisualStateGroupCollection.DeferredStateTriggers enter property
    {
        OFFSET(CVisualStateGroupCollection, m_pDeferredStateTriggers), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::VisualStateGroupCollection_DeferredStateTriggers, // Index name
        0, // Next enter property = UnknownObject.UnknownProperty
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutBackground enter property
    {
        OFFSET(CCalendarView, m_pBlackoutBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_BlackoutBackground, // Index name
        107, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.BlackoutForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutForeground enter property
    {
        OFFSET(CCalendarView, m_pBlackoutForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_BlackoutForeground, // Index name
        108, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.BlackoutStrikethroughBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.BlackoutStrikethroughBrush enter property
    {
        OFFSET(CCalendarView, m_pBlackoutStrikethroughBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_BlackoutStrikethroughBrush, // Index name
        109, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBackground enter property
    {
        OFFSET(CCalendarView, m_pCalendarItemBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_CalendarItemBackground, // Index name
        110, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemBorderBrush enter property
    {
        OFFSET(CCalendarView, m_pCalendarItemBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_CalendarItemBorderBrush, // Index name
        111, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemDisabledBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemDisabledBackground enter property
    {
        OFFSET(CCalendarView, m_pCalendarItemDisabledBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_CalendarItemDisabledBackground, // Index name
        112, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemForeground enter property
    {
        OFFSET(CCalendarView, m_pCalendarItemForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_CalendarItemForeground, // Index name
        113, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemHoverBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemHoverBackground enter property
    {
        OFFSET(CCalendarView, m_pCalendarItemHoverBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_CalendarItemHoverBackground, // Index name
        114, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemPressedBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.CalendarItemPressedBackground enter property
    {
        OFFSET(CCalendarView, m_pCalendarItemPressedBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_CalendarItemPressedBackground, // Index name
        115, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontFamily
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DayItemFontFamily enter property
    {
        OFFSET(CCalendarView, m_pDayItemFontFamily), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_DayItemFontFamily, // Index name
        116, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.DisabledForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.DisabledForeground enter property
    {
        OFFSET(CCalendarView, m_pDisabledForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_DisabledForeground, // Index name
        117, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontFamily
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontFamily enter property
    {
        OFFSET(CCalendarView, m_pFirstOfMonthLabelFontFamily), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_FirstOfMonthLabelFontFamily, // Index name
        118, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontFamily
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontFamily enter property
    {
        OFFSET(CCalendarView, m_pFirstOfYearDecadeLabelFontFamily), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_FirstOfYearDecadeLabelFontFamily, // Index name
        119, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.FocusBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.FocusBorderBrush enter property
    {
        OFFSET(CCalendarView, m_pFocusBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_FocusBorderBrush, // Index name
        120, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.HoverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.HoverBorderBrush enter property
    {
        OFFSET(CCalendarView, m_pHoverBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_HoverBorderBrush, // Index name
        121, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontFamily
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.MonthYearItemFontFamily enter property
    {
        OFFSET(CCalendarView, m_pMonthYearItemFontFamily), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_MonthYearItemFontFamily, // Index name
        122, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeBackground enter property
    {
        OFFSET(CCalendarView, m_pOutOfScopeBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_OutOfScopeBackground, // Index name
        123, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeForeground enter property
    {
        OFFSET(CCalendarView, m_pOutOfScopeForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_OutOfScopeForeground, // Index name
        124, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeHoverForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopeHoverForeground enter property
    {
        OFFSET(CCalendarView, m_pOutOfScopeHoverForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_OutOfScopeHoverForeground, // Index name
        125, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopePressedForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.OutOfScopePressedForeground enter property
    {
        OFFSET(CCalendarView, m_pOutOfScopePressedForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_OutOfScopePressedForeground, // Index name
        126, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.PressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.PressedBorderBrush enter property
    {
        OFFSET(CCalendarView, m_pPressedBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_PressedBorderBrush, // Index name
        127, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.PressedForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.PressedForeground enter property
    {
        OFFSET(CCalendarView, m_pPressedForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_PressedForeground, // Index name
        128, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedBorderBrush enter property
    {
        OFFSET(CCalendarView, m_pSelectedBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_SelectedBorderBrush, // Index name
        129, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledBorderBrush enter property
    {
        OFFSET(CCalendarView, m_pSelectedDisabledBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_SelectedDisabledBorderBrush, // Index name
        130, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedDisabledForeground enter property
    {
        OFFSET(CCalendarView, m_pSelectedDisabledForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_SelectedDisabledForeground, // Index name
        131, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedForeground enter property
    {
        OFFSET(CCalendarView, m_pSelectedForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_SelectedForeground, // Index name
        132, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverBorderBrush enter property
    {
        OFFSET(CCalendarView, m_pSelectedHoverBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_SelectedHoverBorderBrush, // Index name
        133, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedHoverForeground enter property
    {
        OFFSET(CCalendarView, m_pSelectedHoverForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_SelectedHoverForeground, // Index name
        134, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedBorderBrush enter property
    {
        OFFSET(CCalendarView, m_pSelectedPressedBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_SelectedPressedBorderBrush, // Index name
        135, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.SelectedPressedForeground enter property
    {
        OFFSET(CCalendarView, m_pSelectedPressedForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_SelectedPressedForeground, // Index name
        136, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.TodayBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBackground enter property
    {
        OFFSET(CCalendarView, m_pTodayBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_TodayBackground, // Index name
        137, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutBackground enter property
    {
        OFFSET(CCalendarView, m_pTodayBlackoutBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_TodayBlackoutBackground, // Index name
        138, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayBlackoutForeground enter property
    {
        OFFSET(CCalendarView, m_pTodayBlackoutForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_TodayBlackoutForeground, // Index name
        139, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.TodayDisabledBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayDisabledBackground enter property
    {
        OFFSET(CCalendarView, m_pTodayDisabledBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_TodayDisabledBackground, // Index name
        140, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.TodayForeground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayForeground enter property
    {
        OFFSET(CCalendarView, m_pTodayForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_TodayForeground, // Index name
        141, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBackground enter property
    {
        OFFSET(CCalendarView, m_pTodayHoverBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_TodayHoverBackground, // Index name
        142, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayHoverBorderBrush enter property
    {
        OFFSET(CCalendarView, m_pTodayHoverBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_TodayHoverBorderBrush, // Index name
        143, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBackground
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBackground enter property
    {
        OFFSET(CCalendarView, m_pTodayPressedBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_TodayPressedBackground, // Index name
        144, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodayPressedBorderBrush enter property
    {
        OFFSET(CCalendarView, m_pTodayPressedBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_TodayPressedBorderBrush, // Index name
        145, // Next enter property = Microsoft.UI.Xaml.Controls.CalendarView.TodaySelectedInnerBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.CalendarView.TodaySelectedInnerBorderBrush enter property
    {
        OFFSET(CCalendarView, m_pTodaySelectedInnerBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::CalendarView_TodaySelectedInnerBorderBrush, // Index name
        69, // Next enter property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.ContentControl.ContentTransitions enter property
    {
        OFFSET(CContentControl, m_pContentTransitions), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ContentControl_ContentTransitions, // Index name
        69, // Next enter property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.FontIcon.FontFamily enter property
    {
        OFFSET(CFontIcon, m_pTextFormatting), // Offset
        OFFSET(TextFormatting, m_pFontFamily), // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::FontIcon_FontFamily, // Index name
        77, // Next enter property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
    },
    // Microsoft.UI.Xaml.Controls.Grid.ColumnDefinitions enter property
    {
        OFFSET(CGrid, m_pColumnDefinitions), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Grid_ColumnDefinitions, // Index name
        149, // Next enter property = Microsoft.UI.Xaml.Controls.Grid.RowDefinitions
    },
    // Microsoft.UI.Xaml.Controls.Grid.RowDefinitions enter property
    {
        OFFSET(CGrid, m_pRowDefinitions), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Grid_RowDefinitions, // Index name
        83, // Next enter property = Microsoft.UI.Xaml.Controls.Panel.Background
    },
    // Microsoft.UI.Xaml.Controls.IconSourceElement.IconSource enter property
    {
        OFFSET(CIconSourceElement, m_iconSource), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::IconSourceElement_IconSource, // Index name
        77, // Next enter property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemContainerTransitions enter property
    {
        OFFSET(CItemsControl, m_pItemContainerTransitions), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ItemsControl_ItemContainerTransitions, // Index name
        152, // Next enter property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemsHost
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemsHost enter property
    {
        OFFSET(CItemsControl, m_pItemsHost), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::DoNotEnterLeave) | static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ItemsControl_ItemsHost, // Index name
        153, // Next enter property = Microsoft.UI.Xaml.Controls.ItemsControl.ItemsPanel
    },
    // Microsoft.UI.Xaml.Controls.ItemsControl.ItemsPanel enter property
    {
        OFFSET(CItemsControl, m_pItemsPanelTemplate), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ItemsControl_ItemsPanel, // Index name
        69, // Next enter property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.AutoPlay enter property
    {
        OFFSET(CMediaPlayerElement, m_fAutoPlay), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke)), // Property flags
        KnownPropertyIndex::MediaPlayerElement_AutoPlay, // Index name
        155, // Next enter property = Microsoft.UI.Xaml.Controls.MediaPlayerElement.IsFullWindow
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.IsFullWindow enter property
    {
        OFFSET(CMediaPlayerElement, m_isFullWindow), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke)), // Property flags
        KnownPropertyIndex::MediaPlayerElement_IsFullWindow, // Index name
        156, // Next enter property = Microsoft.UI.Xaml.Controls.MediaPlayerElement.PosterSource
    },
    // Microsoft.UI.Xaml.Controls.MediaPlayerElement.PosterSource enter property
    {
        OFFSET(CMediaPlayerElement, m_pPosterSource), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::NeedsInvoke) | static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::MediaPlayerElement_PosterSource, // Index name
        69, // Next enter property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.InputScope enter property
    {
        OFFSET(CPasswordBox, m_pInputScope), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::PasswordBox_InputScope, // Index name
        158, // Next enter property = Microsoft.UI.Xaml.Controls.PasswordBox.SelectionHighlightColor
    },
    // Microsoft.UI.Xaml.Controls.PasswordBox.SelectionHighlightColor enter property
    {
        OFFSET(CPasswordBox, m_pSelectionHighlightColor), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::PasswordBox_SelectionHighlightColor, // Index name
        69, // Next enter property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Shapes.Path.Data enter property
    {
        OFFSET(CPath, m_pGeometryData), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Path_Data, // Index name
        95, // Next enter property = Microsoft.UI.Xaml.Shapes.Shape.Fill
    },
    // Microsoft.UI.Xaml.Controls.PathIcon.Data enter property
    {
        OFFSET(CPathIcon, m_pData), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::PathIcon_Data, // Index name
        77, // Next enter property = Microsoft.UI.Xaml.Controls.IconElement.Foreground
    },
    // Microsoft.UI.Xaml.Shapes.Polygon.Points enter property
    {
        OFFSET(CPolygon, m_pPoints), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Polygon_Points, // Index name
        95, // Next enter property = Microsoft.UI.Xaml.Shapes.Shape.Fill
    },
    // Microsoft.UI.Xaml.Shapes.Polyline.Points enter property
    {
        OFFSET(CPolyline, m_pPoints), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::Polyline_Points, // Index name
        95, // Next enter property = Microsoft.UI.Xaml.Shapes.Shape.Fill
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.InputScope enter property
    {
        OFFSET(CRichEditBox, m_pInputScope), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::RichEditBox_InputScope, // Index name
        164, // Next enter property = Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColor
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColor enter property
    {
        OFFSET(CRichEditBox, m_pSelectionHighlightColor), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::RichEditBox_SelectionHighlightColor, // Index name
        165, // Next enter property = Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColorWhenNotFocused
    },
    // Microsoft.UI.Xaml.Controls.RichEditBox.SelectionHighlightColorWhenNotFocused enter property
    {
        OFFSET(CRichEditBox, m_pSelectionHighlightColorWhenNotFocused), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::RichEditBox_SelectionHighlightColorWhenNotFocused, // Index name
        69, // Next enter property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.SplitView.TemplateSettings enter property
    {
        OFFSET(CSplitView, m_pTemplateSettings), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::SplitView_TemplateSettings, // Index name
        69, // Next enter property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.TextBox.InputScope enter property
    {
        OFFSET(CTextBox, m_pInputScope), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TextBox_InputScope, // Index name
        168, // Next enter property = Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColor
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColor enter property
    {
        OFFSET(CTextBox, m_pSelectionHighlightColor), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TextBox_SelectionHighlightColor, // Index name
        169, // Next enter property = Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColorWhenNotFocused
    },
    // Microsoft.UI.Xaml.Controls.TextBox.SelectionHighlightColorWhenNotFocused enter property
    {
        OFFSET(CTextBox, m_pSelectionHighlightColorWhenNotFocused), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::TextBox_SelectionHighlightColorWhenNotFocused, // Index name
        69, // Next enter property = Microsoft.UI.Xaml.Controls.Control.Background
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckBrush enter property
    {
        OFFSET(CGridViewItemChrome, m_pCheckBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GridViewItemPresenter_CheckBrush, // Index name
        171, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckHintBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckHintBrush enter property
    {
        OFFSET(CGridViewItemChrome, m_pCheckHintBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GridViewItemPresenter_CheckHintBrush, // Index name
        172, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckSelectingBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.CheckSelectingBrush enter property
    {
        OFFSET(CGridViewItemChrome, m_pCheckSelectingBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GridViewItemPresenter_CheckSelectingBrush, // Index name
        173, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragBackground enter property
    {
        OFFSET(CGridViewItemChrome, m_pDragBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GridViewItemPresenter_DragBackground, // Index name
        174, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragForeground enter property
    {
        OFFSET(CGridViewItemChrome, m_pDragForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GridViewItemPresenter_DragForeground, // Index name
        175, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.FocusBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.FocusBorderBrush enter property
    {
        OFFSET(CGridViewItemChrome, m_pFocusBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GridViewItemPresenter_FocusBorderBrush, // Index name
        176, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PlaceholderBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PlaceholderBackground enter property
    {
        OFFSET(CGridViewItemChrome, m_pPlaceholderBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GridViewItemPresenter_PlaceholderBackground, // Index name
        177, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackground enter property
    {
        OFFSET(CGridViewItemChrome, m_pPointerOverBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GridViewItemPresenter_PointerOverBackground, // Index name
        178, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBackground enter property
    {
        OFFSET(CGridViewItemChrome, m_pSelectedBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GridViewItemPresenter_SelectedBackground, // Index name
        179, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedForeground enter property
    {
        OFFSET(CGridViewItemChrome, m_pSelectedForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GridViewItemPresenter_SelectedForeground, // Index name
        180, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBackground enter property
    {
        OFFSET(CGridViewItemChrome, m_pSelectedPointerOverBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GridViewItemPresenter_SelectedPointerOverBackground, // Index name
        181, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedPointerOverBorderBrush enter property
    {
        OFFSET(CGridViewItemChrome, m_pSelectedPointerOverBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::GridViewItemPresenter_SelectedPointerOverBorderBrush, // Index name
        66, // Next enter property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBorderBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxBorderBrush, // Index name
        183, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxBrush, // Index name
        184, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBorderBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxDisabledBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxDisabledBorderBrush, // Index name
        185, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxDisabledBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxDisabledBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxDisabledBrush, // Index name
        186, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBorderBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxPointerOverBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPointerOverBorderBrush, // Index name
        187, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPointerOverBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxPointerOverBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPointerOverBrush, // Index name
        188, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBorderBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxPressedBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPressedBorderBrush, // Index name
        189, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxPressedBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxPressedBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxPressedBrush, // Index name
        190, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxSelectedBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedBrush, // Index name
        191, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedDisabledBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedDisabledBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxSelectedDisabledBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedDisabledBrush, // Index name
        192, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPointerOverBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPointerOverBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxSelectedPointerOverBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedPointerOverBrush, // Index name
        193, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPressedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBoxSelectedPressedBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckBoxSelectedPressedBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckBoxSelectedPressedBrush, // Index name
        194, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckBrush, // Index name
        195, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckDisabledBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckDisabledBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckDisabledBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckDisabledBrush, // Index name
        196, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckHintBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckHintBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckHintBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckHintBrush, // Index name
        197, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckPressedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckPressedBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckPressedBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckPressedBrush, // Index name
        198, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckSelectingBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckSelectingBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pCheckSelectingBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_CheckSelectingBrush, // Index name
        199, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragBackground enter property
    {
        OFFSET(CListViewItemChrome, m_pDragBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_DragBackground, // Index name
        200, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragForeground enter property
    {
        OFFSET(CListViewItemChrome, m_pDragForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_DragForeground, // Index name
        201, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusBorderBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pFocusBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_FocusBorderBrush, // Index name
        202, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusSecondaryBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.FocusSecondaryBorderBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pFocusSecondaryBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_FocusSecondaryBorderBrush, // Index name
        203, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PlaceholderBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PlaceholderBackground enter property
    {
        OFFSET(CListViewItemChrome, m_pPlaceholderBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_PlaceholderBackground, // Index name
        204, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackground enter property
    {
        OFFSET(CListViewItemChrome, m_pPointerOverBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_PointerOverBackground, // Index name
        205, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBorderBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pPointerOverBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_PointerOverBorderBrush, // Index name
        206, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverForeground enter property
    {
        OFFSET(CListViewItemChrome, m_pPointerOverForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_PointerOverForeground, // Index name
        207, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PressedBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PressedBackground enter property
    {
        OFFSET(CListViewItemChrome, m_pPressedBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_PressedBackground, // Index name
        208, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBackground enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectedBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectedBackground, // Index name
        209, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectedBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectedBorderBrush, // Index name
        210, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBackground enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectedDisabledBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectedDisabledBackground, // Index name
        211, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedDisabledBorderBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectedDisabledBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectedDisabledBorderBrush, // Index name
        212, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedForeground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedForeground enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectedForeground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectedForeground, // Index name
        213, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedInnerBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedInnerBorderBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectedInnerBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectedInnerBorderBrush, // Index name
        214, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBackground enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectedPointerOverBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectedPointerOverBackground, // Index name
        215, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPointerOverBorderBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectedPointerOverBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectedPointerOverBorderBrush, // Index name
        216, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBackground
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBackground enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectedPressedBackground), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectedPressedBackground, // Index name
        217, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBorderBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedPressedBorderBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectedPressedBorderBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectedPressedBorderBrush, // Index name
        218, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectionIndicatorBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorBrush, // Index name
        219, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorDisabledBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorDisabledBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectionIndicatorDisabledBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorDisabledBrush, // Index name
        220, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPointerOverBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPointerOverBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectionIndicatorPointerOverBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorPointerOverBrush, // Index name
        221, // Next enter property = Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPressedBrush
    },
    // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionIndicatorPressedBrush enter property
    {
        OFFSET(CListViewItemChrome, m_pSelectionIndicatorPressedBrush), // Offset
        0, // Storage offset
        static_cast<MetaDataEnterPropertyInfoFlags>(static_cast<UINT>(MetaDataEnterPropertyInfoFlags::IsObjectProperty)), // Property flags
        KnownPropertyIndex::ListViewItemPresenter_SelectionIndicatorPressedBrush, // Index name
        66, // Next enter property = Microsoft.UI.Xaml.Controls.ContentPresenter.ContentTransitions
    },
};

// Conversion methods for enums that don't have consecutive values
DirectUI::ApplicationHighContrastAdjustmentConsecutive DirectUI::Convert(DirectUI::ApplicationHighContrastAdjustment value)
{
    switch (value)
    {
        case ApplicationHighContrastAdjustment::None:    return ApplicationHighContrastAdjustmentConsecutive::None;
        case ApplicationHighContrastAdjustment::Auto:    return ApplicationHighContrastAdjustmentConsecutive::Auto;
        default:
            XAML_FAIL_FAST();
            return ApplicationHighContrastAdjustmentConsecutive::InvalidValue;
    }
}

DirectUI::ElementHighContrastAdjustmentConsecutive DirectUI::Convert(DirectUI::ElementHighContrastAdjustment value)
{
    switch (value)
    {
        case ElementHighContrastAdjustment::None:    return ElementHighContrastAdjustmentConsecutive::None;
        case ElementHighContrastAdjustment::Application:    return ElementHighContrastAdjustmentConsecutive::Application;
        case ElementHighContrastAdjustment::Auto:    return ElementHighContrastAdjustmentConsecutive::Auto;
        default:
            XAML_FAIL_FAST();
            return ElementHighContrastAdjustmentConsecutive::InvalidValue;
    }
}


