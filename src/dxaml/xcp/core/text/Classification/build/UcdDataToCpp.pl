#!perl -w


###   UcdDataToPl - read in the ucd data binary file and emit it as a cpp with
#     the data as an initialized array.

use strict;
use Fcntl;

my $inputBin = "../UcdData.bin";
my $outputCpp = "UcdData.cpp";

sysopen(BIN, $inputBin, O_RDONLY|O_BINARY);
open(CPP, ">" . $outputCpp);

print "Reading binary classification data from '$inputBin'.\n";
print "Writing c++ formatted data to '$outputCpp'.\n";


print CPP "//+----------------------------------------------------------------------------\n";
print CPP "//\n";
print CPP "//  This file was generated by UcdDataToCpp.pl\n";
print CPP "//\n";
print CPP "//  DO NOT HAND MODIFY\n";
print CPP "//\n";
print CPP "//  Contents: Unicode data classification as an initialized binary array.\n";
print CPP "//\n";
print CPP "//-----------------------------------------------------------------------------\n";
print CPP "\n";
print CPP "#include \"precomp.h\"\n";
print CPP "\n";
print CPP "\n";
print CPP "const XUINT8 g_ucdDataBytes[] = \n";
print CPP "{\n";

# Read 16 bytes at a time

my $bytes      = "";
my $nBytes     = 0;
my $totalBytes = 0;

do
{
    $nBytes = sysread(BIN, $bytes, 16);
    $totalBytes += $nBytes;

    print CPP "    ";

    for (my $i=0; $i<$nBytes; $i++)
    {
        printf CPP "0x%02x, ", ord(substr($bytes, $i, 1));
    }

    print CPP "\n";

} while ($nBytes >= 1);

close(BIN);

print CPP "};\n";
close(CPP);

print "$totalBytes bytes processed.\n"

