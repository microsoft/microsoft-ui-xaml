// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//+---------------------------------------------------------------------------
//
//  Contents:   Functions pertaining to searching data generated by ucdtool
//
//----------------------------------------------------------------------------

#include "precomp.h"

#define DEBUG_ASSERT(_x) ASSERT(_x)

const char32_t UnicodeMax = 0x10FFFF;

// Global pointer to ucd binary data used by the lookup functions below
const UcdFileHeader * g_ucddata = nullptr;

// Initialize the global Ucd data pointer to the Ucd data in the resources
bool UcdInitialize()
{
    g_ucddata = reinterpret_cast<const UcdFileHeader*>(g_ucdDataBytes);
    return g_ucddata != nullptr;
}

// General function for looking up enumerated properties.
int32_t UcdLookupEnumeratedProperty(UcdProperty prop, char32_t c)
{
    DEBUG_ASSERT(c <= UnicodeMax);

    UcdPropertyInfo const* propinfo = &g_ucddata->properties[prop - 1];
    uint8_t b0 = (c >> (ChildBlockBits * 3)) & (ChildBlockLevels - 1);
    uint8_t b1 = (c >> (ChildBlockBits * 2)) & (ChildBlockLevels - 1);
    uint8_t b2 = (c >> (ChildBlockBits * 1)) & (ChildBlockLevels - 1);
    uint8_t b3 = (c >> (ChildBlockBits * 0)) & (ChildBlockLevels - 1);

    uint8_t const* p = (uint8_t const*) g_ucddata + propinfo->offset;
    p += ((uint16_t const*) p)[b0];
    p += ((uint16_t const*) p)[b1];
    p += p[b2] * ChildBlockLevels;

    int32_t v = p[b3];

    return v;
}
