// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "precomp.h"

//------------------------------------------------------------------------
//
//  Const array:   CUIElement::Delegates
//
//  Synopsis:
//      Static array of frequently used control delegates.
//
//------------------------------------------------------------------------
const INTERNAL_EVENT_HANDLER CUIElement::Delegates[static_cast<XUINT32>(LastControlEvent)] =
{
    &CUIElement::OnKeyUp,
    &CUIElement::OnKeyDown,
    &CUIElement::OnGotFocus,
    &CUIElement::OnLostFocus,
    &CUIElement::OnCharacterReceived,
    &CUIElement::OnDragEnter,
    &CUIElement::OnDragLeave,
    &CUIElement::OnDragOver,
    &CUIElement::OnDrop,
    &CUIElement::OnPointerPressed,
    &CUIElement::OnPointerMoved,
    &CUIElement::OnPointerReleased,
    &CUIElement::OnPointerEntered,
    &CUIElement::OnPointerExited,
    &CUIElement::OnPointerCaptureLost,
    &CUIElement::OnPointerCanceled,
    &CUIElement::OnPointerWheelChanged,
    &CUIElement::OnTapped,
    &CUIElement::OnDoubleTapped,
    &CUIElement::OnHolding,
    &CUIElement::OnContextRequested,
    &CUIElement::OnContextCanceled,
    &CUIElement::OnRightTapped,
    &CUIElement::OnRightTappedUnhandled,
    &CUIElement::OnManipulationStarting,
    &CUIElement::OnManipulationInertiaStarting,
    &CUIElement::OnManipulationStarted,
    &CUIElement::OnManipulationDelta,
    &CUIElement::OnManipulationCompleted,
    &CUIElement::OnProcessKeyboardAccelerators,
    &CUIElement::OnGettingFocus,
    &CUIElement::OnLosingFocus,
    &CUIElement::OnNoFocusCandidateFound,
    &CUIElement::OnPreviewKeyDown,
    &CUIElement::OnPreviewKeyUp,
    &CUIElement::OnBringIntoViewRequested,
    &CUIElement::OnIsEnabledChanged,
    &CUIElement::OnInheritedPropertyChanged,
};
