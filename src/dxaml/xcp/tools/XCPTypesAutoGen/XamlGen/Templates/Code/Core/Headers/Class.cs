// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace XamlGen.Templates.Code.Core.Headers
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using OM;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class Class : CppCodeGenerator<ClassDefinition>
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<Copyright>()));
            this.Write("\r\n\r\n#pragma once\r\n\r\n#include \"");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.BaseClass.CppHeaderFileName));
            this.Write("\"\r\n#include <DeclareMacros.h>\r\n#include <Indexes.g.h>\r\n#include <minxcptypes.h>\r\n" +
                    "\r\nclass ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.CoreName));
            this.Write(" : public ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.BaseClass.CoreName));
            this.Write("\r\n{\r\nprotected:\r\n");
 if (Model.IsAnAutomationPeer) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.CoreName));
            this.Write("(_In_ CCoreServices *pCore, _In_ CValue &value)\r\n        : ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.BaseClass.CoreName));
            this.Write("(pCore, value)\r\n");
 } else if (Model.IsCollectionImplementationClass) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.CoreName));
            this.Write("(_In_ int nItemSize)\r\n        : ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.BaseClass.CoreName));
            this.Write("(nItemSize)\r\n");
 } else { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.CoreName));
            this.Write("(_In_ CCoreServices *pCore)\r\n        : ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.BaseClass.CoreName));
            this.Write("(pCore)");
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCoreFieldInitializerString(Model, isContinuationOfInitializationList: true)));
            this.Write("\r\n");
 } 
            this.Write("    {\r\n");
 if (Model.GenerateCoreFieldInitializer) { 
            this.Write("        InitializeDefaults();\r\n");
 } 
            this.Write("        SetIsCustomType();\r\n    }\r\n\r\n    ~");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.CoreName));
            this.Write("() override = default;\r\n\r\npublic:\r\n");
 if (Model.IsActivatableInCore) {
       if (Model.IsAnAutomationPeer) { 
            this.Write("    DECLARE_CREATE_AP(");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.CoreName));
            this.Write(");\r\n");
     } else { 
            this.Write("    DECLARE_CREATE(");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.CoreName));
            this.Write(");\r\n");
     }
   } 
            this.Write("\r\n");
 if (Model.ContainsChildrenInLogicalTree) { 
            this.Write("    bool AreChildrenInLogicalTree() final { return true; }\r\n\r\n");
 } 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IndexGenerator.KnownTypeIndexEnumName));
            this.Write(" GetTypeIndex() const override\r\n    {\r\n        return ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.IndexName));
            this.Write(";\r\n    }\r\n\r\n    XUINT32 ParticipatesInManagedTreeInternal() override\r\n    {\r\n    " +
                    "    return PARTICIPATES_IN_MANAGED_TREE;\r\n    }\r\n");
 foreach (var field in Model.CoreInstanceFields) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(AsCppType(field.CoreFieldTypeName)));
            this.Write(" ");
            this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldName));
            this.Write(";\r\n");
 }
   if (Model.GenerateCoreFieldInitializer) { 
            this.Write("private:\r\n    void InitializeDefaults();\r\n");
 } 
            this.Write("};\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
}
