<#@ template language="C#" linePragmas="false" inherits="CppCodeGenerator<PropertyDefinition>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="OM" #>
    HRESULT hr = S_OK;

<# if (Model is AttachedPropertyDefinition) {
        if (Model.PropertyType.Type is EnumDefinition) { #>
    <#= IncludeTemplate<AttachedPropertySetterBodyEnum>(Model) #>
<#      } else if (Model.PropertyType.Type.IsStringType) { #>
    <#= IncludeTemplate<AttachedPropertySetterBodyString>(Model) #>
<#      } else if (Model.PropertyType.Type.IsObjectType) { #>
    <#= IncludeTemplate<AttachedPropertySetterBodyObject>(Model) #>
<#      } else if (Model.PropertyType.IdlInfo.Type.IsPrimitive) { #>
    // TODO: Attached Primitive
<#      } else if (Model.PropertyType.IdlInfo.Type.IsValueType) { #>
    <#= IncludeTemplate<AttachedPropertySetterBodyValue>(Model) #>
<#      } else { #>
    <#= IncludeTemplate<AttachedPropertySetterBodyReference>(Model) #>
<#      }
   } else { #>
<#      if (Model.PropertyType.Type is EnumDefinition) { #>
    <#= IncludeTemplate<PropertySetterBodyValue>(Model) #>
<#      } else if (Model.PropertyType.Type.IsStringType) { #>
    <#= IncludeTemplate<PropertySetterBodyString>(Model) #>
<#      } else if (Model.PropertyType.Type.IsObjectType) { #>
    <#= IncludeTemplate<PropertySetterBodyObject>(Model) #>
<#      } else if (Model.PropertyType.IdlInfo.Type.IsPrimitive) { #>
    <#= IncludeTemplate<PropertySetterBodyBoxer>(Model) #>
<#      } else if (Model.PropertyType.IdlInfo.Type.IsValueType) { #>
    <#= IncludeTemplate<PropertySetterBodyValue>(Model) #>
<#      } else { #>
    <#= IncludeTemplate<PropertySetterBodyReference>(Model) #>
<#      } #>
<# } #>

Cleanup:
    RRETURN(hr);
