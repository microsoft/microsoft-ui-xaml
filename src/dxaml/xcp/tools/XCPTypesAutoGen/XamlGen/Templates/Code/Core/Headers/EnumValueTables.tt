<#@ template language="C#" linePragmas="false" inherits="CppCodeGenerator<OMContextView>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="OM" #>
<#= IncludeTemplate<Copyright>() #>

#pragma once

<# foreach (var type in Model.GetTypeTableEnums().Where(e => e.GenerateInCore)) { #>
extern __declspec(selectany) const XTABLE <#= type.ValueTableArrayName #>[] =
{
<#     foreach (var value in type.Values) { #>
    { <#= AsStringStorage(value.Name) #>, <#= (type.XamlEnumFlags.AreValuesFlags ? string.Format("0x{0:X}", value.Value) : value.Value.ToString()) #> },
<#     } #>
};

<# } #>
