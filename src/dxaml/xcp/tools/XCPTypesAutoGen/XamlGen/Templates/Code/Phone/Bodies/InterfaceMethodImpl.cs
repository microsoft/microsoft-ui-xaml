// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace XamlGen.Templates.Code.Phone.Bodies
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using OM;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class InterfaceMethodImpl : CppCodeGenerator<MethodDefinition>
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
 var type = Arguments[0] as ClassDefinition; 
    if (VelocityFeatures.IsVelocityVersion(Model.Version)) { 
            this.Write("#if WI_IS_FEATURE_PRESENT(");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.VelocityFeatureName));
            this.Write(")\r\n");
    }
            this.Write("IFACEMETHODIMP ");
            this.Write(this.ToStringHelper.ToStringWithCulture(type.GeneratedClassName));
            this.Write("::");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.IdlMemberInfo.VirtualName));
            this.Write("(");
            this.Write(this.ToStringHelper.ToStringWithCulture(GetParameterListAsString(Model.Parameters, Model.ReturnType)));
            this.Write(")\r\n{\r\n    HRESULT hr = S_OK;\r\n    \r\n");
 if (Model.HasReturnType) { 
            this.Write("    ARG_VALIDRETURNPOINTER(");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ReturnType.AbiReturnParameterName));
            this.Write(");\r\n\r\n");
 }
   foreach (var p in Model.Parameters.Where(p => p.RequiresNullCheck)) { 
            this.Write("    ARG_NOTNULL(");
            this.Write(this.ToStringHelper.ToStringWithCulture(p.ParameterType.AbiParameterName));
            this.Write(", \"");
            this.Write(this.ToStringHelper.ToStringWithCulture(p.ParameterType.AbiParameterName));
            this.Write("\");\r\n    \r\n");
 } 
            this.Write("    IFC(");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ImplName));
            this.Write("(");
            this.Write(this.ToStringHelper.ToStringWithCulture(GetArgumentListAsString(Model.Parameters, Model.ReturnType)));
            this.Write("));\r\n\r\nCleanup:\r\n    RRETURN(hr);\r\n}\r\n\r\n_Check_return_ HRESULT ");
            this.Write(this.ToStringHelper.ToStringWithCulture(type.GeneratedClassName));
            this.Write("::");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ImplName));
            this.Write("(");
            this.Write(this.ToStringHelper.ToStringWithCulture(GetParameterListAsString(Model.Parameters, Model.ReturnType)));
            this.Write(")\r\n{\r\n    HRESULT hr = S_OK;\r\n\r\n    wrl::ComPtr<");
            this.Write(this.ToStringHelper.ToStringWithCulture(AsCppType(Model.DeclaringTypeVirtualMembersFullInterfaceNameWithVersion)));
            this.Write("> spOverrides;\r\n    IFC(GetComposableBase().As(&spOverrides));\r\n    IFC(spOverrid" +
                    "es->");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.IdlMemberInfo.VirtualName));
            this.Write("(");
            this.Write(this.ToStringHelper.ToStringWithCulture(GetArgumentListAsString(Model.Parameters, Model.ReturnType)));
            this.Write("));\r\n\r\nCleanup:\r\n    RRETURN(hr);\r\n}\r\n");
        if (VelocityFeatures.IsVelocityVersion(Model.Version)) { 
            this.Write("#endif\r\n");
        }
            return this.GenerationEnvironment.ToString();
        }
    }
}
