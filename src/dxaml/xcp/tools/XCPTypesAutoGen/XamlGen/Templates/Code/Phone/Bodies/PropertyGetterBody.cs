// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace XamlGen.Templates.Code.Phone.Bodies
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using OM;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class PropertyGetterBody : CppCodeGenerator<PropertyDefinition>
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("    HRESULT hr = S_OK;\r\n\r\n");
 if (Model is AttachedPropertyDefinition) {
        if (Model.PropertyType.Type is EnumDefinition) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<AttachedPropertyGetterBodyEnum>(Model)));
            this.Write("\r\n");
      } else if (Model.PropertyType.Type.IsStringType) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<AttachedPropertyGetterBodyString>(Model)));
            this.Write("\r\n");
      } else if (Model.PropertyType.Type.IsObjectType) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<AttachedPropertyGetterBodyObject>(Model)));
            this.Write("\r\n");
      } else if (Model.PropertyType.IdlInfo.Type.IsPrimitive) { 
            this.Write("    Not implemented\r\n");
      } else if (Model.PropertyType.IdlInfo.Type.IsValueType) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<AttachedPropertyGetterBodyValue>(Model)));
            this.Write("\r\n");
      } else { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<AttachedPropertyGetterBodyReference>(Model)));
            this.Write("\r\n");
      }
    } else {
    if (Model.HasImplMethod) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<PropertyGetterBodyDispatch>(Model)));
            this.Write("\r\n");
      } else if (Model.PropertyType.Type is EnumDefinition) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<PropertyGetterBodyValue>(Model)));
            this.Write("\r\n");
      } else if (Model.PropertyType.Type.IsStringType) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<PropertyGetterBodyString>(Model)));
            this.Write("\r\n");
      } else if (Model.PropertyType.Type.IsObjectType) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<PropertyGetterBodyObject>(Model)));
            this.Write("\r\n");
      } else if (Model.PropertyType.IdlInfo.Type.IsPrimitive) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<PropertyGetterBodyPrimitive>(Model)));
            this.Write("\r\n");
      } else if (Model.PropertyType.IdlInfo.Type.IsValueType) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<PropertyGetterBodyValue>(Model)));
            this.Write("\r\n");
      } else { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<PropertyGetterBodyReference>(Model)));
            this.Write("\r\n");
      } 
  } 
            this.Write("\r\nCleanup:\r\n    RRETURN(hr);\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
}
