// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace XamlGen.Templates.Code.Core.Headers
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using OM;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class EventArgsClass : CppCodeGenerator<ClassDefinition>
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<Copyright>()));
            this.Write("\r\n\r\n#pragma once\r\n\r\n");
 if (Model.BaseClass.GenerateInCore) { 
            this.Write("#include \"");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.BaseClass.CppCoreGeneratedHeaderFileName));
            this.Write("\"\r\n");
 } 
            this.Write("\r\nclass ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.CoreName));
            this.Write(": public ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.BaseClass.CoreName));
            this.Write("\r\n{\r\npublic:\r\n    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.CoreName));
            this.Write("()");
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCoreFieldInitializerString(Model)));
            this.Write("\r\n    {\r\n    }\r\n\r\n    ~");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.CoreName));
            this.Write("() override = default;\r\n\r\n    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IndexGenerator.KnownTypeIndexEnumName));
            this.Write(" GetEventArgsTypeIndex() const override\r\n    {\r\n        return ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.IndexName));
            this.Write(";\r\n    }\r\n\r\n    // Returns a framework peer that wraps this object. Eventually th" +
                    "is should move into QueryInterface.\r\n    _Check_return_ HRESULT GetPeer(_Outptr_" +
                    " IInspectable** ppPeer) override;\r\n\r\n");
 foreach (var property in Model.InstanceProperties.Where(p => p.GenerateDefaultBody)) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<EventArgsProperty>(property)));
            this.Write("\r\n");
 } 
            this.Write("\r\n");
 foreach (var field in Model.InstanceFields) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(AsCppType(field.CoreFieldTypeName)));
            this.Write(" ");
            this.Write(this.ToStringHelper.ToStringWithCulture(field.FrameworkFieldName));
            this.Write(";\r\n");
 } 
            this.Write("};\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
}
