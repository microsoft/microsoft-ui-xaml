<#@ template language="C#" linePragmas="false" inherits="CppCodeGenerator<PropertyDefinition>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="OM" #>

<# if (Model.GenerateDefaultBody && !Model.IsAbstract && !Model.DelegateToCore) { #>
<#     if (Model.HasBackingFieldInFramework) { #>
<#= IncludeTemplate<FieldGetter>(Model) #>
<#     } else { #>
<#         if (Model is DependencyPropertyDefinition && (Model as DependencyPropertyDefinition).IsSimpleProperty) { #>
    *pValue = SimpleProperty::Property::id<<#= Model.IndexName #>>::Get(GetHandle());
    return S_OK;
<#         } else { #>
    RRETURN(GetValueByKnownIndex(<#= Model.IndexName #>, <#= Model.PropertyType.AbiReturnArgumentName #>));
<#         } #>
<#     } #>
<# } else { #>
<#= IncludeTemplate<MethodBody>(Model.GetGetMethod()) #>
<# } #>
