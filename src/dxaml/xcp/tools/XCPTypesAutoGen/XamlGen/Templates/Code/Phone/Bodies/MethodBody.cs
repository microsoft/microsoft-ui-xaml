// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace XamlGen.Templates.Code.Phone.Bodies
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using OM;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class MethodBody : CppCodeGenerator<MethodDefinition>
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("    HRESULT hr = S_OK;\r\n\r\n");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<ParameterValidation>(ParameterValidationModel.Create(Model))));
            this.Write("\r\n");
 if (!Model.GenerateDefaultBody)
   {
        if(Model.IsStatic)
        { 
            this.Write("    IFC(");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ImplName));
            this.Write("(");
            this.Write(this.ToStringHelper.ToStringWithCulture(GetArgumentListAsString(Model.Parameters, Model.ReturnType)));
            this.Write("));\r\n");
      }
        else
        { 
            this.Write("    IFC(static_cast<");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.DeclaringClass.Name));
            this.Write("*>(this)->");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ImplName));
            this.Write("(");
            this.Write(this.ToStringHelper.ToStringWithCulture(GetArgumentListAsString(Model.Parameters, Model.ReturnType)));
            this.Write("));\r\n");
      }
   } 
            this.Write("Cleanup:\r\n    RRETURN(hr);\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
}
