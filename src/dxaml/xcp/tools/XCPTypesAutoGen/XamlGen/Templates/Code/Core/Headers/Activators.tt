<#@ template language="C#" linePragmas="false" inherits="CppCodeGenerator<OMContextView>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="OM" #>
<#= IncludeTemplate<Copyright>() #>

#pragma once

class CREATEPARAMETERS;
class CDependencyObject;
class CEventArgs;

<# foreach (var type in Model.GetAllClasses().Where(c => c.IsActivatableInCore)) { #>
HRESULT <#= type.CoreDefaultConstructor #>(_Outptr_ CDependencyObject **ppObject, _In_ CREATEPARAMETERS *pCreate);
<# }
   foreach (var type in Model.GetTypeTableEnums()) { #>
HRESULT <#= type.CoreDefaultConstructor #>(_Outptr_ CDependencyObject **ppObject, _In_ CREATEPARAMETERS *pCreate);
<# } #>

namespace <#= OMContext.DefaultImplementationNamespace #>
{
<# foreach (var type in Model.GetAllClasses().Where(c => c.IsAEventArgs && c.IsActivatable)) { #>
    HRESULT <#= type.EventArgsFrameworkDefaultConstructor #>(_In_ CEventArgs* pCoreArgs, _Out_ IInspectable** ppNewInstance);
<# } #>
}
