<#@ template language="C#" linePragmas="false" inherits="CppCodeGenerator<PropertyDefinition>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="OM" #>
wrl::ComPtr<<#= Helper.PrefixAbiIfNeeded($"{Helper.GetRootNamespaceCpp()}::IDependencyObject") #>> spThisAsDO;
wrl::ComPtr<IInspectable> spValueAsII;

IFC(GetComposableBase().As(&spThisAsDO));

<# if (Model.PropertyType.Type.IsPrimitive || Model.PropertyType.Type.XamlTypeFlags.HasSpecialBoxer) {#>
IFC(Private::ValueBoxer::Create<#= Model.PropertyType.Type.Name #>(value, &spValueAsII));
<# } else { #>
IFC(Private::ValueBoxer::CreateReference<<#= AsCppType(Model.PropertyType.AbiFullName) #>>(value, &spValueAsII));
<# } #>

IFC(spThisAsDO->SetValue(<#=Model.DeclaringClass.FactoryTypeName #>::s_<#=Model.Name#>Property.Get(), spValueAsII.Get()));
