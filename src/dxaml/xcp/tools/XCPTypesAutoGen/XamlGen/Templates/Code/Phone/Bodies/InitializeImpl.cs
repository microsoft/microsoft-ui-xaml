// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace XamlGen.Templates.Code.Phone.Bodies
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using OM;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class InitializeImpl : PhoneCppCodeGenerator<ClassDefinition>
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("_Check_return_ HRESULT\r\n");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.GeneratedClassName));
            this.Write("::InitializeImpl(");
 if (Model.IdlClassInfo.IsComposable) { 
            this.Write("_In_opt_ IInspectable* pOuter");
 } 
            this.Write(")\r\n{\r\n    HRESULT hr = S_OK;\r\n\r\n");
 if (Model.IdlClassInfo.IsComposable) { 
            this.Write("    UNREFERENCED_PARAMETER(pOuter);\r\n");
 }
   if (Model.IdlClassInfo.HasAnyFactoryInterfaces || Model.HasStaticMembers) { 
            this.Write("\r\n    // When types are created internally there is no guarantee that\r\n    // the" +
                    " factory has been previously instantiated. \r\n    IFC_RETURN(");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.GeneratedFactoryName));
            this.Write("::EnsureProperties());\r\n\r\n");
 }
   if(Model.IsADependencyObject && Model.Events.Count() > 0) { 
        foreach (var e in Model.Events) { 
            this.Write("    IFC_RETURN(RegisterEventSource(m_");
            this.Write(this.ToStringHelper.ToStringWithCulture(e.Name));
            this.Write("EventSource)); \r\n");
      } 
   } 
            this.Write("\r\n    RRETURN(hr);\r\n}\r\n\r\n");
 foreach (var ctor in Model.Constructors.Where(c => !c.IsParameterless)) { 
            this.Write("_Check_return_ HRESULT\r\n");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.GeneratedClassName));
            this.Write("::InitializeImpl(");
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPhoneInitializeImplParameterListAsString(Model, ctor.Parameters)));
            this.Write(")\r\n{\r\n");
      foreach (var p in ctor.Parameters) { 
            this.Write("    UNREFERENCED_PARAMETER(");
            this.Write(this.ToStringHelper.ToStringWithCulture(p.ParameterType.AbiParameterName));
            this.Write(");\r\n");
      } 
            this.Write("\r\n    RRETURN(");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.GeneratedClassName));
            this.Write("::InitializeImpl(");
 if (Model.IdlClassInfo.IsComposable) { 
            this.Write("pOuter");
 } 
            this.Write("));\r\n}\r\n");
 }
            return this.GenerationEnvironment.ToString();
        }
    }
}
