// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace XamlGen.Templates.Code.Phone.Bodies
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using OM;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class Event : CppCodeGenerator<EventDefinition>
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("IFACEMETHODIMP ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.DeclaringClass.GeneratedClassName));
            this.Write("::add_");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));
            this.Write("(");
            this.Write(this.ToStringHelper.ToStringWithCulture(AsCppType(Model.EventHandlerType.AnnotatedAbiParameterName)));
            this.Write(", _Out_ EventRegistrationToken* pToken)\r\n{\r\n    HRESULT hr = S_OK;\r\n\r\n    ARG_VAL" +
                    "IDRETURNPOINTER(pToken);\r\n    ARG_NOTNULL(pValue, \"value\");\r\n\r\n    IFC(m_");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));
            this.Write("EventSource.Add(pValue, pToken));\r\n\r\nCleanup:\r\n    RRETURN(hr);\r\n}\r\n\r\nIFACEMETHOD" +
                    "IMP ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.DeclaringClass.GeneratedClassName));
            this.Write("::remove_");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));
            this.Write("(_In_ EventRegistrationToken token)\r\n{\r\n    RRETURN(m_");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));
            this.Write("EventSource.Remove(token));\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
}
