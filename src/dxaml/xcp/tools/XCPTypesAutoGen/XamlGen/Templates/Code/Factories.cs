// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace XamlGen.Templates.Code
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using OM;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class Factories : CppCodeGenerator<OMContextView>
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<Copyright>()));
            this.Write("\r\n\r\n#include \"precomp.h\"\r\n\r\nctl::module ctl::__module;\r\n\r\n#pragma region Factory " +
                    "constructor forward declarations.\r\nnamespace ");
            this.Write(this.ToStringHelper.ToStringWithCulture(OMContext.DefaultImplementationNamespace));
            this.Write("\r\n{\r\n");
 foreach (var type in Model.GetAllClasses()
       .Where(c => c.HasFactory)
       .OrderBy(c => c.IdlClassInfo.RuntimeClassFullName.Length)) { 
            this.Write("    _Check_return_ IActivationFactory* ");
            this.Write(this.ToStringHelper.ToStringWithCulture(type.FactoryConstructor));
            this.Write("();\r\n");
 } 
            this.Write("}\r\n#pragma endregion\r\n\r\nACTIVATION_FACTORY_MAP_BEGIN()\r\n");
 foreach (var type in Model.GetAllClasses()
       .Where(c => c.HasFactory)
       .OrderBy(c => c.IdlClassInfo.RuntimeClassFullName.Length)) { 
            this.Write("    ACTIVATION_FACTORY_ENTRY(XSTRING_PTR_STORAGE(L\"");
            this.Write(this.ToStringHelper.ToStringWithCulture(type.IdlClassInfo.RuntimeClassFullName));
            this.Write("\"), ");
            this.Write(this.ToStringHelper.ToStringWithCulture(type.FactoryConstructorCallback));
            this.Write(")\r\n");
 } 
            this.Write("ACTIVATION_FACTORY_MAP_END()\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
}
