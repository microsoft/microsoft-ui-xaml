// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace XamlGen.Templates.Metadata
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using OM;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class PropertyRuntimeDataEntry : MetadataCodeGenerator<DependencyPropertyDefinition>
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("// ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.DescriptiveName));
            this.Write("\r\n{\r\n");
 if (Model.HasPropertyMethod) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPropertyMethodString(Model)));
            this.Write(", // Property method\r\n");
 } else { 
            this.Write("    (METHODPFN)");
            this.Write(this.ToStringHelper.ToStringWithCulture(GetOffsetString(Model)));
            this.Write(", // Offset. Cast to METHODPFN to force it into the union.\r\n");
 } 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(AsMethodPointer(Model.RenderDirtyFlagCallbackPointer)));
            this.Write(", // Render changed callback\r\n    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(GetStorageEnsureString(Model)));
            this.Write(", // Storage ensure method\r\n    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(GetStorageGroupOffsetString(Model)));
            this.Write(" // Storage offset\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
}
