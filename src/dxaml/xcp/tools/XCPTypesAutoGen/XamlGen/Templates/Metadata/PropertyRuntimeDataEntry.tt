<#@ template language="C#" linePragmas="false" inherits="MetadataCodeGenerator<DependencyPropertyDefinition>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="OM" #>
// <#= Model.DescriptiveName #>
{
<# if (Model.HasPropertyMethod) { #>
    <#= GetPropertyMethodString(Model) #>, // Property method
<# } else { #>
    (METHODPFN)<#= GetOffsetString(Model) #>, // Offset. Cast to METHODPFN to force it into the union.
<# } #>
    <#= AsMethodPointer(Model.RenderDirtyFlagCallbackPointer) #>, // Render changed callback
    <#= GetStorageEnsureString(Model) #>, // Storage ensure method
    <#= GetStorageGroupOffsetString(Model) #> // Storage offset
}