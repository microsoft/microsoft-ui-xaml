// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace XamlGen.Templates.ModernIDL
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using OM;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class Class : ModernIdlCodeGenerator<ClassDefinition>
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
 this.WriteRuntimeClassAttributes(Model); 
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.GetRuntimeClassString()));
            this.Write(" ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.IdlClassInfo.Name));
            this.Write("\r\n");
 if (Model.IdlClassInfo.HasBaseClass) { 
            this.Write("    : ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.IdlClassInfo.BaseClass.IdlTypeInfo.FullName));
            this.Write("\r\n");
 } 
 WriteImplementedInterfaces(Model); 
            this.Write("{\r\n");
 foreach (var version in Model.Versions.Select(v => v.GetProjection()).OrderBy(v => v.Version)) { 
  StartVersion(version); 
   if (version.IdlClassInfo.HasDefaultConstructor) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.IdlClassInfo.Name + "();"));
            this.Write("\r\n");
   } 
 if (version.IdlClassInfo.HasCustomConstructors) { 
   foreach (var ctor in version.IdlClassInfo.CustomConstructors.Where(m => m.OrderHint == null)) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<Constructor>(ctor)));
            this.Write("\r\n");
   } 
   foreach (var ctor in version.IdlClassInfo.CustomConstructors.Where(m => m.OrderHint != null).OrderBy(m => m.OrderHint)) { 
            this.Write("    ");
            this.Write(this.ToStringHelper.ToStringWithCulture(IncludeTemplate<Constructor>(ctor)));
            this.Write("\r\n\r\n");
   } 
 } 
 WriteInterfaceGroup(version, RequestedInterface.PublicMembers); 
   if (version.IdlClassInfo.HasPublicStaticMembers) { 
 WriteInterfaceGroup(version, RequestedInterface.StaticMembers); 
   } 
   if (version.IdlClassInfo.ProtectedPMEs.Any()) { 
 WriteInterfaceGroup(version, RequestedInterface.ProtectedMembers); 
 } 
   if (version.IdlClassInfo.VirtualPMEs.Any()) { 
 WriteInterfaceGroup(version, RequestedInterface.VirtualMembers); 
 } 
   EndVersion(version); 
 } 
            this.Write("};");
            return this.GenerationEnvironment.ToString();
        }
    }
}
