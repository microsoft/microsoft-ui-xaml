<!-- Copyright (c) Microsoft Corporation. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<Project>
  <!--
    Note that these settings are generally common across all test projects. The condition is simply there because these are some projects
    that have been updated to use this common configuration. The number of projects that use this can and should grow, keeping in mind that
    only certain properties will change depending on whether a dll or exe is being built
  -->
  <ItemGroup Label="ProjectConfigurations" Condition="'$(UnpackagedWinUITestApp)'=='true'">
    <ProjectConfiguration Include="Debug|ARM64">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM64">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' and '$(UnpackagedWinUITestApp)'=='true'" />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' and '$(UnpackagedWinUITestApp)'=='true'" />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|ARM64' and '$(UnpackagedWinUITestApp)'=='true'" />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' and '$(UnpackagedWinUITestApp)'=='true'" />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' and '$(UnpackagedWinUITestApp)'=='true'" />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|ARM64' and '$(UnpackagedWinUITestApp)'=='true'" />
  <PropertyGroup Condition="'$(UnpackagedWinUITestApp)'=='true'">
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">Win32</Platform>
    <DefaultLanguage>en-US</DefaultLanguage>
    <AppContainerApplication>true</AppContainerApplication>
    <UseDebugLibraries Condition="'$(Configuration)'=='Debug'">true</UseDebugLibraries>
    <UseDebugLibraries Condition="'$(Configuration)'=='Release'">false</UseDebugLibraries>
    <ApplicationType>Windows Store</ApplicationType>
    <ConfigurationType>Application</ConfigurationType>
    <WindowsTargetPlatformMinVersion>$(WindowsTargetPlatformVersion)</WindowsTargetPlatformMinVersion>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
    <WholeProgramOptimization Condition="'$(Configuration)' == 'Release'">true</WholeProgramOptimization>
    <UseXamlInWindows>true</UseXamlInWindows>
  </PropertyGroup>

  <ItemDefinitionGroup Condition="'$(IntegrationTest)'=='true' and '$(MSBuildProjectExtension)'=='.vcxproj'">
    <ClCompile>
        <ForcedUsingFiles>
          %(ForcedUsingFiles);
          $(MockDCompMergedWinMdPath)\MockDComp.winmd;
        </ForcedUsingFiles>
    </ClCompile>
  </ItemDefinitionGroup>

  <PropertyGroup>
    <!--
      Some projects have super nested output paths, which causes issues with the path being too long. The deep nesting
      is most likely not necessary, especially since the project names contain the majority of the information that
      is in the path

      For example the following path:
        \dxaml\test\native\external\controls\primitives\JumpListItemBackgroundConverter\Microsoft.UI.Xaml.Tests.External.Controls.Primitives.JumpListItemBackgroundConverter

      could be shortened to:
        \dxaml\test\native\Microsoft.UI.Xaml.Tests.External.Controls.Primitives.JumpListItemBackgroundConverter

      and not much information would be lost. However this is a more drastic change than fixing this issue. Note that since many
      of the project names are too long, the .tlog location is a combination of a part of the project name and a part of the 
      project GUID, so they look something like this: Microsof.8675309.tlog. The first two parts don't provide much value, so 
      we'll just shorten the location
    -->
    <TLogLocation>$(IntermediateOutputPath).tlog\</TLogLocation>
  </PropertyGroup>
</Project>