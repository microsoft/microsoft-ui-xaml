<Project>
  <PropertyGroup>
    <MemoBuildPackageRoot>$(NugetPackageDirectory)\MemoBuild.$(MemoBuildPackageVersion)</MemoBuildPackageRoot>

    <!-- Off by default -->
    <MemoBuildEnabled Condition="'$(MemoBuildEnabled)' == ''">false</MemoBuildEnabled>

    <!-- For local testing, use a local cache -->
    <MemoBuildCacheType Condition="'$(TF_BUILD)' == ''">LocalOnly</MemoBuildCacheType>

    <!-- In Azure pipelines, use Pipeline Caching as the cache storage backend -->
    <MemoBuildCacheType Condition="'$(TF_BUILD)' != ''">AzurePipelines</MemoBuildCacheType>
    <MemoBuildLocalCacheRootPath Condition="'$(TF_BUILD)' != ''">$(ProjectRoot)\MemoBuildCache</MemoBuildLocalCacheRootPath>

    <!-- vctip.exe is a detached process which outlives the project it's reporting telemetry on. Just ignore these accesses. -->
    <MemoBuildAllowFileAccessAfterProjectFinish>true</MemoBuildAllowFileAccessAfterProjectFinish>

    <!-- Change this to bust the cache -->
    <MemoBuildCacheUniverse>1</MemoBuildCacheUniverse>
  </PropertyGroup>

  <Import Project="$(MemoBuildPackageRoot)\build\MemoBuild.props" />

  <PropertyGroup>
    <!--
      Double-writes across projects are not good for build performance but allow specific ones to unblock.

      === NoiseAsset_256x256_PNG.png ===
      Both controls\idl\Microsoft.UI.Xaml.Controls.idl.vcxproj and controls\dev\dll\Microsoft.UI.Xaml.Controls.vcxproj are writing this file.
        controls\idl\Microsoft.UI.Xaml.Controls.idl.vcxproj copies the file via controls\dev\Materials\Acrylic\AcrylicBrush.vcxitems via a PackageContent item.
        controls\dev\dll\Microsoft.UI.Xaml.Controls.vcxproj copies the file via a BinplaceItem in controls\dev\dll\Microsoft.UI.Xaml.Common.targets.
      Attempting to remove either of these leads to various downstream issues.
    -->
    <MemoBuildIdenticalDuplicateOutputPatterns>$(MemoBuildIdenticalDuplicateOutputPatterns);$(NativeAssemblyPackageLocation)\Microsoft.UI.Xaml\Assets\NoiseAsset_256x256_PNG.png</MemoBuildIdenticalDuplicateOutputPatterns>

    <!--
      Ignore controls\dev\Generated\** even though these files are possibly changed during the build (see controls\dev\dll\Microsoft.UI.Xaml.Common.targets::RunDependencyPropertyCodeGen).
      These files are part of source control and any changes should be committed, so we don't want to consider them cached outputs.
    -->
    <MemoBuildIgnoredOutputPatterns>$(MemoBuildIgnoredOutputPatterns);controls\dev\Generated\**</MemoBuildIgnoredOutputPatterns>

    <!--
      MUXControls.sln does not get the MUXFinalRelease global property, so ignore it to enable cache hits.
      TODO: Consider providing it to MUXControls.sln instead as a more correct solution.
    -->
    <MemoBuildGlobalPropertiesToIgnore>$(MemoBuildGlobalPropertiesToIgnore);MUXFinalRelease</MemoBuildGlobalPropertiesToIgnore>

    <!--
      The version is passed as a global property and is based on the date, which would bust the cache once a day.
      For actual shipping bits this probably shouldn't be ignored, but is fine for prototyping / CI.
    -->
    <MemoBuildGlobalPropertiesToIgnore>$(MemoBuildGlobalPropertiesToIgnore);WinUIVersion</MemoBuildGlobalPropertiesToIgnore>
  </PropertyGroup>
</Project>