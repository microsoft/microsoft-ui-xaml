parameters:
  signOutput: false

steps:

  - template: MUX-InstallDotNetSDK-Steps.yml

  - template: MUX-InstallWindowsSDK-Steps.yml

  - template: MUX-InstallNuget-Steps.yml

  - template: MUX-RestorePgo-Steps.yml

  - template: MUX-BuildProject-Steps.yml
    parameters:
      solutionPath: MUXControls.sln
      nugetConfigPath: nuget.config
      appxPackageDir: $(appxPackageDir)
      buildOutputDir: $(buildOutputDir)
      publishDir: $(publishDir)

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'

  - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
    displayName: 'NuGet restore MUXExperimental.sln'
    inputs:
      restoreSolution: MUXExperimental.sln
      feedsToUse: config
      nugetConfigPath: nuget.config

  - task: VSBuild@1
    displayName: 'Build solution MUXExperimental.sln'
    inputs:
      solution: MUXExperimental.sln
      vsVersion: 16.0
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      msbuildArgs: '/restore /p:UseInsiderSDK=$(UseInsiderSDK) /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Never /p:AppxSymbolPackageEnabled=false /binaryLogger:$(Build.SourcesDirectory)/MUXExperimental.sln.$(buildPlatform).$(buildConfiguration).binlog /p:MUXVersionBuild=$(builddate_yymm) /p:MUXVersionRevision=$(builddate_dd)$(buildrevision) /p:VCToolsInstallDir="$(VCToolsInstallDir)\" /p:VCToolsRedistDir="$(VCToolsRedistDir)\"'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish MUXExperimental.sln binlog'
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: $(Build.SourcesDirectory)/MUXExperimental.sln.$(buildPlatform).$(buildConfiguration).binlog
      artifactName: drop

  # Copies output from PREfast SDL Native Rules task to expected location for consumption by PkgESSecComp
  # These are processed by the Compliance Job (defined in MUX-ComplianceChecks-Job.yml)
  # Note, only Debug builds are configured to run the code analysis tool.
  - task: CopyFiles@1
    displayName: 'Copy nativecodeanalysis xml files'
    condition: eq(variables['buildConfiguration'], 'Debug')
    inputs:
      SourceFolder: '$(buildOutputDir)'
      Contents: |
        **\*.nativecodeanalysis.xml
      TargetFolder: '$(Agent.BuildDirectory)\nativecodeanalysis'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact: nativecodeanalysis'
    condition: eq(variables['buildConfiguration'], 'Debug')
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\nativecodeanalysis'
      artifactName: nativecodeanalysis

  - ${{ if eq( parameters.signOutput, true) }}:
    - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
      displayName: 'CodeSign'
      inputs:
        ConnectedServiceName: WinUISigning
        FolderPath: '$(buildOutputDir)/$(buildConfiguration)/$(buildPlatform)/Microsoft.UI.Xaml'
        # Recursively finds files matching these patterns:
        Pattern: |
          **/Microsoft.UI.Xaml.dll
          **/Microsoft.UI.Xaml.winmd
          **/Microsoft.Experimental.UI.Xaml.dll
          **/Microsoft.Experimental.UI.Xaml.winmd
        UseMinimatch: true
        signConfigType: inlineSignParams
        inlineOperation: | 
          [
            {
                "KeyCode" : "CP-230217",
                "OperationCode" : "SigntoolSign",
                "Parameters" : {
                    "OpusName" : "Microsoft",
                    "OpusInfo" : "http://www.microsoft.com",
                    "FileDigest" : "/fd \"SHA256\"",
                    "PageHash" : "/NPH",
                    "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                },
                "ToolName" : "sign",
                "ToolVersion" : "1.0"
            },
            {
                "KeyCode" : "CP-230217",
                "OperationCode" : "SigntoolVerify",
                "Parameters" : {},
                "ToolName" : "sign",
                "ToolVersion" : "1.0"
            }
          ]
    # We only publish symbols to microsoftpublicsymbols for signed builds.
    - task: PublishSymbols@2  # Publish symbols to public Microsoft Symbol Server
      displayName: 'Publish symbols (public)'
      inputs:
        SearchPattern: $(buildOutputDir)/$(buildConfiguration)/$(buildPlatform)/**/*.pdb
        SymbolServerType: 'TeamServices'
      env:
        LIB: $(Build.SourcesDirectory)
        ArtifactServices_Symbol_AccountName: microsoftpublicsymbols
        ArtifactServices_Symbol_PAT: $(WinUILab-Pipeline-PAT)
    - task: PublishSymbols@2 # Publish symbols to internal symweb
      displayName: 'Publish symbols (internal)'
      inputs:
        SearchPattern: $(buildOutputDir)/$(buildConfiguration)/$(buildPlatform)/**/*.pdb
        SymbolServerType: 'TeamServices'

  - template: MUX-MakeFrameworkPackages-Steps.yml
    parameters:
      buildOutputDir: $(buildOutputDir)
      signOutput: ${{parameters.signOutput}}

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'