parameters:
# Extract the build revision number from Build.BuildNumber. This is needed to pass to build-nupkg
  jobName: ''
  buildOutputDir: '$(Build.SourcesDirectory)\BuildOutput'
  nupkgdir: '$(build.artifactStagingDirectory)'
# The "primary" build arch is the one that the nuspec gets its winmd, pri, and other neutral files from
  primaryBuildArch: x86
  buildFlavor: Release
  signOutput: false
  useReleaseTag: 'false'
  prereleaseVersionTag: 'prerelease'

jobs:
- job: ${{ parameters.jobName }}
  pool: 
    ${{ if eq(variables['System.CollectionUri'], 'https://dev.azure.com/shine-oss/') }}:
      name: WinDevPoolOSS-S
    ${{ if ne(variables['System.CollectionUri'], 'https://dev.azure.com/shine-oss/') }}:
      name: WinDevPool-S

  steps:

  - template: MUX-PopulateBuildDateAndRevision-Steps.yml

  - script: |
      echo parameters.jobName '${{ parameters.jobName }}'
      echo parameters.buildOutputDir '${{ parameters.buildOutputDir }}'
      echo parameters.nupkgdir '${{ parameters.nupkgdir }}'
      echo parameters.publishPath '${{ parameters.publishPath }}'
      echo buildrevision=$(buildrevision)
      echo builddate=$(builddate)
      echo useReleaseTag=${{ parameters.useReleaseTag }}
    displayName: 'CreateNugetPackage: Display parameters'

  - task: DownloadBuildArtifacts@1 
    inputs: 
      artifactName: drop
      downloadPath: '$(Build.SourcesDirectory)\Artifacts'

  - template: MUX-InstallNuget-Steps.yml
        
  - powershell: |
      $prereleaseTag = "${{ parameters.prereleaseVersionTag }}"
      if ("${{ parameters.useReleaseTag}}" -eq [bool]::TrueString) { $prereleaseTag = "" }

      & "$env:Build_SourcesDirectory\build\NuSpecs\build-nupkg.ps1" `
        -BuildOutput '$(Build.SourcesDirectory)\Artifacts\drop' `
        -OutputDir '${{ parameters.nupkgdir }}' `
        -prereleaseversion "$prereleaseTag" `
        -DateOverride '$(builddate)' `
        -Subversion '$(buildrevision)' `
        -BuildArch ${{ parameters.primaryBuildArch }} `
        -BuildFlavor ${{ parameters.buildFlavor }}

    displayName: 'build-nupkg.ps1'

  - ${{ if eq( parameters.signOutput, true) }}:
    - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
      displayName: 'CodeSign (nupkg)'
      inputs:
        ConnectedServiceName: WinUISigning
        FolderPath: '${{ parameters.nupkgdir }}'
        Pattern: |
          **/Microsoft.UI.Xaml*.nupkg
          **/Microsoft.Experimental.UI.Xaml*.nupkg
        UseMinimatch: true
        signConfigType: inlineSignParams
        inlineOperation: | 
          [
            {
                "KeyCode" : "CP-401405",
                "OperationCode" : "NuGetSign",
                "Parameters" : {},
                "ToolName" : "sign",
                "ToolVersion" : "1.0"
            },
            {
                "KeyCode" : "CP-401405",
                "OperationCode" : "NuGetVerify",
                "Parameters" : {},
                "ToolName" : "sign",
                "ToolVersion" : "1.0"
            }
          ]

  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact: nupkg'
    inputs:
      PathtoPublish: '${{ parameters.nupkgdir }}'
      artifactName: 'drop'
