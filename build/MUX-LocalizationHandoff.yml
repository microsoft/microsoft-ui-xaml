variables:
- group: WinUITeamKeyVault-Secrets


name: $(BuildDefinitionName)_$(date:yyMM).$(date:dd)$(rev:rrr)
jobs:
- job: LocalizationHandoff
  pool:
    vmImage: 'windows-2019'
  variables:
    resourceStagingDirectory: '$(Build.ArtifactStagingDirectory)\LocStaging'
    resourceOutputDirectory: '$(Build.ArtifactStagingDirectory)\LocOutput'

  steps:
  - powershell: |
      & "$env:Build_SourcesDirectory\build\Localization\PrepLocFilesForUpload.ps1" `
        -DestinationFilePath '${{ variables.resourceStagingDirectory }}'
    displayName: 'PrepLocFilesForUpload.ps1'

  - task: TouchdownBuildTask@1
    displayName: 'Call Touchdown Build Service'
    inputs:
      environment: 'PRODEXT'
      teamId: '104'
      authType: 'OAuth'
      authId: 'e8416663-8a55-4cb6-9bba-12038b37a6ed'
      authKey: $(WinUILab-TouchdownLoc-Key)
      relativePathRoot: ${{ variables.resourceStagingDirectory }}
      resourceFilePath: '**/Resources.resw'
      outputDirectoryRoot: ${{ variables.resourceOutputDirectory }}
      appendRelativeDir: true
      cultureMappingType: 'None'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts - Localized Resources'
    condition: always()
    inputs:
      PathtoPublish: ${{ variables.resourceOutputDirectory }}
      artifactName: 'LocalizationDrop'
      parallel: true
      parallelCount: 8

  # Copy back files returned from localization service and notify if there are changes that need to be commited
  - powershell: |
      & "$env:Build_SourcesDirectory\build\Localization\CopyBackLocalizedFiles.ps1" `
        -LocalizedFilesLocation '${{ variables.resourceOutputDirectory }}'
    displayName: 'CopyBackLocalizedFiles.ps1'

  - powershell: |
      $changes = & git ls-files -m
      Write-Host "Edited files:"
      Write-Host "$changes"
      if ($changes -imatch "\.resw")
      {
        Write-Host "##vso[task.complete result=SucceededWithIssues;]"
        Write-Host "##vso[task.logissue type=warning;]Localization updates needed"
        foreach ($change in $changes)
        {
          Write-Host "##vso[task.logissue type=warning;]$change"
        }
      }
    displayName: checkEditedFiles